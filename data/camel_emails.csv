"Email_ID","index","Date","From","To","Subject","Body"
"1","301","2017-04-14 10:42:39+00:00","lburgazzoli@apache.org","['commits@camel.apache.org']","camel git commit: HeaderSelectorProducer to support suppliers for
 header key and default value","Return-Path: <commits-return-55674-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6F5CB198F7
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:42:39 +0000 (UTC)
Received: (qmail 64229 invoked by uid 500); 14 Apr 2017 10:42:39 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 64176 invoked by uid 500); 14 Apr 2017 10:42:39 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 64167 invoked by uid 99); 14 Apr 2017 10:42:39 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:42:39 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 23ED2DFF9F; Fri, 14 Apr 2017 10:42:39 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: lburgazzoli@apache.org
To: commits@camel.apache.org
Message-Id: <9d2d740f77794180b53412948340828f@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: HeaderSelectorProducer to support suppliers for
 header key and default value
Date: Fri, 14 Apr 2017 10:42:39 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 55a61ed20 -> d72696455


HeaderSelectorProducer to support suppliers for header key and default value


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/d7269645
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/d7269645
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/d7269645

Branch: refs/heads/master
Commit: d7269645508cfd36b716547dab2f2da3ebe364ae
Parents: 55a61ed
Author: lburgazzoli <lburgazzoli@gmail.com>
Authored: Fri Apr 14 12:42:05 2017 +0200
Committer: lburgazzoli <lburgazzoli@gmail.com>
Committed: Fri Apr 14 12:42:33 2017 +0200

----------------------------------------------------------------------
 .../java/org/apache/camel/impl/HeaderSelectorProducer.java    | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/d7269645/camel-core/src/main/java/org/apache/camel/impl/HeaderSelectorProducer.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/impl/HeaderSelectorProducer.java b/camel-core/src/main/java/org/apache/camel/impl/HeaderSelectorProducer.java
index f91f032..7d4b11e 100644
--- a/camel-core/src/main/java/org/apache/camel/impl/HeaderSelectorProducer.java
+++ b/camel-core/src/main/java/org/apache/camel/impl/HeaderSelectorProducer.java
@@ -48,6 +48,7 @@ public class HeaderSelectorProducer extends BaseSelectorProducer {
     public HeaderSelectorProducer(Endpoint endpoint, Supplier<String> headerSupplier) {
         this(endpoint, headerSupplier, () -> null, null);
     }
+
     public HeaderSelectorProducer(Endpoint endpoint, String header) {
         this(endpoint, () -> header, () -> null, null);
     }
@@ -64,6 +65,10 @@ public class HeaderSelectorProducer extends BaseSelectorProducer {
         this(endpoint, () -> header, () -> defaultHeaderValue, null);
     }
 
+    public HeaderSelectorProducer(Endpoint endpoint, String header, Supplier<String> defaultHeaderValueSupplier) {
+        this(endpoint, () -> header, defaultHeaderValueSupplier, null);
+    }
+
     public HeaderSelectorProducer(Endpoint endpoint, Supplier<String> headerSupplier, Supplier<String> defaultHeaderValueSupplier) {
         this(endpoint, headerSupplier, defaultHeaderValueSupplier, null);
     }
@@ -102,7 +107,7 @@ public class HeaderSelectorProducer extends BaseSelectorProducer {
     @Override
     protected Processor getProcessor(Exchange exchange) throws Exception {
         String header  headerSupplier.get();
-        String action  exchange.getIn().getHeader(headerSupplier.get(), String.class);
+        String action  exchange.getIn().getHeader(header, String.class);
 
         if (action  null) {
             action  defaultHeaderValueSupplier.get();


"
"2","303","2017-04-14 10:52:55+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[1/6] camel git commit: Rename catalog to runtimecatalog to avoid
 clash with same package name in camel-catalog.","Return-Path: <commits-return-55677-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id DD3FE1996B
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:52:55 +0000 (UTC)
Received: (qmail 82225 invoked by uid 500); 14 Apr 2017 10:52:55 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 82127 invoked by uid 500); 14 Apr 2017 10:52:55 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 82019 invoked by uid 99); 14 Apr 2017 10:52:55 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:52:55 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 3D59BDFFD7; Fri, 14 Apr 2017 10:52:55 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:52:55 -0000
Message-Id: <de5de0a2e2ca40e6bcaa03835723a40e@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [1/6] camel git commit: Rename catalog to runtimecatalog to avoid
 clash with same package name in camel-catalog.

Repository: camel
Updated Branches:
  refs/heads/master d72696455 -> 6b42a3534


Rename catalog to runtimecatalog to avoid clash with same package name in camel-catalog.


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/6b42a353
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/6b42a353
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/6b42a353

Branch: refs/heads/master
Commit: 6b42a3534120f58180e6194e6bf4f1a284707abc
Parents: c66be7a
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Fri Apr 14 12:17:14 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:52:40 2017 +0200

----------------------------------------------------------------------
 platforms/camel-catalog/pom.xml | 40 ++++++++++++++++++++++++++++++++++--
 1 file changed, 38 insertions(+), 2 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/6b42a353/platforms/camel-catalog/pom.xml
----------------------------------------------------------------------
diff --git a/platforms/camel-catalog/pom.xml b/platforms/camel-catalog/pom.xml
index 2be82e0..6c71fcb 100644
--- a/platforms/camel-catalog/pom.xml
+++ b/platforms/camel-catalog/pom.xml
@@ -92,7 +92,7 @@
         <executions>
           <execution>
             <id>copy-resources</id>
-            <phase>process-sources</phase>
+            <phase>generate-sources</phase>
             <goals>
               <goal>copy-resources</goal>
             </goals>
@@ -101,7 +101,7 @@
               <overwrite>true</overwrite>
               <resources>
                 <resource>
-                  <directory>../../camel-core/src/main/java/org/apache/camel/catalog</directory>
+                  <directory>../../camel-core/src/main/java/org/apache/camel/runtimecatalog</directory>
                   <!-- the following files are maintained in camel-core and not here, so they are copied over -->
                   <includes>
                     <include>AbstractCamelCatalog.java</include>
@@ -123,6 +123,42 @@
           </execution>
         </executions>
       </plugin>
+      <!-- rename runtimecatalog to catalog which is the package name we use here -->
+      <plugin>
+        <groupId>com.google.code.maven-replacer-plugin</groupId>
+        <artifactId>replacer</artifactId>
+        <version>1.5.3</version>
+        <executions>
+          <execution>
+            <phase>process-sources</phase>
+            <goals>
+              <goal>replace</goal>
+            </goals>
+          </execution>
+        </executions>
+        <configuration>
+          <includes>
+            <include>${basedir}/src/main/java/org/apache/camel/catalog/AbstractCamelCatalog.java</include>
+            <include>${basedir}/src/main/java/org/apache/camel/catalog/CatalogHelper.java</include>
+            <include>${basedir}/src/main/java/org/apache/camel/catalog/CollectionStringBuffer.java</include>
+            <include>${basedir}/src/main/java/org/apache/camel/catalog/EndpointValidationResult.java</include>
+            <include>${basedir}/src/main/java/org/apache/camel/catalog/JSonSchemaHelper.java</include>
+            <include>${basedir}/src/main/java/org/apache/camel/catalog/JSonSchemaResolver.java</include>
+            <include>${basedir}/src/main/java/org/apache/camel/catalog/LanguageValidationResult.java</include>
+            <include>${basedir}/src/main/java/org/apache/camel/catalog/SimpleValidationResult.java</include>
+            <include>${basedir}/src/main/java/org/apache/camel/catalog/SuggestionStrategy.java</include>
+            <include>${basedir}/src/main/java/org/apache/camel/catalog/TimePatternConverter.java</include>
+            <include>${basedir}/src/main/java/org/apache/camel/catalog/UnsafeUriCharactersEncoder.java</include>
+            <include>${basedir}/src/main/java/org/apache/camel/catalog/URISupport.java</include>
+          </includes>
+          <replacements>
+            <replacement>
+              <token>org.apache.camel.runtimecatalog</token>
+              <value>org.apache.camel.catalog</value>
+            </replacement>
+          </replacements>
+        </configuration>
+      </plugin>
 
       <!-- generate and include all components in the catalog -->
       <plugin>


"
"3","302","2017-04-14 10:52:56+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[2/6] camel git commit: Rename catalog to runtimecatalog to avoid
 clash with same package name in camel-catalog.","Return-Path: <commits-return-55675-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id B7F4D1996A
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:52:55 +0000 (UTC)
Received: (qmail 82048 invoked by uid 500); 14 Apr 2017 10:52:55 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 81993 invoked by uid 500); 14 Apr 2017 10:52:55 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 81984 invoked by uid 99); 14 Apr 2017 10:52:55 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:52:55 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 683CDDFB94; Fri, 14 Apr 2017 10:52:55 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:52:56 -0000
Message-Id: <9e3f964e77d045cf840b002cc3565efe@git.apache.org>
In-Reply-To: <de5de0a2e2ca40e6bcaa03835723a40e@git.apache.org>
References: <de5de0a2e2ca40e6bcaa03835723a40e@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [2/6] camel git commit: Rename catalog to runtimecatalog to avoid
 clash with same package name in camel-catalog.

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/test/java/org/apache/camel/runtimecatalog/AbstractCamelCatalogTest.java
----------------------------------------------------------------------
diff --git a/camel-core/src/test/java/org/apache/camel/runtimecatalog/AbstractCamelCatalogTest.java b/camel-core/src/test/java/org/apache/camel/runtimecatalog/AbstractCamelCatalogTest.java
new file mode 100644
index 0000000..309fb8e
--- /dev/null
+++ b/camel-core/src/test/java/org/apache/camel/runtimecatalog/AbstractCamelCatalogTest.java
@@ -0,0 +1,104 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+import java.net.URISyntaxException;
+import java.util.HashMap;
+import java.util.Map;
+
+import org.junit.Before;
+import org.junit.Test;
+
+import static org.easymock.EasyMock.expect;
+import static org.easymock.EasyMock.mock;
+import static org.easymock.EasyMock.replay;
+import static org.junit.Assert.assertEquals;
+
+public class AbstractCamelCatalogTest {
+
+    AbstractCamelCatalog catalog  new AbstractCamelCatalog() {
+    };
+
+    JSonSchemaResolver resolver;
+
+    @Before
+    public void setupMockCatalog() {
+        resolver  mock(JSonSchemaResolver.class);
+
+        catalog.setJSonSchemaResolver(resolver);
+    }
+
+    @Test
+    public void shouldConstructEndpointUris() throws URISyntaxException {
+        expect(resolver.getComponentJSonSchema(comp)).andReturn({\n//
+            +   \component\: {\n//
+            +     \syntax\: \comp:param1:param2\\n//
+            +   }\n//
+            + });
+
+        replay(resolver);
+
+        final Map<String, String> properties  new HashMap<>();
+        properties.put(param1, value1);
+        properties.put(param2, value2);
+        properties.put(param3, value3);
+
+        final String endpointUri  catalog.doAsEndpointUri(comp, properties, &, false);
+
+        assertEquals(comp:value1:value2?param3value3, endpointUri);
+    }
+
+    @Test
+    public void shouldConstructEndpointUrisWithPropertyPlaceholders() throws URISyntaxException {
+        expect(resolver.getComponentJSonSchema(comp)).andReturn({\n//
+            +   \component\: {\n//
+            +     \syntax\: \comp:param1:param2\\n//
+            +   }\n//
+            + });
+
+        replay(resolver);
+
+        final Map<String, String> properties  new HashMap<>();
+        properties.put(param1, {{prop1}});
+        properties.put(param2, {{prop2}});
+        properties.put(param3, {{prop3}});
+
+        final String endpointUri  catalog.doAsEndpointUri(comp, properties, &, false);
+
+        assertEquals(comp:{{prop1}}:{{prop2}}?param3{{prop3}}, endpointUri);
+    }
+
+    @Test
+    public void shouldConstructEndpointUrisWhenValuesContainTokens() throws URISyntaxException {
+        expect(resolver.getComponentJSonSchema(comp)).andReturn({\n//
+            +   \component\: {\n//
+            +     \syntax\: \comp:param1:param2\\n//
+            +   }\n//
+            + });
+
+        replay(resolver);
+
+        final Map<String, String> properties  new HashMap<>();
+        properties.put(param1, {value1});
+        properties.put(param2, /value2/);
+        properties.put(param3, /value3/{param});
+
+        final String endpointUri  catalog.doAsEndpointUri(comp, properties, &, false);
+
+        assertEquals(comp:{value1}:/value2/?param3/value3/{param}, endpointUri);
+    }
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/test/java/org/apache/camel/runtimecatalog/RuntimeCamelCatalogTest.java
----------------------------------------------------------------------
diff --git a/camel-core/src/test/java/org/apache/camel/runtimecatalog/RuntimeCamelCatalogTest.java b/camel-core/src/test/java/org/apache/camel/runtimecatalog/RuntimeCamelCatalogTest.java
new file mode 100644
index 0000000..dfdd5c5
--- /dev/null
+++ b/camel-core/src/test/java/org/apache/camel/runtimecatalog/RuntimeCamelCatalogTest.java
@@ -0,0 +1,393 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+import java.util.HashMap;
+import java.util.Map;
+
+import org.apache.camel.impl.DefaultCamelContext;
+import org.junit.BeforeClass;
+import org.junit.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertTrue;
+
+public class RuntimeCamelCatalogTest {
+
+    static RuntimeCamelCatalog catalog;
+
+    private static final Logger LOG  LoggerFactory.getLogger(RuntimeCamelCatalogTest.class);
+
+    @BeforeClass
+    public static void createCamelCatalog() {
+        catalog  new DefaultRuntimeCamelCatalog(new DefaultCamelContext());
+    }
+
+    @Test
+    public void testFromCamelContext() throws Exception {
+        String schema  new DefaultCamelContext().getRuntimeCamelCatalog().modelJSonSchema(choice);
+        assertNotNull(schema);
+    }
+
+    @Test
+    public void testJsonSchema() throws Exception {
+        String schema  catalog.modelJSonSchema(aggregate);
+        assertNotNull(schema);
+
+        // lets make it possible to find bean/method using both names
+        schema  catalog.modelJSonSchema(method);
+        assertNotNull(schema);
+        schema  catalog.modelJSonSchema(bean);
+        assertNotNull(schema);
+    }
+
+    @Test
+    public void testAsEndpointUriMapFile() throws Exception {
+        Map<String, String> map  new HashMap<String, String>();
+        map.put(directoryName, src/data/inbox);
+        map.put(noop, true);
+        map.put(delay, 5000);
+
+        String uri  catalog.asEndpointUri(file, map, true);
+        assertEquals(file:src/data/inbox?delay5000&nooptrue, uri);
+
+        String uri2  catalog.asEndpointUriXml(file, map, true);
+        assertEquals(file:src/data/inbox?delay5000&amp;nooptrue, uri2);
+    }
+
+    @Test
+    public void testAsEndpointUriTimer() throws Exception {
+        Map<String, String> map  new HashMap<String, String>();
+        map.put(timerName, foo);
+        map.put(period, 5000);
+
+        String uri  catalog.asEndpointUri(timer, map, true);
+        assertEquals(timer:foo?period5000, uri);
+    }
+
+    @Test
+    public void testAsEndpointUriPropertiesPlaceholders() throws Exception {
+        Map<String, String> map  new HashMap<String, String>();
+        map.put(timerName, foo);
+        map.put(period, {{howoften}});
+        map.put(repeatCount, 5);
+
+        String uri  catalog.asEndpointUri(timer, map, true);
+        assertEquals(timer:foo?period%7B%7Bhowoften%7D%7D&repeatCount5, uri);
+
+        uri  catalog.asEndpointUri(timer, map, false);
+        assertEquals(timer:foo?period{{howoften}}&repeatCount5, uri);
+    }
+
+    @Test
+    public void testAsEndpointUriBeanLookup() throws Exception {
+        Map<String, String> map  new HashMap<String, String>();
+        map.put(resourceUri, foo.xslt);
+        map.put(converter, #myConverter);
+
+        String uri  catalog.asEndpointUri(xslt, map, true);
+        assertEquals(xslt:foo.xslt?converter%23myConverter, uri);
+
+        uri  catalog.asEndpointUri(xslt, map, false);
+        assertEquals(xslt:foo.xslt?converter#myConverter, uri);
+    }
+
+    @Test
+    public void testEndpointPropertiesPlaceholders() throws Exception {
+        Map<String, String> map  catalog.endpointProperties(timer:foo?period{{howoften}}&repeatCount5);
+        assertNotNull(map);
+        assertEquals(3, map.size());
+
+        assertEquals(foo, map.get(timerName));
+        assertEquals({{howoften}}, map.get(period));
+        assertEquals(5, map.get(repeatCount));
+    }
+
+    @Test
+    public void testAsEndpointUriLog() throws Exception {
+        Map<String, String> map  new HashMap<String, String>();
+        map.put(loggerName, foo);
+        map.put(loggerLevel, WARN);
+        map.put(multiline, true);
+        map.put(showAll, true);
+        map.put(showBody, false);
+        map.put(showBodyType, false);
+        map.put(showExchangePattern, false);
+        map.put(style, Tab);
+
+        assertEquals(log:foo?loggerLevelWARN&multilinetrue&showAlltrue&styleTab, catalog.asEndpointUri(log, map, false));
+    }
+
+    @Test
+    public void testAsEndpointUriLogShort() throws Exception {
+        Map<String, String> map  new HashMap<String, String>();
+        map.put(loggerName, foo);
+        map.put(loggerLevel, DEBUG);
+
+        assertEquals(log:foo?loggerLevelDEBUG, catalog.asEndpointUri(log, map, false));
+    }
+
+    @Test
+    public void testAsEndpointUriWithplaceholder() throws Exception {
+        Map<String, String> map  new HashMap<String, String>();
+        map.put(name, foo);
+        map.put(blockWhenFull, {{block}});
+        assertEquals(seda:foo?blockWhenFull{{block}}, catalog.asEndpointUri(seda, map, false));
+    }
+
+    @Test
+    public void testEndpointPropertiesSedaRequired() throws Exception {
+        Map<String, String> map  catalog.endpointProperties(seda:foo);
+        assertNotNull(map);
+        assertEquals(1, map.size());
+
+        assertEquals(foo, map.get(name));
+
+        map  catalog.endpointProperties(seda:foo?blockWhenFulltrue);
+        assertNotNull(map);
+        assertEquals(2, map.size());
+
+        assertEquals(foo, map.get(name));
+        assertEquals(true, map.get(blockWhenFull));
+    }
+
+    @Test
+    public void validateProperties() throws Exception {
+        // valid
+        EndpointValidationResult result  catalog.validateEndpointProperties(log:mylog);
+        assertTrue(result.isSuccess());
+
+        // unknown
+        result  catalog.validateEndpointProperties(log:mylog?levelWARN&foobar);
+        assertFalse(result.isSuccess());
+        assertTrue(result.getUnknown().contains(foo));
+        assertEquals(1, result.getNumberOfErrors());
+
+        // enum
+        result  catalog.validateEndpointProperties(seda:foo?waitForTaskToCompleteblah);
+        assertFalse(result.isSuccess());
+        assertEquals(blah, result.getInvalidEnum().get(waitForTaskToComplete));
+        assertEquals(1, result.getNumberOfErrors());
+
+        // reference okay
+        result  catalog.validateEndpointProperties(seda:foo?queue#queue);
+        assertTrue(result.isSuccess());
+        assertEquals(0, result.getNumberOfErrors());
+
+        // unknown component
+        result  catalog.validateEndpointProperties(foo:bar?meyou);
+        assertFalse(result.isSuccess());
+        assertTrue(result.getUnknownComponent().equals(foo));
+        assertEquals(1, result.getNumberOfErrors());
+
+        // invalid boolean but default value
+        result  catalog.validateEndpointProperties(log:output?showAllggg);
+        assertFalse(result.isSuccess());
+        assertEquals(ggg, result.getInvalidBoolean().get(showAll));
+        assertEquals(1, result.getNumberOfErrors());
+
+        // dataset
+        result  catalog.validateEndpointProperties(dataset:foo?minRate50);
+        assertTrue(result.isSuccess());
+
+        // time pattern
+        result  catalog.validateEndpointProperties(timer://foo?fixedRatetrue&delay0&period2s);
+        assertTrue(result.isSuccess());
+
+        // reference lookup
+        result  catalog.validateEndpointProperties(timer://foo?fixedRate#fixed&delay#myDelay);
+        assertTrue(result.isSuccess());
+
+        // optional consumer. prefix
+        result  catalog.validateEndpointProperties(file:inbox?consumer.delay5000&consumer.greedytrue);
+        assertTrue(result.isSuccess());
+
+        // optional without consumer. prefix
+        result  catalog.validateEndpointProperties(file:inbox?delay5000&greedytrue);
+        assertTrue(result.isSuccess());
+
+        // mixed optional without consumer. prefix
+        result  catalog.validateEndpointProperties(file:inbox?delay5000&consumer.greedytrue);
+        assertTrue(result.isSuccess());
+
+        // prefix
+        result  catalog.validateEndpointProperties(file:inbox?delay5000&scheduler.foo123&scheduler.bar456);
+        assertTrue(result.isSuccess());
+
+        // stub
+        result  catalog.validateEndpointProperties(stub:foo?me123&you456);
+        assertTrue(result.isSuccess());
+
+        // lenient on
+        result  catalog.validateEndpointProperties(dataformat:string:marshal?foobar);
+        assertTrue(result.isSuccess());
+
+        // lenient off
+        result  catalog.validateEndpointProperties(dataformat:string:marshal?foobar, true);
+        assertFalse(result.isSuccess());
+        assertTrue(result.getUnknown().contains(foo));
+
+        // data format
+        result  catalog.validateEndpointProperties(dataformat:string:marshal?charsetutf-8, true);
+        assertTrue(result.isSuccess());
+
+        // incapable to parse
+        result  catalog.validateEndpointProperties({{getFtpUrl}}?recursivetrue);
+        assertFalse(result.isSuccess());
+        assertTrue(result.getIncapable() ! null);
+    }
+
+    @Test
+    public void validatePropertiesSummary() throws Exception {
+        EndpointValidationResult result  catalog.validateEndpointProperties(yammer:MESSAGES?blahyada&accessTokenaaa&consumerKey&useJsonno&initialDelayfive&pollStrategymyStrategy);
+        assertFalse(result.isSuccess());
+        String reason  result.summaryErrorMessage(true);
+        LOG.info(reason);
+
+        result  catalog.validateEndpointProperties(jms:unknown:myqueue);
+        assertFalse(result.isSuccess());
+        reason  result.summaryErrorMessage(false);
+        LOG.info(reason);
+    }
+
+    @Test
+    public void validateTimePattern() throws Exception {
+        assertTrue(catalog.validateTimePattern(0));
+        assertTrue(catalog.validateTimePattern(500));
+        assertTrue(catalog.validateTimePattern(10000));
+        assertTrue(catalog.validateTimePattern(5s));
+        assertTrue(catalog.validateTimePattern(5sec));
+        assertTrue(catalog.validateTimePattern(5secs));
+        assertTrue(catalog.validateTimePattern(3m));
+        assertTrue(catalog.validateTimePattern(3min));
+        assertTrue(catalog.validateTimePattern(3minutes));
+        assertTrue(catalog.validateTimePattern(5m15s));
+        assertTrue(catalog.validateTimePattern(1h));
+        assertTrue(catalog.validateTimePattern(1hour));
+        assertTrue(catalog.validateTimePattern(2hours));
+
+        assertFalse(catalog.validateTimePattern(bla));
+        assertFalse(catalog.validateTimePattern(2year));
+        assertFalse(catalog.validateTimePattern(60darn));
+    }
+
+    @Test
+    public void testEndpointComponentName() throws Exception {
+        String name  catalog.endpointComponentName(jms:queue:foo);
+        assertEquals(jms, name);
+    }
+
+    @Test
+    public void testSimpleExpression() throws Exception {
+        SimpleValidationResult result  catalog.validateSimpleExpression(null, ${body});
+        assertTrue(result.isSuccess());
+        assertEquals(${body}, result.getSimple());
+
+        result  catalog.validateSimpleExpression(null, ${body);
+        assertFalse(result.isSuccess());
+        assertEquals(${body, result.getSimple());
+        LOG.info(result.getError());
+        assertTrue(result.getError().startsWith(expected symbol functionEnd but was eol at location 5));
+        assertEquals(expected symbol functionEnd but was eol, result.getShortError());
+        assertEquals(5, result.getIndex());
+    }
+
+    @Test
+    public void testSimplePredicate() throws Exception {
+        SimpleValidationResult result  catalog.validateSimplePredicate(null, ${body}  abc);
+        assertTrue(result.isSuccess());
+        assertEquals(${body}  abc, result.getSimple());
+
+        result  catalog.validateSimplePredicate(null, ${body} > ${header.size);
+        assertFalse(result.isSuccess());
+        assertEquals(${body} > ${header.size, result.getSimple());
+        LOG.info(result.getError());
+        assertTrue(result.getError().startsWith(expected symbol functionEnd but was eol at location 22));
+        assertEquals(expected symbol functionEnd but was eol, result.getShortError());
+        assertEquals(22, result.getIndex());
+    }
+
+    @Test
+    public void testSimplePredicatePlaceholder() throws Exception {
+        SimpleValidationResult result  catalog.validateSimplePredicate(null, ${body} contains {{danger}});
+        assertTrue(result.isSuccess());
+        assertEquals(${body} contains {{danger}}, result.getSimple());
+
+        result  catalog.validateSimplePredicate(null, ${bdy} contains {{danger}});
+        assertFalse(result.isSuccess());
+        assertEquals(${bdy} contains {{danger}}, result.getSimple());
+        LOG.info(result.getError());
+        assertTrue(result.getError().startsWith(Unknown function: bdy at location 0));
+        assertTrue(result.getError().contains({{danger}}));
+        assertEquals(Unknown function: bdy, result.getShortError());
+        assertEquals(0, result.getIndex());
+    }
+
+    @Test
+    public void testValidateLanguage() throws Exception {
+        LanguageValidationResult result  catalog.validateLanguageExpression(null, simple, ${body});
+        assertTrue(result.isSuccess());
+        assertEquals(${body}, result.getText());
+
+        result  catalog.validateLanguageExpression(null, header, foo);
+        assertTrue(result.isSuccess());
+        assertEquals(foo, result.getText());
+
+        result  catalog.validateLanguagePredicate(null, simple, ${body} > 10);
+        assertTrue(result.isSuccess());
+        assertEquals(${body} > 10, result.getText());
+
+        result  catalog.validateLanguagePredicate(null, header, bar);
+        assertTrue(result.isSuccess());
+        assertEquals(bar, result.getText());
+
+        result  catalog.validateLanguagePredicate(null, foobar, bar);
+        assertFalse(result.isSuccess());
+        assertEquals(Unknown language foobar, result.getError());
+    }
+
+    @Test
+    public void testValidateEndpointConsumerOnly() throws Exception {
+        String uri  file:inbox?bufferSize4096&readLockchanged&deletetrue;
+        EndpointValidationResult result  catalog.validateEndpointProperties(uri, false, true, false);
+        assertTrue(result.isSuccess());
+
+        uri  file:inbox?bufferSize4096&readLockchanged&deletetrue&fileExistAppend;
+        result  catalog.validateEndpointProperties(uri, false, true, false);
+        assertFalse(result.isSuccess());
+
+        assertEquals(fileExist, result.getNotConsumerOnly().iterator().next());
+    }
+
+    @Test
+    public void testValidateEndpointProducerOnly() throws Exception {
+        String uri  file:outbox?bufferSize4096&fileExistAppend;
+        EndpointValidationResult result  catalog.validateEndpointProperties(uri, false, false, true);
+        assertTrue(result.isSuccess());
+
+        uri  file:outbox?bufferSize4096&fileExistAppend&deletetrue;
+        result  catalog.validateEndpointProperties(uri, false, false, true);
+        assertFalse(result.isSuccess());
+
+        assertEquals(delete, result.getNotProducerOnly().iterator().next());
+    }
+
+}


"
"4","304","2017-04-14 10:52:57+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[3/6] camel git commit: Rename catalog to runtimecatalog to avoid
 clash with same package name in camel-catalog.","Return-Path: <commits-return-55676-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id E20E51996C
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:52:55 +0000 (UTC)
Received: (qmail 82180 invoked by uid 500); 14 Apr 2017 10:52:55 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 82119 invoked by uid 500); 14 Apr 2017 10:52:55 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 81996 invoked by uid 99); 14 Apr 2017 10:52:55 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:52:55 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 6A4FDDFF9F; Fri, 14 Apr 2017 10:52:55 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:52:57 -0000
Message-Id: <392ff0b6a5e9466c9cdb499eabbaf550@git.apache.org>
In-Reply-To: <de5de0a2e2ca40e6bcaa03835723a40e@git.apache.org>
References: <de5de0a2e2ca40e6bcaa03835723a40e@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [3/6] camel git commit: Rename catalog to runtimecatalog to avoid
 clash with same package name in camel-catalog.

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/JSonSchemaHelper.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/JSonSchemaHelper.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/JSonSchemaHelper.java
new file mode 100644
index 0000000..1e69269
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/JSonSchemaHelper.java
@@ -0,0 +1,424 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+import java.util.ArrayList;
+import java.util.LinkedHashMap;
+import java.util.LinkedHashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+public final class JSonSchemaHelper {
+
+    // 0  text, 1  enum, 2  boolean, 3  integer or number
+    private static final Pattern PATTERN  Pattern.compile(\(.+?)\|\\[(.+)\\]|(true|false)|(-?\\d+\\.?\\d*));
+    private static final String QUOT  &quot;;
+
+    private JSonSchemaHelper() {
+    }
+
+    /**
+     * Parses the json schema to split it into a list or rows, where each row contains key value pairs with the metadata
+     *
+     * @param group the group to parse from such as <tt>component</tt>, <tt>componentProperties</tt>, or <tt>properties</tt>.
+     * @param json the json
+     * @return a list of all the rows, where each row is a set of key value pairs with metadata
+     */
+    public static List<Map<String, String>> parseJsonSchema(String group, String json, boolean parseProperties) {
+        List<Map<String, String>> answer  new ArrayList<Map<String, String>>();
+        if (json  null) {
+            return answer;
+        }
+
+        boolean found  false;
+
+        // parse line by line
+        String[] lines  json.split(\n);
+        for (String line : lines) {
+            // we need to find the group first
+            if (!found) {
+                String s  line.trim();
+                found  s.startsWith(\ + group + \:) && s.endsWith({);
+                continue;
+            }
+
+            // we should stop when we end the group
+            if (line.equals(  },) || line.equals(  })) {
+                break;
+            }
+
+            // need to safe encode \ so we can parse the line
+            line  line.replaceAll(\\\\\\\,  + QUOT + );
+
+            Map<String, String> row  new LinkedHashMap<String, String>();
+            Matcher matcher  PATTERN.matcher(line);
+
+            String key;
+            if (parseProperties) {
+                // when parsing properties the first key is given as name, so the first parsed token is the value of the name
+                key  name;
+            } else {
+                key  null;
+            }
+            while (matcher.find()) {
+                if (key  null) {
+                    key  matcher.group(1);
+                } else {
+                    String value  matcher.group(1);
+                    if (value ! null) {
+                        // its text based
+                        value  value.trim();
+                        // decode
+                        value  value.replaceAll(QUOT, \);
+                        value  decodeJson(value);
+                    }
+                    if (value  null) {
+                        // not text then its maybe an enum?
+                        value  matcher.group(2);
+                        if (value ! null) {
+                            // its an enum so strip out  and trim spaces after comma
+                            value  value.replaceAll(\, );
+                            value  value.replaceAll(, , ,);
+                            value  value.trim();
+                        }
+                    }
+                    if (value  null) {
+                        // not text then its maybe a boolean?
+                        value  matcher.group(3);
+                    }
+                    if (value  null) {
+                        // not text then its maybe a integer?
+                        value  matcher.group(4);
+                    }
+                    if (value ! null) {
+                        row.put(key, value);
+                    }
+                    // reset
+                    key  null;
+                }
+            }
+            if (!row.isEmpty()) {
+                answer.add(row);
+            }
+        }
+
+        return answer;
+    }
+
+    private static String decodeJson(String value) {
+        // json encodes a \ as \\ so we need to decode from \\ back to \
+        if (\\\\.equals(value)) {
+            value  \\;
+        }
+        return value;
+    }
+
+    public static boolean isComponentLenientProperties(List<Map<String, String>> rows) {
+        for (Map<String, String> row : rows) {
+            if (row.containsKey(lenientProperties)) {
+                return true.equals(row.get(lenientProperties));
+            }
+        }
+        return false;
+    }
+
+    public static boolean isComponentConsumerOnly(List<Map<String, String>> rows) {
+        for (Map<String, String> row : rows) {
+            if (row.containsKey(consumerOnly)) {
+                return true.equals(row.get(consumerOnly));
+            }
+        }
+        return false;
+    }
+
+    public static boolean isComponentProducerOnly(List<Map<String, String>> rows) {
+        for (Map<String, String> row : rows) {
+            if (row.containsKey(producerOnly)) {
+                return true.equals(row.get(producerOnly));
+            }
+        }
+        return false;
+    }
+
+    public static boolean isPropertyConsumerOnly(List<Map<String, String>> rows, String name) {
+        for (Map<String, String> row : rows) {
+            String labels  null;
+            boolean found  false;
+            if (row.containsKey(name)) {
+                found  name.equals(row.get(name));
+            }
+            if (row.containsKey(label)) {
+                labels  row.get(label);
+            }
+            if (found) {
+                return labels ! null && labels.contains(consumer);
+            }
+        }
+        return false;
+    }
+
+    public static boolean isPropertyProducerOnly(List<Map<String, String>> rows, String name) {
+        for (Map<String, String> row : rows) {
+            String labels  null;
+            boolean found  false;
+            if (row.containsKey(name)) {
+                found  name.equals(row.get(name));
+            }
+            if (row.containsKey(label)) {
+                labels  row.get(label);
+            }
+            if (found) {
+                return labels ! null && labels.contains(producer);
+            }
+        }
+        return false;
+    }
+
+    public static boolean isPropertyRequired(List<Map<String, String>> rows, String name) {
+        for (Map<String, String> row : rows) {
+            boolean required  false;
+            boolean found  false;
+            if (row.containsKey(name)) {
+                found  name.equals(row.get(name));
+            }
+            if (row.containsKey(required)) {
+                required  true.equals(row.get(required));
+            }
+            if (found) {
+                return required;
+            }
+        }
+        return false;
+    }
+
+    public static String getPropertyKind(List<Map<String, String>> rows, String name) {
+        for (Map<String, String> row : rows) {
+            String kind  null;
+            boolean found  false;
+            if (row.containsKey(name)) {
+                found  name.equals(row.get(name));
+            }
+            if (row.containsKey(kind)) {
+                kind  row.get(kind);
+            }
+            if (found) {
+                return kind;
+            }
+        }
+        return null;
+    }
+
+    public static boolean isPropertyBoolean(List<Map<String, String>> rows, String name) {
+        for (Map<String, String> row : rows) {
+            String type  null;
+            boolean found  false;
+            if (row.containsKey(name)) {
+                found  name.equals(row.get(name));
+            }
+            if (row.containsKey(type)) {
+                type  row.get(type);
+            }
+            if (found) {
+                return boolean.equals(type);
+            }
+        }
+        return false;
+    }
+
+    public static boolean isPropertyInteger(List<Map<String, String>> rows, String name) {
+        for (Map<String, String> row : rows) {
+            String type  null;
+            boolean found  false;
+            if (row.containsKey(name)) {
+                found  name.equals(row.get(name));
+            }
+            if (row.containsKey(type)) {
+                type  row.get(type);
+            }
+            if (found) {
+                return integer.equals(type);
+            }
+        }
+        return false;
+    }
+
+    public static boolean isPropertyNumber(List<Map<String, String>> rows, String name) {
+        for (Map<String, String> row : rows) {
+            String type  null;
+            boolean found  false;
+            if (row.containsKey(name)) {
+                found  name.equals(row.get(name));
+            }
+            if (row.containsKey(type)) {
+                type  row.get(type);
+            }
+            if (found) {
+                return number.equals(type);
+            }
+        }
+        return false;
+    }
+
+    public static boolean isPropertyObject(List<Map<String, String>> rows, String name) {
+        for (Map<String, String> row : rows) {
+            String type  null;
+            boolean found  false;
+            if (row.containsKey(name)) {
+                found  name.equals(row.get(name));
+            }
+            if (row.containsKey(type)) {
+                type  row.get(type);
+            }
+            if (found) {
+                return object.equals(type);
+            }
+        }
+        return false;
+    }
+
+    public static String getPropertyDefaultValue(List<Map<String, String>> rows, String name) {
+        for (Map<String, String> row : rows) {
+            String defaultValue  null;
+            boolean found  false;
+            if (row.containsKey(name)) {
+                found  name.equals(row.get(name));
+            }
+            if (row.containsKey(defaultValue)) {
+                defaultValue  row.get(defaultValue);
+            }
+            if (found) {
+                return defaultValue;
+            }
+        }
+        return null;
+    }
+
+    public static String stripOptionalPrefixFromName(List<Map<String, String>> rows, String name) {
+        for (Map<String, String> row : rows) {
+            String optionalPrefix  null;
+            boolean found  false;
+            if (row.containsKey(optionalPrefix)) {
+                optionalPrefix  row.get(optionalPrefix);
+            }
+            if (row.containsKey(name)) {
+                if (optionalPrefix ! null && name.startsWith(optionalPrefix)) {
+                    name  name.substring(optionalPrefix.length());
+                    // try again
+                    return stripOptionalPrefixFromName(rows, name);
+                } else {
+                    found  name.equals(row.get(name));
+                }
+            }
+            if (found) {
+                return name;
+            }
+        }
+        return name;
+    }
+
+    public static String getPropertyEnum(List<Map<String, String>> rows, String name) {
+        for (Map<String, String> row : rows) {
+            String enums  null;
+            boolean found  false;
+            if (row.containsKey(name)) {
+                found  name.equals(row.get(name));
+            }
+            if (row.containsKey(enum)) {
+                enums  row.get(enum);
+            }
+            if (found) {
+                return enums;
+            }
+        }
+        return null;
+    }
+
+    public static String getPropertyPrefix(List<Map<String, String>> rows, String name) {
+        for (Map<String, String> row : rows) {
+            String prefix  null;
+            boolean found  false;
+            if (row.containsKey(name)) {
+                found  name.equals(row.get(name));
+            }
+            if (row.containsKey(prefix)) {
+                prefix  row.get(prefix);
+            }
+            if (found) {
+                return prefix;
+            }
+        }
+        return null;
+    }
+
+    public static boolean isPropertyMultiValue(List<Map<String, String>> rows, String name) {
+        for (Map<String, String> row : rows) {
+            boolean multiValue  false;
+            boolean found  false;
+            if (row.containsKey(name)) {
+                found  name.equals(row.get(name));
+            }
+            if (row.containsKey(multiValue)) {
+                multiValue  true.equals(row.get(multiValue));
+            }
+            if (found) {
+                return multiValue;
+            }
+        }
+        return false;
+    }
+
+    public static String getPropertyNameFromNameWithPrefix(List<Map<String, String>> rows, String name) {
+        for (Map<String, String> row : rows) {
+            String propertyName  null;
+            boolean found  false;
+            if (row.containsKey(name)) {
+                propertyName  row.get(name);
+            }
+            if (row.containsKey(prefix)) {
+                String preifx  row.get(prefix);
+                found  name.startsWith(preifx);
+            }
+            if (found) {
+                return propertyName;
+            }
+        }
+        return null;
+    }
+
+    public static Map<String, String> getRow(List<Map<String, String>> rows, String key) {
+        for (Map<String, String> row : rows) {
+            if (key.equals(row.get(name))) {
+                return row;
+            }
+        }
+        return null;
+    }
+
+    public static Set<String> getNames(List<Map<String, String>> rows) {
+        Set<String> answer  new LinkedHashSet<String>();
+        for (Map<String, String> row : rows) {
+            if (row.containsKey(name)) {
+                answer.add(row.get(name));
+            }
+        }
+        return answer;
+    }
+
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/JSonSchemaResolver.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/JSonSchemaResolver.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/JSonSchemaResolver.java
new file mode 100644
index 0000000..dbd6f45
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/JSonSchemaResolver.java
@@ -0,0 +1,64 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+/**
+ * Pluggable resolver to load JSon schema files for components, data formats, languages etc.
+ */
+public interface JSonSchemaResolver {
+
+    /**
+     * Returns the component information as JSon format.
+     *
+     * @param name the component name
+     * @return component details in JSon
+     */
+    String getComponentJSonSchema(String name);
+
+    /**
+     * Returns the data format information as JSon format.
+     *
+     * @param name the data format name
+     * @return data format details in JSon
+     */
+    String getDataFormatJSonSchema(String name);
+
+    /**
+     * Returns the language information as JSon format.
+     *
+     * @param name the language name
+     * @return language details in JSon
+     */
+    String getLanguageJSonSchema(String name);
+
+    /**
+     * Returns the other (miscellaneous) information as JSon format.
+     *
+     * @param name the other (miscellaneous) name
+     * @return other (miscellaneous) details in JSon
+     */
+    String getOtherJSonSchema(String name);
+
+    /**
+     * Returns the model information as JSon format.
+     *
+     * @param name the model name
+     * @return model details in JSon
+     */
+    String getModelJSonSchema(String name);
+
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/LanguageValidationResult.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/LanguageValidationResult.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/LanguageValidationResult.java
new file mode 100644
index 0000000..dbb5525
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/LanguageValidationResult.java
@@ -0,0 +1,65 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+import java.io.Serializable;
+
+/**
+ * Validation result of parsing a language expression or predicate
+ */
+public class LanguageValidationResult implements Serializable {
+    private final String text;
+    private String error;
+    private String shortError;
+    private int index;
+
+    public LanguageValidationResult(String text) {
+        this.text  text;
+    }
+
+    public String getText() {
+        return text;
+    }
+
+    public boolean isSuccess() {
+        return error  null;
+    }
+
+    public void setError(String error) {
+        this.error  error;
+    }
+
+    public String getError() {
+        return error;
+    }
+
+    public String getShortError() {
+        return shortError;
+    }
+
+    public void setShortError(String shortError) {
+        this.shortError  shortError;
+    }
+
+    public int getIndex() {
+        return index;
+    }
+
+    public void setIndex(int index) {
+        this.index  index;
+    }
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/RuntimeCamelCatalog.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/RuntimeCamelCatalog.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/RuntimeCamelCatalog.java
new file mode 100644
index 0000000..86c4b53
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/RuntimeCamelCatalog.java
@@ -0,0 +1,234 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+import java.net.URISyntaxException;
+import java.util.Map;
+
+import org.apache.camel.StaticService;
+
+/**
+ * Runtime based CamelCatalog which are included in camel-core that can provided limit CamelCatalog capabilities
+ */
+public interface RuntimeCamelCatalog extends StaticService {
+
+    /**
+     * Returns the component information as JSon format.
+     *
+     * @param name the component name
+     * @return component details in JSon
+     */
+    String componentJSonSchema(String name);
+
+    /**
+     * Returns the data format information as JSon format.
+     *
+     * @param name the data format name
+     * @return data format details in JSon
+     */
+    String dataFormatJSonSchema(String name);
+
+    /**
+     * Returns the language information as JSon format.
+     *
+     * @param name the language name
+     * @return language details in JSon
+     */
+    String languageJSonSchema(String name);
+
+    /**
+     * Returns the model information as JSon format.
+     *
+     * @param name the model name
+     * @return model details in JSon
+     */
+    String modelJSonSchema(String name);
+
+    /**
+     * Parses the endpoint uri and constructs a key/value properties of each option
+     *
+     * @param uri  the endpoint uri
+     * @return properties as key value pairs of each endpoint option
+     */
+    Map<String, String> endpointProperties(String uri) throws URISyntaxException;
+
+    /**
+     * Parses the endpoint uri and constructs a key/value properties of only the lenient properties (eg custom options)
+     * <p/>
+     * For example using the HTTP components to provide query parameters in the endpoint uri.
+     *
+     * @param uri  the endpoint uri
+     * @return properties as key value pairs of each lenient properties
+     */
+    Map<String, String> endpointLenientProperties(String uri) throws URISyntaxException;
+
+    /**
+     * Validates the pattern whether its a valid time pattern.
+     *
+     * @param pattern  the pattern such as 5000, 5s, 5sec, 4min, 4m30s, 1h, etc.
+     * @return <tt>true</tt> if valid, <tt>false</tt> if invalid
+     */
+    boolean validateTimePattern(String pattern);
+
+    /**
+     * Validates the properties for the given scheme against component and endpoint
+     *
+     * @param scheme  the endpoint scheme
+     * @param properties  the endpoint properties
+     * @return validation result
+     */
+    EndpointValidationResult validateProperties(String scheme, Map<String, String> properties);
+
+    /**
+     * Parses and validates the endpoint uri and constructs a key/value properties of each option.
+     *
+     * @param uri  the endpoint uri
+     * @return validation result
+     */
+    EndpointValidationResult validateEndpointProperties(String uri);
+
+    /**
+     * Parses and validates the endpoint uri and constructs a key/value properties of each option.
+     * <p/>
+     * The option ignoreLenientProperties can be used to ignore components that uses lenient properties.
+     * When this is true, then the uri validation is stricter but would fail on properties that are not part of the component
+     * but in the uri because of using lenient properties.
+     * For example using the HTTP components to provide query parameters in the endpoint uri.
+     *
+     * @param uri  the endpoint uri
+     * @param ignoreLenientProperties  whether to ignore components that uses lenient properties.
+     * @return validation result
+     */
+    EndpointValidationResult validateEndpointProperties(String uri, boolean ignoreLenientProperties);
+
+    /**
+     * Parses and validates the endpoint uri and constructs a key/value properties of each option.
+     * <p/>
+     * The option ignoreLenientProperties can be used to ignore components that uses lenient properties.
+     * When this is true, then the uri validation is stricter but would fail on properties that are not part of the component
+     * but in the uri because of using lenient properties.
+     * For example using the HTTP components to provide query parameters in the endpoint uri.
+     *
+     * @param uri  the endpoint uri
+     * @param ignoreLenientProperties  whether to ignore components that uses lenient properties.
+     * @param consumerOnly whether the endpoint is only used as a consumer
+     * @param producerOnly whether the endpoint is only used as a producer
+     * @return validation result
+     */
+    EndpointValidationResult validateEndpointProperties(String uri, boolean ignoreLenientProperties, boolean consumerOnly, boolean producerOnly);
+
+    /**
+     * Parses and validates the simple expression.
+     * <p/>
+     * <b>Important:</b> This requires having <tt>camel-core</tt> on the classpath
+     *
+     * @param simple  the simple expression
+     * @return validation result
+     * @deprecated use {@link #validateSimpleExpression(ClassLoader, String)}
+     */
+    @Deprecated
+    SimpleValidationResult validateSimpleExpression(String simple);
+
+    /**
+     * Parses and validates the simple expression.
+     * <p/>
+     * <b>Important:</b> This requires having <tt>camel-core</tt> on the classpath
+     *
+     * @param classLoader a custom classloader to use for loading the language from the classpath, or <tt>null</tt> for using default classloader
+     * @param simple  the simple expression
+     * @return validation result
+     */
+    SimpleValidationResult validateSimpleExpression(ClassLoader classLoader, String simple);
+
+    /**
+     * Parses and validates the simple predicate
+     * <p/>
+     * <b>Important:</b> This requires having <tt>camel-core</tt> on the classpath
+     *
+     * @param simple  the simple predicate
+     * @return validation result
+     * @deprecated use {@link #validateSimplePredicate(ClassLoader, String)}
+     */
+    @Deprecated
+    SimpleValidationResult validateSimplePredicate(String simple);
+
+    /**
+     * Parses and validates the simple predicate
+     * <p/>
+     * <b>Important:</b> This requires having <tt>camel-core</tt> on the classpath
+     *
+     * @param classLoader a custom classloader to use for loading the language from the classpath, or <tt>null</tt> for using default classloader
+     * @param simple  the simple predicate
+     * @return validation result
+     */
+    SimpleValidationResult validateSimplePredicate(ClassLoader classLoader, String simple);
+
+    /**
+     * Parses and validates the language as a predicate
+     * <p/>
+     * <b>Important:</b> This requires having <tt>camel-core</tt> and the language dependencies on the classpath
+     *
+     * @param classLoader a custom classloader to use for loading the language from the classpath, or <tt>null</tt> for using default classloader
+     * @param language the name of the language
+     * @param text  the predicate text
+     * @return validation result
+     */
+    LanguageValidationResult validateLanguagePredicate(ClassLoader classLoader, String language, String text);
+
+    /**
+     * Parses and validates the language as an expression
+     * <p/>
+     * <b>Important:</b> This requires having <tt>camel-core</tt> and the language dependencies on the classpath
+     *
+     * @param classLoader a custom classloader to use for loading the language from the classpath, or <tt>null</tt> for using default classloader
+     * @param language the name of the language
+     * @param text  the expression text
+     * @return validation result
+     */
+    LanguageValidationResult validateLanguageExpression(ClassLoader classLoader, String language, String text);
+
+    /**
+     * Returns the component name from the given endpoint uri
+     *
+     * @param uri  the endpoint uri
+     * @return the component name (aka scheme), or <tt>null</tt> if not possible to determine
+     */
+    String endpointComponentName(String uri);
+
+    /**
+     * Creates an endpoint uri in Java style from the information from the properties
+     *
+     * @param scheme the endpoint schema
+     * @param properties the properties as key value pairs
+     * @param encode whether to URL encode the returned uri or not
+     * @return the constructed endpoint uri
+     * @throws java.net.URISyntaxException is thrown if there is encoding error
+     */
+    String asEndpointUri(String scheme, Map<String, String> properties, boolean encode) throws URISyntaxException;
+
+    /**
+     * Creates an endpoint uri in XML style (eg escape & as &ampl;) from the information from the properties
+     *
+     * @param scheme the endpoint schema
+     * @param properties the properties as key value pairs
+     * @param encode whether to URL encode the returned uri or not
+     * @return the constructed endpoint uri
+     * @throws java.net.URISyntaxException is thrown if there is encoding error
+     */
+    String asEndpointUriXml(String scheme, Map<String, String> properties, boolean encode) throws URISyntaxException;
+
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/SimpleValidationResult.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/SimpleValidationResult.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/SimpleValidationResult.java
new file mode 100644
index 0000000..1b8dd0e
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/SimpleValidationResult.java
@@ -0,0 +1,32 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+/**
+ * To be backwards compatible, but favor using {@link LanguageValidationResult} instead.
+ */
+public class SimpleValidationResult extends LanguageValidationResult {
+
+    public SimpleValidationResult(String text) {
+        super(text);
+    }
+
+    public String getSimple() {
+        return getText();
+    }
+
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/SuggestionStrategy.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/SuggestionStrategy.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/SuggestionStrategy.java
new file mode 100644
index 0000000..e29afc6
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/SuggestionStrategy.java
@@ -0,0 +1,34 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+import java.util.Set;
+
+/**
+ * Strategy to provide suggestions for unknown endpoint options
+ */
+public interface SuggestionStrategy {
+
+    /**
+     * Provides a list of valid option names for a did you mean function.
+     *
+     * @param names         valid names
+     * @param unknownOption unknown option name
+     * @return a list of suggested names (did you mean)
+     */
+    String[] suggestEndpointOptions(Set<String> names, String unknownOption);
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/TimePatternConverter.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/TimePatternConverter.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/TimePatternConverter.java
new file mode 100644
index 0000000..ed5585c
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/TimePatternConverter.java
@@ -0,0 +1,120 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+/**
+ * This class is a copy from camel-core so we can use it independent to validate uris with time patterns
+ */
+public final class TimePatternConverter {
+    private static final Pattern NUMBERS_ONLY_STRING_PATTERN  Pattern.compile(^[-]?(\\d)+$, Pattern.CASE_INSENSITIVE);
+    private static final Pattern HOUR_REGEX_PATTERN  Pattern.compile(((\\d)*(\\d))h(our(s)?)?, Pattern.CASE_INSENSITIVE);
+    private static final Pattern MINUTES_REGEX_PATTERN  Pattern.compile(((\\d)*(\\d))m(in(ute(s)?)?)?, Pattern.CASE_INSENSITIVE);
+    private static final Pattern SECONDS_REGEX_PATTERN  Pattern.compile(((\\d)*(\\d))s(ec(ond)?(s)?)?, Pattern.CASE_INSENSITIVE);
+
+    /**
+     * Utility classes should not have a public constructor.
+     */
+    private TimePatternConverter() {
+    }
+
+    public static long toMilliSeconds(String source) throws IllegalArgumentException {
+        long milliseconds  0;
+        boolean foundFlag  false;
+
+        checkCorrectnessOfPattern(source);
+        Matcher matcher;
+
+        matcher  createMatcher(NUMBERS_ONLY_STRING_PATTERN, source);
+        if (matcher.find()) {
+            // Note: This will also be used for regular numeric strings.
+            //       This String -> long converter will be used for all strings.
+            milliseconds  Long.valueOf(source);
+        } else {
+            matcher  createMatcher(HOUR_REGEX_PATTERN, source);
+            if (matcher.find()) {
+                milliseconds  milliseconds + (3600000 * Long.valueOf(matcher.group(1)));
+                foundFlag  true;
+            }
+
+            matcher  createMatcher(MINUTES_REGEX_PATTERN, source);
+            if (matcher.find()) {
+                long minutes  Long.valueOf(matcher.group(1));
+                if ((minutes > 59) && foundFlag) {
+                    throw new IllegalArgumentException(Minutes should contain a valid value between 0 and 59:  + source);
+                }
+                foundFlag  true;
+                milliseconds  milliseconds + (60000 * minutes);
+            }
+
+            matcher  createMatcher(SECONDS_REGEX_PATTERN, source);
+            if (matcher.find()) {
+                long seconds  Long.valueOf(matcher.group(1));
+                if ((seconds > 59) && foundFlag) {
+                    throw new IllegalArgumentException(Seconds should contain a valid value between 0 and 59:  + source);
+                }
+                foundFlag  true;
+                milliseconds  milliseconds + (1000 * seconds);
+            }
+
+            // No pattern matched... initiating fallback check and conversion (if required).
+            // The source at this point may contain illegal values or special characters
+            if (!foundFlag) {
+                milliseconds  Long.valueOf(source);
+            }
+        }
+
+        return milliseconds;
+    }
+
+    private static void checkCorrectnessOfPattern(String source) {
+        //replace only numbers once
+        Matcher matcher  createMatcher(NUMBERS_ONLY_STRING_PATTERN, source);
+        String replaceSource  matcher.replaceFirst();
+
+        //replace hour string once
+        matcher  createMatcher(HOUR_REGEX_PATTERN, replaceSource);
+        if (matcher.find() && matcher.find()) {
+            throw new IllegalArgumentException(Hours should not be specified more then once:  + source);
+        }
+        replaceSource  matcher.replaceFirst();
+
+        //replace minutes once
+        matcher  createMatcher(MINUTES_REGEX_PATTERN, replaceSource);
+        if (matcher.find() && matcher.find()) {
+            throw new IllegalArgumentException(Minutes should not be specified more then once:  + source);
+        }
+        replaceSource  matcher.replaceFirst();
+
+        //replace seconds once
+        matcher  createMatcher(SECONDS_REGEX_PATTERN, replaceSource);
+        if (matcher.find() && matcher.find()) {
+            throw new IllegalArgumentException(Seconds should not be specified more then once:  + source);
+        }
+        replaceSource  matcher.replaceFirst();
+
+        if (replaceSource.length() > 0) {
+            throw new IllegalArgumentException(Illegal characters:  + source);
+        }
+    }
+
+    private static Matcher createMatcher(Pattern pattern, String source) {
+        return pattern.matcher(source);
+    }
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/URISupport.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/URISupport.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/URISupport.java
new file mode 100644
index 0000000..8389590
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/URISupport.java
@@ -0,0 +1,392 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+import java.io.UnsupportedEncodingException;
+import java.net.URI;
+import java.net.URISyntaxException;
+import java.net.URLDecoder;
+import java.net.URLEncoder;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.LinkedHashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * Copied from org.apache.camel.util.URISupport
+ */
+public final class URISupport {
+
+    public static final String RAW_TOKEN_START  RAW(;
+    public static final String RAW_TOKEN_END  );
+
+    private static final String CHARSET  UTF-8;
+
+    private URISupport() {
+        // Helper class
+    }
+
+    /**
+     * Normalizes the URI so unsafe characters is encoded
+     *
+     * @param uri the input uri
+     * @return as URI instance
+     * @throws URISyntaxException is thrown if syntax error in the input uri
+     */
+    public static URI normalizeUri(String uri) throws URISyntaxException {
+        return new URI(UnsafeUriCharactersEncoder.encode(uri, true));
+    }
+
+    public static Map<String, Object> extractProperties(Map<String, Object> properties, String optionPrefix) {
+        Map<String, Object> rc  new LinkedHashMap<String, Object>(properties.size());
+
+        for (Iterator<Map.Entry<String, Object>> it  properties.entrySet().iterator(); it.hasNext();) {
+            Map.Entry<String, Object> entry  it.next();
+            String name  entry.getKey();
+            if (name.startsWith(optionPrefix)) {
+                Object value  properties.get(name);
+                name  name.substring(optionPrefix.length());
+                rc.put(name, value);
+                it.remove();
+            }
+        }
+
+        return rc;
+    }
+
+    /**
+     * Strips the query parameters from the uri
+     *
+     * @param uri  the uri
+     * @return the uri without the query parameter
+     */
+    public static String stripQuery(String uri) {
+        int idx  uri.indexOf(?);
+        if (idx > -1) {
+            uri  uri.substring(0, idx);
+        }
+        return uri;
+    }
+
+    /**
+     * Parses the query parameters of the uri (eg the query part).
+     *
+     * @param uri the uri
+     * @return the parameters, or an empty map if no parameters (eg never null)
+     * @throws URISyntaxException is thrown if uri has invalid syntax.
+     */
+    public static Map<String, Object> parseParameters(URI uri) throws URISyntaxException {
+        String query  uri.getQuery();
+        if (query  null) {
+            String schemeSpecificPart  uri.getSchemeSpecificPart();
+            int idx  schemeSpecificPart.indexOf(?);
+            if (idx < 0) {
+                // return an empty map
+                return new LinkedHashMap<String, Object>(0);
+            } else {
+                query  schemeSpecificPart.substring(idx + 1);
+            }
+        } else {
+            query  stripPrefix(query, ?);
+        }
+        return parseQuery(query);
+    }
+
+    /**
+     * Strips the prefix from the value.
+     * <p/>
+     * Returns the value as-is if not starting with the prefix.
+     *
+     * @param value  the value
+     * @param prefix the prefix to remove from value
+     * @return the value without the prefix
+     */
+    public static String stripPrefix(String value, String prefix) {
+        if (value ! null && value.startsWith(prefix)) {
+            return value.substring(prefix.length());
+        }
+        return value;
+    }
+
+    /**
+     * Parses the query part of the uri (eg the parameters).
+     * <p/>
+     * The URI parameters will by default be URI encoded. However you can define a parameter
+     * values with the syntax: <tt>keyRAW(value)</tt> which tells Camel to not encode the value,
+     * and use the value as is (eg keyvalue) and the value has <b>not</b> been encoded.
+     *
+     * @param uri the uri
+     * @return the parameters, or an empty map if no parameters (eg never null)
+     * @throws URISyntaxException is thrown if uri has invalid syntax.
+     * @see #RAW_TOKEN_START
+     * @see #RAW_TOKEN_END
+     */
+    public static Map<String, Object> parseQuery(String uri) throws URISyntaxException {
+        return parseQuery(uri, false);
+    }
+
+    /**
+     * Parses the query part of the uri (eg the parameters).
+     * <p/>
+     * The URI parameters will by default be URI encoded. However you can define a parameter
+     * values with the syntax: <tt>keyRAW(value)</tt> which tells Camel to not encode the value,
+     * and use the value as is (eg keyvalue) and the value has <b>not</b> been encoded.
+     *
+     * @param uri the uri
+     * @param useRaw whether to force using raw values
+     * @return the parameters, or an empty map if no parameters (eg never null)
+     * @throws URISyntaxException is thrown if uri has invalid syntax.
+     * @see #RAW_TOKEN_START
+     * @see #RAW_TOKEN_END
+     */
+    public static Map<String, Object> parseQuery(String uri, boolean useRaw) throws URISyntaxException {
+        // must check for trailing & as the uri.split(&) will ignore those
+        if (uri ! null && uri.endsWith(&)) {
+            throw new URISyntaxException(uri, Invalid uri syntax: Trailing & marker found. 
+                    + Check the uri and remove the trailing & marker.);
+        }
+
+        if (isEmpty(uri)) {
+            // return an empty map
+            return new LinkedHashMap<String, Object>(0);
+        }
+
+        // need to parse the uri query parameters manually as we cannot rely on splitting by &,
+        // as & can be used in a parameter value as well.
+
+        try {
+            // use a linked map so the parameters is in the same order
+            Map<String, Object> rc  new LinkedHashMap<String, Object>();
+
+            boolean isKey  true;
+            boolean isValue  false;
+            boolean isRaw  false;
+            StringBuilder key  new StringBuilder();
+            StringBuilder value  new StringBuilder();
+
+            // parse the uri parameters char by char
+            for (int i  0; i < uri.length(); i++) {
+                // current char
+                char ch  uri.charAt(i);
+                // look ahead of the next char
+                char next;
+                if (i < uri.length() - 2) {
+                    next  uri.charAt(i + 1);
+                } else {
+                    next  \u0000;
+                }
+
+                // are we a raw value
+                isRaw  value.toString().startsWith(RAW_TOKEN_START);
+
+                // if we are in raw mode, then we keep adding until we hit the end marker
+                if (isRaw) {
+                    if (isKey) {
+                        key.append(ch);
+                    } else if (isValue) {
+                        value.append(ch);
+                    }
+
+                    // we only end the raw marker if its )& or at the end of the value
+
+                    boolean end  ch  RAW_TOKEN_END.charAt(0) && (next  & || next  \u0000);
+                    if (end) {
+                        // raw value end, so add that as a parameter, and reset flags
+                        addParameter(key.toString(), value.toString(), rc, useRaw || isRaw);
+                        key.setLength(0);
+                        value.setLength(0);
+                        isKey  true;
+                        isValue  false;
+                        isRaw  false;
+                        // skip to next as we are in raw mode and have already added the value
+                        i++;
+                    }
+                    continue;
+                }
+
+                // if its a key and there is a  sign then the key ends and we are in value mode
+                if (isKey && ch  ) {
+                    isKey  false;
+                    isValue  true;
+                    isRaw  false;
+                    continue;
+                }
+
+                // the & denote parameter is ended
+                if (ch  &) {
+                    // parameter is ended, as we hit & separator
+                    String aKey  key.toString();
+                    // the key may be a placeholder of options which we then do not know what is
+                    boolean validKey  !aKey.startsWith({{) && !aKey.endsWith(}});
+                    if (validKey) {
+                        addParameter(aKey, value.toString(), rc, useRaw || isRaw);
+                    }
+                    key.setLength(0);
+                    value.setLength(0);
+                    isKey  true;
+                    isValue  false;
+                    isRaw  false;
+                    continue;
+                }
+
+                // regular char so add it to the key or value
+                if (isKey) {
+                    key.append(ch);
+                } else if (isValue) {
+                    value.append(ch);
+                }
+            }
+
+            // any left over parameters, then add that
+            if (key.length() > 0) {
+                String aKey  key.toString();
+                // the key may be a placeholder of options which we then do not know what is
+                boolean validKey  !aKey.startsWith({{) && !aKey.endsWith(}});
+                if (validKey) {
+                    addParameter(aKey, value.toString(), rc, useRaw || isRaw);
+                }
+            }
+
+            return rc;
+
+        } catch (UnsupportedEncodingException e) {
+            URISyntaxException se  new URISyntaxException(e.toString(), Invalid encoding);
+            se.initCause(e);
+            throw se;
+        }
+    }
+
+    @SuppressWarnings(unchecked)
+    private static void addParameter(String name, String value, Map<String, Object> map, boolean isRaw) throws UnsupportedEncodingException {
+        name  URLDecoder.decode(name, CHARSET);
+        if (!isRaw) {
+            // need to replace % with %25
+            value  URLDecoder.decode(value.replaceAll(%, %25), CHARSET);
+        }
+
+        // does the key already exist?
+        if (map.containsKey(name)) {
+            // yes it does, so make sure we can support multiple values, but using a list
+            // to hold the multiple values
+            Object existing  map.get(name);
+            List<String> list;
+            if (existing instanceof List) {
+                list  (List<String>) existing;
+            } else {
+                // create a new list to hold the multiple values
+                list  new ArrayList<String>();
+                String s  existing ! null ? existing.toString() : null;
+                if (s ! null) {
+                    list.add(s);
+                }
+            }
+            list.add(value);
+            map.put(name, list);
+        } else {
+            map.put(name, value);
+        }
+    }
+
+    /**
+     * Assembles a query from the given map.
+     *
+     * @param options  the map with the options (eg key/value pairs)
+     * @param ampersand to use & for Java code, and &amp; for XML
+     * @return a query string with <tt>key1value&key2value2&...</tt>, or an empty string if there is no options.
+     * @throws URISyntaxException is thrown if uri has invalid syntax.
+     */
+    public static String createQueryString(Map<String, String> options, String ampersand, boolean encode) throws URISyntaxException {
+        try {
+            if (options.size() > 0) {
+                StringBuilder rc  new StringBuilder();
+                boolean first  true;
+                for (Object o : options.keySet()) {
+                    if (first) {
+                        first  false;
+                    } else {
+                        rc.append(ampersand);
+                    }
+
+                    String key  (String) o;
+                    Object value  options.get(key);
+
+                    // use the value as a String
+                    String s  value ! null ? value.toString() : null;
+                    appendQueryStringParameter(key, s, rc, encode);
+                }
+                return rc.toString();
+            } else {
+                return ;
+            }
+        } catch (UnsupportedEncodingException e) {
+            URISyntaxException se  new URISyntaxException(e.toString(), Invalid encoding);
+            se.initCause(e);
+            throw se;
+        }
+    }
+
+    private static void appendQueryStringParameter(String key, String value, StringBuilder rc, boolean encode) throws UnsupportedEncodingException {
+        if (encode) {
+            rc.append(URLEncoder.encode(key, CHARSET));
+        } else {
+            rc.append(key);
+        }
+        // only append if value is not null
+        if (value ! null) {
+            rc.append();
+            if (value.startsWith(RAW_TOKEN_START) && value.endsWith(RAW_TOKEN_END)) {
+                // do not encode RAW parameters
+                rc.append(value);
+            } else {
+                if (encode) {
+                    rc.append(URLEncoder.encode(value, CHARSET));
+                } else {
+                    rc.append(value);
+                }
+            }
+        }
+    }
+
+    /**
+     * Tests whether the value is <tt>null</tt> or an empty string.
+     *
+     * @param value  the value, if its a String it will be tested for text length as well
+     * @return true if empty
+     */
+    public static boolean isEmpty(Object value) {
+        return !isNotEmpty(value);
+    }
+
+    /**
+     * Tests whether the value is <b>not</b> <tt>null</tt> or an empty string.
+     *
+     * @param value  the value, if its a String it will be tested for text length as well
+     * @return true if <b>not</b> empty
+     */
+    public static boolean isNotEmpty(Object value) {
+        if (value  null) {
+            return false;
+        } else if (value instanceof String) {
+            String text  (String) value;
+            return text.trim().length() > 0;
+        } else {
+            return true;
+        }
+    }
+
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/UnsafeUriCharactersEncoder.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/UnsafeUriCharactersEncoder.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/UnsafeUriCharactersEncoder.java
new file mode 100644
index 0000000..a11c810
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/UnsafeUriCharactersEncoder.java
@@ -0,0 +1,206 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+import java.util.ArrayList;
+import java.util.BitSet;
+import java.util.List;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+/**
+ * Encoder for unsafe URI characters.
+ * <p/>
+ * A good source for details is <a hrefhttp://en.wikipedia.org/wiki/Url_encode>wikipedia url encode</a> article.
+ */
+public final class UnsafeUriCharactersEncoder {
+    private static BitSet unsafeCharactersRfc1738;
+    private static BitSet unsafeCharactersHttp;
+    private static final char[] HEX_DIGITS  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C,
+        D, E, F, a, b, c, d, e, f};
+    private static final Pattern RAW_PATTERN  Pattern.compile(RAW\\([^\\)]+\\));
+
+    static {
+        unsafeCharactersRfc1738  new BitSet(256);
+        unsafeCharactersRfc1738.set( );
+        unsafeCharactersRfc1738.set();
+        unsafeCharactersRfc1738.set(<);
+        unsafeCharactersRfc1738.set(>);
+        unsafeCharactersRfc1738.set(#);
+        unsafeCharactersRfc1738.set(%);
+        unsafeCharactersRfc1738.set({);
+        unsafeCharactersRfc1738.set(});
+        unsafeCharactersRfc1738.set(|);
+        unsafeCharactersRfc1738.set(\\);
+        unsafeCharactersRfc1738.set(^);
+        unsafeCharactersRfc1738.set(~);
+        unsafeCharactersRfc1738.set([);
+        unsafeCharactersRfc1738.set(]);
+        unsafeCharactersRfc1738.set(`);
+    }
+
+    static {
+        unsafeCharactersHttp  new BitSet(256);
+        unsafeCharactersHttp.set( );
+        unsafeCharactersHttp.set();
+        unsafeCharactersHttp.set(<);
+        unsafeCharactersHttp.set(>);
+        unsafeCharactersHttp.set(#);
+        unsafeCharactersHttp.set(%);
+        unsafeCharactersHttp.set({);
+        unsafeCharactersHttp.set(});
+        unsafeCharactersHttp.set(|);
+        unsafeCharactersHttp.set(\\);
+        unsafeCharactersHttp.set(^);
+        unsafeCharactersHttp.set(~);
+        unsafeCharactersHttp.set(`);
+    }
+
+    private UnsafeUriCharactersEncoder() {
+        // util class
+    }
+
+    public static String encode(String s) {
+        return encode(s, unsafeCharactersRfc1738);
+    }
+
+    public static String encodeHttpURI(String s) {
+        return encode(s, unsafeCharactersHttp);
+    }
+
+    public static String encode(String s, BitSet unsafeCharacters) {
+        return encode(s, unsafeCharacters, false);
+    }
+
+    public static String encode(String s, boolean checkRaw) {
+        return encode(s, unsafeCharactersRfc1738, checkRaw);
+    }
+
+    public static String encodeHttpURI(String s, boolean checkRaw) {
+        return encode(s, unsafeCharactersHttp, checkRaw);
+    }
+
+    private static List<Pair> checkRAW(String s) {
+        Matcher matcher  RAW_PATTERN.matcher(s);
+        List<Pair> answer  new ArrayList<Pair>();
+        // Check all occurrences
+        while (matcher.find()) {
+            answer.add(new Pair(matcher.start(), matcher.end()));
+        }
+        return answer;
+    }
+
+    private static boolean isRaw(int index, List<Pair> pairs) {
+        for (Pair pair : pairs) {
+            if (index < pair.left) {
+                return false;
+            } else {
+                if (index > pair.left) {
+                    if (index < pair.right) {
+                        return true;
+                    } else {
+                        continue;
+                    }
+                }
+            }
+        }
+        return false;
+    }
+
+    private static class Pair {
+        int left;
+        int right;
+
+        Pair(int left, int right) {
+            this.left  left;
+            this.right  right;
+        }
+    }
+
+    // Just skip the encode for isRAW part
+    public static String encode(String s, BitSet unsafeCharacters, boolean checkRaw) {
+        List<Pair> rawPairs;
+        if (checkRaw) {
+            rawPairs  checkRAW(s);
+        } else {
+            rawPairs  new ArrayList<Pair>();
+        }
+
+        int n  s  null ? 0 : s.length();
+        if (n  0) {
+            return s;
+        }
+
+        // First check whether we actually need to encode
+        char chars[]  s.toCharArray();
+        for (int i  0;;) {
+            // just deal with the ascii character
+            if (chars[i] > 0 && chars[i] < 128) {
+                if (unsafeCharacters.get(chars[i])) {
+                    break;
+                }
+            }
+            if (++i > chars.length) {
+                return s;
+            }
+        }
+
+        // okay there are some unsafe characters so we do need to encode
+        // see details at: http://en.wikipedia.org/wiki/Url_encode
+        StringBuilder sb  new StringBuilder();
+        for (int i  0; i < chars.length; i++) {
+            char ch  chars[i];
+            if (ch > 0 && ch < 128 && unsafeCharacters.get(ch)) {
+                // special for % sign as it may be a decimal encoded value
+                if (ch  %) {
+                    char next  i + 1 < chars.length ? chars[i + 1] :  ;
+                    char next2  i + 2 < chars.length ? chars[i + 2] :  ;
+
+                    if (isHexDigit(next) && isHexDigit(next2) && !isRaw(i, rawPairs)) {
+                        // its already encoded (decimal encoded) so just append as is
+                        sb.append(ch);
+                    } else {
+                        // must escape then, as its an unsafe character
+                        appendEscape(sb, (byte) ch);
+                    }
+                } else {
+                    // must escape then, as its an unsafe character
+                    appendEscape(sb, (byte) ch);
+                }
+            } else {
+                sb.append(ch);
+            }
+        }
+        return sb.toString();
+    }
+
+    private static void appendEscape(StringBuilder sb, byte b) {
+        sb.append(%);
+        sb.append(HEX_DIGITS[(b >> 4) & 0x0f]);
+        sb.append(HEX_DIGITS[(b >> 0) & 0x0f]);
+    }
+
+    private static boolean isHexDigit(char ch) {
+        for (char hex : HEX_DIGITS) {
+            if (hex  ch) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/package.html
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/package.html b/camel-core/src/main/java/org/apache/camel/runtimecatalog/package.html
new file mode 100644
index 0000000..2f15a04
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/package.html
@@ -0,0 +1,25 @@
+<!--
+    Licensed to the Apache Software Foundation (ASF) under one or more
+    contributor license agreements.  See the NOTICE file distributed with
+    this work for additional information regarding copyright ownership.
+    The ASF licenses this file to You under the Apache License, Version 2.0
+    (the License); you may not use this file except in compliance with
+    the License.  You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an AS IS BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+<html>
+<head>
+</head>
+<body>
+
+Runtime Camel Catalog
+
+</body>
+</html>

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/util/EndpointHelper.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/util/EndpointHelper.java b/camel-core/src/main/java/org/apache/camel/util/EndpointHelper.java
index fd22f55..a32c109 100644
--- a/camel-core/src/main/java/org/apache/camel/util/EndpointHelper.java
+++ b/camel-core/src/main/java/org/apache/camel/util/EndpointHelper.java
@@ -37,8 +37,8 @@ import org.apache.camel.PollingConsumer;
 import org.apache.camel.Processor;
 import org.apache.camel.ResolveEndpointFailedException;
 import org.apache.camel.Route;
-import org.apache.camel.catalog.DefaultRuntimeCamelCatalog;
-import org.apache.camel.catalog.RuntimeCamelCatalog;
+import org.apache.camel.runtimecatalog.DefaultRuntimeCamelCatalog;
+import org.apache.camel.runtimecatalog.RuntimeCamelCatalog;
 import org.apache.camel.spi.BrowsableEndpoint;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -523,7 +523,7 @@ public final class EndpointHelper {
      * @param uri          the endpoint uri
      * @return a map for each option in the uri with the corresponding information from the json
      * @throws Exception is thrown in case of error
-     * @deprecated use {@link org.apache.camel.catalog.RuntimeCamelCatalog#endpointProperties(String)}
+     * @deprecated use {@link org.apache.camel.runtimecatalog.RuntimeCamelCatalog#endpointProperties(String)}
      */
     @Deprecated
     public static Map<String, Object> endpointProperties(CamelContext camelContext, String uri) throws Exception {

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/test/java/org/apache/camel/catalog/AbstractCamelCatalogTest.java
----------------------------------------------------------------------
diff --git a/camel-core/src/test/java/org/apache/camel/catalog/AbstractCamelCatalogTest.java b/camel-core/src/test/java/org/apache/camel/catalog/AbstractCamelCatalogTest.java
deleted file mode 100644
index ed7e997..0000000
--- a/camel-core/src/test/java/org/apache/camel/catalog/AbstractCamelCatalogTest.java
+++ /dev/null
@@ -1,104 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-import java.net.URISyntaxException;
-import java.util.HashMap;
-import java.util.Map;
-
-import org.junit.Before;
-import org.junit.Test;
-
-import static org.easymock.EasyMock.expect;
-import static org.easymock.EasyMock.mock;
-import static org.easymock.EasyMock.replay;
-import static org.junit.Assert.assertEquals;
-
-public class AbstractCamelCatalogTest {
-
-    AbstractCamelCatalog catalog  new AbstractCamelCatalog() {
-    };
-
-    JSonSchemaResolver resolver;
-
-    @Before
-    public void setupMockCatalog() {
-        resolver  mock(JSonSchemaResolver.class);
-
-        catalog.setJSonSchemaResolver(resolver);
-    }
-
-    @Test
-    public void shouldConstructEndpointUris() throws URISyntaxException {
-        expect(resolver.getComponentJSonSchema(comp)).andReturn({\n//
-            +   \component\: {\n//
-            +     \syntax\: \comp:param1:param2\\n//
-            +   }\n//
-            + });
-
-        replay(resolver);
-
-        final Map<String, String> properties  new HashMap<>();
-        properties.put(param1, value1);
-        properties.put(param2, value2);
-        properties.put(param3, value3);
-
-        final String endpointUri  catalog.doAsEndpointUri(comp, properties, &, false);
-
-        assertEquals(comp:value1:value2?param3value3, endpointUri);
-    }
-
-    @Test
-    public void shouldConstructEndpointUrisWithPropertyPlaceholders() throws URISyntaxException {
-        expect(resolver.getComponentJSonSchema(comp)).andReturn({\n//
-            +   \component\: {\n//
-            +     \syntax\: \comp:param1:param2\\n//
-            +   }\n//
-            + });
-
-        replay(resolver);
-
-        final Map<String, String> properties  new HashMap<>();
-        properties.put(param1, {{prop1}});
-        properties.put(param2, {{prop2}});
-        properties.put(param3, {{prop3}});
-
-        final String endpointUri  catalog.doAsEndpointUri(comp, properties, &, false);
-
-        assertEquals(comp:{{prop1}}:{{prop2}}?param3{{prop3}}, endpointUri);
-    }
-
-    @Test
-    public void shouldConstructEndpointUrisWhenValuesContainTokens() throws URISyntaxException {
-        expect(resolver.getComponentJSonSchema(comp)).andReturn({\n//
-            +   \component\: {\n//
-            +     \syntax\: \comp:param1:param2\\n//
-            +   }\n//
-            + });
-
-        replay(resolver);
-
-        final Map<String, String> properties  new HashMap<>();
-        properties.put(param1, {value1});
-        properties.put(param2, /value2/);
-        properties.put(param3, /value3/{param});
-
-        final String endpointUri  catalog.doAsEndpointUri(comp, properties, &, false);
-
-        assertEquals(comp:{value1}:/value2/?param3/value3/{param}, endpointUri);
-    }
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/test/java/org/apache/camel/catalog/RuntimeCamelCatalogTest.java
----------------------------------------------------------------------
diff --git a/camel-core/src/test/java/org/apache/camel/catalog/RuntimeCamelCatalogTest.java b/camel-core/src/test/java/org/apache/camel/catalog/RuntimeCamelCatalogTest.java
deleted file mode 100644
index 78e51a2..0000000
--- a/camel-core/src/test/java/org/apache/camel/catalog/RuntimeCamelCatalogTest.java
+++ /dev/null
@@ -1,393 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-import java.util.HashMap;
-import java.util.Map;
-
-import org.apache.camel.impl.DefaultCamelContext;
-import org.junit.BeforeClass;
-import org.junit.Test;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertTrue;
-
-public class RuntimeCamelCatalogTest {
-
-    static RuntimeCamelCatalog catalog;
-
-    private static final Logger LOG  LoggerFactory.getLogger(RuntimeCamelCatalogTest.class);
-
-    @BeforeClass
-    public static void createCamelCatalog() {
-        catalog  new DefaultRuntimeCamelCatalog(new DefaultCamelContext());
-    }
-
-    @Test
-    public void testFromCamelContext() throws Exception {
-        String schema  new DefaultCamelContext().getRuntimeCamelCatalog().modelJSonSchema(choice);
-        assertNotNull(schema);
-    }
-
-    @Test
-    public void testJsonSchema() throws Exception {
-        String schema  catalog.modelJSonSchema(aggregate);
-        assertNotNull(schema);
-
-        // lets make it possible to find bean/method using both names
-        schema  catalog.modelJSonSchema(method);
-        assertNotNull(schema);
-        schema  catalog.modelJSonSchema(bean);
-        assertNotNull(schema);
-    }
-
-    @Test
-    public void testAsEndpointUriMapFile() throws Exception {
-        Map<String, String> map  new HashMap<String, String>();
-        map.put(directoryName, src/data/inbox);
-        map.put(noop, true);
-        map.put(delay, 5000);
-
-        String uri  catalog.asEndpointUri(file, map, true);
-        assertEquals(file:src/data/inbox?delay5000&nooptrue, uri);
-
-        String uri2  catalog.asEndpointUriXml(file, map, true);
-        assertEquals(file:src/data/inbox?delay5000&amp;nooptrue, uri2);
-    }
-
-    @Test
-    public void testAsEndpointUriTimer() throws Exception {
-        Map<String, String> map  new HashMap<String, String>();
-        map.put(timerName, foo);
-        map.put(period, 5000);
-
-        String uri  catalog.asEndpointUri(timer, map, true);
-        assertEquals(timer:foo?period5000, uri);
-    }
-
-    @Test
-    public void testAsEndpointUriPropertiesPlaceholders() throws Exception {
-        Map<String, String> map  new HashMap<String, String>();
-        map.put(timerName, foo);
-        map.put(period, {{howoften}});
-        map.put(repeatCount, 5);
-
-        String uri  catalog.asEndpointUri(timer, map, true);
-        assertEquals(timer:foo?period%7B%7Bhowoften%7D%7D&repeatCount5, uri);
-
-        uri  catalog.asEndpointUri(timer, map, false);
-        assertEquals(timer:foo?period{{howoften}}&repeatCount5, uri);
-    }
-
-    @Test
-    public void testAsEndpointUriBeanLookup() throws Exception {
-        Map<String, String> map  new HashMap<String, String>();
-        map.put(resourceUri, foo.xslt);
-        map.put(converter, #myConverter);
-
-        String uri  catalog.asEndpointUri(xslt, map, true);
-        assertEquals(xslt:foo.xslt?converter%23myConverter, uri);
-
-        uri  catalog.asEndpointUri(xslt, map, false);
-        assertEquals(xslt:foo.xslt?converter#myConverter, uri);
-    }
-
-    @Test
-    public void testEndpointPropertiesPlaceholders() throws Exception {
-        Map<String, String> map  catalog.endpointProperties(timer:foo?period{{howoften}}&repeatCount5);
-        assertNotNull(map);
-        assertEquals(3, map.size());
-
-        assertEquals(foo, map.get(timerName));
-        assertEquals({{howoften}}, map.get(period));
-        assertEquals(5, map.get(repeatCount));
-    }
-
-    @Test
-    public void testAsEndpointUriLog() throws Exception {
-        Map<String, String> map  new HashMap<String, String>();
-        map.put(loggerName, foo);
-        map.put(loggerLevel, WARN);
-        map.put(multiline, true);
-        map.put(showAll, true);
-        map.put(showBody, false);
-        map.put(showBodyType, false);
-        map.put(showExchangePattern, false);
-        map.put(style, Tab);
-
-        assertEquals(log:foo?loggerLevelWARN&multilinetrue&showAlltrue&styleTab, catalog.asEndpointUri(log, map, false));
-    }
-
-    @Test
-    public void testAsEndpointUriLogShort() throws Exception {
-        Map<String, String> map  new HashMap<String, String>();
-        map.put(loggerName, foo);
-        map.put(loggerLevel, DEBUG);
-
-        assertEquals(log:foo?loggerLevelDEBUG, catalog.asEndpointUri(log, map, false));
-    }
-
-    @Test
-    public void testAsEndpointUriWithplaceholder() throws Exception {
-        Map<String, String> map  new HashMap<String, String>();
-        map.put(name, foo);
-        map.put(blockWhenFull, {{block}});
-        assertEquals(seda:foo?blockWhenFull{{block}}, catalog.asEndpointUri(seda, map, false));
-    }
-
-    @Test
-    public void testEndpointPropertiesSedaRequired() throws Exception {
-        Map<String, String> map  catalog.endpointProperties(seda:foo);
-        assertNotNull(map);
-        assertEquals(1, map.size());
-
-        assertEquals(foo, map.get(name));
-
-        map  catalog.endpointProperties(seda:foo?blockWhenFulltrue);
-        assertNotNull(map);
-        assertEquals(2, map.size());
-
-        assertEquals(foo, map.get(name));
-        assertEquals(true, map.get(blockWhenFull));
-    }
-
-    @Test
-    public void validateProperties() throws Exception {
-        // valid
-        EndpointValidationResult result  catalog.validateEndpointProperties(log:mylog);
-        assertTrue(result.isSuccess());
-
-        // unknown
-        result  catalog.validateEndpointProperties(log:mylog?levelWARN&foobar);
-        assertFalse(result.isSuccess());
-        assertTrue(result.getUnknown().contains(foo));
-        assertEquals(1, result.getNumberOfErrors());
-
-        // enum
-        result  catalog.validateEndpointProperties(seda:foo?waitForTaskToCompleteblah);
-        assertFalse(result.isSuccess());
-        assertEquals(blah, result.getInvalidEnum().get(waitForTaskToComplete));
-        assertEquals(1, result.getNumberOfErrors());
-
-        // reference okay
-        result  catalog.validateEndpointProperties(seda:foo?queue#queue);
-        assertTrue(result.isSuccess());
-        assertEquals(0, result.getNumberOfErrors());
-
-        // unknown component
-        result  catalog.validateEndpointProperties(foo:bar?meyou);
-        assertFalse(result.isSuccess());
-        assertTrue(result.getUnknownComponent().equals(foo));
-        assertEquals(1, result.getNumberOfErrors());
-
-        // invalid boolean but default value
-        result  catalog.validateEndpointProperties(log:output?showAllggg);
-        assertFalse(result.isSuccess());
-        assertEquals(ggg, result.getInvalidBoolean().get(showAll));
-        assertEquals(1, result.getNumberOfErrors());
-
-        // dataset
-        result  catalog.validateEndpointProperties(dataset:foo?minRate50);
-        assertTrue(result.isSuccess());
-
-        // time pattern
-        result  catalog.validateEndpointProperties(timer://foo?fixedRatetrue&delay0&period2s);
-        assertTrue(result.isSuccess());
-
-        // reference lookup
-        result  catalog.validateEndpointProperties(timer://foo?fixedRate#fixed&delay#myDelay);
-        assertTrue(result.isSuccess());
-
-        // optional consumer. prefix
-        result  catalog.validateEndpointProperties(file:inbox?consumer.delay5000&consumer.greedytrue);
-        assertTrue(result.isSuccess());
-
-        // optional without consumer. prefix
-        result  catalog.validateEndpointProperties(file:inbox?delay5000&greedytrue);
-        assertTrue(result.isSuccess());
-
-        // mixed optional without consumer. prefix
-        result  catalog.validateEndpointProperties(file:inbox?delay5000&consumer.greedytrue);
-        assertTrue(result.isSuccess());
-
-        // prefix
-        result  catalog.validateEndpointProperties(file:inbox?delay5000&scheduler.foo123&scheduler.bar456);
-        assertTrue(result.isSuccess());
-
-        // stub
-        result  catalog.validateEndpointProperties(stub:foo?me123&you456);
-        assertTrue(result.isSuccess());
-
-        // lenient on
-        result  catalog.validateEndpointProperties(dataformat:string:marshal?foobar);
-        assertTrue(result.isSuccess());
-
-        // lenient off
-        result  catalog.validateEndpointProperties(dataformat:string:marshal?foobar, true);
-        assertFalse(result.isSuccess());
-        assertTrue(result.getUnknown().contains(foo));
-
-        // data format
-        result  catalog.validateEndpointProperties(dataformat:string:marshal?charsetutf-8, true);
-        assertTrue(result.isSuccess());
-
-        // incapable to parse
-        result  catalog.validateEndpointProperties({{getFtpUrl}}?recursivetrue);
-        assertFalse(result.isSuccess());
-        assertTrue(result.getIncapable() ! null);
-    }
-
-    @Test
-    public void validatePropertiesSummary() throws Exception {
-        EndpointValidationResult result  catalog.validateEndpointProperties(yammer:MESSAGES?blahyada&accessTokenaaa&consumerKey&useJsonno&initialDelayfive&pollStrategymyStrategy);
-        assertFalse(result.isSuccess());
-        String reason  result.summaryErrorMessage(true);
-        LOG.info(reason);
-
-        result  catalog.validateEndpointProperties(jms:unknown:myqueue);
-        assertFalse(result.isSuccess());
-        reason  result.summaryErrorMessage(false);
-        LOG.info(reason);
-    }
-
-    @Test
-    public void validateTimePattern() throws Exception {
-        assertTrue(catalog.validateTimePattern(0));
-        assertTrue(catalog.validateTimePattern(500));
-        assertTrue(catalog.validateTimePattern(10000));
-        assertTrue(catalog.validateTimePattern(5s));
-        assertTrue(catalog.validateTimePattern(5sec));
-        assertTrue(catalog.validateTimePattern(5secs));
-        assertTrue(catalog.validateTimePattern(3m));
-        assertTrue(catalog.validateTimePattern(3min));
-        assertTrue(catalog.validateTimePattern(3minutes));
-        assertTrue(catalog.validateTimePattern(5m15s));
-        assertTrue(catalog.validateTimePattern(1h));
-        assertTrue(catalog.validateTimePattern(1hour));
-        assertTrue(catalog.validateTimePattern(2hours));
-
-        assertFalse(catalog.validateTimePattern(bla));
-        assertFalse(catalog.validateTimePattern(2year));
-        assertFalse(catalog.validateTimePattern(60darn));
-    }
-
-    @Test
-    public void testEndpointComponentName() throws Exception {
-        String name  catalog.endpointComponentName(jms:queue:foo);
-        assertEquals(jms, name);
-    }
-
-    @Test
-    public void testSimpleExpression() throws Exception {
-        SimpleValidationResult result  catalog.validateSimpleExpression(null, ${body});
-        assertTrue(result.isSuccess());
-        assertEquals(${body}, result.getSimple());
-
-        result  catalog.validateSimpleExpression(null, ${body);
-        assertFalse(result.isSuccess());
-        assertEquals(${body, result.getSimple());
-        LOG.info(result.getError());
-        assertTrue(result.getError().startsWith(expected symbol functionEnd but was eol at location 5));
-        assertEquals(expected symbol functionEnd but was eol, result.getShortError());
-        assertEquals(5, result.getIndex());
-    }
-
-    @Test
-    public void testSimplePredicate() throws Exception {
-        SimpleValidationResult result  catalog.validateSimplePredicate(null, ${body}  abc);
-        assertTrue(result.isSuccess());
-        assertEquals(${body}  abc, result.getSimple());
-
-        result  catalog.validateSimplePredicate(null, ${body} > ${header.size);
-        assertFalse(result.isSuccess());
-        assertEquals(${body} > ${header.size, result.getSimple());
-        LOG.info(result.getError());
-        assertTrue(result.getError().startsWith(expected symbol functionEnd but was eol at location 22));
-        assertEquals(expected symbol functionEnd but was eol, result.getShortError());
-        assertEquals(22, result.getIndex());
-    }
-
-    @Test
-    public void testSimplePredicatePlaceholder() throws Exception {
-        SimpleValidationResult result  catalog.validateSimplePredicate(null, ${body} contains {{danger}});
-        assertTrue(result.isSuccess());
-        assertEquals(${body} contains {{danger}}, result.getSimple());
-
-        result  catalog.validateSimplePredicate(null, ${bdy} contains {{danger}});
-        assertFalse(result.isSuccess());
-        assertEquals(${bdy} contains {{danger}}, result.getSimple());
-        LOG.info(result.getError());
-        assertTrue(result.getError().startsWith(Unknown function: bdy at location 0));
-        assertTrue(result.getError().contains({{danger}}));
-        assertEquals(Unknown function: bdy, result.getShortError());
-        assertEquals(0, result.getIndex());
-    }
-
-    @Test
-    public void testValidateLanguage() throws Exception {
-        LanguageValidationResult result  catalog.validateLanguageExpression(null, simple, ${body});
-        assertTrue(result.isSuccess());
-        assertEquals(${body}, result.getText());
-
-        result  catalog.validateLanguageExpression(null, header, foo);
-        assertTrue(result.isSuccess());
-        assertEquals(foo, result.getText());
-
-        result  catalog.validateLanguagePredicate(null, simple, ${body} > 10);
-        assertTrue(result.isSuccess());
-        assertEquals(${body} > 10, result.getText());
-
-        result  catalog.validateLanguagePredicate(null, header, bar);
-        assertTrue(result.isSuccess());
-        assertEquals(bar, result.getText());
-
-        result  catalog.validateLanguagePredicate(null, foobar, bar);
-        assertFalse(result.isSuccess());
-        assertEquals(Unknown language foobar, result.getError());
-    }
-
-    @Test
-    public void testValidateEndpointConsumerOnly() throws Exception {
-        String uri  file:inbox?bufferSize4096&readLockchanged&deletetrue;
-        EndpointValidationResult result  catalog.validateEndpointProperties(uri, false, true, false);
-        assertTrue(result.isSuccess());
-
-        uri  file:inbox?bufferSize4096&readLockchanged&deletetrue&fileExistAppend;
-        result  catalog.validateEndpointProperties(uri, false, true, false);
-        assertFalse(result.isSuccess());
-
-        assertEquals(fileExist, result.getNotConsumerOnly().iterator().next());
-    }
-
-    @Test
-    public void testValidateEndpointProducerOnly() throws Exception {
-        String uri  file:outbox?bufferSize4096&fileExistAppend;
-        EndpointValidationResult result  catalog.validateEndpointProperties(uri, false, false, true);
-        assertTrue(result.isSuccess());
-
-        uri  file:outbox?bufferSize4096&fileExistAppend&deletetrue;
-        result  catalog.validateEndpointProperties(uri, false, false, true);
-        assertFalse(result.isSuccess());
-
-        assertEquals(delete, result.getNotProducerOnly().iterator().next());
-    }
-
-}


"
"5","306","2017-04-14 10:52:58+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[4/6] camel git commit: Rename catalog to runtimecatalog to avoid
 clash with same package name in camel-catalog.","Return-Path: <commits-return-55680-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0BC6B1996F
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:52:56 +0000 (UTC)
Received: (qmail 82597 invoked by uid 500); 14 Apr 2017 10:52:55 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 82457 invoked by uid 500); 14 Apr 2017 10:52:55 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 82163 invoked by uid 99); 14 Apr 2017 10:52:55 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:52:55 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 6D03BE0117; Fri, 14 Apr 2017 10:52:55 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:52:58 -0000
Message-Id: <0ffd278dae9f48d5849d5bd0dc60655f@git.apache.org>
In-Reply-To: <de5de0a2e2ca40e6bcaa03835723a40e@git.apache.org>
References: <de5de0a2e2ca40e6bcaa03835723a40e@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [4/6] camel git commit: Rename catalog to runtimecatalog to avoid
 clash with same package name in camel-catalog.

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/AbstractCamelCatalog.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/AbstractCamelCatalog.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/AbstractCamelCatalog.java
new file mode 100644
index 0000000..0420708
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/AbstractCamelCatalog.java
@@ -0,0 +1,1294 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+import java.net.URI;
+import java.net.URISyntaxException;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.LinkedHashMap;
+import java.util.LinkedHashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Objects;
+import java.util.Set;
+import java.util.TreeMap;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+import static org.apache.camel.runtimecatalog.CatalogHelper.after;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.getNames;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.getPropertyDefaultValue;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.getPropertyEnum;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.getPropertyKind;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.getPropertyNameFromNameWithPrefix;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.getPropertyPrefix;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.getRow;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.isComponentConsumerOnly;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.isComponentLenientProperties;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.isComponentProducerOnly;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.isPropertyBoolean;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.isPropertyConsumerOnly;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.isPropertyInteger;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.isPropertyMultiValue;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.isPropertyNumber;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.isPropertyObject;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.isPropertyProducerOnly;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.isPropertyRequired;
+import static org.apache.camel.runtimecatalog.JSonSchemaHelper.stripOptionalPrefixFromName;
+import static org.apache.camel.runtimecatalog.URISupport.createQueryString;
+import static org.apache.camel.runtimecatalog.URISupport.isEmpty;
+import static org.apache.camel.runtimecatalog.URISupport.normalizeUri;
+import static org.apache.camel.runtimecatalog.URISupport.stripQuery;
+
+/**
+ * Base class for both the runtime RuntimeCamelCatalog from camel-core and the complete CamelCatalog from camel-catalog.
+ */
+public abstract class AbstractCamelCatalog {
+
+    // CHECKSTYLE:OFF
+
+    private static final Pattern SYNTAX_PATTERN  Pattern.compile((\\w+));
+
+    private SuggestionStrategy suggestionStrategy;
+    private JSonSchemaResolver jsonSchemaResolver;
+
+    public SuggestionStrategy getSuggestionStrategy() {
+        return suggestionStrategy;
+    }
+
+    public void setSuggestionStrategy(SuggestionStrategy suggestionStrategy) {
+        this.suggestionStrategy  suggestionStrategy;
+    }
+
+    public JSonSchemaResolver getJSonSchemaResolver() {
+        return jsonSchemaResolver;
+    }
+
+    public void setJSonSchemaResolver(JSonSchemaResolver resolver) {
+        this.jsonSchemaResolver  resolver;
+    }
+
+    public boolean validateTimePattern(String pattern) {
+        return validateInteger(pattern);
+    }
+
+    public EndpointValidationResult validateEndpointProperties(String uri) {
+        return validateEndpointProperties(uri, false, false, false);
+    }
+
+    public EndpointValidationResult validateEndpointProperties(String uri, boolean ignoreLenientProperties) {
+        return validateEndpointProperties(uri, ignoreLenientProperties, false, false);
+    }
+
+    public EndpointValidationResult validateProperties(String scheme, Map<String, String> properties) {
+        EndpointValidationResult result  new EndpointValidationResult(scheme);
+
+        String json  jsonSchemaResolver.getComponentJSonSchema(scheme);
+        List<Map<String, String>> rows  JSonSchemaHelper.parseJsonSchema(properties, json, true);
+        List<Map<String, String>> componentProps  JSonSchemaHelper.parseJsonSchema(componentProperties, json, true);
+
+        // endpoint options have higher priority so remove those from component
+        // that may clash
+        componentProps.stream()
+            .filter(c -> rows.stream().noneMatch(e -> Objects.equals(e.get(name), c.get(name))))
+            .forEach(rows::add);
+
+        boolean lenient  Boolean.getBoolean(properties.getOrDefault(lenient, false));
+
+        // the dataformat component refers to a data format so lets add the properties for the selected
+        // data format to the list of rows
+        if (dataformat.equals(scheme)) {
+            String dfName  properties.get(name);
+            if (dfName ! null) {
+                String dfJson  jsonSchemaResolver.getDataFormatJSonSchema(dfName);
+                List<Map<String, String>> dfRows  JSonSchemaHelper.parseJsonSchema(properties, dfJson, true);
+                if (dfRows ! null && !dfRows.isEmpty()) {
+                    rows.addAll(dfRows);
+                }
+            }
+        }
+
+        for (Map.Entry<String, String> property : properties.entrySet()) {
+            String value  property.getValue();
+            String originalName  property.getKey();
+            String name  property.getKey();
+            // the name may be using an optional prefix, so lets strip that because the options
+            // in the schema are listed without the prefix
+            name  stripOptionalPrefixFromName(rows, name);
+            // the name may be using a prefix, so lets see if we can find the real property name
+            String propertyName  getPropertyNameFromNameWithPrefix(rows, name);
+            if (propertyName ! null) {
+                name  propertyName;
+            }
+
+            String prefix  getPropertyPrefix(rows, name);
+            String kind  getPropertyKind(rows, name);
+            boolean namePlaceholder  name.startsWith({{) && name.endsWith(}});
+            boolean valuePlaceholder  value.startsWith({{) || value.startsWith(${) || value.startsWith($simple{);
+            boolean lookup  value.startsWith(#) && value.length() > 1;
+            // we cannot evaluate multi values as strict as the others, as we dont know their expected types
+            boolean multiValue  prefix ! null && originalName.startsWith(prefix) && isPropertyMultiValue(rows, name);
+
+            Map<String, String> row  getRow(rows, name);
+            if (row  null) {
+                // unknown option
+
+                // only add as error if the component is not lenient properties, or not stub component
+                // and the name is not a property placeholder for one or more values
+                if (!namePlaceholder && !stub.equals(scheme)) {
+                    if (lenient) {
+                        // as if we are lenient then the option is a dynamic extra option which we cannot validate
+                        result.addLenient(name);
+                    } else {
+                        // its unknown
+                        result.addUnknown(name);
+                        if (suggestionStrategy ! null) {
+                            String[] suggestions  suggestionStrategy.suggestEndpointOptions(getNames(rows), name);
+                            if (suggestions ! null) {
+                                result.addUnknownSuggestions(name, suggestions);
+                            }
+                        }
+                    }
+                }
+            } else {
+                /* TODO: we may need to add something in the properties to know if they are related to a producer or consumer
+                if (parameter.equals(kind)) {
+                    // consumer only or producer only mode for parameters
+                    if (consumerOnly) {
+                        boolean producer  isPropertyProducerOnly(rows, name);
+                        if (producer) {
+                            // the option is only for producer so you cannot use it in consumer mode
+                            result.addNotConsumerOnly(name);
+                        }
+                    } else if (producerOnly) {
+                        boolean consumer  isPropertyConsumerOnly(rows, name);
+                        if (consumer) {
+                            // the option is only for consumer so you cannot use it in producer mode
+                            result.addNotProducerOnly(name);
+                        }
+                    }
+                }
+                */
+
+                // default value
+                String defaultValue  getPropertyDefaultValue(rows, name);
+                if (defaultValue ! null) {
+                    result.addDefaultValue(name, defaultValue);
+                }
+
+                // is required but the value is empty
+                boolean required  isPropertyRequired(rows, name);
+                if (required && isEmpty(value)) {
+                    result.addRequired(name);
+                }
+
+                // is enum but the value is not within the enum range
+                // but we can only check if the value is not a placeholder
+                String enums  getPropertyEnum(rows, name);
+                if (!multiValue && !valuePlaceholder && !lookup && enums ! null) {
+                    String[] choices  enums.split(,);
+                    boolean found  false;
+                    for (String s : choices) {
+                        if (value.equalsIgnoreCase(s)) {
+                            found  true;
+                            break;
+                        }
+                    }
+                    if (!found) {
+                        result.addInvalidEnum(name, value);
+                        result.addInvalidEnumChoices(name, choices);
+                        if (suggestionStrategy ! null) {
+                            Set<String> names  new LinkedHashSet<>();
+                            names.addAll(Arrays.asList(choices));
+                            String[] suggestions  suggestionStrategy.suggestEndpointOptions(names, value);
+                            if (suggestions ! null) {
+                                result.addInvalidEnumSuggestions(name, suggestions);
+                            }
+                        }
+
+                    }
+                }
+
+                // is reference lookup of bean (not applicable for @UriPath, enums, or multi-valued)
+                if (!multiValue && enums  null && !path.equals(kind) && isPropertyObject(rows, name)) {
+                    // must start with # and be at least 2 characters
+                    if (!value.startsWith(#) || value.length() < 1) {
+                        result.addInvalidReference(name, value);
+                    }
+                }
+
+                // is boolean
+                if (!multiValue && !valuePlaceholder && !lookup && isPropertyBoolean(rows, name)) {
+                    // value must be a boolean
+                    boolean bool  true.equalsIgnoreCase(value) || false.equalsIgnoreCase(value);
+                    if (!bool) {
+                        result.addInvalidBoolean(name, value);
+                    }
+                }
+
+                // is integer
+                if (!multiValue && !valuePlaceholder && !lookup && isPropertyInteger(rows, name)) {
+                    // value must be an integer
+                    boolean valid  validateInteger(value);
+                    if (!valid) {
+                        result.addInvalidInteger(name, value);
+                    }
+                }
+
+                // is number
+                if (!multiValue && !valuePlaceholder && !lookup && isPropertyNumber(rows, name)) {
+                    // value must be an number
+                    boolean valid  false;
+                    try {
+                        valid  !Double.valueOf(value).isNaN() || !Float.valueOf(value).isNaN();
+                    } catch (Exception e) {
+                        // ignore
+                    }
+                    if (!valid) {
+                        result.addInvalidNumber(name, value);
+                    }
+                }
+            }
+        }
+
+        // now check if all required values are there, and that a default value does not exists
+        for (Map<String, String> row : rows) {
+            String name  row.get(name);
+            boolean required  isPropertyRequired(rows, name);
+            if (required) {
+                String value  properties.get(name);
+                if (isEmpty(value)) {
+                    value  getPropertyDefaultValue(rows, name);
+                }
+                if (isEmpty(value)) {
+                    result.addRequired(name);
+                }
+            }
+        }
+
+        return result;
+    }
+
+    public EndpointValidationResult validateEndpointProperties(String uri, boolean ignoreLenientProperties, boolean consumerOnly, boolean producerOnly) {
+        EndpointValidationResult result  new EndpointValidationResult(uri);
+
+        Map<String, String> properties;
+        List<Map<String, String>> rows;
+        boolean lenientProperties;
+        String scheme;
+
+        try {
+            String json  null;
+
+            // parse the uri
+            URI u  normalizeUri(uri);
+            scheme  u.getScheme();
+
+            if (scheme ! null) {
+                json  jsonSchemaResolver.getComponentJSonSchema(scheme);
+            }
+            if (json  null) {
+                // if the uri starts with a placeholder then we are also incapable of parsing it as we wasnt able to resolve the component name
+                if (uri.startsWith({{)) {
+                    result.addIncapable(uri);
+                } else if (scheme ! null) {
+                    result.addUnknownComponent(scheme);
+                } else {
+                    result.addUnknownComponent(uri);
+                }
+                return result;
+            }
+
+            rows  JSonSchemaHelper.parseJsonSchema(component, json, false);
+
+            // is the component capable of both consumer and producer?
+            boolean canConsumeAndProduce  false;
+            if (!isComponentConsumerOnly(rows) && !isComponentProducerOnly(rows)) {
+                canConsumeAndProduce  true;
+            }
+
+            if (canConsumeAndProduce && consumerOnly) {
+                // lenient properties is not support in consumer only mode if the component can do both of them
+                lenientProperties  false;
+            } else {
+                // only enable lenient properties if we should not ignore
+                lenientProperties  !ignoreLenientProperties && isComponentLenientProperties(rows);
+            }
+            rows  JSonSchemaHelper.parseJsonSchema(properties, json, true);
+            properties  endpointProperties(uri);
+        } catch (URISyntaxException e) {
+            if (uri.startsWith({{)) {
+                // if the uri starts with a placeholder then we are also incapable of parsing it as we wasnt able to resolve the component name
+                result.addIncapable(uri);
+            } else {
+                result.addSyntaxError(e.getMessage());
+            }
+
+            return result;
+        }
+
+        // the dataformat component refers to a data format so lets add the properties for the selected
+        // data format to the list of rows
+        if (dataformat.equals(scheme)) {
+            String dfName  properties.get(name);
+            if (dfName ! null) {
+                String dfJson  jsonSchemaResolver.getDataFormatJSonSchema(dfName);
+                List<Map<String, String>> dfRows  JSonSchemaHelper.parseJsonSchema(properties, dfJson, true);
+                if (dfRows ! null && !dfRows.isEmpty()) {
+                    rows.addAll(dfRows);
+                }
+            }
+        }
+
+        for (Map.Entry<String, String> property : properties.entrySet()) {
+            String value  property.getValue();
+            String originalName  property.getKey();
+            String name  property.getKey();
+            // the name may be using an optional prefix, so lets strip that because the options
+            // in the schema are listed without the prefix
+            name  stripOptionalPrefixFromName(rows, name);
+            // the name may be using a prefix, so lets see if we can find the real property name
+            String propertyName  getPropertyNameFromNameWithPrefix(rows, name);
+            if (propertyName ! null) {
+                name  propertyName;
+            }
+
+            String prefix  getPropertyPrefix(rows, name);
+            String kind  getPropertyKind(rows, name);
+            boolean namePlaceholder  name.startsWith({{) && name.endsWith(}});
+            boolean valuePlaceholder  value.startsWith({{) || value.startsWith(${) || value.startsWith($simple{);
+            boolean lookup  value.startsWith(#) && value.length() > 1;
+            // we cannot evaluate multi values as strict as the others, as we dont know their expected types
+            boolean mulitValue  prefix ! null && originalName.startsWith(prefix) && isPropertyMultiValue(rows, name);
+
+            Map<String, String> row  getRow(rows, name);
+            if (row  null) {
+                // unknown option
+
+                // only add as error if the component is not lenient properties, or not stub component
+                // and the name is not a property placeholder for one or more values
+                if (!namePlaceholder && !stub.equals(scheme)) {
+                    if (lenientProperties) {
+                        // as if we are lenient then the option is a dynamic extra option which we cannot validate
+                        result.addLenient(name);
+                    } else {
+                        // its unknown
+                        result.addUnknown(name);
+                        if (suggestionStrategy ! null) {
+                            String[] suggestions  suggestionStrategy.suggestEndpointOptions(getNames(rows), name);
+                            if (suggestions ! null) {
+                                result.addUnknownSuggestions(name, suggestions);
+                            }
+                        }
+                    }
+                }
+            } else {
+                if (parameter.equals(kind)) {
+                    // consumer only or producer only mode for parameters
+                    if (consumerOnly) {
+                        boolean producer  isPropertyProducerOnly(rows, name);
+                        if (producer) {
+                            // the option is only for producer so you cannot use it in consumer mode
+                            result.addNotConsumerOnly(name);
+                        }
+                    } else if (producerOnly) {
+                        boolean consumer  isPropertyConsumerOnly(rows, name);
+                        if (consumer) {
+                            // the option is only for consumer so you cannot use it in producer mode
+                            result.addNotProducerOnly(name);
+                        }
+                    }
+                }
+
+                // default value
+                String defaultValue  getPropertyDefaultValue(rows, name);
+                if (defaultValue ! null) {
+                    result.addDefaultValue(name, defaultValue);
+                }
+
+                // is required but the value is empty
+                boolean required  isPropertyRequired(rows, name);
+                if (required && isEmpty(value)) {
+                    result.addRequired(name);
+                }
+
+                // is enum but the value is not within the enum range
+                // but we can only check if the value is not a placeholder
+                String enums  getPropertyEnum(rows, name);
+                if (!mulitValue && !valuePlaceholder && !lookup && enums ! null) {
+                    String[] choices  enums.split(,);
+                    boolean found  false;
+                    for (String s : choices) {
+                        if (value.equalsIgnoreCase(s)) {
+                            found  true;
+                            break;
+                        }
+                    }
+                    if (!found) {
+                        result.addInvalidEnum(name, value);
+                        result.addInvalidEnumChoices(name, choices);
+                        if (suggestionStrategy ! null) {
+                            Set<String> names  new LinkedHashSet<>();
+                            names.addAll(Arrays.asList(choices));
+                            String[] suggestions  suggestionStrategy.suggestEndpointOptions(names, value);
+                            if (suggestions ! null) {
+                                result.addInvalidEnumSuggestions(name, suggestions);
+                            }
+                        }
+
+                    }
+                }
+
+                // is reference lookup of bean (not applicable for @UriPath, enums, or multi-valued)
+                if (!mulitValue && enums  null && !path.equals(kind) && isPropertyObject(rows, name)) {
+                    // must start with # and be at least 2 characters
+                    if (!value.startsWith(#) || value.length() < 1) {
+                        result.addInvalidReference(name, value);
+                    }
+                }
+
+                // is boolean
+                if (!mulitValue && !valuePlaceholder && !lookup && isPropertyBoolean(rows, name)) {
+                    // value must be a boolean
+                    boolean bool  true.equalsIgnoreCase(value) || false.equalsIgnoreCase(value);
+                    if (!bool) {
+                        result.addInvalidBoolean(name, value);
+                    }
+                }
+
+                // is integer
+                if (!mulitValue && !valuePlaceholder && !lookup && isPropertyInteger(rows, name)) {
+                    // value must be an integer
+                    boolean valid  validateInteger(value);
+                    if (!valid) {
+                        result.addInvalidInteger(name, value);
+                    }
+                }
+
+                // is number
+                if (!mulitValue && !valuePlaceholder && !lookup && isPropertyNumber(rows, name)) {
+                    // value must be an number
+                    boolean valid  false;
+                    try {
+                        valid  !Double.valueOf(value).isNaN() || !Float.valueOf(value).isNaN();
+                    } catch (Exception e) {
+                        // ignore
+                    }
+                    if (!valid) {
+                        result.addInvalidNumber(name, value);
+                    }
+                }
+            }
+        }
+
+        // now check if all required values are there, and that a default value does not exists
+        for (Map<String, String> row : rows) {
+            String name  row.get(name);
+            boolean required  isPropertyRequired(rows, name);
+            if (required) {
+                String value  properties.get(name);
+                if (isEmpty(value)) {
+                    value  getPropertyDefaultValue(rows, name);
+                }
+                if (isEmpty(value)) {
+                    result.addRequired(name);
+                }
+            }
+        }
+
+        return result;
+    }
+
+    public Map<String, String> endpointProperties(String uri) throws URISyntaxException {
+        // need to normalize uri first
+        URI u  normalizeUri(uri);
+        String scheme  u.getScheme();
+
+        String json  jsonSchemaResolver.getComponentJSonSchema(scheme);
+        if (json  null) {
+            throw new IllegalArgumentException(Cannot find endpoint with scheme  + scheme);
+        }
+
+        // grab the syntax
+        String syntax  null;
+        String alternativeSyntax  null;
+        List<Map<String, String>> rows  JSonSchemaHelper.parseJsonSchema(component, json, false);
+        for (Map<String, String> row : rows) {
+            if (row.containsKey(syntax)) {
+                syntax  row.get(syntax);
+            }
+            if (row.containsKey(alternativeSyntax)) {
+                alternativeSyntax  row.get(alternativeSyntax);
+            }
+        }
+        if (syntax  null) {
+            throw new IllegalArgumentException(Endpoint with scheme  + scheme +  has no syntax defined in the json schema);
+        }
+
+        // only if we support alternative syntax, and the uri contains the username and password in the authority
+        // part of the uri, then we would need some special logic to capture that information and strip those
+        // details from the uri, so we can continue parsing the uri using the normal syntax
+        Map<String, String> userInfoOptions  new LinkedHashMap<String, String>();
+        if (alternativeSyntax ! null && alternativeSyntax.contains(@)) {
+            // clip the scheme from the syntax
+            alternativeSyntax  after(alternativeSyntax, :);
+            // trim so only userinfo
+            int idx  alternativeSyntax.indexOf(@);
+            String fields  alternativeSyntax.substring(0, idx);
+            String[] names  fields.split(:);
+
+            // grab authority part and grab username and/or password
+            String authority  u.getAuthority();
+            if (authority ! null && authority.contains(@)) {
+                String username  null;
+                String password  null;
+
+                // grab unserinfo part before @
+                String userInfo  authority.substring(0, authority.indexOf(@));
+                String[] parts  userInfo.split(:);
+                if (parts.length  2) {
+                    username  parts[0];
+                    password  parts[1];
+                } else {
+                    // only username
+                    username  userInfo;
+                }
+
+                // remember the username and/or password which we add later to the options
+                if (names.length  2) {
+                    userInfoOptions.put(names[0], username);
+                    if (password ! null) {
+                        // password is optional
+                        userInfoOptions.put(names[1], password);
+                    }
+                }
+            }
+        }
+
+        // clip the scheme from the syntax
+        syntax  after(syntax, :);
+        // clip the scheme from the uri
+        uri  after(uri, :);
+        String uriPath  stripQuery(uri);
+
+        // strip user info from uri path
+        if (!userInfoOptions.isEmpty()) {
+            int idx  uriPath.indexOf(@);
+            if (idx > -1) {
+                uriPath  uriPath.substring(idx + 1);
+            }
+        }
+
+        // strip double slash in the start
+        if (uriPath ! null && uriPath.startsWith(//)) {
+            uriPath  uriPath.substring(2);
+        }
+
+        // parse the syntax and find the names of each option
+        Matcher matcher  SYNTAX_PATTERN.matcher(syntax);
+        List<String> word  new ArrayList<String>();
+        while (matcher.find()) {
+            String s  matcher.group(1);
+            if (!scheme.equals(s)) {
+                word.add(s);
+            }
+        }
+        // parse the syntax and find each token between each option
+        String[] tokens  SYNTAX_PATTERN.split(syntax);
+
+        // find the position where each option start/end
+        List<String> word2  new ArrayList<String>();
+        int prev  0;
+        int prevPath  0;
+
+        // special for activemq/jms where the enum for destinationType causes a token issue as it includes a colon
+        // for temp:queue and temp:topic values
+        if (activemq.equals(scheme) || jms.equals(scheme)) {
+            if (uriPath.startsWith(temp:)) {
+                prevPath  5;
+            }
+        }
+
+        for (String token : tokens) {
+            if (token.isEmpty()) {
+                continue;
+            }
+
+            // special for some tokens where :// can be used also, eg http://foo
+            int idx  -1;
+            int len  0;
+            if (:.equals(token)) {
+                idx  uriPath.indexOf(://, prevPath);
+                len  3;
+            }
+            if (idx  -1) {
+                idx  uriPath.indexOf(token, prevPath);
+                len  token.length();
+            }
+
+            if (idx > 0) {
+                String option  uriPath.substring(prev, idx);
+                word2.add(option);
+                prev  idx + len;
+                prevPath  prev;
+            }
+        }
+        // special for last or if we did not add anyone
+        if (prev > 0 || word2.isEmpty()) {
+            String option  uriPath.substring(prev);
+            word2.add(option);
+        }
+
+        rows  JSonSchemaHelper.parseJsonSchema(properties, json, true);
+
+        boolean defaultValueAdded  false;
+
+        // now parse the uri to know which part isw what
+        Map<String, String> options  new LinkedHashMap<String, String>();
+
+        // include the username and password from the userinfo section
+        if (!userInfoOptions.isEmpty()) {
+            options.putAll(userInfoOptions);
+        }
+
+        // word contains the syntax path elements
+        Iterator<String> it  word2.iterator();
+        for (int i  0; i < word.size(); i++) {
+            String key  word.get(i);
+
+            boolean allOptions  word.size()  word2.size();
+            boolean required  isPropertyRequired(rows, key);
+            String defaultValue  getPropertyDefaultValue(rows, key);
+
+            // we have all options so no problem
+            if (allOptions) {
+                String value  it.next();
+                options.put(key, value);
+            } else {
+                // we have a little problem as we do not not have all options
+                if (!required) {
+                    String value  null;
+
+                    boolean last  i  word.size() - 1;
+                    if (last) {
+                        // if its the last value then use it instead of the default value
+                        value  it.hasNext() ? it.next() : null;
+                        if (value ! null) {
+                            options.put(key, value);
+                        } else {
+                            value  defaultValue;
+                        }
+                    }
+                    if (value ! null) {
+                        options.put(key, value);
+                        defaultValueAdded  true;
+                    }
+                } else {
+                    String value  it.hasNext() ? it.next() : null;
+                    if (value ! null) {
+                        options.put(key, value);
+                    }
+                }
+            }
+        }
+
+        Map<String, String> answer  new LinkedHashMap<String, String>();
+
+        // remove all options which are using default values and are not required
+        for (Map.Entry<String, String> entry : options.entrySet()) {
+            String key  entry.getKey();
+            String value  entry.getValue();
+
+            if (defaultValueAdded) {
+                boolean required  isPropertyRequired(rows, key);
+                String defaultValue  getPropertyDefaultValue(rows, key);
+
+                if (!required && defaultValue ! null) {
+                    if (defaultValue.equals(value)) {
+                        continue;
+                    }
+                }
+            }
+
+            // we should keep this in the answer
+            answer.put(key, value);
+        }
+
+        // now parse the uri parameters
+        Map<String, Object> parameters  URISupport.parseParameters(u);
+
+        // and covert the values to String so its JMX friendly
+        while (!parameters.isEmpty()) {
+            Map.Entry<String, Object> entry  parameters.entrySet().iterator().next();
+            String key  entry.getKey();
+            String value  entry.getValue() ! null ? entry.getValue().toString() : ;
+
+            boolean multiValued  isPropertyMultiValue(rows, key);
+            if (multiValued) {
+                String prefix  getPropertyPrefix(rows, key);
+                // extra all the multi valued options
+                Map<String, Object> values  URISupport.extractProperties(parameters, prefix);
+                // build a string with the extra multi valued options with the prefix and & as separator
+                CollectionStringBuffer csb  new CollectionStringBuffer(&);
+                for (Map.Entry<String, Object> multi : values.entrySet()) {
+                    String line  prefix + multi.getKey() +  + (multi.getValue() ! null ? multi.getValue().toString() : );
+                    csb.append(line);
+                }
+                // append the extra multi-values to the existing (which contains the first multi value)
+                if (!csb.isEmpty()) {
+                    value  value + & + csb.toString();
+                }
+            }
+
+            answer.put(key, value);
+            // remove the parameter as we run in a while loop until no more parameters
+            parameters.remove(key);
+        }
+
+        return answer;
+    }
+
+    public Map<String, String> endpointLenientProperties(String uri) throws URISyntaxException {
+        // need to normalize uri first
+
+        // parse the uri
+        URI u  normalizeUri(uri);
+        String scheme  u.getScheme();
+
+        String json  jsonSchemaResolver.getComponentJSonSchema(scheme);
+        if (json  null) {
+            throw new IllegalArgumentException(Cannot find endpoint with scheme  + scheme);
+        }
+
+        List<Map<String, String>> rows  JSonSchemaHelper.parseJsonSchema(properties, json, true);
+
+        // now parse the uri parameters
+        Map<String, Object> parameters  URISupport.parseParameters(u);
+
+        // all the known options
+        Set<String> names  getNames(rows);
+
+        Map<String, String> answer  new LinkedHashMap<>();
+
+        // and covert the values to String so its JMX friendly
+        parameters.forEach((k, v) -> {
+            String key  k;
+            String value  v ! null ? v.toString() : ;
+
+            // is the key a prefix property
+            int dot  key.indexOf(.);
+            if (dot ! -1) {
+                String prefix  key.substring(0, dot + 1); // include dot in prefix
+                String option  getPropertyNameFromNameWithPrefix(rows, prefix);
+                if (option  null || !isPropertyMultiValue(rows, option)) {
+                    answer.put(key, value);
+                }
+            } else if (!names.contains(key)) {
+                answer.put(key, value);
+            }
+        });
+
+        return answer;
+    }
+
+    public String endpointComponentName(String uri) {
+        if (uri ! null) {
+            int idx  uri.indexOf(:);
+            if (idx > 0) {
+                return uri.substring(0, idx);
+            }
+        }
+        return null;
+    }
+
+    public String asEndpointUri(String scheme, String json, boolean encode) throws URISyntaxException {
+        return doAsEndpointUri(scheme, json, &, encode);
+    }
+
+    public String asEndpointUriXml(String scheme, String json, boolean encode) throws URISyntaxException {
+        return doAsEndpointUri(scheme, json, &amp;, encode);
+    }
+
+    private String doAsEndpointUri(String scheme, String json, String ampersand, boolean encode) throws URISyntaxException {
+        List<Map<String, String>> rows  JSonSchemaHelper.parseJsonSchema(properties, json, true);
+
+        Map<String, String> copy  new HashMap<String, String>();
+        for (Map<String, String> row : rows) {
+            String name  row.get(name);
+            String required  row.get(required);
+            String value  row.get(value);
+            String defaultValue  row.get(defaultValue);
+
+            // only add if either required, or the value is ! default value
+            String valueToAdd  null;
+            if (true.equals(required)) {
+                valueToAdd  value ! null ? value : defaultValue;
+                if (valueToAdd  null) {
+                    valueToAdd  ;
+                }
+            } else {
+                // if we have a value and no default then add it
+                if (value ! null && defaultValue  null) {
+                    valueToAdd  value;
+                }
+                // otherwise only add if the value is ! default value
+                if (value ! null && defaultValue ! null && !value.equals(defaultValue)) {
+                    valueToAdd  value;
+                }
+            }
+
+            if (valueToAdd ! null) {
+                copy.put(name, valueToAdd);
+            }
+        }
+
+        return doAsEndpointUri(scheme, copy, ampersand, encode);
+    }
+
+    public String asEndpointUri(String scheme, Map<String, String> properties, boolean encode) throws URISyntaxException {
+        return doAsEndpointUri(scheme, properties, &, encode);
+    }
+
+    public String asEndpointUriXml(String scheme, Map<String, String> properties, boolean encode) throws URISyntaxException {
+        return doAsEndpointUri(scheme, properties, &amp;, encode);
+    }
+
+    String doAsEndpointUri(String scheme, Map<String, String> properties, String ampersand, boolean encode) throws URISyntaxException {
+        String json  jsonSchemaResolver.getComponentJSonSchema(scheme);
+        if (json  null) {
+            throw new IllegalArgumentException(Cannot find endpoint with scheme  + scheme);
+        }
+
+        // grab the syntax
+        String syntax  null;
+        List<Map<String, String>> rows  JSonSchemaHelper.parseJsonSchema(component, json, false);
+        for (Map<String, String> row : rows) {
+            if (row.containsKey(syntax)) {
+                syntax  row.get(syntax);
+                break;
+            }
+        }
+        if (syntax  null) {
+            throw new IllegalArgumentException(Endpoint with scheme  + scheme +  has no syntax defined in the json schema);
+        }
+
+        // do any properties filtering which can be needed for some special components
+        properties  filterProperties(scheme, properties);
+
+        rows  JSonSchemaHelper.parseJsonSchema(properties, json, true);
+
+        // clip the scheme from the syntax
+        syntax  after(syntax, :);
+
+        String originalSyntax  syntax;
+
+        // build at first according to syntax (use a tree map as we want the uri options sorted)
+        Map<String, String> copy  new TreeMap<String, String>();
+        for (Map.Entry<String, String> entry : properties.entrySet()) {
+            String key  entry.getKey();
+            String value  entry.getValue() ! null ? entry.getValue() : ;
+            if (syntax ! null && syntax.contains(key)) {
+                syntax  syntax.replace(key, value);
+            } else {
+                copy.put(key, value);
+            }
+        }
+
+        // do we have all the options the original syntax needs (easy way)
+        String[] keys  syntaxKeys(originalSyntax);
+        boolean hasAllKeys  properties.keySet().containsAll(Arrays.asList(keys));
+
+        // build endpoint uri
+        StringBuilder sb  new StringBuilder();
+        sb.append(scheme);
+        sb.append(:);
+
+        if (hasAllKeys) {
+            // we have all the keys for the syntax so we can build the uri the easy way
+            sb.append(syntax);
+
+            if (!copy.isEmpty()) {
+                boolean hasQuestionmark  sb.toString().contains(?);
+                // the last option may already contain a ? char, if so we should use & instead of ?
+                sb.append(hasQuestionmark ? ampersand : ?);
+                String query  createQueryString(copy, ampersand, encode);
+                sb.append(query);
+            }
+        } else {
+            // TODO: revisit this and see if we can do this in another way
+            // oh darn some options is missing, so we need a complex way of building the uri
+
+            // the tokens between the options in the path
+            String[] tokens  syntax.split(\\w+);
+
+            // parse the syntax into each options
+            Matcher matcher  SYNTAX_PATTERN.matcher(originalSyntax);
+            List<String> options  new ArrayList<String>();
+            while (matcher.find()) {
+                String s  matcher.group(1);
+                options.add(s);
+            }
+
+            // need to preserve {{ and }} from the syntax
+            // (we need to use words only as its provisional placeholders)
+            syntax  syntax.replaceAll(\\{\\{, BEGINCAMELPLACEHOLDER);
+            syntax  syntax.replaceAll(\\}\\}, ENDCAMELPLACEHOLDER);
+
+            // parse the syntax into each options
+            Matcher matcher2  SYNTAX_PATTERN.matcher(syntax);
+            List<String> options2  new ArrayList<String>();
+            while (matcher2.find()) {
+                String s  matcher2.group(1);
+                s  s.replaceAll(BEGINCAMELPLACEHOLDER, \\{\\{);
+                s  s.replaceAll(ENDCAMELPLACEHOLDER, \\}\\});
+                options2.add(s);
+            }
+
+            // build the endpoint
+            int range  0;
+            boolean first  true;
+            boolean hasQuestionmark  false;
+            for (int i  0; i < options.size(); i++) {
+                String key  options.get(i);
+                String key2  options2.get(i);
+                String token  null;
+                if (tokens.length > i) {
+                    token  tokens[i];
+                }
+
+                boolean contains  properties.containsKey(key);
+                if (!contains) {
+                    // if the key are similar we have no explicit value and can try to find a default value if the option is required
+                    if (isPropertyRequired(rows, key)) {
+                        String value  getPropertyDefaultValue(rows, key);
+                        if (value ! null) {
+                            properties.put(key, value);
+                            key2  value;
+                        }
+                    }
+                }
+
+                // was the option provided?
+                if (properties.containsKey(key)) {
+                    if (!first && token ! null) {
+                        sb.append(token);
+                    }
+                    hasQuestionmark | key.contains(?) || (token ! null && token.contains(?));
+                    sb.append(key2);
+                    first  false;
+                }
+                range++;
+            }
+            // append any extra options that was in surplus for the last
+            while (range < options2.size()) {
+                String token  null;
+                if (tokens.length > range) {
+                    token  tokens[range];
+                }
+                String key2  options2.get(range);
+                sb.append(token);
+                sb.append(key2);
+                hasQuestionmark | key2.contains(?) || (token ! null && token.contains(?));
+                range++;
+            }
+
+
+            if (!copy.isEmpty()) {
+                // the last option may already contain a ? char, if so we should use & instead of ?
+                sb.append(hasQuestionmark ? ampersand : ?);
+                String query  createQueryString(copy, ampersand, encode);
+                sb.append(query);
+            }
+        }
+
+        return sb.toString();
+    }
+
+    @Deprecated
+    private static String[] syntaxTokens(String syntax) {
+        // build tokens between the words
+        List<String> tokens  new ArrayList<>();
+        // preserve backwards behavior which had an empty token first
+        tokens.add();
+
+        String current  ;
+        for (int i  0; i < syntax.length(); i++) {
+            char ch  syntax.charAt(i);
+            if (Character.isLetterOrDigit(ch)) {
+                // reset for new current tokens
+                if (current.length() > 0) {
+                    tokens.add(current);
+                    current  ;
+                }
+            } else {
+                current + ch;
+            }
+        }
+        // anything left over?
+        if (current.length() > 0) {
+            tokens.add(current);
+        }
+
+        return tokens.toArray(new String[tokens.size()]);
+    }
+
+    private static String[] syntaxKeys(String syntax) {
+        // build tokens between the separators
+        List<String> tokens  new ArrayList<>();
+
+        String current  ;
+        for (int i  0; i < syntax.length(); i++) {
+            char ch  syntax.charAt(i);
+            if (Character.isLetterOrDigit(ch)) {
+                current + ch;
+            } else {
+                // reset for new current tokens
+                if (current.length() > 0) {
+                    tokens.add(current);
+                    current  ;
+                }
+            }
+        }
+        // anything left over?
+        if (current.length() > 0) {
+            tokens.add(current);
+        }
+
+        return tokens.toArray(new String[tokens.size()]);
+    }
+
+    public SimpleValidationResult validateSimpleExpression(String simple) {
+        return doValidateSimple(null, simple, false);
+    }
+
+    public SimpleValidationResult validateSimpleExpression(ClassLoader classLoader, String simple) {
+        return doValidateSimple(classLoader, simple, false);
+    }
+
+    public SimpleValidationResult validateSimplePredicate(String simple) {
+        return doValidateSimple(null, simple, true);
+    }
+
+    public SimpleValidationResult validateSimplePredicate(ClassLoader classLoader, String simple) {
+        return doValidateSimple(classLoader, simple, true);
+    }
+
+    private SimpleValidationResult doValidateSimple(ClassLoader classLoader, String simple, boolean predicate) {
+        if (classLoader  null) {
+            classLoader  getClass().getClassLoader();
+        }
+
+        // if there are {{ }}} property placeholders then we need to resolve them to something else
+        // as the simple parse cannot resolve them before parsing as we dont run the actual Camel application
+        // with property placeholders setup so we need to dummy this by replace the {{ }} to something else
+        // therefore we use an more unlikely character: {{XXX}} to ~^XXX^~
+        String resolved  simple.replaceAll(\\{\\{(.+)\\}\\}, ~^$1^~);
+
+        SimpleValidationResult answer  new SimpleValidationResult(simple);
+
+        Object instance  null;
+        Class clazz  null;
+        try {
+            clazz  classLoader.loadClass(org.apache.camel.language.simple.SimpleLanguage);
+            instance  clazz.newInstance();
+        } catch (Exception e) {
+            // ignore
+        }
+
+        if (clazz ! null && instance ! null) {
+            Throwable cause  null;
+            try {
+                if (predicate) {
+                    instance.getClass().getMethod(createPredicate, String.class).invoke(instance, resolved);
+                } else {
+                    instance.getClass().getMethod(createExpression, String.class).invoke(instance, resolved);
+                }
+            } catch (InvocationTargetException e) {
+                cause  e.getTargetException();
+            } catch (Exception e) {
+                cause  e;
+            }
+
+            if (cause ! null) {
+
+                // reverse ~^XXX^~ back to {{XXX}}
+                String errMsg  cause.getMessage();
+                errMsg  errMsg.replaceAll(\\~\\^(.+)\\^\\~, {{$1}});
+
+                answer.setError(errMsg);
+
+                // is it simple parser exception then we can grab the index where the problem is
+                if (cause.getClass().getName().equals(org.apache.camel.language.simple.types.SimpleIllegalSyntaxException)
+                    || cause.getClass().getName().equals(org.apache.camel.language.simple.types.SimpleParserException)) {
+                    try {
+                        // we need to grab the index field from those simple parser exceptions
+                        Method method  cause.getClass().getMethod(getIndex);
+                        Object result  method.invoke(cause);
+                        if (result ! null) {
+                            int index  (int) result;
+                            answer.setIndex(index);
+                        }
+                    } catch (Throwable i) {
+                        // ignore
+                    }
+                }
+
+                // we need to grab the short message field from this simple syntax exception
+                if (cause.getClass().getName().equals(org.apache.camel.language.simple.types.SimpleIllegalSyntaxException)) {
+                    try {
+                        Method method  cause.getClass().getMethod(getShortMessage);
+                        Object result  method.invoke(cause);
+                        if (result ! null) {
+                            String msg  (String) result;
+                            answer.setShortError(msg);
+                        }
+                    } catch (Throwable i) {
+                        // ignore
+                    }
+
+                    if (answer.getShortError()  null) {
+                        // fallback and try to make existing message short instead
+                        String msg  answer.getError();
+                        // grab everything before  at location  which would be regarded as the short message
+                        int idx  msg.indexOf( at location );
+                        if (idx > 0) {
+                            msg  msg.substring(0, idx);
+                            answer.setShortError(msg);
+                        }
+                    }
+                }
+            }
+        }
+
+        return answer;
+    }
+
+    public LanguageValidationResult validateLanguagePredicate(ClassLoader classLoader, String language, String text) {
+        return doValidateLanguage(classLoader, language, text, true);
+    }
+
+    public LanguageValidationResult validateLanguageExpression(ClassLoader classLoader, String language, String text) {
+        return doValidateLanguage(classLoader, language, text, false);
+    }
+
+    private LanguageValidationResult doValidateLanguage(ClassLoader classLoader, String language, String text, boolean predicate) {
+        if (classLoader  null) {
+            classLoader  getClass().getClassLoader();
+        }
+
+        SimpleValidationResult answer  new SimpleValidationResult(text);
+
+        String json  jsonSchemaResolver.getLanguageJSonSchema(language);
+        if (json  null) {
+            answer.setError(Unknown language  + language);
+            return answer;
+        }
+
+        List<Map<String, String>> rows  JSonSchemaHelper.parseJsonSchema(language, json, false);
+        String className  null;
+        for (Map<String, String> row : rows) {
+            if (row.containsKey(javaType)) {
+                className  row.get(javaType);
+            }
+        }
+
+        if (className  null) {
+            answer.setError(Cannot find javaType for language  + language);
+            return answer;
+        }
+
+        Object instance  null;
+        Class clazz  null;
+        try {
+            clazz  classLoader.loadClass(className);
+            instance  clazz.newInstance();
+        } catch (Exception e) {
+            // ignore
+        }
+
+        if (clazz ! null && instance ! null) {
+            Throwable cause  null;
+            try {
+                if (predicate) {
+                    instance.getClass().getMethod(createPredicate, String.class).invoke(instance, text);
+                } else {
+                    instance.getClass().getMethod(createExpression, String.class).invoke(instance, text);
+                }
+            } catch (InvocationTargetException e) {
+                cause  e.getTargetException();
+            } catch (Exception e) {
+                cause  e;
+            }
+
+            if (cause ! null) {
+                answer.setError(cause.getMessage());
+            }
+        }
+
+        return answer;
+    }
+
+    /**
+     * Special logic for log endpoints to deal when showAlltrue
+     */
+    private Map<String, String> filterProperties(String scheme, Map<String, String> options) {
+        if (log.equals(scheme)) {
+            String showAll  options.get(showAll);
+            if (true.equals(showAll)) {
+                Map<String, String> filtered  new LinkedHashMap<String, String>();
+                // remove all the other showXXX options when showAlltrue
+                for (Map.Entry<String, String> entry : options.entrySet()) {
+                    String key  entry.getKey();
+                    boolean skip  key.startsWith(show) && !key.equals(showAll);
+                    if (!skip) {
+                        filtered.put(key, entry.getValue());
+                    }
+                }
+                return filtered;
+            }
+        }
+        // use as-is
+        return options;
+    }
+
+    private static boolean validateInteger(String value) {
+        boolean valid  false;
+        try {
+            valid  Integer.valueOf(value) ! null;
+        } catch (Exception e) {
+            // ignore
+        }
+        if (!valid) {
+            // it may be a time pattern, such as 5s for 5 seconds  5000
+            try {
+                TimePatternConverter.toMilliSeconds(value);
+                valid  true;
+            } catch (Exception e) {
+                // ignore
+            }
+        }
+        return valid;
+    }
+
+    // CHECKSTYLE:ON
+
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/CamelContextJSonSchemaResolver.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/CamelContextJSonSchemaResolver.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/CamelContextJSonSchemaResolver.java
new file mode 100644
index 0000000..d3a448c
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/CamelContextJSonSchemaResolver.java
@@ -0,0 +1,80 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+import java.io.IOException;
+
+import org.apache.camel.CamelContext;
+
+/**
+ * Uses runtime {@link CamelContext} to resolve the JSon schema files.
+ */
+public class CamelContextJSonSchemaResolver implements JSonSchemaResolver {
+
+    private final CamelContext camelContext;
+
+    public CamelContextJSonSchemaResolver(CamelContext camelContext) {
+        this.camelContext  camelContext;
+    }
+
+    @Override
+    public String getComponentJSonSchema(String name) {
+        try {
+            return camelContext.getComponentParameterJsonSchema(name);
+        } catch (IOException e) {
+            // ignore
+        }
+        return null;
+    }
+
+    @Override
+    public String getDataFormatJSonSchema(String name) {
+        try {
+            return camelContext.getDataFormatParameterJsonSchema(name);
+        } catch (IOException e) {
+            // ignore
+        }
+        return null;
+    }
+
+    @Override
+    public String getLanguageJSonSchema(String name) {
+        try {
+            return camelContext.getLanguageParameterJsonSchema(name);
+        } catch (IOException e) {
+            // ignore
+        }
+        return null;
+    }
+
+    @Override
+    public String getOtherJSonSchema(String name) {
+        // not supported
+        return null;
+    }
+
+    @Override
+    public String getModelJSonSchema(String name) {
+        try {
+            return camelContext.getEipParameterJsonSchema(name);
+        } catch (IOException e) {
+            // ignore
+        }
+        return null;
+    }
+
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/CatalogHelper.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/CatalogHelper.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/CatalogHelper.java
new file mode 100644
index 0000000..1b224df
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/CatalogHelper.java
@@ -0,0 +1,179 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.LineNumberReader;
+import java.util.List;
+
+public final class CatalogHelper {
+
+    private CatalogHelper() {
+    }
+
+    /**
+     * Loads the entire stream into memory as a String and returns it.
+     * <p/>
+     * <b>Notice:</b> This implementation appends a <tt>\n</tt> as line
+     * terminator at the of the text.
+     * <p/>
+     * Warning, dont use for crazy big streams :)
+     */
+    public static void loadLines(InputStream in, List<String> lines) throws IOException {
+        try (final InputStreamReader isr  new InputStreamReader(in);
+            final BufferedReader reader  new LineNumberReader(isr)) {
+            String line;
+            while ((line  reader.readLine()) ! null) {
+                lines.add(line);
+            }
+        }
+    }
+
+    /**
+     * Loads the entire stream into memory as a String and returns it.
+     * <p/>
+     * <b>Notice:</b> This implementation appends a <tt>\n</tt> as line
+     * terminator at the of the text.
+     * <p/>
+     * Warning, dont use for crazy big streams :)
+     */
+    public static String loadText(InputStream in) throws IOException {
+        StringBuilder builder  new StringBuilder();
+        try (final InputStreamReader isr  new InputStreamReader(in);
+            final BufferedReader reader  new LineNumberReader(isr)) {
+            String line;
+            while ((line  reader.readLine()) ! null) {
+                builder.append(line);
+                builder.append(\n);
+            }
+            return builder.toString();
+        }
+    }
+
+    /**
+     * Matches the name with the pattern.
+     *
+     * @param name  the name
+     * @param pattern the pattern
+     * @return <tt>true</tt> if matched, or <tt>false</tt> if not
+     */
+    public static boolean matchWildcard(String name, String pattern) {
+        // we have wildcard support in that hence you can match with: file* to match any file endpoints
+        if (pattern.endsWith(*) && name.startsWith(pattern.substring(0, pattern.length() - 1))) {
+            return true;
+        }
+        return false;
+    }
+
+    /**
+     * Returns the string after the given token
+     *
+     * @param text  the text
+     * @param after the token
+     * @return the text after the token, or <tt>null</tt> if text does not contain the token
+     */
+    public static String after(String text, String after) {
+        if (!text.contains(after)) {
+            return null;
+        }
+        return text.substring(text.indexOf(after) + after.length());
+    }
+
+    /**
+     * Returns the string before the given token
+     *
+     * @param text  the text
+     * @param before the token
+     * @return the text before the token, or <tt>null</tt> if text does not contain the token
+     */
+    public static String before(String text, String before) {
+        if (!text.contains(before)) {
+            return null;
+        }
+        return text.substring(0, text.indexOf(before));
+    }
+
+    /**
+     * Returns the string between the given tokens
+     *
+     * @param text  the text
+     * @param after the before token
+     * @param before the after token
+     * @return the text between the tokens, or <tt>null</tt> if text does not contain the tokens
+     */
+    public static String between(String text, String after, String before) {
+        text  after(text, after);
+        if (text  null) {
+            return null;
+        }
+        return before(text, before);
+    }
+
+    /**
+     * Tests whether the value is <tt>null</tt> or an empty string.
+     *
+     * @param value  the value, if its a String it will be tested for text length as well
+     * @return true if empty
+     */
+    public static boolean isEmpty(Object value) {
+        return !isNotEmpty(value);
+    }
+
+    /**
+     * Tests whether the value is <b>not</b> <tt>null</tt> or an empty string.
+     *
+     * @param value  the value, if its a String it will be tested for text length as well
+     * @return true if <b>not</b> empty
+     */
+    public static boolean isNotEmpty(Object value) {
+        if (value  null) {
+            return false;
+        } else if (value instanceof String) {
+            String text  (String) value;
+            return text.trim().length() > 0;
+        } else {
+            return true;
+        }
+    }
+
+    /**
+     * Removes all leading and ending quotes (single and double) from the string
+     *
+     * @param s  the string
+     * @return the string without leading and ending quotes (single and double)
+     */
+    public static String removeLeadingAndEndingQuotes(String s) {
+        if (isEmpty(s)) {
+            return s;
+        }
+
+        String copy  s.trim();
+        if (copy.startsWith() && copy.endsWith()) {
+            return copy.substring(1, copy.length() - 1);
+        }
+        if (copy.startsWith(\) && copy.endsWith(\)) {
+            return copy.substring(1, copy.length() - 1);
+        }
+
+        // no quotes, so return as-is
+        return s;
+    }
+
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/CollectionStringBuffer.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/CollectionStringBuffer.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/CollectionStringBuffer.java
new file mode 100644
index 0000000..f6484b8
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/CollectionStringBuffer.java
@@ -0,0 +1,57 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+public class CollectionStringBuffer {
+    private final StringBuilder buffer  new StringBuilder();
+    private String separator;
+    private boolean first  true;
+
+    public CollectionStringBuffer() {
+        this(, );
+    }
+
+    public CollectionStringBuffer(String separator) {
+        this.separator  separator;
+    }
+
+    @Override
+    public String toString() {
+        return buffer.toString();
+    }
+
+    public void append(Object value) {
+        if (first) {
+            first  false;
+        } else {
+            buffer.append(separator);
+        }
+        buffer.append(value);
+    }
+
+    public String getSeparator() {
+        return separator;
+    }
+
+    public void setSeparator(String separator) {
+        this.separator  separator;
+    }
+
+    public boolean isEmpty() {
+        return first;
+    }
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/DefaultRuntimeCamelCatalog.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/DefaultRuntimeCamelCatalog.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/DefaultRuntimeCamelCatalog.java
new file mode 100644
index 0000000..7648e64
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/DefaultRuntimeCamelCatalog.java
@@ -0,0 +1,136 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+import java.util.HashMap;
+import java.util.Map;
+
+import org.apache.camel.CamelContext;
+
+/**
+ * Default {@link RuntimeCamelCatalog}.
+ */
+public class DefaultRuntimeCamelCatalog extends AbstractCamelCatalog implements RuntimeCamelCatalog {
+
+    // cache of operation -> result
+    private final Map<String, Object> cache  new HashMap<String, Object>();
+    private boolean caching;
+
+    /**
+     * Creates the {@link RuntimeCamelCatalog} without caching enabled.
+     *
+     * @param camelContext  the camel context
+     */
+    public DefaultRuntimeCamelCatalog(CamelContext camelContext) {
+        this(camelContext, false);
+    }
+
+    /**
+     * Creates the {@link RuntimeCamelCatalog}
+     *
+     * @param camelContext  the camel context
+     * @param caching  whether to use cache
+     */
+    public DefaultRuntimeCamelCatalog(CamelContext camelContext, boolean caching) {
+        this.caching  caching;
+        setJSonSchemaResolver(new CamelContextJSonSchemaResolver(camelContext));
+    }
+
+    @Override
+    public void start() throws Exception {
+        // noop
+    }
+
+    @Override
+    public void stop() throws Exception {
+        cache.clear();
+    }
+
+    @Override
+    public String modelJSonSchema(String name) {
+        String answer  null;
+        if (caching) {
+            answer  (String) cache.get(model- + name);
+        }
+
+        if (answer  null) {
+            answer  getJSonSchemaResolver().getModelJSonSchema(name);
+            if (caching) {
+                cache.put(model- + name, answer);
+            }
+        }
+
+        return answer;
+    }
+
+    @Override
+    public String componentJSonSchema(String name) {
+        String answer  null;
+        if (caching) {
+            answer  (String) cache.get(component- + name);
+        }
+
+        if (answer  null) {
+            answer  getJSonSchemaResolver().getComponentJSonSchema(name);
+            if (caching) {
+                cache.put(component- + name, answer);
+            }
+        }
+
+        return answer;
+    }
+
+    @Override
+    public String dataFormatJSonSchema(String name) {
+        String answer  null;
+        if (caching) {
+            answer  (String) cache.get(dataformat- + name);
+        }
+
+        if (answer  null) {
+            answer  getJSonSchemaResolver().getDataFormatJSonSchema(name);
+            if (caching) {
+                cache.put(dataformat- + name, answer);
+            }
+        }
+
+        return answer;
+    }
+
+    @Override
+    public String languageJSonSchema(String name) {
+        // if we try to look method then its in the bean.json file
+        if (method.equals(name)) {
+            name  bean;
+        }
+
+        String answer  null;
+        if (caching) {
+            answer  (String) cache.get(language- + name);
+        }
+
+        if (answer  null) {
+            answer  getJSonSchemaResolver().getLanguageJSonSchema(name);
+            if (caching) {
+                cache.put(language- + name, answer);
+            }
+        }
+
+        return answer;
+    }
+
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/runtimecatalog/EndpointValidationResult.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/runtimecatalog/EndpointValidationResult.java b/camel-core/src/main/java/org/apache/camel/runtimecatalog/EndpointValidationResult.java
new file mode 100644
index 0000000..7d1c657
--- /dev/null
+++ b/camel-core/src/main/java/org/apache/camel/runtimecatalog/EndpointValidationResult.java
@@ -0,0 +1,451 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.runtimecatalog;
+
+import java.io.Serializable;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.LinkedHashMap;
+import java.util.LinkedHashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+
+import static org.apache.camel.runtimecatalog.URISupport.isEmpty;
+
+/**
+ * Details result of validating endpoint uri.
+ */
+public class EndpointValidationResult implements Serializable {
+
+    private final String uri;
+    private int errors;
+
+    // general
+    private String syntaxError;
+    private String unknownComponent;
+    private String incapable;
+
+    // options
+    private Set<String> unknown;
+    private Map<String, String[]> unknownSuggestions;
+    private Set<String> lenient;
+    private Set<String> notConsumerOnly;
+    private Set<String> notProducerOnly;
+    private Set<String> required;
+    private Map<String, String> invalidEnum;
+    private Map<String, String[]> invalidEnumChoices;
+    private Map<String, String[]> invalidEnumSuggestions;
+    private Map<String, String> invalidReference;
+    private Map<String, String> invalidBoolean;
+    private Map<String, String> invalidInteger;
+    private Map<String, String> invalidNumber;
+    private Map<String, String> defaultValues;
+
+    public EndpointValidationResult() {
+        this(null);
+    }
+
+    public EndpointValidationResult(String uri) {
+        this.uri  uri;
+    }
+
+    public String getUri() {
+        return uri;
+    }
+
+    public boolean hasErrors() {
+        return errors > 0;
+    }
+
+    public int getNumberOfErrors() {
+        return errors;
+    }
+
+    public boolean isSuccess() {
+        boolean ok  syntaxError  null && unknownComponent  null && incapable  null
+                && unknown  null && required  null;
+        if (ok) {
+            ok  notConsumerOnly  null && notProducerOnly  null;
+        }
+        if (ok) {
+            ok  invalidEnum  null && invalidEnumChoices  null && invalidReference  null
+                && invalidBoolean  null && invalidInteger  null && invalidNumber  null;
+        }
+        return ok;
+    }
+
+    public void addSyntaxError(String syntaxError) {
+        this.syntaxError  syntaxError;
+        errors++;
+    }
+
+    public void addIncapable(String uri) {
+        this.incapable  uri;
+        errors++;
+    }
+
+    public void addUnknownComponent(String name) {
+        this.unknownComponent  name;
+        errors++;
+    }
+
+    public void addUnknown(String name) {
+        if (unknown  null) {
+            unknown  new LinkedHashSet<String>();
+        }
+        if (!unknown.contains(name)) {
+            unknown.add(name);
+            errors++;
+        }
+    }
+
+    public void addUnknownSuggestions(String name, String[] suggestions) {
+        if (unknownSuggestions  null) {
+            unknownSuggestions  new LinkedHashMap<String, String[]>();
+        }
+        unknownSuggestions.put(name, suggestions);
+    }
+
+    public void addLenient(String name) {
+        if (lenient  null) {
+            lenient  new LinkedHashSet<String>();
+        }
+        if (!lenient.contains(name)) {
+            lenient.add(name);
+        }
+    }
+
+    public void addRequired(String name) {
+        if (required  null) {
+            required  new LinkedHashSet<String>();
+        }
+        if (!required.contains(name)) {
+            required.add(name);
+            errors++;
+        }
+    }
+
+    public void addInvalidEnum(String name, String value) {
+        if (invalidEnum  null) {
+            invalidEnum  new LinkedHashMap<String, String>();
+        }
+        if (!invalidEnum.containsKey(name)) {
+            invalidEnum.put(name, value);
+            errors++;
+        }
+    }
+
+    public void addInvalidEnumChoices(String name, String[] choices) {
+        if (invalidEnumChoices  null) {
+            invalidEnumChoices  new LinkedHashMap<String, String[]>();
+        }
+        invalidEnumChoices.put(name, choices);
+    }
+
+    public void addInvalidEnumSuggestions(String name, String[] suggestions) {
+        if (invalidEnumSuggestions  null) {
+            invalidEnumSuggestions  new LinkedHashMap<String, String[]>();
+        }
+        invalidEnumSuggestions.put(name, suggestions);
+    }
+
+    public void addInvalidReference(String name, String value) {
+        if (invalidReference  null) {
+            invalidReference  new LinkedHashMap<String, String>();
+        }
+        if (!invalidReference.containsKey(name)) {
+            invalidReference.put(name, value);
+            errors++;
+        }
+    }
+
+    public void addInvalidBoolean(String name, String value) {
+        if (invalidBoolean  null) {
+            invalidBoolean  new LinkedHashMap<String, String>();
+        }
+        if (!invalidBoolean.containsKey(name)) {
+            invalidBoolean.put(name, value);
+            errors++;
+        }
+    }
+
+    public void addInvalidInteger(String name, String value) {
+        if (invalidInteger  null) {
+            invalidInteger  new LinkedHashMap<String, String>();
+        }
+        if (!invalidInteger.containsKey(name)) {
+            invalidInteger.put(name, value);
+            errors++;
+        }
+    }
+
+    public void addInvalidNumber(String name, String value) {
+        if (invalidNumber  null) {
+            invalidNumber  new LinkedHashMap<String, String>();
+        }
+        if (!invalidNumber.containsKey(name)) {
+            invalidNumber.put(name, value);
+            errors++;
+        }
+    }
+
+    public void addDefaultValue(String name, String value)  {
+        if (defaultValues  null) {
+            defaultValues  new LinkedHashMap<String, String>();
+        }
+        defaultValues.put(name, value);
+    }
+
+    public void addNotConsumerOnly(String name) {
+        if (notConsumerOnly  null) {
+            notConsumerOnly  new LinkedHashSet<String>();
+        }
+        if (!notConsumerOnly.contains(name)) {
+            notConsumerOnly.add(name);
+            errors++;
+        }
+    }
+
+    public void addNotProducerOnly(String name) {
+        if (notProducerOnly  null) {
+            notProducerOnly  new LinkedHashSet<String>();
+        }
+        if (!notProducerOnly.contains(name)) {
+            notProducerOnly.add(name);
+            errors++;
+        }
+    }
+
+    public String getSyntaxError() {
+        return syntaxError;
+    }
+
+    public String getIncapable() {
+        return incapable;
+    }
+
+    public Set<String> getUnknown() {
+        return unknown;
+    }
+
+    public Set<String> getLenient() {
+        return lenient;
+    }
+
+    public Map<String, String[]> getUnknownSuggestions() {
+        return unknownSuggestions;
+    }
+
+    public String getUnknownComponent() {
+        return unknownComponent;
+    }
+
+    public Set<String> getRequired() {
+        return required;
+    }
+
+    public Map<String, String> getInvalidEnum() {
+        return invalidEnum;
+    }
+
+    public Map<String, String[]> getInvalidEnumChoices() {
+        return invalidEnumChoices;
+    }
+
+    public List<String> getEnumChoices(String optionName) {
+        if (invalidEnumChoices ! null) {
+            String[] enums  invalidEnumChoices.get(optionName);
+            if (enums ! null) {
+                return Arrays.asList(enums);
+            }
+        }
+
+        return Collections.emptyList();
+    }
+
+    public Map<String, String> getInvalidReference() {
+        return invalidReference;
+    }
+
+    public Map<String, String> getInvalidBoolean() {
+        return invalidBoolean;
+    }
+
+    public Map<String, String> getInvalidInteger() {
+        return invalidInteger;
+    }
+
+    public Map<String, String> getInvalidNumber() {
+        return invalidNumber;
+    }
+
+    public Map<String, String> getDefaultValues() {
+        return defaultValues;
+    }
+
+    public Set<String> getNotConsumerOnly() {
+        return notConsumerOnly;
+    }
+
+    public Set<String> getNotProducerOnly() {
+        return notProducerOnly;
+    }
+
+    /**
+     * A human readable summary of the validation errors.
+     *
+     * @param includeHeader whether to include a header
+     * @return the summary, or <tt>null</tt> if no validation errors
+     */
+    public String summaryErrorMessage(boolean includeHeader) {
+        if (isSuccess()) {
+            return null;
+        }
+
+        if (incapable ! null) {
+            return \tIncapable of parsing uri:  + incapable;
+        } else if (syntaxError ! null) {
+            return \tSyntax error:  + syntaxError;
+        } else if (unknownComponent ! null) {
+            return \tUnknown component:  + unknownComponent;
+        }
+
+        // for each invalid option build a reason message
+        Map<String, String> options  new LinkedHashMap<String, String>();
+        if (unknown ! null) {
+            for (String name : unknown) {
+                if (unknownSuggestions ! null && unknownSuggestions.containsKey(name)) {
+                    String[] suggestions  unknownSuggestions.get(name);
+                    if (suggestions ! null && suggestions.length > 0) {
+                        String str  Arrays.asList(suggestions).toString();
+                        options.put(name, Unknown option. Did you mean:  + str);
+                    } else {
+                        options.put(name, Unknown option);
+                    }
+                } else {
+                    options.put(name, Unknown option);
+                }
+            }
+        }
+        if (notConsumerOnly ! null) {
+            for (String name : notConsumerOnly) {
+                options.put(name, Option not applicable in consumer only mode);
+            }
+        }
+        if (notProducerOnly ! null) {
+            for (String name : notProducerOnly) {
+                options.put(name, Option not applicable in producer only mode);
+            }
+        }
+        if (required ! null) {
+            for (String name : required) {
+                options.put(name, Missing required option);
+            }
+        }
+        if (invalidEnum ! null) {
+            for (Map.Entry<String, String> entry : invalidEnum.entrySet()) {
+                String name  entry.getKey();
+                String[] choices  invalidEnumChoices.get(name);
+                String defaultValue  defaultValues ! null ? defaultValues.get(entry.getKey()) : null;
+                String str  Arrays.asList(choices).toString();
+                String msg  Invalid enum value:  + entry.getValue() + . Possible values:  + str;
+                if (invalidEnumSuggestions ! null) {
+                    String[] suggestions  invalidEnumSuggestions.get(name);
+                    if (suggestions ! null && suggestions.length > 0) {
+                        str  Arrays.asList(suggestions).toString();
+                        msg + . Did you mean:  + str;
+                    }
+                }
+                if (defaultValue ! null) {
+                    msg + . Default value:  + defaultValue;
+                }
+
+                options.put(entry.getKey(), msg);
+            }
+        }
+        if (invalidReference ! null) {
+            for (Map.Entry<String, String> entry : invalidReference.entrySet()) {
+                boolean empty  isEmpty(entry.getValue());
+                if (empty) {
+                    options.put(entry.getKey(), Empty reference value);
+                } else if (!entry.getValue().startsWith(#)) {
+                    options.put(entry.getKey(), Invalid reference value:  + entry.getValue() +  must start with #);
+                } else {
+                    options.put(entry.getKey(), Invalid reference value:  + entry.getValue());
+                }
+            }
+        }
+        if (invalidBoolean ! null) {
+            for (Map.Entry<String, String> entry : invalidBoolean.entrySet()) {
+                boolean empty  isEmpty(entry.getValue());
+                if (empty) {
+                    options.put(entry.getKey(), Empty boolean value);
+                } else {
+                    options.put(entry.getKey(), Invalid boolean value:  + entry.getValue());
+                }
+            }
+        }
+        if (invalidInteger ! null) {
+            for (Map.Entry<String, String> entry : invalidInteger.entrySet()) {
+                boolean empty  isEmpty(entry.getValue());
+                if (empty) {
+                    options.put(entry.getKey(), Empty integer value);
+                } else {
+                    options.put(entry.getKey(), Invalid integer value:  + entry.getValue());
+                }
+            }
+        }
+        if (invalidNumber ! null) {
+            for (Map.Entry<String, String> entry : invalidNumber.entrySet()) {
+                boolean empty  isEmpty(entry.getValue());
+                if (empty) {
+                    options.put(entry.getKey(), Empty number value);
+                } else {
+                    options.put(entry.getKey(), Invalid number value:  + entry.getValue());
+                }
+            }
+        }
+
+        // build a table with the error summary nicely formatted
+        // lets use 24 as min length
+        int maxLen  24;
+        for (String key : options.keySet()) {
+            maxLen  Math.max(maxLen, key.length());
+        }
+        String format  % + maxLen + s    %s;
+
+        // build the human error summary
+        StringBuilder sb  new StringBuilder();
+        if (includeHeader) {
+            sb.append(Endpoint validator error\n);
+            sb.append(---------------------------------------------------------------------------------------------------------------------------------------\n);
+            sb.append(\n);
+        }
+        if (uri ! null) {
+            sb.append(\t).append(uri).append(\n);
+        } else {
+            sb.append(\n);
+        }
+        for (Map.Entry<String, String> option : options.entrySet()) {
+            String out  String.format(format, option.getKey(), option.getValue());
+            sb.append(\n\t).append(out);
+        }
+
+        return sb.toString();
+    }
+}


"
"6","305","2017-04-14 10:52:59+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[5/6] camel git commit: Rename catalog to runtimecatalog to avoid
 clash with same package name in camel-catalog.","Return-Path: <commits-return-55679-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 033F11996E
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:52:56 +0000 (UTC)
Received: (qmail 82500 invoked by uid 500); 14 Apr 2017 10:52:55 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 82447 invoked by uid 500); 14 Apr 2017 10:52:55 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 82161 invoked by uid 99); 14 Apr 2017 10:52:55 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:52:55 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 6C07EE04FA; Fri, 14 Apr 2017 10:52:55 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:52:59 -0000
Message-Id: <6a3e7fae5cba4f918aede10c3ae6ef26@git.apache.org>
In-Reply-To: <de5de0a2e2ca40e6bcaa03835723a40e@git.apache.org>
References: <de5de0a2e2ca40e6bcaa03835723a40e@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [5/6] camel git commit: Rename catalog to runtimecatalog to avoid
 clash with same package name in camel-catalog.

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/EndpointValidationResult.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/EndpointValidationResult.java b/camel-core/src/main/java/org/apache/camel/catalog/EndpointValidationResult.java
deleted file mode 100644
index 9bb98f0..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/EndpointValidationResult.java
+++ /dev/null
@@ -1,451 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-import java.io.Serializable;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.LinkedHashMap;
-import java.util.LinkedHashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-
-import static org.apache.camel.catalog.URISupport.isEmpty;
-
-/**
- * Details result of validating endpoint uri.
- */
-public class EndpointValidationResult implements Serializable {
-
-    private final String uri;
-    private int errors;
-
-    // general
-    private String syntaxError;
-    private String unknownComponent;
-    private String incapable;
-
-    // options
-    private Set<String> unknown;
-    private Map<String, String[]> unknownSuggestions;
-    private Set<String> lenient;
-    private Set<String> notConsumerOnly;
-    private Set<String> notProducerOnly;
-    private Set<String> required;
-    private Map<String, String> invalidEnum;
-    private Map<String, String[]> invalidEnumChoices;
-    private Map<String, String[]> invalidEnumSuggestions;
-    private Map<String, String> invalidReference;
-    private Map<String, String> invalidBoolean;
-    private Map<String, String> invalidInteger;
-    private Map<String, String> invalidNumber;
-    private Map<String, String> defaultValues;
-
-    public EndpointValidationResult() {
-        this(null);
-    }
-
-    public EndpointValidationResult(String uri) {
-        this.uri  uri;
-    }
-
-    public String getUri() {
-        return uri;
-    }
-
-    public boolean hasErrors() {
-        return errors > 0;
-    }
-
-    public int getNumberOfErrors() {
-        return errors;
-    }
-
-    public boolean isSuccess() {
-        boolean ok  syntaxError  null && unknownComponent  null && incapable  null
-                && unknown  null && required  null;
-        if (ok) {
-            ok  notConsumerOnly  null && notProducerOnly  null;
-        }
-        if (ok) {
-            ok  invalidEnum  null && invalidEnumChoices  null && invalidReference  null
-                && invalidBoolean  null && invalidInteger  null && invalidNumber  null;
-        }
-        return ok;
-    }
-
-    public void addSyntaxError(String syntaxError) {
-        this.syntaxError  syntaxError;
-        errors++;
-    }
-
-    public void addIncapable(String uri) {
-        this.incapable  uri;
-        errors++;
-    }
-
-    public void addUnknownComponent(String name) {
-        this.unknownComponent  name;
-        errors++;
-    }
-
-    public void addUnknown(String name) {
-        if (unknown  null) {
-            unknown  new LinkedHashSet<String>();
-        }
-        if (!unknown.contains(name)) {
-            unknown.add(name);
-            errors++;
-        }
-    }
-
-    public void addUnknownSuggestions(String name, String[] suggestions) {
-        if (unknownSuggestions  null) {
-            unknownSuggestions  new LinkedHashMap<String, String[]>();
-        }
-        unknownSuggestions.put(name, suggestions);
-    }
-
-    public void addLenient(String name) {
-        if (lenient  null) {
-            lenient  new LinkedHashSet<String>();
-        }
-        if (!lenient.contains(name)) {
-            lenient.add(name);
-        }
-    }
-
-    public void addRequired(String name) {
-        if (required  null) {
-            required  new LinkedHashSet<String>();
-        }
-        if (!required.contains(name)) {
-            required.add(name);
-            errors++;
-        }
-    }
-
-    public void addInvalidEnum(String name, String value) {
-        if (invalidEnum  null) {
-            invalidEnum  new LinkedHashMap<String, String>();
-        }
-        if (!invalidEnum.containsKey(name)) {
-            invalidEnum.put(name, value);
-            errors++;
-        }
-    }
-
-    public void addInvalidEnumChoices(String name, String[] choices) {
-        if (invalidEnumChoices  null) {
-            invalidEnumChoices  new LinkedHashMap<String, String[]>();
-        }
-        invalidEnumChoices.put(name, choices);
-    }
-
-    public void addInvalidEnumSuggestions(String name, String[] suggestions) {
-        if (invalidEnumSuggestions  null) {
-            invalidEnumSuggestions  new LinkedHashMap<String, String[]>();
-        }
-        invalidEnumSuggestions.put(name, suggestions);
-    }
-
-    public void addInvalidReference(String name, String value) {
-        if (invalidReference  null) {
-            invalidReference  new LinkedHashMap<String, String>();
-        }
-        if (!invalidReference.containsKey(name)) {
-            invalidReference.put(name, value);
-            errors++;
-        }
-    }
-
-    public void addInvalidBoolean(String name, String value) {
-        if (invalidBoolean  null) {
-            invalidBoolean  new LinkedHashMap<String, String>();
-        }
-        if (!invalidBoolean.containsKey(name)) {
-            invalidBoolean.put(name, value);
-            errors++;
-        }
-    }
-
-    public void addInvalidInteger(String name, String value) {
-        if (invalidInteger  null) {
-            invalidInteger  new LinkedHashMap<String, String>();
-        }
-        if (!invalidInteger.containsKey(name)) {
-            invalidInteger.put(name, value);
-            errors++;
-        }
-    }
-
-    public void addInvalidNumber(String name, String value) {
-        if (invalidNumber  null) {
-            invalidNumber  new LinkedHashMap<String, String>();
-        }
-        if (!invalidNumber.containsKey(name)) {
-            invalidNumber.put(name, value);
-            errors++;
-        }
-    }
-
-    public void addDefaultValue(String name, String value)  {
-        if (defaultValues  null) {
-            defaultValues  new LinkedHashMap<String, String>();
-        }
-        defaultValues.put(name, value);
-    }
-
-    public void addNotConsumerOnly(String name) {
-        if (notConsumerOnly  null) {
-            notConsumerOnly  new LinkedHashSet<String>();
-        }
-        if (!notConsumerOnly.contains(name)) {
-            notConsumerOnly.add(name);
-            errors++;
-        }
-    }
-
-    public void addNotProducerOnly(String name) {
-        if (notProducerOnly  null) {
-            notProducerOnly  new LinkedHashSet<String>();
-        }
-        if (!notProducerOnly.contains(name)) {
-            notProducerOnly.add(name);
-            errors++;
-        }
-    }
-
-    public String getSyntaxError() {
-        return syntaxError;
-    }
-
-    public String getIncapable() {
-        return incapable;
-    }
-
-    public Set<String> getUnknown() {
-        return unknown;
-    }
-
-    public Set<String> getLenient() {
-        return lenient;
-    }
-
-    public Map<String, String[]> getUnknownSuggestions() {
-        return unknownSuggestions;
-    }
-
-    public String getUnknownComponent() {
-        return unknownComponent;
-    }
-
-    public Set<String> getRequired() {
-        return required;
-    }
-
-    public Map<String, String> getInvalidEnum() {
-        return invalidEnum;
-    }
-
-    public Map<String, String[]> getInvalidEnumChoices() {
-        return invalidEnumChoices;
-    }
-
-    public List<String> getEnumChoices(String optionName) {
-        if (invalidEnumChoices ! null) {
-            String[] enums  invalidEnumChoices.get(optionName);
-            if (enums ! null) {
-                return Arrays.asList(enums);
-            }
-        }
-
-        return Collections.emptyList();
-    }
-
-    public Map<String, String> getInvalidReference() {
-        return invalidReference;
-    }
-
-    public Map<String, String> getInvalidBoolean() {
-        return invalidBoolean;
-    }
-
-    public Map<String, String> getInvalidInteger() {
-        return invalidInteger;
-    }
-
-    public Map<String, String> getInvalidNumber() {
-        return invalidNumber;
-    }
-
-    public Map<String, String> getDefaultValues() {
-        return defaultValues;
-    }
-
-    public Set<String> getNotConsumerOnly() {
-        return notConsumerOnly;
-    }
-
-    public Set<String> getNotProducerOnly() {
-        return notProducerOnly;
-    }
-
-    /**
-     * A human readable summary of the validation errors.
-     *
-     * @param includeHeader whether to include a header
-     * @return the summary, or <tt>null</tt> if no validation errors
-     */
-    public String summaryErrorMessage(boolean includeHeader) {
-        if (isSuccess()) {
-            return null;
-        }
-
-        if (incapable ! null) {
-            return \tIncapable of parsing uri:  + incapable;
-        } else if (syntaxError ! null) {
-            return \tSyntax error:  + syntaxError;
-        } else if (unknownComponent ! null) {
-            return \tUnknown component:  + unknownComponent;
-        }
-
-        // for each invalid option build a reason message
-        Map<String, String> options  new LinkedHashMap<String, String>();
-        if (unknown ! null) {
-            for (String name : unknown) {
-                if (unknownSuggestions ! null && unknownSuggestions.containsKey(name)) {
-                    String[] suggestions  unknownSuggestions.get(name);
-                    if (suggestions ! null && suggestions.length > 0) {
-                        String str  Arrays.asList(suggestions).toString();
-                        options.put(name, Unknown option. Did you mean:  + str);
-                    } else {
-                        options.put(name, Unknown option);
-                    }
-                } else {
-                    options.put(name, Unknown option);
-                }
-            }
-        }
-        if (notConsumerOnly ! null) {
-            for (String name : notConsumerOnly) {
-                options.put(name, Option not applicable in consumer only mode);
-            }
-        }
-        if (notProducerOnly ! null) {
-            for (String name : notProducerOnly) {
-                options.put(name, Option not applicable in producer only mode);
-            }
-        }
-        if (required ! null) {
-            for (String name : required) {
-                options.put(name, Missing required option);
-            }
-        }
-        if (invalidEnum ! null) {
-            for (Map.Entry<String, String> entry : invalidEnum.entrySet()) {
-                String name  entry.getKey();
-                String[] choices  invalidEnumChoices.get(name);
-                String defaultValue  defaultValues ! null ? defaultValues.get(entry.getKey()) : null;
-                String str  Arrays.asList(choices).toString();
-                String msg  Invalid enum value:  + entry.getValue() + . Possible values:  + str;
-                if (invalidEnumSuggestions ! null) {
-                    String[] suggestions  invalidEnumSuggestions.get(name);
-                    if (suggestions ! null && suggestions.length > 0) {
-                        str  Arrays.asList(suggestions).toString();
-                        msg + . Did you mean:  + str;
-                    }
-                }
-                if (defaultValue ! null) {
-                    msg + . Default value:  + defaultValue;
-                }
-
-                options.put(entry.getKey(), msg);
-            }
-        }
-        if (invalidReference ! null) {
-            for (Map.Entry<String, String> entry : invalidReference.entrySet()) {
-                boolean empty  isEmpty(entry.getValue());
-                if (empty) {
-                    options.put(entry.getKey(), Empty reference value);
-                } else if (!entry.getValue().startsWith(#)) {
-                    options.put(entry.getKey(), Invalid reference value:  + entry.getValue() +  must start with #);
-                } else {
-                    options.put(entry.getKey(), Invalid reference value:  + entry.getValue());
-                }
-            }
-        }
-        if (invalidBoolean ! null) {
-            for (Map.Entry<String, String> entry : invalidBoolean.entrySet()) {
-                boolean empty  isEmpty(entry.getValue());
-                if (empty) {
-                    options.put(entry.getKey(), Empty boolean value);
-                } else {
-                    options.put(entry.getKey(), Invalid boolean value:  + entry.getValue());
-                }
-            }
-        }
-        if (invalidInteger ! null) {
-            for (Map.Entry<String, String> entry : invalidInteger.entrySet()) {
-                boolean empty  isEmpty(entry.getValue());
-                if (empty) {
-                    options.put(entry.getKey(), Empty integer value);
-                } else {
-                    options.put(entry.getKey(), Invalid integer value:  + entry.getValue());
-                }
-            }
-        }
-        if (invalidNumber ! null) {
-            for (Map.Entry<String, String> entry : invalidNumber.entrySet()) {
-                boolean empty  isEmpty(entry.getValue());
-                if (empty) {
-                    options.put(entry.getKey(), Empty number value);
-                } else {
-                    options.put(entry.getKey(), Invalid number value:  + entry.getValue());
-                }
-            }
-        }
-
-        // build a table with the error summary nicely formatted
-        // lets use 24 as min length
-        int maxLen  24;
-        for (String key : options.keySet()) {
-            maxLen  Math.max(maxLen, key.length());
-        }
-        String format  % + maxLen + s    %s;
-
-        // build the human error summary
-        StringBuilder sb  new StringBuilder();
-        if (includeHeader) {
-            sb.append(Endpoint validator error\n);
-            sb.append(---------------------------------------------------------------------------------------------------------------------------------------\n);
-            sb.append(\n);
-        }
-        if (uri ! null) {
-            sb.append(\t).append(uri).append(\n);
-        } else {
-            sb.append(\n);
-        }
-        for (Map.Entry<String, String> option : options.entrySet()) {
-            String out  String.format(format, option.getKey(), option.getValue());
-            sb.append(\n\t).append(out);
-        }
-
-        return sb.toString();
-    }
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/JSonSchemaHelper.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/JSonSchemaHelper.java b/camel-core/src/main/java/org/apache/camel/catalog/JSonSchemaHelper.java
deleted file mode 100644
index 774facd..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/JSonSchemaHelper.java
+++ /dev/null
@@ -1,424 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-import java.util.ArrayList;
-import java.util.LinkedHashMap;
-import java.util.LinkedHashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-public final class JSonSchemaHelper {
-
-    // 0  text, 1  enum, 2  boolean, 3  integer or number
-    private static final Pattern PATTERN  Pattern.compile(\(.+?)\|\\[(.+)\\]|(true|false)|(-?\\d+\\.?\\d*));
-    private static final String QUOT  &quot;;
-
-    private JSonSchemaHelper() {
-    }
-
-    /**
-     * Parses the json schema to split it into a list or rows, where each row contains key value pairs with the metadata
-     *
-     * @param group the group to parse from such as <tt>component</tt>, <tt>componentProperties</tt>, or <tt>properties</tt>.
-     * @param json the json
-     * @return a list of all the rows, where each row is a set of key value pairs with metadata
-     */
-    public static List<Map<String, String>> parseJsonSchema(String group, String json, boolean parseProperties) {
-        List<Map<String, String>> answer  new ArrayList<Map<String, String>>();
-        if (json  null) {
-            return answer;
-        }
-
-        boolean found  false;
-
-        // parse line by line
-        String[] lines  json.split(\n);
-        for (String line : lines) {
-            // we need to find the group first
-            if (!found) {
-                String s  line.trim();
-                found  s.startsWith(\ + group + \:) && s.endsWith({);
-                continue;
-            }
-
-            // we should stop when we end the group
-            if (line.equals(  },) || line.equals(  })) {
-                break;
-            }
-
-            // need to safe encode \ so we can parse the line
-            line  line.replaceAll(\\\\\\\,  + QUOT + );
-
-            Map<String, String> row  new LinkedHashMap<String, String>();
-            Matcher matcher  PATTERN.matcher(line);
-
-            String key;
-            if (parseProperties) {
-                // when parsing properties the first key is given as name, so the first parsed token is the value of the name
-                key  name;
-            } else {
-                key  null;
-            }
-            while (matcher.find()) {
-                if (key  null) {
-                    key  matcher.group(1);
-                } else {
-                    String value  matcher.group(1);
-                    if (value ! null) {
-                        // its text based
-                        value  value.trim();
-                        // decode
-                        value  value.replaceAll(QUOT, \);
-                        value  decodeJson(value);
-                    }
-                    if (value  null) {
-                        // not text then its maybe an enum?
-                        value  matcher.group(2);
-                        if (value ! null) {
-                            // its an enum so strip out  and trim spaces after comma
-                            value  value.replaceAll(\, );
-                            value  value.replaceAll(, , ,);
-                            value  value.trim();
-                        }
-                    }
-                    if (value  null) {
-                        // not text then its maybe a boolean?
-                        value  matcher.group(3);
-                    }
-                    if (value  null) {
-                        // not text then its maybe a integer?
-                        value  matcher.group(4);
-                    }
-                    if (value ! null) {
-                        row.put(key, value);
-                    }
-                    // reset
-                    key  null;
-                }
-            }
-            if (!row.isEmpty()) {
-                answer.add(row);
-            }
-        }
-
-        return answer;
-    }
-
-    private static String decodeJson(String value) {
-        // json encodes a \ as \\ so we need to decode from \\ back to \
-        if (\\\\.equals(value)) {
-            value  \\;
-        }
-        return value;
-    }
-
-    public static boolean isComponentLenientProperties(List<Map<String, String>> rows) {
-        for (Map<String, String> row : rows) {
-            if (row.containsKey(lenientProperties)) {
-                return true.equals(row.get(lenientProperties));
-            }
-        }
-        return false;
-    }
-
-    public static boolean isComponentConsumerOnly(List<Map<String, String>> rows) {
-        for (Map<String, String> row : rows) {
-            if (row.containsKey(consumerOnly)) {
-                return true.equals(row.get(consumerOnly));
-            }
-        }
-        return false;
-    }
-
-    public static boolean isComponentProducerOnly(List<Map<String, String>> rows) {
-        for (Map<String, String> row : rows) {
-            if (row.containsKey(producerOnly)) {
-                return true.equals(row.get(producerOnly));
-            }
-        }
-        return false;
-    }
-
-    public static boolean isPropertyConsumerOnly(List<Map<String, String>> rows, String name) {
-        for (Map<String, String> row : rows) {
-            String labels  null;
-            boolean found  false;
-            if (row.containsKey(name)) {
-                found  name.equals(row.get(name));
-            }
-            if (row.containsKey(label)) {
-                labels  row.get(label);
-            }
-            if (found) {
-                return labels ! null && labels.contains(consumer);
-            }
-        }
-        return false;
-    }
-
-    public static boolean isPropertyProducerOnly(List<Map<String, String>> rows, String name) {
-        for (Map<String, String> row : rows) {
-            String labels  null;
-            boolean found  false;
-            if (row.containsKey(name)) {
-                found  name.equals(row.get(name));
-            }
-            if (row.containsKey(label)) {
-                labels  row.get(label);
-            }
-            if (found) {
-                return labels ! null && labels.contains(producer);
-            }
-        }
-        return false;
-    }
-
-    public static boolean isPropertyRequired(List<Map<String, String>> rows, String name) {
-        for (Map<String, String> row : rows) {
-            boolean required  false;
-            boolean found  false;
-            if (row.containsKey(name)) {
-                found  name.equals(row.get(name));
-            }
-            if (row.containsKey(required)) {
-                required  true.equals(row.get(required));
-            }
-            if (found) {
-                return required;
-            }
-        }
-        return false;
-    }
-
-    public static String getPropertyKind(List<Map<String, String>> rows, String name) {
-        for (Map<String, String> row : rows) {
-            String kind  null;
-            boolean found  false;
-            if (row.containsKey(name)) {
-                found  name.equals(row.get(name));
-            }
-            if (row.containsKey(kind)) {
-                kind  row.get(kind);
-            }
-            if (found) {
-                return kind;
-            }
-        }
-        return null;
-    }
-
-    public static boolean isPropertyBoolean(List<Map<String, String>> rows, String name) {
-        for (Map<String, String> row : rows) {
-            String type  null;
-            boolean found  false;
-            if (row.containsKey(name)) {
-                found  name.equals(row.get(name));
-            }
-            if (row.containsKey(type)) {
-                type  row.get(type);
-            }
-            if (found) {
-                return boolean.equals(type);
-            }
-        }
-        return false;
-    }
-
-    public static boolean isPropertyInteger(List<Map<String, String>> rows, String name) {
-        for (Map<String, String> row : rows) {
-            String type  null;
-            boolean found  false;
-            if (row.containsKey(name)) {
-                found  name.equals(row.get(name));
-            }
-            if (row.containsKey(type)) {
-                type  row.get(type);
-            }
-            if (found) {
-                return integer.equals(type);
-            }
-        }
-        return false;
-    }
-
-    public static boolean isPropertyNumber(List<Map<String, String>> rows, String name) {
-        for (Map<String, String> row : rows) {
-            String type  null;
-            boolean found  false;
-            if (row.containsKey(name)) {
-                found  name.equals(row.get(name));
-            }
-            if (row.containsKey(type)) {
-                type  row.get(type);
-            }
-            if (found) {
-                return number.equals(type);
-            }
-        }
-        return false;
-    }
-
-    public static boolean isPropertyObject(List<Map<String, String>> rows, String name) {
-        for (Map<String, String> row : rows) {
-            String type  null;
-            boolean found  false;
-            if (row.containsKey(name)) {
-                found  name.equals(row.get(name));
-            }
-            if (row.containsKey(type)) {
-                type  row.get(type);
-            }
-            if (found) {
-                return object.equals(type);
-            }
-        }
-        return false;
-    }
-
-    public static String getPropertyDefaultValue(List<Map<String, String>> rows, String name) {
-        for (Map<String, String> row : rows) {
-            String defaultValue  null;
-            boolean found  false;
-            if (row.containsKey(name)) {
-                found  name.equals(row.get(name));
-            }
-            if (row.containsKey(defaultValue)) {
-                defaultValue  row.get(defaultValue);
-            }
-            if (found) {
-                return defaultValue;
-            }
-        }
-        return null;
-    }
-
-    public static String stripOptionalPrefixFromName(List<Map<String, String>> rows, String name) {
-        for (Map<String, String> row : rows) {
-            String optionalPrefix  null;
-            boolean found  false;
-            if (row.containsKey(optionalPrefix)) {
-                optionalPrefix  row.get(optionalPrefix);
-            }
-            if (row.containsKey(name)) {
-                if (optionalPrefix ! null && name.startsWith(optionalPrefix)) {
-                    name  name.substring(optionalPrefix.length());
-                    // try again
-                    return stripOptionalPrefixFromName(rows, name);
-                } else {
-                    found  name.equals(row.get(name));
-                }
-            }
-            if (found) {
-                return name;
-            }
-        }
-        return name;
-    }
-
-    public static String getPropertyEnum(List<Map<String, String>> rows, String name) {
-        for (Map<String, String> row : rows) {
-            String enums  null;
-            boolean found  false;
-            if (row.containsKey(name)) {
-                found  name.equals(row.get(name));
-            }
-            if (row.containsKey(enum)) {
-                enums  row.get(enum);
-            }
-            if (found) {
-                return enums;
-            }
-        }
-        return null;
-    }
-
-    public static String getPropertyPrefix(List<Map<String, String>> rows, String name) {
-        for (Map<String, String> row : rows) {
-            String prefix  null;
-            boolean found  false;
-            if (row.containsKey(name)) {
-                found  name.equals(row.get(name));
-            }
-            if (row.containsKey(prefix)) {
-                prefix  row.get(prefix);
-            }
-            if (found) {
-                return prefix;
-            }
-        }
-        return null;
-    }
-
-    public static boolean isPropertyMultiValue(List<Map<String, String>> rows, String name) {
-        for (Map<String, String> row : rows) {
-            boolean multiValue  false;
-            boolean found  false;
-            if (row.containsKey(name)) {
-                found  name.equals(row.get(name));
-            }
-            if (row.containsKey(multiValue)) {
-                multiValue  true.equals(row.get(multiValue));
-            }
-            if (found) {
-                return multiValue;
-            }
-        }
-        return false;
-    }
-
-    public static String getPropertyNameFromNameWithPrefix(List<Map<String, String>> rows, String name) {
-        for (Map<String, String> row : rows) {
-            String propertyName  null;
-            boolean found  false;
-            if (row.containsKey(name)) {
-                propertyName  row.get(name);
-            }
-            if (row.containsKey(prefix)) {
-                String preifx  row.get(prefix);
-                found  name.startsWith(preifx);
-            }
-            if (found) {
-                return propertyName;
-            }
-        }
-        return null;
-    }
-
-    public static Map<String, String> getRow(List<Map<String, String>> rows, String key) {
-        for (Map<String, String> row : rows) {
-            if (key.equals(row.get(name))) {
-                return row;
-            }
-        }
-        return null;
-    }
-
-    public static Set<String> getNames(List<Map<String, String>> rows) {
-        Set<String> answer  new LinkedHashSet<String>();
-        for (Map<String, String> row : rows) {
-            if (row.containsKey(name)) {
-                answer.add(row.get(name));
-            }
-        }
-        return answer;
-    }
-
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/JSonSchemaResolver.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/JSonSchemaResolver.java b/camel-core/src/main/java/org/apache/camel/catalog/JSonSchemaResolver.java
deleted file mode 100644
index 9bf09cc..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/JSonSchemaResolver.java
+++ /dev/null
@@ -1,64 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-/**
- * Pluggable resolver to load JSon schema files for components, data formats, languages etc.
- */
-public interface JSonSchemaResolver {
-
-    /**
-     * Returns the component information as JSon format.
-     *
-     * @param name the component name
-     * @return component details in JSon
-     */
-    String getComponentJSonSchema(String name);
-
-    /**
-     * Returns the data format information as JSon format.
-     *
-     * @param name the data format name
-     * @return data format details in JSon
-     */
-    String getDataFormatJSonSchema(String name);
-
-    /**
-     * Returns the language information as JSon format.
-     *
-     * @param name the language name
-     * @return language details in JSon
-     */
-    String getLanguageJSonSchema(String name);
-
-    /**
-     * Returns the other (miscellaneous) information as JSon format.
-     *
-     * @param name the other (miscellaneous) name
-     * @return other (miscellaneous) details in JSon
-     */
-    String getOtherJSonSchema(String name);
-
-    /**
-     * Returns the model information as JSon format.
-     *
-     * @param name the model name
-     * @return model details in JSon
-     */
-    String getModelJSonSchema(String name);
-
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/LanguageValidationResult.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/LanguageValidationResult.java b/camel-core/src/main/java/org/apache/camel/catalog/LanguageValidationResult.java
deleted file mode 100644
index 4a977eb..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/LanguageValidationResult.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-import java.io.Serializable;
-
-/**
- * Validation result of parsing a language expression or predicate
- */
-public class LanguageValidationResult implements Serializable {
-    private final String text;
-    private String error;
-    private String shortError;
-    private int index;
-
-    public LanguageValidationResult(String text) {
-        this.text  text;
-    }
-
-    public String getText() {
-        return text;
-    }
-
-    public boolean isSuccess() {
-        return error  null;
-    }
-
-    public void setError(String error) {
-        this.error  error;
-    }
-
-    public String getError() {
-        return error;
-    }
-
-    public String getShortError() {
-        return shortError;
-    }
-
-    public void setShortError(String shortError) {
-        this.shortError  shortError;
-    }
-
-    public int getIndex() {
-        return index;
-    }
-
-    public void setIndex(int index) {
-        this.index  index;
-    }
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/RuntimeCamelCatalog.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/RuntimeCamelCatalog.java b/camel-core/src/main/java/org/apache/camel/catalog/RuntimeCamelCatalog.java
deleted file mode 100644
index b46edab..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/RuntimeCamelCatalog.java
+++ /dev/null
@@ -1,234 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-import java.net.URISyntaxException;
-import java.util.Map;
-
-import org.apache.camel.StaticService;
-
-/**
- * Runtime based CamelCatalog which are included in camel-core that can provided limit CamelCatalog capabilities
- */
-public interface RuntimeCamelCatalog extends StaticService {
-
-    /**
-     * Returns the component information as JSon format.
-     *
-     * @param name the component name
-     * @return component details in JSon
-     */
-    String componentJSonSchema(String name);
-
-    /**
-     * Returns the data format information as JSon format.
-     *
-     * @param name the data format name
-     * @return data format details in JSon
-     */
-    String dataFormatJSonSchema(String name);
-
-    /**
-     * Returns the language information as JSon format.
-     *
-     * @param name the language name
-     * @return language details in JSon
-     */
-    String languageJSonSchema(String name);
-
-    /**
-     * Returns the model information as JSon format.
-     *
-     * @param name the model name
-     * @return model details in JSon
-     */
-    String modelJSonSchema(String name);
-
-    /**
-     * Parses the endpoint uri and constructs a key/value properties of each option
-     *
-     * @param uri  the endpoint uri
-     * @return properties as key value pairs of each endpoint option
-     */
-    Map<String, String> endpointProperties(String uri) throws URISyntaxException;
-
-    /**
-     * Parses the endpoint uri and constructs a key/value properties of only the lenient properties (eg custom options)
-     * <p/>
-     * For example using the HTTP components to provide query parameters in the endpoint uri.
-     *
-     * @param uri  the endpoint uri
-     * @return properties as key value pairs of each lenient properties
-     */
-    Map<String, String> endpointLenientProperties(String uri) throws URISyntaxException;
-
-    /**
-     * Validates the pattern whether its a valid time pattern.
-     *
-     * @param pattern  the pattern such as 5000, 5s, 5sec, 4min, 4m30s, 1h, etc.
-     * @return <tt>true</tt> if valid, <tt>false</tt> if invalid
-     */
-    boolean validateTimePattern(String pattern);
-
-    /**
-     * Validates the properties for the given scheme against component and endpoint
-     *
-     * @param scheme  the endpoint scheme
-     * @param properties  the endpoint properties
-     * @return validation result
-     */
-    EndpointValidationResult validateProperties(String scheme, Map<String, String> properties);
-
-    /**
-     * Parses and validates the endpoint uri and constructs a key/value properties of each option.
-     *
-     * @param uri  the endpoint uri
-     * @return validation result
-     */
-    EndpointValidationResult validateEndpointProperties(String uri);
-
-    /**
-     * Parses and validates the endpoint uri and constructs a key/value properties of each option.
-     * <p/>
-     * The option ignoreLenientProperties can be used to ignore components that uses lenient properties.
-     * When this is true, then the uri validation is stricter but would fail on properties that are not part of the component
-     * but in the uri because of using lenient properties.
-     * For example using the HTTP components to provide query parameters in the endpoint uri.
-     *
-     * @param uri  the endpoint uri
-     * @param ignoreLenientProperties  whether to ignore components that uses lenient properties.
-     * @return validation result
-     */
-    EndpointValidationResult validateEndpointProperties(String uri, boolean ignoreLenientProperties);
-
-    /**
-     * Parses and validates the endpoint uri and constructs a key/value properties of each option.
-     * <p/>
-     * The option ignoreLenientProperties can be used to ignore components that uses lenient properties.
-     * When this is true, then the uri validation is stricter but would fail on properties that are not part of the component
-     * but in the uri because of using lenient properties.
-     * For example using the HTTP components to provide query parameters in the endpoint uri.
-     *
-     * @param uri  the endpoint uri
-     * @param ignoreLenientProperties  whether to ignore components that uses lenient properties.
-     * @param consumerOnly whether the endpoint is only used as a consumer
-     * @param producerOnly whether the endpoint is only used as a producer
-     * @return validation result
-     */
-    EndpointValidationResult validateEndpointProperties(String uri, boolean ignoreLenientProperties, boolean consumerOnly, boolean producerOnly);
-
-    /**
-     * Parses and validates the simple expression.
-     * <p/>
-     * <b>Important:</b> This requires having <tt>camel-core</tt> on the classpath
-     *
-     * @param simple  the simple expression
-     * @return validation result
-     * @deprecated use {@link #validateSimpleExpression(ClassLoader, String)}
-     */
-    @Deprecated
-    SimpleValidationResult validateSimpleExpression(String simple);
-
-    /**
-     * Parses and validates the simple expression.
-     * <p/>
-     * <b>Important:</b> This requires having <tt>camel-core</tt> on the classpath
-     *
-     * @param classLoader a custom classloader to use for loading the language from the classpath, or <tt>null</tt> for using default classloader
-     * @param simple  the simple expression
-     * @return validation result
-     */
-    SimpleValidationResult validateSimpleExpression(ClassLoader classLoader, String simple);
-
-    /**
-     * Parses and validates the simple predicate
-     * <p/>
-     * <b>Important:</b> This requires having <tt>camel-core</tt> on the classpath
-     *
-     * @param simple  the simple predicate
-     * @return validation result
-     * @deprecated use {@link #validateSimplePredicate(ClassLoader, String)}
-     */
-    @Deprecated
-    SimpleValidationResult validateSimplePredicate(String simple);
-
-    /**
-     * Parses and validates the simple predicate
-     * <p/>
-     * <b>Important:</b> This requires having <tt>camel-core</tt> on the classpath
-     *
-     * @param classLoader a custom classloader to use for loading the language from the classpath, or <tt>null</tt> for using default classloader
-     * @param simple  the simple predicate
-     * @return validation result
-     */
-    SimpleValidationResult validateSimplePredicate(ClassLoader classLoader, String simple);
-
-    /**
-     * Parses and validates the language as a predicate
-     * <p/>
-     * <b>Important:</b> This requires having <tt>camel-core</tt> and the language dependencies on the classpath
-     *
-     * @param classLoader a custom classloader to use for loading the language from the classpath, or <tt>null</tt> for using default classloader
-     * @param language the name of the language
-     * @param text  the predicate text
-     * @return validation result
-     */
-    LanguageValidationResult validateLanguagePredicate(ClassLoader classLoader, String language, String text);
-
-    /**
-     * Parses and validates the language as an expression
-     * <p/>
-     * <b>Important:</b> This requires having <tt>camel-core</tt> and the language dependencies on the classpath
-     *
-     * @param classLoader a custom classloader to use for loading the language from the classpath, or <tt>null</tt> for using default classloader
-     * @param language the name of the language
-     * @param text  the expression text
-     * @return validation result
-     */
-    LanguageValidationResult validateLanguageExpression(ClassLoader classLoader, String language, String text);
-
-    /**
-     * Returns the component name from the given endpoint uri
-     *
-     * @param uri  the endpoint uri
-     * @return the component name (aka scheme), or <tt>null</tt> if not possible to determine
-     */
-    String endpointComponentName(String uri);
-
-    /**
-     * Creates an endpoint uri in Java style from the information from the properties
-     *
-     * @param scheme the endpoint schema
-     * @param properties the properties as key value pairs
-     * @param encode whether to URL encode the returned uri or not
-     * @return the constructed endpoint uri
-     * @throws java.net.URISyntaxException is thrown if there is encoding error
-     */
-    String asEndpointUri(String scheme, Map<String, String> properties, boolean encode) throws URISyntaxException;
-
-    /**
-     * Creates an endpoint uri in XML style (eg escape & as &ampl;) from the information from the properties
-     *
-     * @param scheme the endpoint schema
-     * @param properties the properties as key value pairs
-     * @param encode whether to URL encode the returned uri or not
-     * @return the constructed endpoint uri
-     * @throws java.net.URISyntaxException is thrown if there is encoding error
-     */
-    String asEndpointUriXml(String scheme, Map<String, String> properties, boolean encode) throws URISyntaxException;
-
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/SimpleValidationResult.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/SimpleValidationResult.java b/camel-core/src/main/java/org/apache/camel/catalog/SimpleValidationResult.java
deleted file mode 100644
index 5c86f23..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/SimpleValidationResult.java
+++ /dev/null
@@ -1,32 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-/**
- * To be backwards compatible, but favor using {@link LanguageValidationResult} instead.
- */
-public class SimpleValidationResult extends LanguageValidationResult {
-
-    public SimpleValidationResult(String text) {
-        super(text);
-    }
-
-    public String getSimple() {
-        return getText();
-    }
-
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/SuggestionStrategy.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/SuggestionStrategy.java b/camel-core/src/main/java/org/apache/camel/catalog/SuggestionStrategy.java
deleted file mode 100644
index 057d372..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/SuggestionStrategy.java
+++ /dev/null
@@ -1,34 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-import java.util.Set;
-
-/**
- * Strategy to provide suggestions for unknown endpoint options
- */
-public interface SuggestionStrategy {
-
-    /**
-     * Provides a list of valid option names for a did you mean function.
-     *
-     * @param names         valid names
-     * @param unknownOption unknown option name
-     * @return a list of suggested names (did you mean)
-     */
-    String[] suggestEndpointOptions(Set<String> names, String unknownOption);
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/TimePatternConverter.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/TimePatternConverter.java b/camel-core/src/main/java/org/apache/camel/catalog/TimePatternConverter.java
deleted file mode 100644
index 4ed843a..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/TimePatternConverter.java
+++ /dev/null
@@ -1,120 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-/**
- * This class is a copy from camel-core so we can use it independent to validate uris with time patterns
- */
-public final class TimePatternConverter {
-    private static final Pattern NUMBERS_ONLY_STRING_PATTERN  Pattern.compile(^[-]?(\\d)+$, Pattern.CASE_INSENSITIVE);
-    private static final Pattern HOUR_REGEX_PATTERN  Pattern.compile(((\\d)*(\\d))h(our(s)?)?, Pattern.CASE_INSENSITIVE);
-    private static final Pattern MINUTES_REGEX_PATTERN  Pattern.compile(((\\d)*(\\d))m(in(ute(s)?)?)?, Pattern.CASE_INSENSITIVE);
-    private static final Pattern SECONDS_REGEX_PATTERN  Pattern.compile(((\\d)*(\\d))s(ec(ond)?(s)?)?, Pattern.CASE_INSENSITIVE);
-
-    /**
-     * Utility classes should not have a public constructor.
-     */
-    private TimePatternConverter() {
-    }
-
-    public static long toMilliSeconds(String source) throws IllegalArgumentException {
-        long milliseconds  0;
-        boolean foundFlag  false;
-
-        checkCorrectnessOfPattern(source);
-        Matcher matcher;
-
-        matcher  createMatcher(NUMBERS_ONLY_STRING_PATTERN, source);
-        if (matcher.find()) {
-            // Note: This will also be used for regular numeric strings.
-            //       This String -> long converter will be used for all strings.
-            milliseconds  Long.valueOf(source);
-        } else {
-            matcher  createMatcher(HOUR_REGEX_PATTERN, source);
-            if (matcher.find()) {
-                milliseconds  milliseconds + (3600000 * Long.valueOf(matcher.group(1)));
-                foundFlag  true;
-            }
-
-            matcher  createMatcher(MINUTES_REGEX_PATTERN, source);
-            if (matcher.find()) {
-                long minutes  Long.valueOf(matcher.group(1));
-                if ((minutes > 59) && foundFlag) {
-                    throw new IllegalArgumentException(Minutes should contain a valid value between 0 and 59:  + source);
-                }
-                foundFlag  true;
-                milliseconds  milliseconds + (60000 * minutes);
-            }
-
-            matcher  createMatcher(SECONDS_REGEX_PATTERN, source);
-            if (matcher.find()) {
-                long seconds  Long.valueOf(matcher.group(1));
-                if ((seconds > 59) && foundFlag) {
-                    throw new IllegalArgumentException(Seconds should contain a valid value between 0 and 59:  + source);
-                }
-                foundFlag  true;
-                milliseconds  milliseconds + (1000 * seconds);
-            }
-
-            // No pattern matched... initiating fallback check and conversion (if required).
-            // The source at this point may contain illegal values or special characters
-            if (!foundFlag) {
-                milliseconds  Long.valueOf(source);
-            }
-        }
-
-        return milliseconds;
-    }
-
-    private static void checkCorrectnessOfPattern(String source) {
-        //replace only numbers once
-        Matcher matcher  createMatcher(NUMBERS_ONLY_STRING_PATTERN, source);
-        String replaceSource  matcher.replaceFirst();
-
-        //replace hour string once
-        matcher  createMatcher(HOUR_REGEX_PATTERN, replaceSource);
-        if (matcher.find() && matcher.find()) {
-            throw new IllegalArgumentException(Hours should not be specified more then once:  + source);
-        }
-        replaceSource  matcher.replaceFirst();
-
-        //replace minutes once
-        matcher  createMatcher(MINUTES_REGEX_PATTERN, replaceSource);
-        if (matcher.find() && matcher.find()) {
-            throw new IllegalArgumentException(Minutes should not be specified more then once:  + source);
-        }
-        replaceSource  matcher.replaceFirst();
-
-        //replace seconds once
-        matcher  createMatcher(SECONDS_REGEX_PATTERN, replaceSource);
-        if (matcher.find() && matcher.find()) {
-            throw new IllegalArgumentException(Seconds should not be specified more then once:  + source);
-        }
-        replaceSource  matcher.replaceFirst();
-
-        if (replaceSource.length() > 0) {
-            throw new IllegalArgumentException(Illegal characters:  + source);
-        }
-    }
-
-    private static Matcher createMatcher(Pattern pattern, String source) {
-        return pattern.matcher(source);
-    }
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/URISupport.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/URISupport.java b/camel-core/src/main/java/org/apache/camel/catalog/URISupport.java
deleted file mode 100644
index ea1ecd5..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/URISupport.java
+++ /dev/null
@@ -1,392 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-import java.io.UnsupportedEncodingException;
-import java.net.URI;
-import java.net.URISyntaxException;
-import java.net.URLDecoder;
-import java.net.URLEncoder;
-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.LinkedHashMap;
-import java.util.List;
-import java.util.Map;
-
-/**
- * Copied from org.apache.camel.util.URISupport
- */
-public final class URISupport {
-
-    public static final String RAW_TOKEN_START  RAW(;
-    public static final String RAW_TOKEN_END  );
-
-    private static final String CHARSET  UTF-8;
-
-    private URISupport() {
-        // Helper class
-    }
-
-    /**
-     * Normalizes the URI so unsafe characters is encoded
-     *
-     * @param uri the input uri
-     * @return as URI instance
-     * @throws URISyntaxException is thrown if syntax error in the input uri
-     */
-    public static URI normalizeUri(String uri) throws URISyntaxException {
-        return new URI(UnsafeUriCharactersEncoder.encode(uri, true));
-    }
-
-    public static Map<String, Object> extractProperties(Map<String, Object> properties, String optionPrefix) {
-        Map<String, Object> rc  new LinkedHashMap<String, Object>(properties.size());
-
-        for (Iterator<Map.Entry<String, Object>> it  properties.entrySet().iterator(); it.hasNext();) {
-            Map.Entry<String, Object> entry  it.next();
-            String name  entry.getKey();
-            if (name.startsWith(optionPrefix)) {
-                Object value  properties.get(name);
-                name  name.substring(optionPrefix.length());
-                rc.put(name, value);
-                it.remove();
-            }
-        }
-
-        return rc;
-    }
-
-    /**
-     * Strips the query parameters from the uri
-     *
-     * @param uri  the uri
-     * @return the uri without the query parameter
-     */
-    public static String stripQuery(String uri) {
-        int idx  uri.indexOf(?);
-        if (idx > -1) {
-            uri  uri.substring(0, idx);
-        }
-        return uri;
-    }
-
-    /**
-     * Parses the query parameters of the uri (eg the query part).
-     *
-     * @param uri the uri
-     * @return the parameters, or an empty map if no parameters (eg never null)
-     * @throws URISyntaxException is thrown if uri has invalid syntax.
-     */
-    public static Map<String, Object> parseParameters(URI uri) throws URISyntaxException {
-        String query  uri.getQuery();
-        if (query  null) {
-            String schemeSpecificPart  uri.getSchemeSpecificPart();
-            int idx  schemeSpecificPart.indexOf(?);
-            if (idx < 0) {
-                // return an empty map
-                return new LinkedHashMap<String, Object>(0);
-            } else {
-                query  schemeSpecificPart.substring(idx + 1);
-            }
-        } else {
-            query  stripPrefix(query, ?);
-        }
-        return parseQuery(query);
-    }
-
-    /**
-     * Strips the prefix from the value.
-     * <p/>
-     * Returns the value as-is if not starting with the prefix.
-     *
-     * @param value  the value
-     * @param prefix the prefix to remove from value
-     * @return the value without the prefix
-     */
-    public static String stripPrefix(String value, String prefix) {
-        if (value ! null && value.startsWith(prefix)) {
-            return value.substring(prefix.length());
-        }
-        return value;
-    }
-
-    /**
-     * Parses the query part of the uri (eg the parameters).
-     * <p/>
-     * The URI parameters will by default be URI encoded. However you can define a parameter
-     * values with the syntax: <tt>keyRAW(value)</tt> which tells Camel to not encode the value,
-     * and use the value as is (eg keyvalue) and the value has <b>not</b> been encoded.
-     *
-     * @param uri the uri
-     * @return the parameters, or an empty map if no parameters (eg never null)
-     * @throws URISyntaxException is thrown if uri has invalid syntax.
-     * @see #RAW_TOKEN_START
-     * @see #RAW_TOKEN_END
-     */
-    public static Map<String, Object> parseQuery(String uri) throws URISyntaxException {
-        return parseQuery(uri, false);
-    }
-
-    /**
-     * Parses the query part of the uri (eg the parameters).
-     * <p/>
-     * The URI parameters will by default be URI encoded. However you can define a parameter
-     * values with the syntax: <tt>keyRAW(value)</tt> which tells Camel to not encode the value,
-     * and use the value as is (eg keyvalue) and the value has <b>not</b> been encoded.
-     *
-     * @param uri the uri
-     * @param useRaw whether to force using raw values
-     * @return the parameters, or an empty map if no parameters (eg never null)
-     * @throws URISyntaxException is thrown if uri has invalid syntax.
-     * @see #RAW_TOKEN_START
-     * @see #RAW_TOKEN_END
-     */
-    public static Map<String, Object> parseQuery(String uri, boolean useRaw) throws URISyntaxException {
-        // must check for trailing & as the uri.split(&) will ignore those
-        if (uri ! null && uri.endsWith(&)) {
-            throw new URISyntaxException(uri, Invalid uri syntax: Trailing & marker found. 
-                    + Check the uri and remove the trailing & marker.);
-        }
-
-        if (isEmpty(uri)) {
-            // return an empty map
-            return new LinkedHashMap<String, Object>(0);
-        }
-
-        // need to parse the uri query parameters manually as we cannot rely on splitting by &,
-        // as & can be used in a parameter value as well.
-
-        try {
-            // use a linked map so the parameters is in the same order
-            Map<String, Object> rc  new LinkedHashMap<String, Object>();
-
-            boolean isKey  true;
-            boolean isValue  false;
-            boolean isRaw  false;
-            StringBuilder key  new StringBuilder();
-            StringBuilder value  new StringBuilder();
-
-            // parse the uri parameters char by char
-            for (int i  0; i < uri.length(); i++) {
-                // current char
-                char ch  uri.charAt(i);
-                // look ahead of the next char
-                char next;
-                if (i < uri.length() - 2) {
-                    next  uri.charAt(i + 1);
-                } else {
-                    next  \u0000;
-                }
-
-                // are we a raw value
-                isRaw  value.toString().startsWith(RAW_TOKEN_START);
-
-                // if we are in raw mode, then we keep adding until we hit the end marker
-                if (isRaw) {
-                    if (isKey) {
-                        key.append(ch);
-                    } else if (isValue) {
-                        value.append(ch);
-                    }
-
-                    // we only end the raw marker if its )& or at the end of the value
-
-                    boolean end  ch  RAW_TOKEN_END.charAt(0) && (next  & || next  \u0000);
-                    if (end) {
-                        // raw value end, so add that as a parameter, and reset flags
-                        addParameter(key.toString(), value.toString(), rc, useRaw || isRaw);
-                        key.setLength(0);
-                        value.setLength(0);
-                        isKey  true;
-                        isValue  false;
-                        isRaw  false;
-                        // skip to next as we are in raw mode and have already added the value
-                        i++;
-                    }
-                    continue;
-                }
-
-                // if its a key and there is a  sign then the key ends and we are in value mode
-                if (isKey && ch  ) {
-                    isKey  false;
-                    isValue  true;
-                    isRaw  false;
-                    continue;
-                }
-
-                // the & denote parameter is ended
-                if (ch  &) {
-                    // parameter is ended, as we hit & separator
-                    String aKey  key.toString();
-                    // the key may be a placeholder of options which we then do not know what is
-                    boolean validKey  !aKey.startsWith({{) && !aKey.endsWith(}});
-                    if (validKey) {
-                        addParameter(aKey, value.toString(), rc, useRaw || isRaw);
-                    }
-                    key.setLength(0);
-                    value.setLength(0);
-                    isKey  true;
-                    isValue  false;
-                    isRaw  false;
-                    continue;
-                }
-
-                // regular char so add it to the key or value
-                if (isKey) {
-                    key.append(ch);
-                } else if (isValue) {
-                    value.append(ch);
-                }
-            }
-
-            // any left over parameters, then add that
-            if (key.length() > 0) {
-                String aKey  key.toString();
-                // the key may be a placeholder of options which we then do not know what is
-                boolean validKey  !aKey.startsWith({{) && !aKey.endsWith(}});
-                if (validKey) {
-                    addParameter(aKey, value.toString(), rc, useRaw || isRaw);
-                }
-            }
-
-            return rc;
-
-        } catch (UnsupportedEncodingException e) {
-            URISyntaxException se  new URISyntaxException(e.toString(), Invalid encoding);
-            se.initCause(e);
-            throw se;
-        }
-    }
-
-    @SuppressWarnings(unchecked)
-    private static void addParameter(String name, String value, Map<String, Object> map, boolean isRaw) throws UnsupportedEncodingException {
-        name  URLDecoder.decode(name, CHARSET);
-        if (!isRaw) {
-            // need to replace % with %25
-            value  URLDecoder.decode(value.replaceAll(%, %25), CHARSET);
-        }
-
-        // does the key already exist?
-        if (map.containsKey(name)) {
-            // yes it does, so make sure we can support multiple values, but using a list
-            // to hold the multiple values
-            Object existing  map.get(name);
-            List<String> list;
-            if (existing instanceof List) {
-                list  (List<String>) existing;
-            } else {
-                // create a new list to hold the multiple values
-                list  new ArrayList<String>();
-                String s  existing ! null ? existing.toString() : null;
-                if (s ! null) {
-                    list.add(s);
-                }
-            }
-            list.add(value);
-            map.put(name, list);
-        } else {
-            map.put(name, value);
-        }
-    }
-
-    /**
-     * Assembles a query from the given map.
-     *
-     * @param options  the map with the options (eg key/value pairs)
-     * @param ampersand to use & for Java code, and &amp; for XML
-     * @return a query string with <tt>key1value&key2value2&...</tt>, or an empty string if there is no options.
-     * @throws URISyntaxException is thrown if uri has invalid syntax.
-     */
-    public static String createQueryString(Map<String, String> options, String ampersand, boolean encode) throws URISyntaxException {
-        try {
-            if (options.size() > 0) {
-                StringBuilder rc  new StringBuilder();
-                boolean first  true;
-                for (Object o : options.keySet()) {
-                    if (first) {
-                        first  false;
-                    } else {
-                        rc.append(ampersand);
-                    }
-
-                    String key  (String) o;
-                    Object value  options.get(key);
-
-                    // use the value as a String
-                    String s  value ! null ? value.toString() : null;
-                    appendQueryStringParameter(key, s, rc, encode);
-                }
-                return rc.toString();
-            } else {
-                return ;
-            }
-        } catch (UnsupportedEncodingException e) {
-            URISyntaxException se  new URISyntaxException(e.toString(), Invalid encoding);
-            se.initCause(e);
-            throw se;
-        }
-    }
-
-    private static void appendQueryStringParameter(String key, String value, StringBuilder rc, boolean encode) throws UnsupportedEncodingException {
-        if (encode) {
-            rc.append(URLEncoder.encode(key, CHARSET));
-        } else {
-            rc.append(key);
-        }
-        // only append if value is not null
-        if (value ! null) {
-            rc.append();
-            if (value.startsWith(RAW_TOKEN_START) && value.endsWith(RAW_TOKEN_END)) {
-                // do not encode RAW parameters
-                rc.append(value);
-            } else {
-                if (encode) {
-                    rc.append(URLEncoder.encode(value, CHARSET));
-                } else {
-                    rc.append(value);
-                }
-            }
-        }
-    }
-
-    /**
-     * Tests whether the value is <tt>null</tt> or an empty string.
-     *
-     * @param value  the value, if its a String it will be tested for text length as well
-     * @return true if empty
-     */
-    public static boolean isEmpty(Object value) {
-        return !isNotEmpty(value);
-    }
-
-    /**
-     * Tests whether the value is <b>not</b> <tt>null</tt> or an empty string.
-     *
-     * @param value  the value, if its a String it will be tested for text length as well
-     * @return true if <b>not</b> empty
-     */
-    public static boolean isNotEmpty(Object value) {
-        if (value  null) {
-            return false;
-        } else if (value instanceof String) {
-            String text  (String) value;
-            return text.trim().length() > 0;
-        } else {
-            return true;
-        }
-    }
-
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/UnsafeUriCharactersEncoder.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/UnsafeUriCharactersEncoder.java b/camel-core/src/main/java/org/apache/camel/catalog/UnsafeUriCharactersEncoder.java
deleted file mode 100644
index 563bac2..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/UnsafeUriCharactersEncoder.java
+++ /dev/null
@@ -1,206 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-import java.util.ArrayList;
-import java.util.BitSet;
-import java.util.List;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-/**
- * Encoder for unsafe URI characters.
- * <p/>
- * A good source for details is <a hrefhttp://en.wikipedia.org/wiki/Url_encode>wikipedia url encode</a> article.
- */
-public final class UnsafeUriCharactersEncoder {
-    private static BitSet unsafeCharactersRfc1738;
-    private static BitSet unsafeCharactersHttp;
-    private static final char[] HEX_DIGITS  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C,
-        D, E, F, a, b, c, d, e, f};
-    private static final Pattern RAW_PATTERN  Pattern.compile(RAW\\([^\\)]+\\));
-
-    static {
-        unsafeCharactersRfc1738  new BitSet(256);
-        unsafeCharactersRfc1738.set( );
-        unsafeCharactersRfc1738.set();
-        unsafeCharactersRfc1738.set(<);
-        unsafeCharactersRfc1738.set(>);
-        unsafeCharactersRfc1738.set(#);
-        unsafeCharactersRfc1738.set(%);
-        unsafeCharactersRfc1738.set({);
-        unsafeCharactersRfc1738.set(});
-        unsafeCharactersRfc1738.set(|);
-        unsafeCharactersRfc1738.set(\\);
-        unsafeCharactersRfc1738.set(^);
-        unsafeCharactersRfc1738.set(~);
-        unsafeCharactersRfc1738.set([);
-        unsafeCharactersRfc1738.set(]);
-        unsafeCharactersRfc1738.set(`);
-    }
-
-    static {
-        unsafeCharactersHttp  new BitSet(256);
-        unsafeCharactersHttp.set( );
-        unsafeCharactersHttp.set();
-        unsafeCharactersHttp.set(<);
-        unsafeCharactersHttp.set(>);
-        unsafeCharactersHttp.set(#);
-        unsafeCharactersHttp.set(%);
-        unsafeCharactersHttp.set({);
-        unsafeCharactersHttp.set(});
-        unsafeCharactersHttp.set(|);
-        unsafeCharactersHttp.set(\\);
-        unsafeCharactersHttp.set(^);
-        unsafeCharactersHttp.set(~);
-        unsafeCharactersHttp.set(`);
-    }
-
-    private UnsafeUriCharactersEncoder() {
-        // util class
-    }
-
-    public static String encode(String s) {
-        return encode(s, unsafeCharactersRfc1738);
-    }
-
-    public static String encodeHttpURI(String s) {
-        return encode(s, unsafeCharactersHttp);
-    }
-
-    public static String encode(String s, BitSet unsafeCharacters) {
-        return encode(s, unsafeCharacters, false);
-    }
-
-    public static String encode(String s, boolean checkRaw) {
-        return encode(s, unsafeCharactersRfc1738, checkRaw);
-    }
-
-    public static String encodeHttpURI(String s, boolean checkRaw) {
-        return encode(s, unsafeCharactersHttp, checkRaw);
-    }
-
-    private static List<Pair> checkRAW(String s) {
-        Matcher matcher  RAW_PATTERN.matcher(s);
-        List<Pair> answer  new ArrayList<Pair>();
-        // Check all occurrences
-        while (matcher.find()) {
-            answer.add(new Pair(matcher.start(), matcher.end()));
-        }
-        return answer;
-    }
-
-    private static boolean isRaw(int index, List<Pair> pairs) {
-        for (Pair pair : pairs) {
-            if (index < pair.left) {
-                return false;
-            } else {
-                if (index > pair.left) {
-                    if (index < pair.right) {
-                        return true;
-                    } else {
-                        continue;
-                    }
-                }
-            }
-        }
-        return false;
-    }
-
-    private static class Pair {
-        int left;
-        int right;
-
-        Pair(int left, int right) {
-            this.left  left;
-            this.right  right;
-        }
-    }
-
-    // Just skip the encode for isRAW part
-    public static String encode(String s, BitSet unsafeCharacters, boolean checkRaw) {
-        List<Pair> rawPairs;
-        if (checkRaw) {
-            rawPairs  checkRAW(s);
-        } else {
-            rawPairs  new ArrayList<Pair>();
-        }
-
-        int n  s  null ? 0 : s.length();
-        if (n  0) {
-            return s;
-        }
-
-        // First check whether we actually need to encode
-        char chars[]  s.toCharArray();
-        for (int i  0;;) {
-            // just deal with the ascii character
-            if (chars[i] > 0 && chars[i] < 128) {
-                if (unsafeCharacters.get(chars[i])) {
-                    break;
-                }
-            }
-            if (++i > chars.length) {
-                return s;
-            }
-        }
-
-        // okay there are some unsafe characters so we do need to encode
-        // see details at: http://en.wikipedia.org/wiki/Url_encode
-        StringBuilder sb  new StringBuilder();
-        for (int i  0; i < chars.length; i++) {
-            char ch  chars[i];
-            if (ch > 0 && ch < 128 && unsafeCharacters.get(ch)) {
-                // special for % sign as it may be a decimal encoded value
-                if (ch  %) {
-                    char next  i + 1 < chars.length ? chars[i + 1] :  ;
-                    char next2  i + 2 < chars.length ? chars[i + 2] :  ;
-
-                    if (isHexDigit(next) && isHexDigit(next2) && !isRaw(i, rawPairs)) {
-                        // its already encoded (decimal encoded) so just append as is
-                        sb.append(ch);
-                    } else {
-                        // must escape then, as its an unsafe character
-                        appendEscape(sb, (byte) ch);
-                    }
-                } else {
-                    // must escape then, as its an unsafe character
-                    appendEscape(sb, (byte) ch);
-                }
-            } else {
-                sb.append(ch);
-            }
-        }
-        return sb.toString();
-    }
-
-    private static void appendEscape(StringBuilder sb, byte b) {
-        sb.append(%);
-        sb.append(HEX_DIGITS[(b >> 4) & 0x0f]);
-        sb.append(HEX_DIGITS[(b >> 0) & 0x0f]);
-    }
-
-    private static boolean isHexDigit(char ch) {
-        for (char hex : HEX_DIGITS) {
-            if (hex  ch) {
-                return true;
-            }
-        }
-        return false;
-    }
-
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/package.html
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/package.html b/camel-core/src/main/java/org/apache/camel/catalog/package.html
deleted file mode 100644
index 98786d1..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/package.html
+++ /dev/null
@@ -1,25 +0,0 @@
-<!--
-    Licensed to the Apache Software Foundation (ASF) under one or more
-    contributor license agreements.  See the NOTICE file distributed with
-    this work for additional information regarding copyright ownership.
-    The ASF licenses this file to You under the Apache License, Version 2.0
-    (the License); you may not use this file except in compliance with
-    the License.  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an AS IS BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
--->
-<html>
-<head>
-</head>
-<body>
-
-Camel Catalog
-
-</body>
-</html>

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/component/rest/RestComponentVerifier.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/component/rest/RestComponentVerifier.java b/camel-core/src/main/java/org/apache/camel/component/rest/RestComponentVerifier.java
index 5d19e0d..4013e5f 100644
--- a/camel-core/src/main/java/org/apache/camel/component/rest/RestComponentVerifier.java
+++ b/camel-core/src/main/java/org/apache/camel/component/rest/RestComponentVerifier.java
@@ -22,12 +22,12 @@ import java.util.Map;
 import org.apache.camel.Component;
 import org.apache.camel.ComponentVerifier;
 import org.apache.camel.VerifiableComponent;
-import org.apache.camel.catalog.JSonSchemaHelper;
-import org.apache.camel.catalog.RuntimeCamelCatalog;
 import org.apache.camel.impl.verifier.CatalogVerifierCustomizer;
 import org.apache.camel.impl.verifier.DefaultComponentVerifier;
 import org.apache.camel.impl.verifier.ResultBuilder;
 import org.apache.camel.impl.verifier.ResultErrorBuilder;
+import org.apache.camel.runtimecatalog.JSonSchemaHelper;
+import org.apache.camel.runtimecatalog.RuntimeCamelCatalog;
 import org.apache.camel.spi.RestConsumerFactory;
 import org.apache.camel.spi.RestProducerFactory;
 import org.apache.camel.util.ObjectHelper;

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java b/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java
index c85ce8c..b53efc8 100644
--- a/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java
+++ b/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java
@@ -26,7 +26,6 @@ import java.util.Collections;
 import java.util.Comparator;
 import java.util.Date;
 import java.util.HashMap;
-import java.util.HashSet;
 import java.util.Iterator;
 import java.util.LinkedHashMap;
 import java.util.LinkedHashSet;
@@ -87,8 +86,6 @@ import org.apache.camel.api.management.mbean.ManagedRouteMBean;
 import org.apache.camel.builder.DefaultFluentProducerTemplate;
 import org.apache.camel.builder.ErrorHandlerBuilder;
 import org.apache.camel.builder.ErrorHandlerBuilderSupport;
-import org.apache.camel.catalog.DefaultRuntimeCamelCatalog;
-import org.apache.camel.catalog.RuntimeCamelCatalog;
 import org.apache.camel.component.properties.PropertiesComponent;
 import org.apache.camel.impl.converter.BaseTypeConverterRegistry;
 import org.apache.camel.impl.converter.DefaultTypeConverter;
@@ -121,6 +118,8 @@ import org.apache.camel.processor.interceptor.Delayer;
 import org.apache.camel.processor.interceptor.HandleFault;
 import org.apache.camel.processor.interceptor.StreamCaching;
 import org.apache.camel.processor.interceptor.Tracer;
+import org.apache.camel.runtimecatalog.DefaultRuntimeCamelCatalog;
+import org.apache.camel.runtimecatalog.RuntimeCamelCatalog;
 import org.apache.camel.spi.AsyncProcessorAwaitManager;
 import org.apache.camel.spi.CamelContextNameStrategy;
 import org.apache.camel.spi.ClassResolver;

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/impl/verifier/DefaultComponentVerifier.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/impl/verifier/DefaultComponentVerifier.java b/camel-core/src/main/java/org/apache/camel/impl/verifier/DefaultComponentVerifier.java
index b9d9998..f05cdb1 100644
--- a/camel-core/src/main/java/org/apache/camel/impl/verifier/DefaultComponentVerifier.java
+++ b/camel-core/src/main/java/org/apache/camel/impl/verifier/DefaultComponentVerifier.java
@@ -25,8 +25,8 @@ import org.apache.camel.CamelContext;
 import org.apache.camel.ComponentVerifier;
 import org.apache.camel.NoSuchOptionException;
 import org.apache.camel.TypeConverter;
-import org.apache.camel.catalog.EndpointValidationResult;
-import org.apache.camel.catalog.RuntimeCamelCatalog;
+import org.apache.camel.runtimecatalog.EndpointValidationResult;
+import org.apache.camel.runtimecatalog.RuntimeCamelCatalog;
 import org.apache.camel.util.CamelContextHelper;
 import org.apache.camel.util.EndpointHelper;
 import org.apache.camel.util.IntrospectionSupport;

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/management/DefaultManagementLifecycleStrategy.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/management/DefaultManagementLifecycleStrategy.java b/camel-core/src/main/java/org/apache/camel/management/DefaultManagementLifecycleStrategy.java
index a09ff7d..9a70390 100644
--- a/camel-core/src/main/java/org/apache/camel/management/DefaultManagementLifecycleStrategy.java
+++ b/camel-core/src/main/java/org/apache/camel/management/DefaultManagementLifecycleStrategy.java
@@ -46,12 +46,9 @@ import org.apache.camel.StartupListener;
 import org.apache.camel.TimerListener;
 import org.apache.camel.VetoCamelContextStartException;
 import org.apache.camel.api.management.PerformanceCounter;
-import org.apache.camel.catalog.RuntimeCamelCatalog;
 import org.apache.camel.impl.ConsumerCache;
 import org.apache.camel.impl.DefaultCamelContext;
 import org.apache.camel.impl.DefaultEndpointRegistry;
-import org.apache.camel.impl.DefaultTransformerRegistry;
-import org.apache.camel.impl.DefaultValidatorRegistry;
 import org.apache.camel.impl.EventDrivenConsumerRoute;
 import org.apache.camel.impl.ProducerCache;
 import org.apache.camel.impl.ThrottlingExceptionRoutePolicy;
@@ -89,6 +86,7 @@ import org.apache.camel.processor.CamelInternalProcessor;
 import org.apache.camel.processor.interceptor.BacklogDebugger;
 import org.apache.camel.processor.interceptor.BacklogTracer;
 import org.apache.camel.processor.interceptor.Tracer;
+import org.apache.camel.runtimecatalog.RuntimeCamelCatalog;
 import org.apache.camel.spi.AsyncProcessorAwaitManager;
 import org.apache.camel.spi.DataFormat;
 import org.apache.camel.spi.EventNotifier;

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/management/mbean/ManagedRuntimeCamelCatalog.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/management/mbean/ManagedRuntimeCamelCatalog.java b/camel-core/src/main/java/org/apache/camel/management/mbean/ManagedRuntimeCamelCatalog.java
index 20d3f28..6a99656 100644
--- a/camel-core/src/main/java/org/apache/camel/management/mbean/ManagedRuntimeCamelCatalog.java
+++ b/camel-core/src/main/java/org/apache/camel/management/mbean/ManagedRuntimeCamelCatalog.java
@@ -19,7 +19,7 @@ package org.apache.camel.management.mbean;
 import org.apache.camel.CamelContext;
 import org.apache.camel.api.management.ManagedResource;
 import org.apache.camel.api.management.mbean.ManagedRuntimeCamelCatalogMBean;
-import org.apache.camel.catalog.RuntimeCamelCatalog;
+import org.apache.camel.runtimecatalog.RuntimeCamelCatalog;
 import org.apache.camel.spi.ManagementStrategy;
 
 /**


"
"7","307","2017-04-14 10:53:00+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[6/6] camel git commit: Rename catalog to runtimecatalog to avoid
 clash with same package name in camel-catalog.","Return-Path: <commits-return-55678-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id E622D1996D
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:52:55 +0000 (UTC)
Received: (qmail 82381 invoked by uid 500); 14 Apr 2017 10:52:55 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 82170 invoked by uid 500); 14 Apr 2017 10:52:55 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 82098 invoked by uid 99); 14 Apr 2017 10:52:55 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:52:55 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 6B0F8DFFAB; Fri, 14 Apr 2017 10:52:55 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:53:00 -0000
Message-Id: <8bc1b1e9d91243898c3083596a1d02a5@git.apache.org>
In-Reply-To: <de5de0a2e2ca40e6bcaa03835723a40e@git.apache.org>
References: <de5de0a2e2ca40e6bcaa03835723a40e@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [6/6] camel git commit: Rename catalog to runtimecatalog to avoid
 clash with same package name in camel-catalog.

Rename catalog to runtimecatalog to avoid clash with same package name in camel-catalog.


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/c66be7a8
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/c66be7a8
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/c66be7a8

Branch: refs/heads/master
Commit: c66be7a8c21de8944fd86888a2cf039eb97a2ff1
Parents: d726964
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Fri Apr 14 12:08:59 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:52:40 2017 +0200

----------------------------------------------------------------------
 .../java/org/apache/camel/CamelContext.java     |    2 +-
 .../camel/catalog/AbstractCamelCatalog.java     | 1294 ------------------
 .../catalog/CamelContextJSonSchemaResolver.java |   80 --
 .../org/apache/camel/catalog/CatalogHelper.java |  179 ---
 .../camel/catalog/CollectionStringBuffer.java   |   57 -
 .../catalog/DefaultRuntimeCamelCatalog.java     |  136 --
 .../camel/catalog/EndpointValidationResult.java |  451 ------
 .../apache/camel/catalog/JSonSchemaHelper.java  |  424 ------
 .../camel/catalog/JSonSchemaResolver.java       |   64 -
 .../camel/catalog/LanguageValidationResult.java |   65 -
 .../camel/catalog/RuntimeCamelCatalog.java      |  234 ----
 .../camel/catalog/SimpleValidationResult.java   |   32 -
 .../camel/catalog/SuggestionStrategy.java       |   34 -
 .../camel/catalog/TimePatternConverter.java     |  120 --
 .../org/apache/camel/catalog/URISupport.java    |  392 ------
 .../catalog/UnsafeUriCharactersEncoder.java     |  206 ---
 .../java/org/apache/camel/catalog/package.html  |   25 -
 .../component/rest/RestComponentVerifier.java   |    4 +-
 .../apache/camel/impl/DefaultCamelContext.java  |    5 +-
 .../impl/verifier/DefaultComponentVerifier.java |    4 +-
 .../DefaultManagementLifecycleStrategy.java     |    4 +-
 .../mbean/ManagedRuntimeCamelCatalog.java       |    2 +-
 .../runtimecatalog/AbstractCamelCatalog.java    | 1294 ++++++++++++++++++
 .../CamelContextJSonSchemaResolver.java         |   80 ++
 .../camel/runtimecatalog/CatalogHelper.java     |  179 +++
 .../runtimecatalog/CollectionStringBuffer.java  |   57 +
 .../DefaultRuntimeCamelCatalog.java             |  136 ++
 .../EndpointValidationResult.java               |  451 ++++++
 .../camel/runtimecatalog/JSonSchemaHelper.java  |  424 ++++++
 .../runtimecatalog/JSonSchemaResolver.java      |   64 +
 .../LanguageValidationResult.java               |   65 +
 .../runtimecatalog/RuntimeCamelCatalog.java     |  234 ++++
 .../runtimecatalog/SimpleValidationResult.java  |   32 +
 .../runtimecatalog/SuggestionStrategy.java      |   34 +
 .../runtimecatalog/TimePatternConverter.java    |  120 ++
 .../apache/camel/runtimecatalog/URISupport.java |  392 ++++++
 .../UnsafeUriCharactersEncoder.java             |  206 +++
 .../apache/camel/runtimecatalog/package.html    |   25 +
 .../org/apache/camel/util/EndpointHelper.java   |    6 +-
 .../camel/catalog/AbstractCamelCatalogTest.java |  104 --
 .../camel/catalog/RuntimeCamelCatalogTest.java  |  393 ------
 .../AbstractCamelCatalogTest.java               |  104 ++
 .../runtimecatalog/RuntimeCamelCatalogTest.java |  393 ++++++
 43 files changed, 4302 insertions(+), 4305 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/CamelContext.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/CamelContext.java b/camel-core/src/main/java/org/apache/camel/CamelContext.java
index d4fd6ae..00702d1 100644
--- a/camel-core/src/main/java/org/apache/camel/CamelContext.java
+++ b/camel-core/src/main/java/org/apache/camel/CamelContext.java
@@ -30,7 +30,6 @@ import org.apache.camel.api.management.mbean.ManagedCamelContextMBean;
 import org.apache.camel.api.management.mbean.ManagedProcessorMBean;
 import org.apache.camel.api.management.mbean.ManagedRouteMBean;
 import org.apache.camel.builder.ErrorHandlerBuilder;
-import org.apache.camel.catalog.RuntimeCamelCatalog;
 import org.apache.camel.model.DataFormatDefinition;
 import org.apache.camel.model.HystrixConfigurationDefinition;
 import org.apache.camel.model.ProcessorDefinition;
@@ -41,6 +40,7 @@ import org.apache.camel.model.rest.RestDefinition;
 import org.apache.camel.model.rest.RestsDefinition;
 import org.apache.camel.model.transformer.TransformerDefinition;
 import org.apache.camel.model.validator.ValidatorDefinition;
+import org.apache.camel.runtimecatalog.RuntimeCamelCatalog;
 import org.apache.camel.spi.AsyncProcessorAwaitManager;
 import org.apache.camel.spi.CamelContextNameStrategy;
 import org.apache.camel.spi.ClassResolver;

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/AbstractCamelCatalog.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/AbstractCamelCatalog.java b/camel-core/src/main/java/org/apache/camel/catalog/AbstractCamelCatalog.java
deleted file mode 100644
index 6511eff..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/AbstractCamelCatalog.java
+++ /dev/null
@@ -1,1294 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-import java.lang.reflect.InvocationTargetException;
-import java.lang.reflect.Method;
-import java.net.URI;
-import java.net.URISyntaxException;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.LinkedHashMap;
-import java.util.LinkedHashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Objects;
-import java.util.Set;
-import java.util.TreeMap;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-import static org.apache.camel.catalog.CatalogHelper.after;
-import static org.apache.camel.catalog.JSonSchemaHelper.getNames;
-import static org.apache.camel.catalog.JSonSchemaHelper.getPropertyDefaultValue;
-import static org.apache.camel.catalog.JSonSchemaHelper.getPropertyEnum;
-import static org.apache.camel.catalog.JSonSchemaHelper.getPropertyKind;
-import static org.apache.camel.catalog.JSonSchemaHelper.getPropertyNameFromNameWithPrefix;
-import static org.apache.camel.catalog.JSonSchemaHelper.getPropertyPrefix;
-import static org.apache.camel.catalog.JSonSchemaHelper.getRow;
-import static org.apache.camel.catalog.JSonSchemaHelper.isComponentConsumerOnly;
-import static org.apache.camel.catalog.JSonSchemaHelper.isComponentLenientProperties;
-import static org.apache.camel.catalog.JSonSchemaHelper.isComponentProducerOnly;
-import static org.apache.camel.catalog.JSonSchemaHelper.isPropertyBoolean;
-import static org.apache.camel.catalog.JSonSchemaHelper.isPropertyConsumerOnly;
-import static org.apache.camel.catalog.JSonSchemaHelper.isPropertyInteger;
-import static org.apache.camel.catalog.JSonSchemaHelper.isPropertyMultiValue;
-import static org.apache.camel.catalog.JSonSchemaHelper.isPropertyNumber;
-import static org.apache.camel.catalog.JSonSchemaHelper.isPropertyObject;
-import static org.apache.camel.catalog.JSonSchemaHelper.isPropertyProducerOnly;
-import static org.apache.camel.catalog.JSonSchemaHelper.isPropertyRequired;
-import static org.apache.camel.catalog.JSonSchemaHelper.stripOptionalPrefixFromName;
-import static org.apache.camel.catalog.URISupport.createQueryString;
-import static org.apache.camel.catalog.URISupport.isEmpty;
-import static org.apache.camel.catalog.URISupport.normalizeUri;
-import static org.apache.camel.catalog.URISupport.stripQuery;
-
-/**
- * Base class for both the runtime RuntimeCamelCatalog from camel-core and the complete CamelCatalog from camel-catalog.
- */
-public abstract class AbstractCamelCatalog {
-
-    // CHECKSTYLE:OFF
-
-    private static final Pattern SYNTAX_PATTERN  Pattern.compile((\\w+));
-
-    private SuggestionStrategy suggestionStrategy;
-    private JSonSchemaResolver jsonSchemaResolver;
-
-    public SuggestionStrategy getSuggestionStrategy() {
-        return suggestionStrategy;
-    }
-
-    public void setSuggestionStrategy(SuggestionStrategy suggestionStrategy) {
-        this.suggestionStrategy  suggestionStrategy;
-    }
-
-    public JSonSchemaResolver getJSonSchemaResolver() {
-        return jsonSchemaResolver;
-    }
-
-    public void setJSonSchemaResolver(JSonSchemaResolver resolver) {
-        this.jsonSchemaResolver  resolver;
-    }
-
-    public boolean validateTimePattern(String pattern) {
-        return validateInteger(pattern);
-    }
-
-    public EndpointValidationResult validateEndpointProperties(String uri) {
-        return validateEndpointProperties(uri, false, false, false);
-    }
-
-    public EndpointValidationResult validateEndpointProperties(String uri, boolean ignoreLenientProperties) {
-        return validateEndpointProperties(uri, ignoreLenientProperties, false, false);
-    }
-
-    public EndpointValidationResult validateProperties(String scheme, Map<String, String> properties) {
-        EndpointValidationResult result  new EndpointValidationResult(scheme);
-
-        String json  jsonSchemaResolver.getComponentJSonSchema(scheme);
-        List<Map<String, String>> rows  JSonSchemaHelper.parseJsonSchema(properties, json, true);
-        List<Map<String, String>> componentProps  JSonSchemaHelper.parseJsonSchema(componentProperties, json, true);
-
-        // endpoint options have higher priority so remove those from component
-        // that may clash
-        componentProps.stream()
-            .filter(c -> rows.stream().noneMatch(e -> Objects.equals(e.get(name), c.get(name))))
-            .forEach(rows::add);
-
-        boolean lenient  Boolean.getBoolean(properties.getOrDefault(lenient, false));
-
-        // the dataformat component refers to a data format so lets add the properties for the selected
-        // data format to the list of rows
-        if (dataformat.equals(scheme)) {
-            String dfName  properties.get(name);
-            if (dfName ! null) {
-                String dfJson  jsonSchemaResolver.getDataFormatJSonSchema(dfName);
-                List<Map<String, String>> dfRows  JSonSchemaHelper.parseJsonSchema(properties, dfJson, true);
-                if (dfRows ! null && !dfRows.isEmpty()) {
-                    rows.addAll(dfRows);
-                }
-            }
-        }
-
-        for (Map.Entry<String, String> property : properties.entrySet()) {
-            String value  property.getValue();
-            String originalName  property.getKey();
-            String name  property.getKey();
-            // the name may be using an optional prefix, so lets strip that because the options
-            // in the schema are listed without the prefix
-            name  stripOptionalPrefixFromName(rows, name);
-            // the name may be using a prefix, so lets see if we can find the real property name
-            String propertyName  getPropertyNameFromNameWithPrefix(rows, name);
-            if (propertyName ! null) {
-                name  propertyName;
-            }
-
-            String prefix  getPropertyPrefix(rows, name);
-            String kind  getPropertyKind(rows, name);
-            boolean namePlaceholder  name.startsWith({{) && name.endsWith(}});
-            boolean valuePlaceholder  value.startsWith({{) || value.startsWith(${) || value.startsWith($simple{);
-            boolean lookup  value.startsWith(#) && value.length() > 1;
-            // we cannot evaluate multi values as strict as the others, as we dont know their expected types
-            boolean multiValue  prefix ! null && originalName.startsWith(prefix) && isPropertyMultiValue(rows, name);
-
-            Map<String, String> row  getRow(rows, name);
-            if (row  null) {
-                // unknown option
-
-                // only add as error if the component is not lenient properties, or not stub component
-                // and the name is not a property placeholder for one or more values
-                if (!namePlaceholder && !stub.equals(scheme)) {
-                    if (lenient) {
-                        // as if we are lenient then the option is a dynamic extra option which we cannot validate
-                        result.addLenient(name);
-                    } else {
-                        // its unknown
-                        result.addUnknown(name);
-                        if (suggestionStrategy ! null) {
-                            String[] suggestions  suggestionStrategy.suggestEndpointOptions(getNames(rows), name);
-                            if (suggestions ! null) {
-                                result.addUnknownSuggestions(name, suggestions);
-                            }
-                        }
-                    }
-                }
-            } else {
-                /* TODO: we may need to add something in the properties to know if they are related to a producer or consumer
-                if (parameter.equals(kind)) {
-                    // consumer only or producer only mode for parameters
-                    if (consumerOnly) {
-                        boolean producer  isPropertyProducerOnly(rows, name);
-                        if (producer) {
-                            // the option is only for producer so you cannot use it in consumer mode
-                            result.addNotConsumerOnly(name);
-                        }
-                    } else if (producerOnly) {
-                        boolean consumer  isPropertyConsumerOnly(rows, name);
-                        if (consumer) {
-                            // the option is only for consumer so you cannot use it in producer mode
-                            result.addNotProducerOnly(name);
-                        }
-                    }
-                }
-                */
-
-                // default value
-                String defaultValue  getPropertyDefaultValue(rows, name);
-                if (defaultValue ! null) {
-                    result.addDefaultValue(name, defaultValue);
-                }
-
-                // is required but the value is empty
-                boolean required  isPropertyRequired(rows, name);
-                if (required && isEmpty(value)) {
-                    result.addRequired(name);
-                }
-
-                // is enum but the value is not within the enum range
-                // but we can only check if the value is not a placeholder
-                String enums  getPropertyEnum(rows, name);
-                if (!multiValue && !valuePlaceholder && !lookup && enums ! null) {
-                    String[] choices  enums.split(,);
-                    boolean found  false;
-                    for (String s : choices) {
-                        if (value.equalsIgnoreCase(s)) {
-                            found  true;
-                            break;
-                        }
-                    }
-                    if (!found) {
-                        result.addInvalidEnum(name, value);
-                        result.addInvalidEnumChoices(name, choices);
-                        if (suggestionStrategy ! null) {
-                            Set<String> names  new LinkedHashSet<>();
-                            names.addAll(Arrays.asList(choices));
-                            String[] suggestions  suggestionStrategy.suggestEndpointOptions(names, value);
-                            if (suggestions ! null) {
-                                result.addInvalidEnumSuggestions(name, suggestions);
-                            }
-                        }
-
-                    }
-                }
-
-                // is reference lookup of bean (not applicable for @UriPath, enums, or multi-valued)
-                if (!multiValue && enums  null && !path.equals(kind) && isPropertyObject(rows, name)) {
-                    // must start with # and be at least 2 characters
-                    if (!value.startsWith(#) || value.length() < 1) {
-                        result.addInvalidReference(name, value);
-                    }
-                }
-
-                // is boolean
-                if (!multiValue && !valuePlaceholder && !lookup && isPropertyBoolean(rows, name)) {
-                    // value must be a boolean
-                    boolean bool  true.equalsIgnoreCase(value) || false.equalsIgnoreCase(value);
-                    if (!bool) {
-                        result.addInvalidBoolean(name, value);
-                    }
-                }
-
-                // is integer
-                if (!multiValue && !valuePlaceholder && !lookup && isPropertyInteger(rows, name)) {
-                    // value must be an integer
-                    boolean valid  validateInteger(value);
-                    if (!valid) {
-                        result.addInvalidInteger(name, value);
-                    }
-                }
-
-                // is number
-                if (!multiValue && !valuePlaceholder && !lookup && isPropertyNumber(rows, name)) {
-                    // value must be an number
-                    boolean valid  false;
-                    try {
-                        valid  !Double.valueOf(value).isNaN() || !Float.valueOf(value).isNaN();
-                    } catch (Exception e) {
-                        // ignore
-                    }
-                    if (!valid) {
-                        result.addInvalidNumber(name, value);
-                    }
-                }
-            }
-        }
-
-        // now check if all required values are there, and that a default value does not exists
-        for (Map<String, String> row : rows) {
-            String name  row.get(name);
-            boolean required  isPropertyRequired(rows, name);
-            if (required) {
-                String value  properties.get(name);
-                if (isEmpty(value)) {
-                    value  getPropertyDefaultValue(rows, name);
-                }
-                if (isEmpty(value)) {
-                    result.addRequired(name);
-                }
-            }
-        }
-
-        return result;
-    }
-
-    public EndpointValidationResult validateEndpointProperties(String uri, boolean ignoreLenientProperties, boolean consumerOnly, boolean producerOnly) {
-        EndpointValidationResult result  new EndpointValidationResult(uri);
-
-        Map<String, String> properties;
-        List<Map<String, String>> rows;
-        boolean lenientProperties;
-        String scheme;
-
-        try {
-            String json  null;
-
-            // parse the uri
-            URI u  normalizeUri(uri);
-            scheme  u.getScheme();
-
-            if (scheme ! null) {
-                json  jsonSchemaResolver.getComponentJSonSchema(scheme);
-            }
-            if (json  null) {
-                // if the uri starts with a placeholder then we are also incapable of parsing it as we wasnt able to resolve the component name
-                if (uri.startsWith({{)) {
-                    result.addIncapable(uri);
-                } else if (scheme ! null) {
-                    result.addUnknownComponent(scheme);
-                } else {
-                    result.addUnknownComponent(uri);
-                }
-                return result;
-            }
-
-            rows  JSonSchemaHelper.parseJsonSchema(component, json, false);
-
-            // is the component capable of both consumer and producer?
-            boolean canConsumeAndProduce  false;
-            if (!isComponentConsumerOnly(rows) && !isComponentProducerOnly(rows)) {
-                canConsumeAndProduce  true;
-            }
-
-            if (canConsumeAndProduce && consumerOnly) {
-                // lenient properties is not support in consumer only mode if the component can do both of them
-                lenientProperties  false;
-            } else {
-                // only enable lenient properties if we should not ignore
-                lenientProperties  !ignoreLenientProperties && isComponentLenientProperties(rows);
-            }
-            rows  JSonSchemaHelper.parseJsonSchema(properties, json, true);
-            properties  endpointProperties(uri);
-        } catch (URISyntaxException e) {
-            if (uri.startsWith({{)) {
-                // if the uri starts with a placeholder then we are also incapable of parsing it as we wasnt able to resolve the component name
-                result.addIncapable(uri);
-            } else {
-                result.addSyntaxError(e.getMessage());
-            }
-
-            return result;
-        }
-
-        // the dataformat component refers to a data format so lets add the properties for the selected
-        // data format to the list of rows
-        if (dataformat.equals(scheme)) {
-            String dfName  properties.get(name);
-            if (dfName ! null) {
-                String dfJson  jsonSchemaResolver.getDataFormatJSonSchema(dfName);
-                List<Map<String, String>> dfRows  JSonSchemaHelper.parseJsonSchema(properties, dfJson, true);
-                if (dfRows ! null && !dfRows.isEmpty()) {
-                    rows.addAll(dfRows);
-                }
-            }
-        }
-
-        for (Map.Entry<String, String> property : properties.entrySet()) {
-            String value  property.getValue();
-            String originalName  property.getKey();
-            String name  property.getKey();
-            // the name may be using an optional prefix, so lets strip that because the options
-            // in the schema are listed without the prefix
-            name  stripOptionalPrefixFromName(rows, name);
-            // the name may be using a prefix, so lets see if we can find the real property name
-            String propertyName  getPropertyNameFromNameWithPrefix(rows, name);
-            if (propertyName ! null) {
-                name  propertyName;
-            }
-
-            String prefix  getPropertyPrefix(rows, name);
-            String kind  getPropertyKind(rows, name);
-            boolean namePlaceholder  name.startsWith({{) && name.endsWith(}});
-            boolean valuePlaceholder  value.startsWith({{) || value.startsWith(${) || value.startsWith($simple{);
-            boolean lookup  value.startsWith(#) && value.length() > 1;
-            // we cannot evaluate multi values as strict as the others, as we dont know their expected types
-            boolean mulitValue  prefix ! null && originalName.startsWith(prefix) && isPropertyMultiValue(rows, name);
-
-            Map<String, String> row  getRow(rows, name);
-            if (row  null) {
-                // unknown option
-
-                // only add as error if the component is not lenient properties, or not stub component
-                // and the name is not a property placeholder for one or more values
-                if (!namePlaceholder && !stub.equals(scheme)) {
-                    if (lenientProperties) {
-                        // as if we are lenient then the option is a dynamic extra option which we cannot validate
-                        result.addLenient(name);
-                    } else {
-                        // its unknown
-                        result.addUnknown(name);
-                        if (suggestionStrategy ! null) {
-                            String[] suggestions  suggestionStrategy.suggestEndpointOptions(getNames(rows), name);
-                            if (suggestions ! null) {
-                                result.addUnknownSuggestions(name, suggestions);
-                            }
-                        }
-                    }
-                }
-            } else {
-                if (parameter.equals(kind)) {
-                    // consumer only or producer only mode for parameters
-                    if (consumerOnly) {
-                        boolean producer  isPropertyProducerOnly(rows, name);
-                        if (producer) {
-                            // the option is only for producer so you cannot use it in consumer mode
-                            result.addNotConsumerOnly(name);
-                        }
-                    } else if (producerOnly) {
-                        boolean consumer  isPropertyConsumerOnly(rows, name);
-                        if (consumer) {
-                            // the option is only for consumer so you cannot use it in producer mode
-                            result.addNotProducerOnly(name);
-                        }
-                    }
-                }
-
-                // default value
-                String defaultValue  getPropertyDefaultValue(rows, name);
-                if (defaultValue ! null) {
-                    result.addDefaultValue(name, defaultValue);
-                }
-
-                // is required but the value is empty
-                boolean required  isPropertyRequired(rows, name);
-                if (required && isEmpty(value)) {
-                    result.addRequired(name);
-                }
-
-                // is enum but the value is not within the enum range
-                // but we can only check if the value is not a placeholder
-                String enums  getPropertyEnum(rows, name);
-                if (!mulitValue && !valuePlaceholder && !lookup && enums ! null) {
-                    String[] choices  enums.split(,);
-                    boolean found  false;
-                    for (String s : choices) {
-                        if (value.equalsIgnoreCase(s)) {
-                            found  true;
-                            break;
-                        }
-                    }
-                    if (!found) {
-                        result.addInvalidEnum(name, value);
-                        result.addInvalidEnumChoices(name, choices);
-                        if (suggestionStrategy ! null) {
-                            Set<String> names  new LinkedHashSet<>();
-                            names.addAll(Arrays.asList(choices));
-                            String[] suggestions  suggestionStrategy.suggestEndpointOptions(names, value);
-                            if (suggestions ! null) {
-                                result.addInvalidEnumSuggestions(name, suggestions);
-                            }
-                        }
-
-                    }
-                }
-
-                // is reference lookup of bean (not applicable for @UriPath, enums, or multi-valued)
-                if (!mulitValue && enums  null && !path.equals(kind) && isPropertyObject(rows, name)) {
-                    // must start with # and be at least 2 characters
-                    if (!value.startsWith(#) || value.length() < 1) {
-                        result.addInvalidReference(name, value);
-                    }
-                }
-
-                // is boolean
-                if (!mulitValue && !valuePlaceholder && !lookup && isPropertyBoolean(rows, name)) {
-                    // value must be a boolean
-                    boolean bool  true.equalsIgnoreCase(value) || false.equalsIgnoreCase(value);
-                    if (!bool) {
-                        result.addInvalidBoolean(name, value);
-                    }
-                }
-
-                // is integer
-                if (!mulitValue && !valuePlaceholder && !lookup && isPropertyInteger(rows, name)) {
-                    // value must be an integer
-                    boolean valid  validateInteger(value);
-                    if (!valid) {
-                        result.addInvalidInteger(name, value);
-                    }
-                }
-
-                // is number
-                if (!mulitValue && !valuePlaceholder && !lookup && isPropertyNumber(rows, name)) {
-                    // value must be an number
-                    boolean valid  false;
-                    try {
-                        valid  !Double.valueOf(value).isNaN() || !Float.valueOf(value).isNaN();
-                    } catch (Exception e) {
-                        // ignore
-                    }
-                    if (!valid) {
-                        result.addInvalidNumber(name, value);
-                    }
-                }
-            }
-        }
-
-        // now check if all required values are there, and that a default value does not exists
-        for (Map<String, String> row : rows) {
-            String name  row.get(name);
-            boolean required  isPropertyRequired(rows, name);
-            if (required) {
-                String value  properties.get(name);
-                if (isEmpty(value)) {
-                    value  getPropertyDefaultValue(rows, name);
-                }
-                if (isEmpty(value)) {
-                    result.addRequired(name);
-                }
-            }
-        }
-
-        return result;
-    }
-
-    public Map<String, String> endpointProperties(String uri) throws URISyntaxException {
-        // need to normalize uri first
-        URI u  normalizeUri(uri);
-        String scheme  u.getScheme();
-
-        String json  jsonSchemaResolver.getComponentJSonSchema(scheme);
-        if (json  null) {
-            throw new IllegalArgumentException(Cannot find endpoint with scheme  + scheme);
-        }
-
-        // grab the syntax
-        String syntax  null;
-        String alternativeSyntax  null;
-        List<Map<String, String>> rows  JSonSchemaHelper.parseJsonSchema(component, json, false);
-        for (Map<String, String> row : rows) {
-            if (row.containsKey(syntax)) {
-                syntax  row.get(syntax);
-            }
-            if (row.containsKey(alternativeSyntax)) {
-                alternativeSyntax  row.get(alternativeSyntax);
-            }
-        }
-        if (syntax  null) {
-            throw new IllegalArgumentException(Endpoint with scheme  + scheme +  has no syntax defined in the json schema);
-        }
-
-        // only if we support alternative syntax, and the uri contains the username and password in the authority
-        // part of the uri, then we would need some special logic to capture that information and strip those
-        // details from the uri, so we can continue parsing the uri using the normal syntax
-        Map<String, String> userInfoOptions  new LinkedHashMap<String, String>();
-        if (alternativeSyntax ! null && alternativeSyntax.contains(@)) {
-            // clip the scheme from the syntax
-            alternativeSyntax  after(alternativeSyntax, :);
-            // trim so only userinfo
-            int idx  alternativeSyntax.indexOf(@);
-            String fields  alternativeSyntax.substring(0, idx);
-            String[] names  fields.split(:);
-
-            // grab authority part and grab username and/or password
-            String authority  u.getAuthority();
-            if (authority ! null && authority.contains(@)) {
-                String username  null;
-                String password  null;
-
-                // grab unserinfo part before @
-                String userInfo  authority.substring(0, authority.indexOf(@));
-                String[] parts  userInfo.split(:);
-                if (parts.length  2) {
-                    username  parts[0];
-                    password  parts[1];
-                } else {
-                    // only username
-                    username  userInfo;
-                }
-
-                // remember the username and/or password which we add later to the options
-                if (names.length  2) {
-                    userInfoOptions.put(names[0], username);
-                    if (password ! null) {
-                        // password is optional
-                        userInfoOptions.put(names[1], password);
-                    }
-                }
-            }
-        }
-
-        // clip the scheme from the syntax
-        syntax  after(syntax, :);
-        // clip the scheme from the uri
-        uri  after(uri, :);
-        String uriPath  stripQuery(uri);
-
-        // strip user info from uri path
-        if (!userInfoOptions.isEmpty()) {
-            int idx  uriPath.indexOf(@);
-            if (idx > -1) {
-                uriPath  uriPath.substring(idx + 1);
-            }
-        }
-
-        // strip double slash in the start
-        if (uriPath ! null && uriPath.startsWith(//)) {
-            uriPath  uriPath.substring(2);
-        }
-
-        // parse the syntax and find the names of each option
-        Matcher matcher  SYNTAX_PATTERN.matcher(syntax);
-        List<String> word  new ArrayList<String>();
-        while (matcher.find()) {
-            String s  matcher.group(1);
-            if (!scheme.equals(s)) {
-                word.add(s);
-            }
-        }
-        // parse the syntax and find each token between each option
-        String[] tokens  SYNTAX_PATTERN.split(syntax);
-
-        // find the position where each option start/end
-        List<String> word2  new ArrayList<String>();
-        int prev  0;
-        int prevPath  0;
-
-        // special for activemq/jms where the enum for destinationType causes a token issue as it includes a colon
-        // for temp:queue and temp:topic values
-        if (activemq.equals(scheme) || jms.equals(scheme)) {
-            if (uriPath.startsWith(temp:)) {
-                prevPath  5;
-            }
-        }
-
-        for (String token : tokens) {
-            if (token.isEmpty()) {
-                continue;
-            }
-
-            // special for some tokens where :// can be used also, eg http://foo
-            int idx  -1;
-            int len  0;
-            if (:.equals(token)) {
-                idx  uriPath.indexOf(://, prevPath);
-                len  3;
-            }
-            if (idx  -1) {
-                idx  uriPath.indexOf(token, prevPath);
-                len  token.length();
-            }
-
-            if (idx > 0) {
-                String option  uriPath.substring(prev, idx);
-                word2.add(option);
-                prev  idx + len;
-                prevPath  prev;
-            }
-        }
-        // special for last or if we did not add anyone
-        if (prev > 0 || word2.isEmpty()) {
-            String option  uriPath.substring(prev);
-            word2.add(option);
-        }
-
-        rows  JSonSchemaHelper.parseJsonSchema(properties, json, true);
-
-        boolean defaultValueAdded  false;
-
-        // now parse the uri to know which part isw what
-        Map<String, String> options  new LinkedHashMap<String, String>();
-
-        // include the username and password from the userinfo section
-        if (!userInfoOptions.isEmpty()) {
-            options.putAll(userInfoOptions);
-        }
-
-        // word contains the syntax path elements
-        Iterator<String> it  word2.iterator();
-        for (int i  0; i < word.size(); i++) {
-            String key  word.get(i);
-
-            boolean allOptions  word.size()  word2.size();
-            boolean required  isPropertyRequired(rows, key);
-            String defaultValue  getPropertyDefaultValue(rows, key);
-
-            // we have all options so no problem
-            if (allOptions) {
-                String value  it.next();
-                options.put(key, value);
-            } else {
-                // we have a little problem as we do not not have all options
-                if (!required) {
-                    String value  null;
-
-                    boolean last  i  word.size() - 1;
-                    if (last) {
-                        // if its the last value then use it instead of the default value
-                        value  it.hasNext() ? it.next() : null;
-                        if (value ! null) {
-                            options.put(key, value);
-                        } else {
-                            value  defaultValue;
-                        }
-                    }
-                    if (value ! null) {
-                        options.put(key, value);
-                        defaultValueAdded  true;
-                    }
-                } else {
-                    String value  it.hasNext() ? it.next() : null;
-                    if (value ! null) {
-                        options.put(key, value);
-                    }
-                }
-            }
-        }
-
-        Map<String, String> answer  new LinkedHashMap<String, String>();
-
-        // remove all options which are using default values and are not required
-        for (Map.Entry<String, String> entry : options.entrySet()) {
-            String key  entry.getKey();
-            String value  entry.getValue();
-
-            if (defaultValueAdded) {
-                boolean required  isPropertyRequired(rows, key);
-                String defaultValue  getPropertyDefaultValue(rows, key);
-
-                if (!required && defaultValue ! null) {
-                    if (defaultValue.equals(value)) {
-                        continue;
-                    }
-                }
-            }
-
-            // we should keep this in the answer
-            answer.put(key, value);
-        }
-
-        // now parse the uri parameters
-        Map<String, Object> parameters  URISupport.parseParameters(u);
-
-        // and covert the values to String so its JMX friendly
-        while (!parameters.isEmpty()) {
-            Map.Entry<String, Object> entry  parameters.entrySet().iterator().next();
-            String key  entry.getKey();
-            String value  entry.getValue() ! null ? entry.getValue().toString() : ;
-
-            boolean multiValued  isPropertyMultiValue(rows, key);
-            if (multiValued) {
-                String prefix  getPropertyPrefix(rows, key);
-                // extra all the multi valued options
-                Map<String, Object> values  URISupport.extractProperties(parameters, prefix);
-                // build a string with the extra multi valued options with the prefix and & as separator
-                CollectionStringBuffer csb  new CollectionStringBuffer(&);
-                for (Map.Entry<String, Object> multi : values.entrySet()) {
-                    String line  prefix + multi.getKey() +  + (multi.getValue() ! null ? multi.getValue().toString() : );
-                    csb.append(line);
-                }
-                // append the extra multi-values to the existing (which contains the first multi value)
-                if (!csb.isEmpty()) {
-                    value  value + & + csb.toString();
-                }
-            }
-
-            answer.put(key, value);
-            // remove the parameter as we run in a while loop until no more parameters
-            parameters.remove(key);
-        }
-
-        return answer;
-    }
-
-    public Map<String, String> endpointLenientProperties(String uri) throws URISyntaxException {
-        // need to normalize uri first
-
-        // parse the uri
-        URI u  normalizeUri(uri);
-        String scheme  u.getScheme();
-
-        String json  jsonSchemaResolver.getComponentJSonSchema(scheme);
-        if (json  null) {
-            throw new IllegalArgumentException(Cannot find endpoint with scheme  + scheme);
-        }
-
-        List<Map<String, String>> rows  JSonSchemaHelper.parseJsonSchema(properties, json, true);
-
-        // now parse the uri parameters
-        Map<String, Object> parameters  URISupport.parseParameters(u);
-
-        // all the known options
-        Set<String> names  getNames(rows);
-
-        Map<String, String> answer  new LinkedHashMap<>();
-
-        // and covert the values to String so its JMX friendly
-        parameters.forEach((k, v) -> {
-            String key  k;
-            String value  v ! null ? v.toString() : ;
-
-            // is the key a prefix property
-            int dot  key.indexOf(.);
-            if (dot ! -1) {
-                String prefix  key.substring(0, dot + 1); // include dot in prefix
-                String option  getPropertyNameFromNameWithPrefix(rows, prefix);
-                if (option  null || !isPropertyMultiValue(rows, option)) {
-                    answer.put(key, value);
-                }
-            } else if (!names.contains(key)) {
-                answer.put(key, value);
-            }
-        });
-
-        return answer;
-    }
-
-    public String endpointComponentName(String uri) {
-        if (uri ! null) {
-            int idx  uri.indexOf(:);
-            if (idx > 0) {
-                return uri.substring(0, idx);
-            }
-        }
-        return null;
-    }
-
-    public String asEndpointUri(String scheme, String json, boolean encode) throws URISyntaxException {
-        return doAsEndpointUri(scheme, json, &, encode);
-    }
-
-    public String asEndpointUriXml(String scheme, String json, boolean encode) throws URISyntaxException {
-        return doAsEndpointUri(scheme, json, &amp;, encode);
-    }
-
-    private String doAsEndpointUri(String scheme, String json, String ampersand, boolean encode) throws URISyntaxException {
-        List<Map<String, String>> rows  JSonSchemaHelper.parseJsonSchema(properties, json, true);
-
-        Map<String, String> copy  new HashMap<String, String>();
-        for (Map<String, String> row : rows) {
-            String name  row.get(name);
-            String required  row.get(required);
-            String value  row.get(value);
-            String defaultValue  row.get(defaultValue);
-
-            // only add if either required, or the value is ! default value
-            String valueToAdd  null;
-            if (true.equals(required)) {
-                valueToAdd  value ! null ? value : defaultValue;
-                if (valueToAdd  null) {
-                    valueToAdd  ;
-                }
-            } else {
-                // if we have a value and no default then add it
-                if (value ! null && defaultValue  null) {
-                    valueToAdd  value;
-                }
-                // otherwise only add if the value is ! default value
-                if (value ! null && defaultValue ! null && !value.equals(defaultValue)) {
-                    valueToAdd  value;
-                }
-            }
-
-            if (valueToAdd ! null) {
-                copy.put(name, valueToAdd);
-            }
-        }
-
-        return doAsEndpointUri(scheme, copy, ampersand, encode);
-    }
-
-    public String asEndpointUri(String scheme, Map<String, String> properties, boolean encode) throws URISyntaxException {
-        return doAsEndpointUri(scheme, properties, &, encode);
-    }
-
-    public String asEndpointUriXml(String scheme, Map<String, String> properties, boolean encode) throws URISyntaxException {
-        return doAsEndpointUri(scheme, properties, &amp;, encode);
-    }
-
-    String doAsEndpointUri(String scheme, Map<String, String> properties, String ampersand, boolean encode) throws URISyntaxException {
-        String json  jsonSchemaResolver.getComponentJSonSchema(scheme);
-        if (json  null) {
-            throw new IllegalArgumentException(Cannot find endpoint with scheme  + scheme);
-        }
-
-        // grab the syntax
-        String syntax  null;
-        List<Map<String, String>> rows  JSonSchemaHelper.parseJsonSchema(component, json, false);
-        for (Map<String, String> row : rows) {
-            if (row.containsKey(syntax)) {
-                syntax  row.get(syntax);
-                break;
-            }
-        }
-        if (syntax  null) {
-            throw new IllegalArgumentException(Endpoint with scheme  + scheme +  has no syntax defined in the json schema);
-        }
-
-        // do any properties filtering which can be needed for some special components
-        properties  filterProperties(scheme, properties);
-
-        rows  JSonSchemaHelper.parseJsonSchema(properties, json, true);
-
-        // clip the scheme from the syntax
-        syntax  after(syntax, :);
-
-        String originalSyntax  syntax;
-
-        // build at first according to syntax (use a tree map as we want the uri options sorted)
-        Map<String, String> copy  new TreeMap<String, String>();
-        for (Map.Entry<String, String> entry : properties.entrySet()) {
-            String key  entry.getKey();
-            String value  entry.getValue() ! null ? entry.getValue() : ;
-            if (syntax ! null && syntax.contains(key)) {
-                syntax  syntax.replace(key, value);
-            } else {
-                copy.put(key, value);
-            }
-        }
-
-        // do we have all the options the original syntax needs (easy way)
-        String[] keys  syntaxKeys(originalSyntax);
-        boolean hasAllKeys  properties.keySet().containsAll(Arrays.asList(keys));
-
-        // build endpoint uri
-        StringBuilder sb  new StringBuilder();
-        sb.append(scheme);
-        sb.append(:);
-
-        if (hasAllKeys) {
-            // we have all the keys for the syntax so we can build the uri the easy way
-            sb.append(syntax);
-
-            if (!copy.isEmpty()) {
-                boolean hasQuestionmark  sb.toString().contains(?);
-                // the last option may already contain a ? char, if so we should use & instead of ?
-                sb.append(hasQuestionmark ? ampersand : ?);
-                String query  createQueryString(copy, ampersand, encode);
-                sb.append(query);
-            }
-        } else {
-            // TODO: revisit this and see if we can do this in another way
-            // oh darn some options is missing, so we need a complex way of building the uri
-
-            // the tokens between the options in the path
-            String[] tokens  syntax.split(\\w+);
-
-            // parse the syntax into each options
-            Matcher matcher  SYNTAX_PATTERN.matcher(originalSyntax);
-            List<String> options  new ArrayList<String>();
-            while (matcher.find()) {
-                String s  matcher.group(1);
-                options.add(s);
-            }
-
-            // need to preserve {{ and }} from the syntax
-            // (we need to use words only as its provisional placeholders)
-            syntax  syntax.replaceAll(\\{\\{, BEGINCAMELPLACEHOLDER);
-            syntax  syntax.replaceAll(\\}\\}, ENDCAMELPLACEHOLDER);
-
-            // parse the syntax into each options
-            Matcher matcher2  SYNTAX_PATTERN.matcher(syntax);
-            List<String> options2  new ArrayList<String>();
-            while (matcher2.find()) {
-                String s  matcher2.group(1);
-                s  s.replaceAll(BEGINCAMELPLACEHOLDER, \\{\\{);
-                s  s.replaceAll(ENDCAMELPLACEHOLDER, \\}\\});
-                options2.add(s);
-            }
-
-            // build the endpoint
-            int range  0;
-            boolean first  true;
-            boolean hasQuestionmark  false;
-            for (int i  0; i < options.size(); i++) {
-                String key  options.get(i);
-                String key2  options2.get(i);
-                String token  null;
-                if (tokens.length > i) {
-                    token  tokens[i];
-                }
-
-                boolean contains  properties.containsKey(key);
-                if (!contains) {
-                    // if the key are similar we have no explicit value and can try to find a default value if the option is required
-                    if (isPropertyRequired(rows, key)) {
-                        String value  getPropertyDefaultValue(rows, key);
-                        if (value ! null) {
-                            properties.put(key, value);
-                            key2  value;
-                        }
-                    }
-                }
-
-                // was the option provided?
-                if (properties.containsKey(key)) {
-                    if (!first && token ! null) {
-                        sb.append(token);
-                    }
-                    hasQuestionmark | key.contains(?) || (token ! null && token.contains(?));
-                    sb.append(key2);
-                    first  false;
-                }
-                range++;
-            }
-            // append any extra options that was in surplus for the last
-            while (range < options2.size()) {
-                String token  null;
-                if (tokens.length > range) {
-                    token  tokens[range];
-                }
-                String key2  options2.get(range);
-                sb.append(token);
-                sb.append(key2);
-                hasQuestionmark | key2.contains(?) || (token ! null && token.contains(?));
-                range++;
-            }
-
-
-            if (!copy.isEmpty()) {
-                // the last option may already contain a ? char, if so we should use & instead of ?
-                sb.append(hasQuestionmark ? ampersand : ?);
-                String query  createQueryString(copy, ampersand, encode);
-                sb.append(query);
-            }
-        }
-
-        return sb.toString();
-    }
-
-    @Deprecated
-    private static String[] syntaxTokens(String syntax) {
-        // build tokens between the words
-        List<String> tokens  new ArrayList<>();
-        // preserve backwards behavior which had an empty token first
-        tokens.add();
-
-        String current  ;
-        for (int i  0; i < syntax.length(); i++) {
-            char ch  syntax.charAt(i);
-            if (Character.isLetterOrDigit(ch)) {
-                // reset for new current tokens
-                if (current.length() > 0) {
-                    tokens.add(current);
-                    current  ;
-                }
-            } else {
-                current + ch;
-            }
-        }
-        // anything left over?
-        if (current.length() > 0) {
-            tokens.add(current);
-        }
-
-        return tokens.toArray(new String[tokens.size()]);
-    }
-
-    private static String[] syntaxKeys(String syntax) {
-        // build tokens between the separators
-        List<String> tokens  new ArrayList<>();
-
-        String current  ;
-        for (int i  0; i < syntax.length(); i++) {
-            char ch  syntax.charAt(i);
-            if (Character.isLetterOrDigit(ch)) {
-                current + ch;
-            } else {
-                // reset for new current tokens
-                if (current.length() > 0) {
-                    tokens.add(current);
-                    current  ;
-                }
-            }
-        }
-        // anything left over?
-        if (current.length() > 0) {
-            tokens.add(current);
-        }
-
-        return tokens.toArray(new String[tokens.size()]);
-    }
-
-    public SimpleValidationResult validateSimpleExpression(String simple) {
-        return doValidateSimple(null, simple, false);
-    }
-
-    public SimpleValidationResult validateSimpleExpression(ClassLoader classLoader, String simple) {
-        return doValidateSimple(classLoader, simple, false);
-    }
-
-    public SimpleValidationResult validateSimplePredicate(String simple) {
-        return doValidateSimple(null, simple, true);
-    }
-
-    public SimpleValidationResult validateSimplePredicate(ClassLoader classLoader, String simple) {
-        return doValidateSimple(classLoader, simple, true);
-    }
-
-    private SimpleValidationResult doValidateSimple(ClassLoader classLoader, String simple, boolean predicate) {
-        if (classLoader  null) {
-            classLoader  getClass().getClassLoader();
-        }
-
-        // if there are {{ }}} property placeholders then we need to resolve them to something else
-        // as the simple parse cannot resolve them before parsing as we dont run the actual Camel application
-        // with property placeholders setup so we need to dummy this by replace the {{ }} to something else
-        // therefore we use an more unlikely character: {{XXX}} to ~^XXX^~
-        String resolved  simple.replaceAll(\\{\\{(.+)\\}\\}, ~^$1^~);
-
-        SimpleValidationResult answer  new SimpleValidationResult(simple);
-
-        Object instance  null;
-        Class clazz  null;
-        try {
-            clazz  classLoader.loadClass(org.apache.camel.language.simple.SimpleLanguage);
-            instance  clazz.newInstance();
-        } catch (Exception e) {
-            // ignore
-        }
-
-        if (clazz ! null && instance ! null) {
-            Throwable cause  null;
-            try {
-                if (predicate) {
-                    instance.getClass().getMethod(createPredicate, String.class).invoke(instance, resolved);
-                } else {
-                    instance.getClass().getMethod(createExpression, String.class).invoke(instance, resolved);
-                }
-            } catch (InvocationTargetException e) {
-                cause  e.getTargetException();
-            } catch (Exception e) {
-                cause  e;
-            }
-
-            if (cause ! null) {
-
-                // reverse ~^XXX^~ back to {{XXX}}
-                String errMsg  cause.getMessage();
-                errMsg  errMsg.replaceAll(\\~\\^(.+)\\^\\~, {{$1}});
-
-                answer.setError(errMsg);
-
-                // is it simple parser exception then we can grab the index where the problem is
-                if (cause.getClass().getName().equals(org.apache.camel.language.simple.types.SimpleIllegalSyntaxException)
-                    || cause.getClass().getName().equals(org.apache.camel.language.simple.types.SimpleParserException)) {
-                    try {
-                        // we need to grab the index field from those simple parser exceptions
-                        Method method  cause.getClass().getMethod(getIndex);
-                        Object result  method.invoke(cause);
-                        if (result ! null) {
-                            int index  (int) result;
-                            answer.setIndex(index);
-                        }
-                    } catch (Throwable i) {
-                        // ignore
-                    }
-                }
-
-                // we need to grab the short message field from this simple syntax exception
-                if (cause.getClass().getName().equals(org.apache.camel.language.simple.types.SimpleIllegalSyntaxException)) {
-                    try {
-                        Method method  cause.getClass().getMethod(getShortMessage);
-                        Object result  method.invoke(cause);
-                        if (result ! null) {
-                            String msg  (String) result;
-                            answer.setShortError(msg);
-                        }
-                    } catch (Throwable i) {
-                        // ignore
-                    }
-
-                    if (answer.getShortError()  null) {
-                        // fallback and try to make existing message short instead
-                        String msg  answer.getError();
-                        // grab everything before  at location  which would be regarded as the short message
-                        int idx  msg.indexOf( at location );
-                        if (idx > 0) {
-                            msg  msg.substring(0, idx);
-                            answer.setShortError(msg);
-                        }
-                    }
-                }
-            }
-        }
-
-        return answer;
-    }
-
-    public LanguageValidationResult validateLanguagePredicate(ClassLoader classLoader, String language, String text) {
-        return doValidateLanguage(classLoader, language, text, true);
-    }
-
-    public LanguageValidationResult validateLanguageExpression(ClassLoader classLoader, String language, String text) {
-        return doValidateLanguage(classLoader, language, text, false);
-    }
-
-    private LanguageValidationResult doValidateLanguage(ClassLoader classLoader, String language, String text, boolean predicate) {
-        if (classLoader  null) {
-            classLoader  getClass().getClassLoader();
-        }
-
-        SimpleValidationResult answer  new SimpleValidationResult(text);
-
-        String json  jsonSchemaResolver.getLanguageJSonSchema(language);
-        if (json  null) {
-            answer.setError(Unknown language  + language);
-            return answer;
-        }
-
-        List<Map<String, String>> rows  JSonSchemaHelper.parseJsonSchema(language, json, false);
-        String className  null;
-        for (Map<String, String> row : rows) {
-            if (row.containsKey(javaType)) {
-                className  row.get(javaType);
-            }
-        }
-
-        if (className  null) {
-            answer.setError(Cannot find javaType for language  + language);
-            return answer;
-        }
-
-        Object instance  null;
-        Class clazz  null;
-        try {
-            clazz  classLoader.loadClass(className);
-            instance  clazz.newInstance();
-        } catch (Exception e) {
-            // ignore
-        }
-
-        if (clazz ! null && instance ! null) {
-            Throwable cause  null;
-            try {
-                if (predicate) {
-                    instance.getClass().getMethod(createPredicate, String.class).invoke(instance, text);
-                } else {
-                    instance.getClass().getMethod(createExpression, String.class).invoke(instance, text);
-                }
-            } catch (InvocationTargetException e) {
-                cause  e.getTargetException();
-            } catch (Exception e) {
-                cause  e;
-            }
-
-            if (cause ! null) {
-                answer.setError(cause.getMessage());
-            }
-        }
-
-        return answer;
-    }
-
-    /**
-     * Special logic for log endpoints to deal when showAlltrue
-     */
-    private Map<String, String> filterProperties(String scheme, Map<String, String> options) {
-        if (log.equals(scheme)) {
-            String showAll  options.get(showAll);
-            if (true.equals(showAll)) {
-                Map<String, String> filtered  new LinkedHashMap<String, String>();
-                // remove all the other showXXX options when showAlltrue
-                for (Map.Entry<String, String> entry : options.entrySet()) {
-                    String key  entry.getKey();
-                    boolean skip  key.startsWith(show) && !key.equals(showAll);
-                    if (!skip) {
-                        filtered.put(key, entry.getValue());
-                    }
-                }
-                return filtered;
-            }
-        }
-        // use as-is
-        return options;
-    }
-
-    private static boolean validateInteger(String value) {
-        boolean valid  false;
-        try {
-            valid  Integer.valueOf(value) ! null;
-        } catch (Exception e) {
-            // ignore
-        }
-        if (!valid) {
-            // it may be a time pattern, such as 5s for 5 seconds  5000
-            try {
-                TimePatternConverter.toMilliSeconds(value);
-                valid  true;
-            } catch (Exception e) {
-                // ignore
-            }
-        }
-        return valid;
-    }
-
-    // CHECKSTYLE:ON
-
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/CamelContextJSonSchemaResolver.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/CamelContextJSonSchemaResolver.java b/camel-core/src/main/java/org/apache/camel/catalog/CamelContextJSonSchemaResolver.java
deleted file mode 100644
index 8d95488..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/CamelContextJSonSchemaResolver.java
+++ /dev/null
@@ -1,80 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-import java.io.IOException;
-
-import org.apache.camel.CamelContext;
-
-/**
- * Uses runtime {@link CamelContext} to resolve the JSon schema files.
- */
-public class CamelContextJSonSchemaResolver implements JSonSchemaResolver {
-
-    private final CamelContext camelContext;
-
-    public CamelContextJSonSchemaResolver(CamelContext camelContext) {
-        this.camelContext  camelContext;
-    }
-
-    @Override
-    public String getComponentJSonSchema(String name) {
-        try {
-            return camelContext.getComponentParameterJsonSchema(name);
-        } catch (IOException e) {
-            // ignore
-        }
-        return null;
-    }
-
-    @Override
-    public String getDataFormatJSonSchema(String name) {
-        try {
-            return camelContext.getDataFormatParameterJsonSchema(name);
-        } catch (IOException e) {
-            // ignore
-        }
-        return null;
-    }
-
-    @Override
-    public String getLanguageJSonSchema(String name) {
-        try {
-            return camelContext.getLanguageParameterJsonSchema(name);
-        } catch (IOException e) {
-            // ignore
-        }
-        return null;
-    }
-
-    @Override
-    public String getOtherJSonSchema(String name) {
-        // not supported
-        return null;
-    }
-
-    @Override
-    public String getModelJSonSchema(String name) {
-        try {
-            return camelContext.getEipParameterJsonSchema(name);
-        } catch (IOException e) {
-            // ignore
-        }
-        return null;
-    }
-
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/CatalogHelper.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/CatalogHelper.java b/camel-core/src/main/java/org/apache/camel/catalog/CatalogHelper.java
deleted file mode 100644
index caba4a3..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/CatalogHelper.java
+++ /dev/null
@@ -1,179 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.io.LineNumberReader;
-import java.util.List;
-
-public final class CatalogHelper {
-
-    private CatalogHelper() {
-    }
-
-    /**
-     * Loads the entire stream into memory as a String and returns it.
-     * <p/>
-     * <b>Notice:</b> This implementation appends a <tt>\n</tt> as line
-     * terminator at the of the text.
-     * <p/>
-     * Warning, dont use for crazy big streams :)
-     */
-    public static void loadLines(InputStream in, List<String> lines) throws IOException {
-        try (final InputStreamReader isr  new InputStreamReader(in);
-            final BufferedReader reader  new LineNumberReader(isr)) {
-            String line;
-            while ((line  reader.readLine()) ! null) {
-                lines.add(line);
-            }
-        }
-    }
-
-    /**
-     * Loads the entire stream into memory as a String and returns it.
-     * <p/>
-     * <b>Notice:</b> This implementation appends a <tt>\n</tt> as line
-     * terminator at the of the text.
-     * <p/>
-     * Warning, dont use for crazy big streams :)
-     */
-    public static String loadText(InputStream in) throws IOException {
-        StringBuilder builder  new StringBuilder();
-        try (final InputStreamReader isr  new InputStreamReader(in);
-            final BufferedReader reader  new LineNumberReader(isr)) {
-            String line;
-            while ((line  reader.readLine()) ! null) {
-                builder.append(line);
-                builder.append(\n);
-            }
-            return builder.toString();
-        }
-    }
-
-    /**
-     * Matches the name with the pattern.
-     *
-     * @param name  the name
-     * @param pattern the pattern
-     * @return <tt>true</tt> if matched, or <tt>false</tt> if not
-     */
-    public static boolean matchWildcard(String name, String pattern) {
-        // we have wildcard support in that hence you can match with: file* to match any file endpoints
-        if (pattern.endsWith(*) && name.startsWith(pattern.substring(0, pattern.length() - 1))) {
-            return true;
-        }
-        return false;
-    }
-
-    /**
-     * Returns the string after the given token
-     *
-     * @param text  the text
-     * @param after the token
-     * @return the text after the token, or <tt>null</tt> if text does not contain the token
-     */
-    public static String after(String text, String after) {
-        if (!text.contains(after)) {
-            return null;
-        }
-        return text.substring(text.indexOf(after) + after.length());
-    }
-
-    /**
-     * Returns the string before the given token
-     *
-     * @param text  the text
-     * @param before the token
-     * @return the text before the token, or <tt>null</tt> if text does not contain the token
-     */
-    public static String before(String text, String before) {
-        if (!text.contains(before)) {
-            return null;
-        }
-        return text.substring(0, text.indexOf(before));
-    }
-
-    /**
-     * Returns the string between the given tokens
-     *
-     * @param text  the text
-     * @param after the before token
-     * @param before the after token
-     * @return the text between the tokens, or <tt>null</tt> if text does not contain the tokens
-     */
-    public static String between(String text, String after, String before) {
-        text  after(text, after);
-        if (text  null) {
-            return null;
-        }
-        return before(text, before);
-    }
-
-    /**
-     * Tests whether the value is <tt>null</tt> or an empty string.
-     *
-     * @param value  the value, if its a String it will be tested for text length as well
-     * @return true if empty
-     */
-    public static boolean isEmpty(Object value) {
-        return !isNotEmpty(value);
-    }
-
-    /**
-     * Tests whether the value is <b>not</b> <tt>null</tt> or an empty string.
-     *
-     * @param value  the value, if its a String it will be tested for text length as well
-     * @return true if <b>not</b> empty
-     */
-    public static boolean isNotEmpty(Object value) {
-        if (value  null) {
-            return false;
-        } else if (value instanceof String) {
-            String text  (String) value;
-            return text.trim().length() > 0;
-        } else {
-            return true;
-        }
-    }
-
-    /**
-     * Removes all leading and ending quotes (single and double) from the string
-     *
-     * @param s  the string
-     * @return the string without leading and ending quotes (single and double)
-     */
-    public static String removeLeadingAndEndingQuotes(String s) {
-        if (isEmpty(s)) {
-            return s;
-        }
-
-        String copy  s.trim();
-        if (copy.startsWith() && copy.endsWith()) {
-            return copy.substring(1, copy.length() - 1);
-        }
-        if (copy.startsWith(\) && copy.endsWith(\)) {
-            return copy.substring(1, copy.length() - 1);
-        }
-
-        // no quotes, so return as-is
-        return s;
-    }
-
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/CollectionStringBuffer.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/CollectionStringBuffer.java b/camel-core/src/main/java/org/apache/camel/catalog/CollectionStringBuffer.java
deleted file mode 100644
index 2844ca9..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/CollectionStringBuffer.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-public class CollectionStringBuffer {
-    private final StringBuilder buffer  new StringBuilder();
-    private String separator;
-    private boolean first  true;
-
-    public CollectionStringBuffer() {
-        this(, );
-    }
-
-    public CollectionStringBuffer(String separator) {
-        this.separator  separator;
-    }
-
-    @Override
-    public String toString() {
-        return buffer.toString();
-    }
-
-    public void append(Object value) {
-        if (first) {
-            first  false;
-        } else {
-            buffer.append(separator);
-        }
-        buffer.append(value);
-    }
-
-    public String getSeparator() {
-        return separator;
-    }
-
-    public void setSeparator(String separator) {
-        this.separator  separator;
-    }
-
-    public boolean isEmpty() {
-        return first;
-    }
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/c66be7a8/camel-core/src/main/java/org/apache/camel/catalog/DefaultRuntimeCamelCatalog.java
----------------------------------------------------------------------
diff --git a/camel-core/src/main/java/org/apache/camel/catalog/DefaultRuntimeCamelCatalog.java b/camel-core/src/main/java/org/apache/camel/catalog/DefaultRuntimeCamelCatalog.java
deleted file mode 100644
index dd66c55..0000000
--- a/camel-core/src/main/java/org/apache/camel/catalog/DefaultRuntimeCamelCatalog.java
+++ /dev/null
@@ -1,136 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.catalog;
-
-import java.util.HashMap;
-import java.util.Map;
-
-import org.apache.camel.CamelContext;
-
-/**
- * Default {@link RuntimeCamelCatalog}.
- */
-public class DefaultRuntimeCamelCatalog extends AbstractCamelCatalog implements RuntimeCamelCatalog {
-
-    // cache of operation -> result
-    private final Map<String, Object> cache  new HashMap<String, Object>();
-    private boolean caching;
-
-    /**
-     * Creates the {@link RuntimeCamelCatalog} without caching enabled.
-     *
-     * @param camelContext  the camel context
-     */
-    public DefaultRuntimeCamelCatalog(CamelContext camelContext) {
-        this(camelContext, false);
-    }
-
-    /**
-     * Creates the {@link RuntimeCamelCatalog}
-     *
-     * @param camelContext  the camel context
-     * @param caching  whether to use cache
-     */
-    public DefaultRuntimeCamelCatalog(CamelContext camelContext, boolean caching) {
-        this.caching  caching;
-        setJSonSchemaResolver(new CamelContextJSonSchemaResolver(camelContext));
-    }
-
-    @Override
-    public void start() throws Exception {
-        // noop
-    }
-
-    @Override
-    public void stop() throws Exception {
-        cache.clear();
-    }
-
-    @Override
-    public String modelJSonSchema(String name) {
-        String answer  null;
-        if (caching) {
-            answer  (String) cache.get(model- + name);
-        }
-
-        if (answer  null) {
-            answer  getJSonSchemaResolver().getModelJSonSchema(name);
-            if (caching) {
-                cache.put(model- + name, answer);
-            }
-        }
-
-        return answer;
-    }
-
-    @Override
-    public String componentJSonSchema(String name) {
-        String answer  null;
-        if (caching) {
-            answer  (String) cache.get(component- + name);
-        }
-
-        if (answer  null) {
-            answer  getJSonSchemaResolver().getComponentJSonSchema(name);
-            if (caching) {
-                cache.put(component- + name, answer);
-            }
-        }
-
-        return answer;
-    }
-
-    @Override
-    public String dataFormatJSonSchema(String name) {
-        String answer  null;
-        if (caching) {
-            answer  (String) cache.get(dataformat- + name);
-        }
-
-        if (answer  null) {
-            answer  getJSonSchemaResolver().getDataFormatJSonSchema(name);
-            if (caching) {
-                cache.put(dataformat- + name, answer);
-            }
-        }
-
-        return answer;
-    }
-
-    @Override
-    public String languageJSonSchema(String name) {
-        // if we try to look method then its in the bean.json file
-        if (method.equals(name)) {
-            name  bean;
-        }
-
-        String answer  null;
-        if (caching) {
-            answer  (String) cache.get(language- + name);
-        }
-
-        if (answer  null) {
-            answer  getJSonSchemaResolver().getLanguageJSonSchema(name);
-            if (caching) {
-                cache.put(language- + name, answer);
-            }
-        }
-
-        return answer;
-    }
-
-}


"
"8","308","2017-04-14 10:55:56+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-10843 Ported camel-ignite wiki doc into adoc","Return-Path: <commits-return-55681-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 68E841997A
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:55:56 +0000 (UTC)
Received: (qmail 83463 invoked by uid 500); 14 Apr 2017 10:55:56 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 83407 invoked by uid 500); 14 Apr 2017 10:55:56 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 83398 invoked by uid 99); 14 Apr 2017 10:55:56 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:55:56 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 33E4FDFF9F; Fri, 14 Apr 2017 10:55:56 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <3ecfaacf3d8e4820a231f68340f2ef0d@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-10843 Ported camel-ignite wiki doc into adoc
Date: Fri, 14 Apr 2017 10:55:56 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 6b42a3534 -> 6a02de123


CAMEL-10843 Ported camel-ignite wiki doc into adoc


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/6a02de12
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/6a02de12
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/6a02de12

Branch: refs/heads/master
Commit: 6a02de123f22dc8367dee3a0a9a73ac1314c6505
Parents: 6b42a35
Author: Tomohisa Igarashi <tm.igarashi@gmail.com>
Authored: Fri Apr 14 16:02:12 2017 +0900
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:55:49 2017 +0200

----------------------------------------------------------------------
 .../src/main/docs/ignite-component.adoc         | 498 +++++++++++++++++++
 components/readme.adoc                          |   3 +
 docs/user-manual/en/SUMMARY.md                  |   1 +
 3 files changed, 502 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/6a02de12/components/camel-ignite/src/main/docs/ignite-component.adoc
----------------------------------------------------------------------
diff --git a/components/camel-ignite/src/main/docs/ignite-component.adoc b/components/camel-ignite/src/main/docs/ignite-component.adoc
new file mode 100644
index 0000000..a721719
--- /dev/null
+++ b/components/camel-ignite/src/main/docs/ignite-component.adoc
@@ -0,0 +1,498 @@
+[[Ignite-Component]]
+## Ignite Component
+
+*Available as of Camel version 2.17*
+
+https://ignite.apache.org/[Apache Ignite] In-Memory Data Fabric is a high-performance, integrated and distributed in-memory platform for computing and transacting on large-scale data sets in real-time, orders of magnitude faster than possible with traditional disk-based or flash technologies. It is designed to deliver uncompromised performance for a wide set of in-memory computing use cases from high performance computing, to the industry most advanced data grid, highly available service grid, and streaming. See all https://ignite.apache.org/features.html[features].
+
+image:https://ignite.apache.org/images/apache-ignite.png[]
+
+This component offers seven endpoints to cover much of Ignites functionality:
+
+* <<Ignite-Cache,Ignite Cache>>.
+* <<Ignite-Compute,Ignite Compute>>.
+* <<Ignite-Messaging,Ignite Messaging>>.
+* <<Ignite-Events,Ignite Events>>.
+* <<Ignite-Sets,Ignite Sets>>.
+* <<Ignite-Queues,Ignite Queues>>.
+* <<Ignite-IDGenerator,Ignite ID Generator>>.
+
+To use this component, add the following dependency to your pom.xml:
+
+[source,xml]
+----
+<dependency>
+    <groupId>org.apache.camel</groupId>
+    <artifactId>camel-ignite</artifactId>
+    <version>${camel.version}</version> <!-- use the same version as your Camel core version -->
+</dependency>
+----
+
+[IMPORTANT,titleRunning in OSGi]
+
+If running in an OSGi container, please dont miss the <<Ignite-OsgiSupport,OSGi Support>> section below.
+
+
+// component options: START
+// component options: END
+
+// endpoint options: START
+// endpoint options: END
+
+
+[[Ignite-Cache]]
+CACHE: Ignite Cache Endpoint
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+This endpoint allows you to interact with an https://apacheignite.readme.io/docs/data-grid[Ignite Cache]:
+
+[source,text]
+----
+ignite:cache:cacheName?option1value1&option2value2...
+----
+
+Offers both a Producer (to invoke cache operations on an Ignite cache) and a Consumer (to consume changes from a continuous query).
+
+The cache value is always the body of the message, whereas the cache key is always stored in the `IgniteConstants.IGNITE_CACHE_KEY` message header.
+
+Even if you configure a fixed operation in the endpoint URI, you can vary it per-exchange by setting the `IgniteConstants.IGNITE_CACHE_OPERATION` message header.
+
+Options
+++++++
+[width100%,cols1,1,1,4,1,1,optionsheader]
+|
+| Option | Type | Default value | Description | Compulsory | Consumer/producer
+| operation | IgniteCacheOperation enum | --- |
+Cache operation to perform.
+Possible values: GET, PUT, REMOVE, SIZE, REBALANCE, QUERY, CLEAR. |
+N | Producer
+
+| failIfInexistentCache | boolean | false |
+Whether to fail the initialization if the cache doesnt exist.  |
+N | Producer
+
+| cachePeekMode | CachePeekMode (Ignite) enum | ALL |
+The cache peek mode used for SIZE operations. |
+N | Producer
+
+| query | Query | --- |
+The query used for QUERY operations (as a producer) or to launch the continuous query (as a consumer). You can use a reference to a registry bean with a syntax like: ?query#myQuery. |
+Y for the consumer / N for the producer | Producer (for QUERY operation) and Consumer
+
+|remoteFilter | CacheEntryEventSerializableFilter | --- |
+An optional remote filter for the continuous query consumer. You can use a reference to a registry bean with a syntax like: ?remoteFilter#myRemoteFilter. |
+N | Consumer
+
+| oneExchangePerUpdate | boolean | true |
+Whether to send one exchange per cache update, even if multiple changes arrive in a group. |
+N | Consumer
+
+| fireExistingQueryResults | boolean | false |
+When starting the continuous query consumer, whether to fire existing cache results. |
+N  | Consumer
+
+| autoUnsubscribe | boolean | ContinuousQuery.DFLT_AUTO_UNSUBSCRIBE |
+Auto-unsubscribe flag on the Continuous Query (see Ignite docs). |
+N | Consumer
+
+| pageSize | int | ContinuousQuery.DFLT_PAGE_SIZE |
+Page size on the Continuous Query (see Ignite docs). |
+N | Consumer
+
+| timeInterval | long | ContinuousQuery.DFLT_TIME_INTERVAL |
+Time interval in millis on the Continuous Query (see Ignite docs). | N | Consumer
+|
+
+Headers used
++++++++++++
+This endpoint uses the following headers:
+[width100%,cols1,1,1,4,optionsheader]
+|
+| Header name | Constant | Expected type | Description
+| CamelIgniteCacheKey | IgniteConstants.IGNITE_CACHE_KEY | String |
+The cache key for the entry value in the message body.
+
+| CamelIgniteCacheQuery | IgniteConstants.IGNITE_CACHE_QUERY | Query |
+The query to run (producer) when invoking the QUERY operation.
+
+| CamelIgniteCacheOperation | IgniteConstants.IGNITE_CACHE_OPERATION | IgniteCacheOperation enum |
+Allows you to dynamically change the cache operation to execute (producer).
+
+| CamelIgniteCachePeekMode | IgniteConstants.IGNITE_CACHE_PEEK_MODE | CachePeekMode enum |
+Allows you to dynamically change the cache peek mode when running the SIZE operation.
+
+| CamelIgniteCacheEventType | IgniteConstants.IGNITE_CACHE_EVENT_TYPE | int (EventType constants) |
+This header carries the received event type when using the continuous query consumer.
+
+| CamelIgniteCacheName | IgniteConstants.IGNITE_CACHE_NAME | String |
+This header carries the cache name for which a continuous query event was received (consumer).
+It does not allow you to dynamically change the cache against which a producer operation is performed. Use EIPs for that (e.g. recipient list, dynamic router).
+
+| CamelIgniteCacheOldValue | IgniteConstants.IGNITE_CACHE_OLD_VALUE | Object |
+This header carries the old cache value when passed in the incoming cache event (consumer).
+|
+
+
+[[Ignite-Compute]]
+COMPUTE: Ignite Compute Endpoint
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+This endpoint allows you to run https://apacheignite.readme.io/docs/compute-grid[compute operations] on the cluster by passing in an IgniteCallable, an IgniteRunnable, an IgniteClosure, or collections of them, along with their parameters if necessary. 
+
+[source,text]
+----
+ignite:compute:endpointId?executionType...&option1value1&option2value2...
+----
+
+This endpoint only supports producers.
+
+The host part of the endpoint URI is a symbolic endpoint ID, it is not used for any purposes.
+
+The endpoint tries to run the object passed in the body of the IN message as the compute job. It expects different payload types depending on the execution type.
+
+Expected payload types
++++++++++++++++++++++
+Each operation expects the indicated types:
+[width100%,cols1,4,optionsheader]
+|
+| Operation | Expected payloads
+| CALL | Collection of IgniteCallable, or a single IgniteCallable.
+| BROADCAST | IgniteCallable, IgniteRunnable, IgniteClosure.
+| APPLY | IgniteClosure.
+| EXECUTE | ComputeTask, Class<? extends ComputeTask> or an object representing parameters if the taskName option is not null.
+| RUN | A Collection of IgniteRunnables, or a single IgniteRunnable.
+| AFFINITY_CALL | IgniteCallable.
+| AFFINITY_RUN | IgniteRunnable.
+|
+
+Options
+++++++
+[width100%,cols1,1,1,4,1,1,optionsheader]
+|
+| Option | Type | Default value | Description | Compulsory | Consumer/producer
+| executionType | IgniteComputeExecutionType enum | --- |
+The compute operation to perform. Possible values: CALL, BROADCAST, APPLY, EXECUTE, RUN, AFFINITY_CALL, AFFINITY_RUN.
+The component expects different payload types depending on the operation. See above. |
+Y | Producer
+
+| clusterGroupExpression | ClusterGroupExpression | --- |
+An expression that returns the Cluster Group for the IgniteCompute instance. |
+N | Producer
+
+| taskName | String | --- | The task name, only used when performing the EXECUTE if a ComputeTask is not passed in the payload. |
+N | Producer
+
+| computeName | String | --- | The name for the IgniteCompute instances produced by this endpoint. |
+N | Producer
+
+| timeoutMillis | Long | --- | The timeout for the compute job. | N | Producer
+|
+
+Headers used
++++++++++++
+This endpoint uses the following headers:
+[width100%,cols1,1,1,4,optionsheader]
+|
+| Header name | Constant | Expected type | Description
+| CamelIgniteComputeExecutionType | IgniteConstants.IGNITE_COMPUTE_EXECUTION_TYPE | IgniteComputeExecutionType enum |
+ Allows you to dynamically change the compute operation to perform.
+
+| CamelIgniteComputeParameters | IgniteConstants.IGNITE_COMPUTE_PARAMS | Any object or Collection of objects. |
+Parameters for APPLY, BROADCAST and EXECUTE operations.
+
+| CamelIgniteComputeReducer | IgniteConstants.IGNITE_COMPUTE_REDUCER | IgniteReducer |
+Reducer for the APPLY and CALL operations.
+
+| CamelIgniteComputeAffinityCacheName | IgniteConstants.IGNITE_COMPUTE_AFFINITY_CACHE_NAME | String |
+Affinity cache name for the AFFINITY_CALL and AFFINITY_RUN operations.
+
+| CamelIgniteComputeAffinityKey | IgniteConstants.IGNITE_COMPUTE_AFFINITY_KEY | Object |
+Affinity key for the AFFINITY_CALL and AFFINITY_RUN operations.
+|
+
+
+[[Ignite-Messaging]]
+MESSAGING: Ignite Messaging Endpoint
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+The Ignite Messaging endpoint allows you to send and consume messages from an https://apacheignite.readme.io/docs/messaging[Ignite topic].
+
+[source,text]
+----
+ignite:messaging:topicName?option1value1&option2value2...
+----
+
+This endpoint supports producers (to send messages) and consumers (to receive messages).
+
+Options
+++++++
+[width100%,cols1,1,1,4,1,1,optionsheader]
+|
+| Option | Type | Default value | Description | Compulsory | Consumer/producer
+| clusterGroupExpression | ClusterGroupExpression | --- |
+An expression that returns the Cluster Group for the IgniteMessaging instance. |
+N |Consumer and Producer
+
+| sendMode | IgniteMessagingSendMode enum | UNORDERED |
+The send mode to use.
+Possible values: UNORDERED, ORDERED. |
+N | Producer
+
+| timeout | Long | --- | The timeout for the send operation when using ordered messages. |
+N | Producer
+|
+
+Headers used
++++++++++++
+This endpoint uses the following headers:
+[width100%,cols1,1,1,4,optionsheader]
+|
+| Header name | Constant | Expected type | Description
+| CamelIgniteMessagingTopic | IgniteConstants.IGNITE_MESSAGING_TOPIC | String |
+Allows you to dynamically change the topic to send messages to (producer). 
+It also carries the topic on which a message was received (consumer).
+
+| CamelIgniteMessagingUUID | IgniteConstants.IGNITE_MESSAGING_UUID | UUID |
+This header is filled in with the UUID of the subscription when a message arrives (consumer).
+|
+
+
+[[Ignite-Events]]
+EVENTS: Ignite Events Endpoint
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+The Ignite Events endpoint allows you to https://apacheignite.readme.io/docs/events[receive events] from the Ignite cluster by creating a local event listener.
+
+[source,text]
+----
+ignite:events:endpointId?option1value1&option2value2...
+----
+
+This endpoint only supports consumers.
+The Exchanges created by this consumer put the received Event object into the body of the IN message.
+
+Options
+++++++
+[width100%,cols1,1,1,4,1,1,optionsheader]
+|
+| Option | Type | Default value | Description | Compulsory | Consumer/producer
+| events | Set<Integer> or String | EventType.EVTS_ALL |
+The event IDs to subscribe to. You can set a Set<Integer> directly where the IDs are the different constants in org.apache.ignite.events.EventType, or you can specify a comma-separated list of constant names.
+For example: EVT_CACHE_ENTRY_CREATED,EVT_CACHE_OBJECT_REMOVED,EVT_IGFS_DIR_CREATED. |
+N | Consumer
+| clusterGroupExpression | ClusterGroupExpression | --- |
+An expression that returns the Cluster Group to be used by the IgniteEvents instance. |
+N | Consumer
+|
+
+
+
+[[Ignite-Sets]]
+SETS: Ignite Sets Endpoint
+^^^^^^^^^^^^^^^^^^^^^^^^^^^
+The Ignite Sets endpoint allows you to interact with https://apacheignite.readme.io/docs/queue-and-set[Ignite Set data structures].
+
+[source,text]
+----
+ignite:sets:setName?option1value1&option2value2...
+----
+
+This endpoint only supports producers.
+
+Options
+++++++
+[width100%,cols1,1,1,4,1,1,optionsheader]
+|
+| Option | Type | Default value | Description | Compulsory | Consumer/producer
+| operation | IgniteSetOperation enum | --- |
+The operation to invoke on the Ignite Set.
+Superseded by the IgniteConstants.IGNITE_SETS_OPERATION header in the IN message.
+Possible values: CONTAINS, ADD, SIZE, REMOVE, ITERATOR, CLEAR, RETAIN_ALL, ARRAY. |
+N | Producer
+
+| configuration | CollectionConfiguration | empty CollectionConfiguration |
+The configuration for this data structure. You can also specify inner properties by using the config. prefix.
+For example: ?config.backups4 |
+N | Producer
+|
+
+Headers used
++++++++++++
+This endpoint uses the following headers:
+[width100%,cols1,1,1,4,optionsheader]
+|
+| Header name | Constant | Expected type | Description
+| CamelIgniteSetsOperation | IgniteConstants.IGNITE_SETS_OPERATION | IgniteSetOperation enum |
+Allows you to dynamically change the set operation.
+|
+
+
+[[Ignite-Queues]]
+QUEUES: Ignite Queue Endpoint
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+The Ignite Queue endpoint allows you to interact with https://apacheignite.readme.io/docs/queue-and-set[Ignite Queue data structures].
+
+[source,text]
+----
+ignite:queue:queueName?option1value1&option2value2...
+----
+
+This endpoint only supports producers.
+
+Options
+++++++
+[width100%,cols1,1,1,4,1,1,optionsheader]
+|
+| Option | Type | Default value | Description | Compulsory | Consumer/producer
+| operation | IgniteQueueOperation enum | --- |
+The operation to invoke on the Ignite Queue.
+Superseded by the IgniteConstants.IGNITE_QUEUE_OPERATION header in the IN message.
+Possible values: CONTAINS, ADD, SIZE, REMOVE, ITERATOR, CLEAR, RETAIN_ALL, ARRAY, DRAIN, ELEMENT, PEEK, OFFER, POLL, TAKE, PUT. |
+N | Producer
+
+| configuration | CollectionConfiguration | empty CollectionConfiguration |
+The configuration for this data structure. You can also specify inner properties by using the config. prefix.
+For example: ?config.backups4 |
+N | Producer
+
+| timeoutMillis | Long | | --- |
+The timeout in milliseconds to use when invoking the OFFER or POLL operations. |
+N | Producer
+
+| capacity | int | --- (unbounded) |
+The queue capacity if youd like to use a bounded queue. |
+N | Producer
+|
+
+Headers used
++++++++++++
+This endpoint uses the following headers:
+[width100%,cols1,1,1,4,optionsheader]
+|
+| Header name | Constant | Expected type | Description
+| CamelIgniteQueueOperation | IgniteConstants.IGNITE_QUEUE_OPERATION | IgniteQueueOperation enum |
+Allows you to dynamically change the queue operation.
+
+| CamelIgniteQueueMaxElements | IgniteConstants.IGNITE_QUEUE_MAX_ELEMENTS | Integer or int |
+When invoking the DRAIN operation, the amount of items to drain.
+
+| CamelIgniteQueueTransferredCount | IgniteConstants.IGNITE_QUEUE_TRANSFERRED_COUNT | Integer or int |
+The amount of items transferred as the result of the DRAIN operation.
+
+| CamelIgniteQueueTimeoutMillis | IgniteConstants.IGNITE_QUEUE_TIMEOUT_MILLIS | Long or long |
+Dynamically sets the timeout in milliseconds to use when invoking the OFFER or POLL operations. 
+|
+
+
+[[Ignite-IDGenerator]]
+IDGEN: Ignite ID Generator Endpoint
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+The Ignite ID Generator endpoint allows you to interact with https://apacheignite.readme.io/docs/id-generator[Ignite Atomic Sequences and ID Generators].
+
+[source,text]
+----
+ignite:idgen:sequenceName?option1value1&option2value2...
+----
+
+This endpoint only supports producers.
+
+Options
+++++++
+[width100%,cols1,1,1,4,1,1,optionsheader]
+|
+| Option | Type | Default value | Description | Compulsory | Consumer/producer
+| operation | IgniteIdGenOperation enum | --- |
+The operation to invoke on the Ignite ID Generator.
+Superseded by the IgniteConstants.IGNITE_IDGEN_OPERATION header in the IN message.
+Possible values: ADD_AND_GET, GET, GET_AND_ADD, GET_AND_INCREMENT, INCREMENT_AND_GET. |
+N | Producer
+
+| configuration | CollectionConfiguration | empty CollectionConfiguration |
+The configuration for this data structure. You can also specify inner properties by using the config. prefix.
+For example: ?config.backups4 |
+N | Producer
+|
+
+
+
+[[Ignite-InitializeComponent]]
+Initializing the Ignite component
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+Each instance of the Ignite component is associated with an underlying org.apache.ignite.Ignite instance. You can interact with two Ignite clusters by initializing two instances of the Ignite component and binding them to different IgniteConfigurations. There are 3 ways to initialize the Ignite component:
+
+* By passing in an existing org.apache.ignite.Ignite instance. Heres an example using Spring config:
+
+[source,xml]
+------------------------------------------------------------
+<bean nameignite classorg.apache.camel.component.ignite.IgniteComponent>
+   <property nameignite refignite />
+</bean>
+------------------------------------------------------------
+
+* By passing in an IgniteConfiguration, either constructed programmatically or through inversion of control (e.g. Spring, Blueprint, etc.). Heres an example using Spring config:
+
+[source,xml]
+-------------------------------------------------------------------
+<bean nameignite classorg.apache.camel.component.ignite.IgniteComponent>
+   <property nameigniteConfiguration>
+      <bean classorg.apache.ignite.configuration.IgniteConfiguration>
+         [...]
+      </bean>
+   </property>
+</bean>
+-------------------------------------------------------------------
+
+* By passing in a URL, InputStream or String URL to a Spring-based configuration file. In all three cases, you inject them in the same property called configurationResource. Heres an example using Spring config:
+
+[source,xml]
+-------------------------------------------------------------------
+<bean nameignite classorg.apache.camel.component.ignite.IgniteComponent>
+   <property nameconfigurationResource valuefile:[...]/ignite-config.xml />
+</bean>
+-------------------------------------------------------------------
+
+Additionally, if using Camel programmatically, there are several convenience static methods in IgniteComponent that return a component out of any of these configuration options:
+
+* IgniteComponent#fromIgnite(Ignite)
+* IgniteComponent#fromConfiguration(IgniteConfiguration)
+* IgniteComponent#fromInputStream(InputStream)
+* IgniteComponent#fromUrl(URL)
+* IgniteComponent#fromLocation(String)
+
+You may use those methods to quickly create an IgniteComponent with your chosen configuration technique.
+
+General options
+^^^^^^^^^^^^^^
+
+All endpoints share the following options:
+[width100%,cols1,1,1,4,1,1,optionsheader]
+|
+| Option | Type | Default value | Description
+| propagateIncomingBodyIfNoReturnValue | boolean | true |
+If the underlying Ignite operation returns void (no return type), this flag determines whether the producer will copy the IN body into the OUT body.
+
+| treatCollectionsAsCacheObjects | boolean | false |
+Some Ignite operations can deal with multiple elements at once, if passed a Collection. Enabling this option will treat Collections as a single object, invoking the operation variant for cardinality 1.
+|
+
+OSGi Support
+^^^^^^^^^^^
+
+[TIP]
+
+Apache Ignite supports OSGi from version 1.5.0.final onwards.
+
+
+
+[NOTE,titlewhen installing on Apache Karaf]
+
+1. Installing the camel-ignite feature will require the Ignite feature repository to be present.
+1. You must have exported from the JRE (system bundle) some low-level, non-standard packages that Ignite requires.
+
+Please refer to the OSGi section in the Ignite documentation for more information.
+
+
+
+See Also
+^^^^^^^
+
+* http://camel.apache.org/configuring-camel.html[Configuring Camel]
+* http://camel.apache.org/component.html[Component]
+* http://camel.apache.org/endpoint.html[Endpoint]
+* http://camel.apache.org/getting-started.html[Getting Started]
\ No newline at end of file

http://git-wip-us.apache.org/repos/asf/camel/blob/6a02de12/components/readme.adoc
----------------------------------------------------------------------
diff --git a/components/readme.adoc b/components/readme.adoc
index 2909fcb..f5734d4 100644
--- a/components/readme.adoc
+++ b/components/readme.adoc
@@ -293,6 +293,9 @@ Number of Components: 231 in 184 JAR artifacts (14 deprecated)
 | link:camel-ibatis/src/main/docs/ibatis-component.adoc[iBatis] (camel-ibatis) +
 `ibatis:statement` | 1.2 | *deprecated* Performs a query poll insert update or delete in a relational database using Apache iBATIS.
 
+| link:camel-ignite/src/main/docs/ignite-component.adoc[Ignite] (camel-ignite) +
+`ignite:endpointName` | 1.17 | The Ignite Component integrates Apache Camel with Apache Ignite
+
 | link:camel-infinispan/src/main/docs/infinispan-component.adoc[Infinispan] (camel-infinispan) +
 `infinispan:cacheName` | 2.13 | For reading/writing from/to Infinispan distributed key/value store and data grid.
 

http://git-wip-us.apache.org/repos/asf/camel/blob/6a02de12/docs/user-manual/en/SUMMARY.md
----------------------------------------------------------------------
diff --git a/docs/user-manual/en/SUMMARY.md b/docs/user-manual/en/SUMMARY.md
index 96955c4..a1bbc02 100644
--- a/docs/user-manual/en/SUMMARY.md
+++ b/docs/user-manual/en/SUMMARY.md
@@ -209,6 +209,7 @@
 	* [HTTP](http-component.adoc)
 	* [HTTP4](http4-component.adoc)
 	* [iBatis](ibatis-component.adoc)
+	* [Ignite](ignite-component.adoc)
 	* [IMAP](imap-component.adoc)
 	* [Infinispan](infinispan-component.adoc)
 	* [InfluxDB](influxdb-component.adoc)


"
"9","309","2017-04-14 10:57:46+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[01/20] camel git commit: CAMEL-10968: make
 camel-example-cxf-blueprint tests pass on Java 9","Return-Path: <commits-return-55682-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 7A45C19986
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Received: (qmail 90778 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 90716 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 90707 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 37964E0061; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:57:46 -0000
Message-Id: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [01/20] camel git commit: CAMEL-10968: make
 camel-example-cxf-blueprint tests pass on Java 9

Repository: camel
Updated Branches:
  refs/heads/master 6a02de123 -> ddd2347d9


CAMEL-10968: make camel-example-cxf-blueprint tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/ddd2347d
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/ddd2347d
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/ddd2347d

Branch: refs/heads/master
Commit: ddd2347d92c723557cbfc2143bfd648db48ed484
Parents: 1ca0ec4
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 11:56:58 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-cxf-blueprint/pom.xml | 20 +++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/ddd2347d/examples/camel-example-cxf-blueprint/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-cxf-blueprint/pom.xml b/examples/camel-example-cxf-blueprint/pom.xml
index 6000401..acf9a11 100644
--- a/examples/camel-example-cxf-blueprint/pom.xml
+++ b/examples/camel-example-cxf-blueprint/pom.xml
@@ -97,5 +97,23 @@
       </plugin>
     </plugins>
   </build>
-
+  
+  <profiles>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.activation,java.xml.bind,java.xml.ws,jdk.xml.bind --add-opens java.base/java.langALL-UNNAMED --add-exportsjava.naming/com.sun.jndi.ldapALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bindALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bind.v2ALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bind.v2.runtime.reflectALL-UNNAMED --add-exportsjava.xml.ws/com.sun.xml.internal.messaging.saaj.soap.implALL-UNNAMED --add-exportsjava.xml.ws/com.sun.xml.internal.messaging.saaj.soapALL-UNNAMED --add-opens java.base/java.netALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bind.v2.runtimeALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>


"
"10","311","2017-04-14 10:57:47+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[02/20] camel git commit: CAMEL-10968: make camel-example-cxf-tomcat
 tests pass on Java 9","Return-Path: <commits-return-55684-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 96DBA19989
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Received: (qmail 91002 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 90909 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 90798 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 39846DFFAB; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:57:47 -0000
Message-Id: <e9859842f13443f6b7ce077840356411@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [02/20] camel git commit: CAMEL-10968: make camel-example-cxf-tomcat
 tests pass on Java 9

CAMEL-10968: make camel-example-cxf-tomcat tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/8a23104b
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/8a23104b
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/8a23104b

Branch: refs/heads/master
Commit: 8a23104b554fcc9113a1913f49a4082c67d28acc
Parents: 44d333f
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 11:54:47 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-cxf-tomcat/pom.xml | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/8a23104b/examples/camel-example-cxf-tomcat/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-cxf-tomcat/pom.xml b/examples/camel-example-cxf-tomcat/pom.xml
index 8f1c898..6336aa9 100755
--- a/examples/camel-example-cxf-tomcat/pom.xml
+++ b/examples/camel-example-cxf-tomcat/pom.xml
@@ -137,6 +137,22 @@
         <tomcat.url>http://localhost:8080/manager</tomcat.url>
       </properties>
     </profile>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.activation,java.xml.bind,java.xml.ws,jdk.xml.bind --add-opens java.base/java.langALL-UNNAMED --add-exportsjava.naming/com.sun.jndi.ldapALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bindALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bind.v2ALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bind.v2.runtime.reflectALL-UNNAMED --add-exportsjava.xml.ws/com.sun.xml.internal.messaging.saaj.soap.implALL-UNNAMED --add-exportsjava.xml.ws/com.sun.xml.internal.messaging.saaj.soapALL-UNNAMED --add-opens java.base/java.netALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bind.v2.runtimeALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
   </profiles>
 
 </project>


"
"11","310","2017-04-14 10:57:48+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[03/20] camel git commit: CAMEL-10968: make camel-cxf-transport tests
 pass on Java 9","Return-Path: <commits-return-55683-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 8A55319987
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Received: (qmail 90894 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 90831 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 90717 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 3810ADFB94; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:57:48 -0000
Message-Id: <8944f48bb72241b994053539c7e0edf4@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [03/20] camel git commit: CAMEL-10968: make camel-cxf-transport tests
 pass on Java 9

CAMEL-10968: make camel-cxf-transport tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/a01f14cd
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/a01f14cd
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/a01f14cd

Branch: refs/heads/master
Commit: a01f14cdda7b576e42be4357625fec374555f6ae
Parents: 7b2d32e
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 11:06:00 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 components/camel-cxf-transport/pom.xml | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/a01f14cd/components/camel-cxf-transport/pom.xml
----------------------------------------------------------------------
diff --git a/components/camel-cxf-transport/pom.xml b/components/camel-cxf-transport/pom.xml
index 93d650b..bc76a6a 100644
--- a/components/camel-cxf-transport/pom.xml
+++ b/components/camel-cxf-transport/pom.xml
@@ -215,5 +215,25 @@
       </plugin>
     </plugins>
   </build>
+  
+  <profiles>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <reuseForks>true</reuseForks>
+              <argLine>--add-modules java.xml.ws --add-opens java.base/java.langALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 
 </project>


"
"12","326","2017-04-14 10:57:49+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[04/20] camel git commit: CAMEL-10141: make
 camel-example-loan-broker-jms tests pass on Java 9","Return-Path: <commits-return-55686-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id C95E91999B
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:51 +0000 (UTC)
Received: (qmail 91220 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91103 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 90934 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 3A26FDFF36; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:57:49 -0000
Message-Id: <9940ce4909db4f58bedb1ca432783218@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [04/20] camel git commit: CAMEL-10141: make
 camel-example-loan-broker-jms tests pass on Java 9

CAMEL-10141: make camel-example-loan-broker-jms tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/e6964f1e
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/e6964f1e
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/e6964f1e

Branch: refs/heads/master
Commit: e6964f1e74bc2a2f9d76450447332ce03570cf53
Parents: 3f9ebd5
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 10:48:15 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-loan-broker-jms/pom.xml | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/e6964f1e/examples/camel-example-loan-broker-jms/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-loan-broker-jms/pom.xml b/examples/camel-example-loan-broker-jms/pom.xml
index 186036b..0668ecf 100644
--- a/examples/camel-example-loan-broker-jms/pom.xml
+++ b/examples/camel-example-loan-broker-jms/pom.xml
@@ -177,6 +177,22 @@
         <target.main.class>org.apache.camel.loanbroker.Client</target.main.class>
       </properties>
     </profile>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.xml.bind,java.xml.ws --add-opens java.base/java.langALL-UNNAMED --add-opens java.xml.bind/com.sun.xml.internal.bind.v2.runtimeALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
   </profiles>
 
 </project>


"
"13","327","2017-04-14 10:57:50+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[05/20] camel git commit: CAMEL-10141: make camel-example-cdi-example
 tests pass on Java 9","Return-Path: <commits-return-55687-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 009461999D
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:52 +0000 (UTC)
Received: (qmail 91363 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91144 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 90941 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 3A9E9DFFD7; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:57:50 -0000
Message-Id: <e4eb9713620046ea85a7803fdcaefd90@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [05/20] camel git commit: CAMEL-10141: make camel-example-cdi-example
 tests pass on Java 9

CAMEL-10141: make camel-example-cdi-example tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/1e31f1e4
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/1e31f1e4
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/1e31f1e4

Branch: refs/heads/master
Commit: 1e31f1e4265f4271d82f54f86cb0ba85f426f54d
Parents: 6a02de1
Author: jpoth <poth.john@gmail.com>
Authored: Thu Apr 13 18:35:07 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-cdi-xml/pom.xml | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/1e31f1e4/examples/camel-example-cdi-xml/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-cdi-xml/pom.xml b/examples/camel-example-cdi-xml/pom.xml
index e365cc2..9758b4a 100755
--- a/examples/camel-example-cdi-xml/pom.xml
+++ b/examples/camel-example-cdi-xml/pom.xml
@@ -114,4 +114,22 @@
     </plugins>
   </build>
 
+  <profiles>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.xml.bind --add-opens java.base/java.langALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>


"
"14","312","2017-04-14 10:57:51+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[06/20] camel git commit: CAMEL-10141: make camel-example-cdi-test
 tests pass on Java 9","Return-Path: <commits-return-55685-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id DD01C1998A
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Received: (qmail 91159 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91081 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 90933 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 3D192E04FA; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:57:51 -0000
Message-Id: <17603fa71f9f4446851fd50f33bc248a@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [06/20] camel git commit: CAMEL-10141: make camel-example-cdi-test
 tests pass on Java 9

CAMEL-10141: make camel-example-cdi-test tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/d590e921
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/d590e921
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/d590e921

Branch: refs/heads/master
Commit: d590e92118a20b07c8a7d136d754a26e5055af86
Parents: 1e31f1e
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 10:45:56 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-cdi-test/pom.xml | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/d590e921/examples/camel-example-cdi-test/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-cdi-test/pom.xml b/examples/camel-example-cdi-test/pom.xml
index d1b5765..697847c 100644
--- a/examples/camel-example-cdi-test/pom.xml
+++ b/examples/camel-example-cdi-test/pom.xml
@@ -106,7 +106,24 @@
         </dependencies>
       </plugin>
     </plugins>
-
   </build>
 
+  <profiles>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.xml.bind --add-opens java.base/java.langALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>


"
"15","313","2017-04-14 10:57:52+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[07/20] camel git commit: CAMEL-10141: make camel-example-cdi-metrics
 tests pass on Java 9","Return-Path: <commits-return-55688-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 21F8E1998B
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:47 +0000 (UTC)
Received: (qmail 91395 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91199 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91016 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 3FDBAE93E1; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:57:52 -0000
Message-Id: <17d5bb4af9784983a8ac362b3e589ea3@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [07/20] camel git commit: CAMEL-10141: make camel-example-cdi-metrics
 tests pass on Java 9

CAMEL-10141: make camel-example-cdi-metrics tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/73b61ef3
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/73b61ef3
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/73b61ef3

Branch: refs/heads/master
Commit: 73b61ef32533aac448fe5c31d2f28f0373ad5d90
Parents: d590e92
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 10:46:37 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-cdi-metrics/pom.xml | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/73b61ef3/examples/camel-example-cdi-metrics/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-cdi-metrics/pom.xml b/examples/camel-example-cdi-metrics/pom.xml
index 08401f7..5f09f7c 100755
--- a/examples/camel-example-cdi-metrics/pom.xml
+++ b/examples/camel-example-cdi-metrics/pom.xml
@@ -127,4 +127,22 @@
     </plugins>
   </build>
 
+  <profiles>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.xml.bind --add-opens java.base/java.langALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>


"
"16","328","2017-04-14 10:57:53+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[08/20] camel git commit: CAMEL-10141: make
 camel-example-cdi-properties tests pass on Java 9","Return-Path: <commits-return-55689-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 074241999E
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:52 +0000 (UTC)
Received: (qmail 91428 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91251 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91037 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 429B3E943C; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:57:53 -0000
Message-Id: <4901736312b14536a40a9ab29e998af5@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [08/20] camel git commit: CAMEL-10141: make
 camel-example-cdi-properties tests pass on Java 9

CAMEL-10141: make camel-example-cdi-properties tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/061eb241
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/061eb241
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/061eb241

Branch: refs/heads/master
Commit: 061eb2416cd5863cf845b330740cacaed83321cd
Parents: 73b61ef
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 10:46:56 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-cdi-properties/pom.xml | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/061eb241/examples/camel-example-cdi-properties/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-cdi-properties/pom.xml b/examples/camel-example-cdi-properties/pom.xml
index 24adc77..ae2ae06 100755
--- a/examples/camel-example-cdi-properties/pom.xml
+++ b/examples/camel-example-cdi-properties/pom.xml
@@ -124,4 +124,22 @@
     </plugins>
   </build>
 
+  <profiles>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.xml.bind --add-opens java.base/java.langALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>


"
"17","319","2017-04-14 10:57:54+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[09/20] camel git commit: CAMEL-10141: make
 camel-example-reportincident tests pass on Java 9","Return-Path: <commits-return-55694-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 595FE19993
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:47 +0000 (UTC)
Received: (qmail 91766 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91604 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91097 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 4545CE9635; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:57:54 -0000
Message-Id: <4b84d50cca2f408189db81727d97a39f@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [09/20] camel git commit: CAMEL-10141: make
 camel-example-reportincident tests pass on Java 9

CAMEL-10141: make camel-example-reportincident tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/1b8949f5
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/1b8949f5
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/1b8949f5

Branch: refs/heads/master
Commit: 1b8949f593eed1fb0b97bcf0d138f2be113d0d2e
Parents: e6964f1
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 10:59:57 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-reportincident/pom.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/1b8949f5/examples/camel-example-reportincident/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-reportincident/pom.xml b/examples/camel-example-reportincident/pom.xml
index 92091d7..b820ac1 100755
--- a/examples/camel-example-reportincident/pom.xml
+++ b/examples/camel-example-reportincident/pom.xml
@@ -208,7 +208,7 @@
           <plugin>
             <artifactId>maven-surefire-plugin</artifactId>
             <configuration>
-              <argLine>--add-modules java.xml.bind,java.xml.ws --add-opens java.base/java.langALL-UNNAMED --add-opens java.base/java.lang.invokeALL-UNNAMED --add-opens java.base/java.utilALL-UNNAMED</argLine>
+              <argLine>--add-modules java.xml.bind,java.xml.ws --add-opens java.base/java.langALL-UNNAMED --add-opens java.base/java.lang.invokeALL-UNNAMED --add-opens java.base/java.utilALL-UNNAMED --add-opens java.xml.bind/com.sun.xml.internal.bind.v2.runtimeALL-UNNAMED</argLine>
             </configuration>
           </plugin>
         </plugins>


"
"18","314","2017-04-14 10:57:55+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[10/20] camel git commit: CAMEL-10141: make
 camel-example-rest-servlet tests pass on Java 9","Return-Path: <commits-return-55690-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 330331998C
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:47 +0000 (UTC)
Received: (qmail 91520 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91356 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91070 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 48086E9676; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:57:55 -0000
Message-Id: <d0654af72ef94f628420b970c145ccf5@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [10/20] camel git commit: CAMEL-10141: make
 camel-example-rest-servlet tests pass on Java 9

CAMEL-10141: make camel-example-rest-servlet tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/3f9ebd5a
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/3f9ebd5a
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/3f9ebd5a

Branch: refs/heads/master
Commit: 3f9ebd5a0a9e23e5b8c2f10abdf0c1c6ca4eda90
Parents: 061eb24
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 10:47:16 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-cdi-rest-servlet/pom.xml | 43 +++++++++++++++++++-
 1 file changed, 42 insertions(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/3f9ebd5a/examples/camel-example-cdi-rest-servlet/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-cdi-rest-servlet/pom.xml b/examples/camel-example-cdi-rest-servlet/pom.xml
index 260d778..aac0973 100755
--- a/examples/camel-example-cdi-rest-servlet/pom.xml
+++ b/examples/camel-example-cdi-rest-servlet/pom.xml
@@ -163,6 +163,48 @@
         </dependency>
       </dependencies>
     </profile>
+    <profile>
+      <id>jdk9-build-jetty</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <dependencies>
+        <dependency>
+          <groupId>org.eclipse.jetty</groupId>
+          <artifactId>jetty-webapp</artifactId>
+          <version>${jetty9-version}</version>
+          <scope>runtime</scope>
+        </dependency>
+        <dependency>
+          <groupId>org.eclipse.jetty</groupId>
+          <artifactId>jetty-annotations</artifactId>
+          <version>${jetty9-version}</version>
+          <scope>runtime</scope>
+        </dependency>
+        <dependency>
+          <groupId>org.jboss.arquillian.container</groupId>
+          <artifactId>arquillian-jetty-embedded-9</artifactId>
+          <version>1.0.0.CR2</version>
+          <scope>test</scope>
+          <exclusions>
+            <exclusion>
+              <groupId>org.jboss.arquillian.container</groupId>
+              <artifactId>arquillian-container-spi</artifactId>
+            </exclusion>
+          </exclusions>
+        </dependency>
+      </dependencies>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.xml.bind --add-opens java.base/java.langALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
   </profiles>
 
   <build>
@@ -175,5 +217,4 @@
       </plugin>
     </plugins>
   </build>
-
 </project>


"
"19","325","2017-04-14 10:57:56+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[11/20] camel git commit: CAMEL-10141: make
 camel-example-pojo-messaging tests pass on Java 9","Return-Path: <commits-return-55691-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 3406A1998D
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:47 +0000 (UTC)
Received: (qmail 91575 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91406 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91066 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 4AC7EE967A; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:57:56 -0000
Message-Id: <7bc5feb92c534ce9a2bf51de8ce26017@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [11/20] camel git commit: CAMEL-10141: make
 camel-example-pojo-messaging tests pass on Java 9

CAMEL-10141: make camel-example-pojo-messaging tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/fdeb3475
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/fdeb3475
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/fdeb3475

Branch: refs/heads/master
Commit: fdeb34752943b2bf4723407b99da875708fae852
Parents: 1b8949f
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 11:00:21 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-pojo-messaging/pom.xml | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/fdeb3475/examples/camel-example-pojo-messaging/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-pojo-messaging/pom.xml b/examples/camel-example-pojo-messaging/pom.xml
index f71b3b7..34b1bd6 100644
--- a/examples/camel-example-pojo-messaging/pom.xml
+++ b/examples/camel-example-pojo-messaging/pom.xml
@@ -140,4 +140,22 @@
     </plugins>
   </build>
 
+  <profiles>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.xml.bind --add-opens java.base/java.langALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>


"
"20","316","2017-04-14 10:57:57+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[12/20] camel git commit: CAMEL-10141: make camel-example-management
 tests pass on Java 9","Return-Path: <commits-return-55692-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 4BD5F19990
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:47 +0000 (UTC)
Received: (qmail 91591 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91448 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91069 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 4D7EDE9684; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:57:57 -0000
Message-Id: <30204927025749bbbc58720eb5a3f27c@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [12/20] camel git commit: CAMEL-10141: make camel-example-management
 tests pass on Java 9

CAMEL-10141: make camel-example-management tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/9e7b6c6c
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/9e7b6c6c
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/9e7b6c6c

Branch: refs/heads/master
Commit: 9e7b6c6c7bb423f36dd3a6db98635e2a95a98acc
Parents: fdeb347
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 11:00:56 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-management/pom.xml | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/9e7b6c6c/examples/camel-example-management/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-management/pom.xml b/examples/camel-example-management/pom.xml
index 66f0b1f..d8db087 100644
--- a/examples/camel-example-management/pom.xml
+++ b/examples/camel-example-management/pom.xml
@@ -129,4 +129,22 @@
     </plugins>
   </build>
 
+  <profiles>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.xml.bind --add-opens java.base/java.langALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>


"
"21","318","2017-04-14 10:57:58+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[13/20] camel git commit: CAMEL-10141: make camel-example-spring-jms
 tests pass on Java 9","Return-Path: <commits-return-55695-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 54A6519992
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:47 +0000 (UTC)
Received: (qmail 91765 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91644 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91202 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 50854F2181; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:57:58 -0000
Message-Id: <df7aef9137e64879b2a51fa8161c519e@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [13/20] camel git commit: CAMEL-10141: make camel-example-spring-jms
 tests pass on Java 9

CAMEL-10141: make camel-example-spring-jms tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/3d9a999c
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/3d9a999c
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/3d9a999c

Branch: refs/heads/master
Commit: 3d9a999c035aa10bff547d0d3ee053528b615919
Parents: 9e7b6c6
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 11:01:21 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-spring-jms/pom.xml | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/3d9a999c/examples/camel-example-spring-jms/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-spring-jms/pom.xml b/examples/camel-example-spring-jms/pom.xml
index da360e0..af430aa 100644
--- a/examples/camel-example-spring-jms/pom.xml
+++ b/examples/camel-example-spring-jms/pom.xml
@@ -128,6 +128,22 @@
         <target.main.class>org.apache.camel.example.client.CamelClientEndpoint</target.main.class>
       </properties>
     </profile>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.xml.bind --add-opens java.base/java.langALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
   </profiles>
   <build>
 
@@ -168,5 +184,4 @@
     </plugins>
 
   </build>
-
 </project>


"
"22","317","2017-04-14 10:57:59+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[14/20] camel git commit: CAMEL-10141: make camel-example-osgi-rmi
 tests pass on Java 9","Return-Path: <commits-return-55693-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 4D23F19991
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:47 +0000 (UTC)
Received: (qmail 91742 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91505 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91105 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 534C0F218F; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:57:59 -0000
Message-Id: <a519cd2689fb4af09c8ded1b17b83f65@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [14/20] camel git commit: CAMEL-10141: make camel-example-osgi-rmi
 tests pass on Java 9

CAMEL-10141: make camel-example-osgi-rmi tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/047761a7
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/047761a7
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/047761a7

Branch: refs/heads/master
Commit: 047761a787d646759069e1ac318ba3523816ec08
Parents: 3d9a999
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 11:01:50 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-osgi-rmi/pom.xml | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/047761a7/examples/camel-example-osgi-rmi/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-osgi-rmi/pom.xml b/examples/camel-example-osgi-rmi/pom.xml
index dce39d2..82c588d 100644
--- a/examples/camel-example-osgi-rmi/pom.xml
+++ b/examples/camel-example-osgi-rmi/pom.xml
@@ -87,6 +87,22 @@
         <target.main.class>org.apache.camel.example.osgi.HelloClient</target.main.class>
       </properties>
     </profile>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.xml.bind --add-opens java.base/java.langALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
   </profiles>
 
   <build>


"
"23","322","2017-04-14 10:58:00+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[15/20] camel git commit: CAMEL-10141: make camel-example-cafe tests
 pass on Java 9","Return-Path: <commits-return-55699-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6B66619996
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:47 +0000 (UTC)
Received: (qmail 92052 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91844 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91290 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 56205F2192; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:58:00 -0000
Message-Id: <ad79d72ff20f4e9e9063531f4c8a0503@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [15/20] camel git commit: CAMEL-10141: make camel-example-cafe tests
 pass on Java 9

CAMEL-10141: make camel-example-cafe tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/f0cc62ec
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/f0cc62ec
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/f0cc62ec

Branch: refs/heads/master
Commit: f0cc62ec403817c3f0050c870a5ad06732fb4bba
Parents: 047761a
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 11:02:13 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-cafe/pom.xml | 20 +++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/f0cc62ec/examples/camel-example-cafe/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-cafe/pom.xml b/examples/camel-example-cafe/pom.xml
index 3255469..5e88b79 100755
--- a/examples/camel-example-cafe/pom.xml
+++ b/examples/camel-example-cafe/pom.xml
@@ -118,5 +118,23 @@
 
     </plugins>
   </build>
-
+  
+  <profiles>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.xml.bind</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>


"
"24","320","2017-04-14 10:58:01+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[16/20] camel git commit: CAMEL-10968: skip CXF tests on Java 9 until
 CXF-7270 is resolved","Return-Path: <commits-return-55701-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 7273819998
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:47 +0000 (UTC)
Received: (qmail 92069 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91902 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91388 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 59D94F219F; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:58:01 -0000
Message-Id: <f223533da6264a95bdf7c35eb48a0936@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [16/20] camel git commit: CAMEL-10968: skip CXF tests on Java 9 until
 CXF-7270 is resolved

CAMEL-10968: skip CXF tests on Java 9 until CXF-7270 is resolved


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/925bfe65
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/925bfe65
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/925bfe65

Branch: refs/heads/master
Commit: 925bfe6592ca4831497bfe1c79e8e98f78c0f908
Parents: a01f14c
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 11:07:21 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-cxf/pom.xml              | 20 ++++++++++++++++
 .../pom.xml                                     | 22 ++++++++++++++++++
 tests/camel-blueprint-cxf-test/pom.xml          | 24 +++++++++++++++++++-
 3 files changed, 65 insertions(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/925bfe65/examples/camel-example-cxf/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-cxf/pom.xml b/examples/camel-example-cxf/pom.xml
index cc3f12f..d87f88f 100644
--- a/examples/camel-example-cxf/pom.xml
+++ b/examples/camel-example-cxf/pom.xml
@@ -245,6 +245,26 @@
         <target.main.class>org.apache.camel.example.cxf.jaxrs.Client</target.main.class>
       </properties>
     </profile>
+    <profile>
+      <id>java9</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <excludes>
+                <!--ignore tests until CXF-7270 is resolved and released-->
+                <exclude>**/**</exclude>
+              </excludes>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
   </profiles>
 
   <build>

http://git-wip-us.apache.org/repos/asf/camel/blob/925bfe65/examples/camel-example-reportincident-wssecurity/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-reportincident-wssecurity/pom.xml b/examples/camel-example-reportincident-wssecurity/pom.xml
index 143583f..8ff14c2 100644
--- a/examples/camel-example-reportincident-wssecurity/pom.xml
+++ b/examples/camel-example-reportincident-wssecurity/pom.xml
@@ -226,4 +226,26 @@
     </plugins>
   </build>
 
+  <profiles>
+    <profile>
+      <id>java9</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <excludes>
+                <!--ignore tests until CXF-7270 is resolved and released-->
+                <exclude>**/**</exclude>
+              </excludes>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>

http://git-wip-us.apache.org/repos/asf/camel/blob/925bfe65/tests/camel-blueprint-cxf-test/pom.xml
----------------------------------------------------------------------
diff --git a/tests/camel-blueprint-cxf-test/pom.xml b/tests/camel-blueprint-cxf-test/pom.xml
index 6948da8..3e790b1 100644
--- a/tests/camel-blueprint-cxf-test/pom.xml
+++ b/tests/camel-blueprint-cxf-test/pom.xml
@@ -195,5 +195,27 @@
     </dependency>
 
   </dependencies>
-
+  
+  <profiles>
+    <profile>
+      <id>java9</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <excludes>
+                <!--ignore tests until CXF-7270 is resolved and released-->
+                <exclude>**/**</exclude>
+              </excludes>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>


"
"25","324","2017-04-14 10:58:02+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[17/20] camel git commit: CAMEL-10968: skip CXF tests on Java 9 until
 CXF-7270 is resolved","Return-Path: <commits-return-55697-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 7319E1999A
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:47 +0000 (UTC)
Received: (qmail 92000 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91764 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91155 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 5CE9BE0117; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:58:02 -0000
Message-Id: <6ae8575032e649018fd66bcbb39bfa36@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [17/20] camel git commit: CAMEL-10968: skip CXF tests on Java 9 until
 CXF-7270 is resolved

CAMEL-10968: skip CXF tests on Java 9 until CXF-7270 is resolved


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/7b2d32e1
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/7b2d32e1
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/7b2d32e1

Branch: refs/heads/master
Commit: 7b2d32e1292f7d5f2515b018527aba8d6e95846b
Parents: f0cc62e
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 11:04:57 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 components/camel-cxf/pom.xml | 21 ++++++++++++++++++++-
 1 file changed, 20 insertions(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/7b2d32e1/components/camel-cxf/pom.xml
----------------------------------------------------------------------
diff --git a/components/camel-cxf/pom.xml b/components/camel-cxf/pom.xml
index 70f782e..2503adf 100644
--- a/components/camel-cxf/pom.xml
+++ b/components/camel-cxf/pom.xml
@@ -492,6 +492,25 @@
         </dependency>
       </dependencies>
     </profile>
+    <profile>
+      <id>java9</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <excludes>
+                <!--ignore tests until CXF-7270 is resolved and released-->
+                <exclude>**/**</exclude>
+              </excludes>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
   </profiles>
-
 </project>


"
"26","323","2017-04-14 10:58:03+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[18/20] camel git commit: CAMEL-10968: make camel-example-cxf-osgi
 tests pass on Java 9","Return-Path: <commits-return-55698-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6D85519997
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:47 +0000 (UTC)
Received: (qmail 91969 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91811 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91172 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 5F7D6F21A2; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:58:03 -0000
Message-Id: <b7b76d890975415b8e3d8088aa623a6f@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [18/20] camel git commit: CAMEL-10968: make camel-example-cxf-osgi
 tests pass on Java 9

CAMEL-10968: make camel-example-cxf-osgi tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/bb7bd6ab
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/bb7bd6ab
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/bb7bd6ab

Branch: refs/heads/master
Commit: bb7bd6ab35a2984bb041e7021039136678315d47
Parents: 925bfe6
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 11:50:01 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-cxf-osgi/pom.xml | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/bb7bd6ab/examples/camel-example-cxf-osgi/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-cxf-osgi/pom.xml b/examples/camel-example-cxf-osgi/pom.xml
index 04e8e79..8c2c773 100644
--- a/examples/camel-example-cxf-osgi/pom.xml
+++ b/examples/camel-example-cxf-osgi/pom.xml
@@ -159,4 +159,23 @@
       </plugin>
     </plugins>
   </build>
+  
+  <profiles>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.activation,java.xml.bind,java.xml.ws,jdk.xml.bind --add-opens java.base/java.langALL-UNNAMED --add-exportsjava.naming/com.sun.jndi.ldapALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bindALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bind.v2ALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bind.v2.runtime.reflectALL-UNNAMED --add-exportsjava.xml.ws/com.sun.xml.internal.messaging.saaj.soap.implALL-UNNAMED --add-exportsjava.xml.ws/com.sun.xml.internal.messaging.saaj.soapALL-UNNAMED --add-opens java.base/java.netALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bind.v2.runtimeALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>


"
"27","321","2017-04-14 10:58:04+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[19/20] camel git commit: CAMEL-10968: make
 camel-example-loan-broker-cxf tests pass on Java 9","Return-Path: <commits-return-55696-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6537919994
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:47 +0000 (UTC)
Received: (qmail 91819 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91709 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91176 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 6202CF49D5; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:58:04 -0000
Message-Id: <abfdccad36ad4d6ba0d229dc4c4050cd@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [19/20] camel git commit: CAMEL-10968: make
 camel-example-loan-broker-cxf tests pass on Java 9

CAMEL-10968: make camel-example-loan-broker-cxf tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/1ca0ec4d
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/1ca0ec4d
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/1ca0ec4d

Branch: refs/heads/master
Commit: 1ca0ec4dac23930357bb62ac587b8047d332cf0f
Parents: 8a23104
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 11:56:22 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-loan-broker-cxf/pom.xml | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/1ca0ec4d/examples/camel-example-loan-broker-cxf/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-loan-broker-cxf/pom.xml b/examples/camel-example-loan-broker-cxf/pom.xml
index b5180c5..e6c5db0 100644
--- a/examples/camel-example-loan-broker-cxf/pom.xml
+++ b/examples/camel-example-loan-broker-cxf/pom.xml
@@ -170,6 +170,22 @@
         <target.main.class>org.apache.camel.loanbroker.Client</target.main.class>
       </properties>
     </profile>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.xml.bind,java.xml.ws --add-opens java.base/java.langALL-UNNAMED --add-opens java.xml.bind/com.sun.xml.internal.bind.v2.runtimeALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
   </profiles>
 
 </project>


"
"28","315","2017-04-14 10:58:05+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[20/20] camel git commit: CAMEL-10968: make camel-example-cxf-proxy
 tests pass on Java 9","Return-Path: <commits-return-55700-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 3B9DA1998E
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 10:57:47 +0000 (UTC)
Received: (qmail 92041 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91872 invoked by uid 500); 14 Apr 2017 10:57:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91366 invoked by uid 99); 14 Apr 2017 10:57:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 10:57:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 653BDF49D8; Fri, 14 Apr 2017 10:57:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Fri, 14 Apr 2017 10:58:05 -0000
Message-Id: <846df69249224f8fad5cf4414e42b733@git.apache.org>
In-Reply-To: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
References: <b50b5147c8eb4ac9b023dca40545901b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [20/20] camel git commit: CAMEL-10968: make camel-example-cxf-proxy
 tests pass on Java 9

CAMEL-10968: make camel-example-cxf-proxy tests pass on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/44d333fe
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/44d333fe
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/44d333fe

Branch: refs/heads/master
Commit: 44d333fe7cc2d5bdc1f452a16e5c3923edd9ea10
Parents: bb7bd6a
Author: jpoth <poth.john@gmail.com>
Authored: Fri Apr 14 11:52:00 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 12:57:21 2017 +0200

----------------------------------------------------------------------
 examples/camel-example-cxf-proxy/pom.xml | 20 +++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/44d333fe/examples/camel-example-cxf-proxy/pom.xml
----------------------------------------------------------------------
diff --git a/examples/camel-example-cxf-proxy/pom.xml b/examples/camel-example-cxf-proxy/pom.xml
index be68c33..6c08ee7 100755
--- a/examples/camel-example-cxf-proxy/pom.xml
+++ b/examples/camel-example-cxf-proxy/pom.xml
@@ -152,5 +152,23 @@
 
     </plugins>
   </build>
-
+  
+  <profiles>
+    <profile>
+      <id>jdk9-build</id>
+      <activation>
+        <jdk>9</jdk>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <argLine>--add-modules java.activation,java.xml.bind,java.xml.ws,jdk.xml.bind --add-opens java.base/java.langALL-UNNAMED --add-exportsjava.naming/com.sun.jndi.ldapALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bindALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bind.v2ALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bind.v2.runtime.reflectALL-UNNAMED --add-exportsjava.xml.ws/com.sun.xml.internal.messaging.saaj.soap.implALL-UNNAMED --add-exportsjava.xml.ws/com.sun.xml.internal.messaging.saaj.soapALL-UNNAMED --add-opens java.base/java.netALL-UNNAMED --add-exportsjava.xml.bind/com.sun.xml.internal.bind.v2.runtimeALL-UNNAMED</argLine>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>


"
"29","745","2017-04-14 11:23:11+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1631: CAMEL-10843 Ported camel-ignite wiki doc into adoc","Return-Path: <dev-return-47383-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 3325819A43
	for <apmail-camel-dev-archive@www.apache.org>; Fri, 14 Apr 2017 11:23:17 +0000 (UTC)
Received: (qmail 20053 invoked by uid 500); 14 Apr 2017 11:23:12 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 20003 invoked by uid 500); 14 Apr 2017 11:23:12 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 19992 invoked by uid 99); 14 Apr 2017 11:23:11 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 11:23:11 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id A7379DFF36; Fri, 14 Apr 2017 11:23:11 +0000 (UTC)
From: igarashitm <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
References: <git-pr-1631-camel@git.apache.org>
In-Reply-To: <git-pr-1631-camel@git.apache.org>
Subject: [GitHub] camel pull request #1631: CAMEL-10843 Ported camel-ignite wiki doc into adoc
Content-Type: text/plain
Message-Id: <20170414112311.A7379DFF36@git1-us-west.apache.org>
Date: Fri, 14 Apr 2017 11:23:11 +0000 (UTC)

Github user igarashitm closed the pull request at:

    https://github.com/apache/camel/pull/1631


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"30","1339","2017-04-14 11:23:42+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-10843) Add readme.adoc files for other
 components","Return-Path: <issues-return-41464-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 1C0F919A47
	for <apmail-camel-issues-archive@minotaur.apache.org>; Fri, 14 Apr 2017 11:23:46 +0000 (UTC)
Received: (qmail 20667 invoked by uid 500); 14 Apr 2017 11:23:46 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 20627 invoked by uid 500); 14 Apr 2017 11:23:46 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 20618 invoked by uid 99); 14 Apr 2017 11:23:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 11:23:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id A0E211AFF64
	for <issues@camel.apache.org>; Fri, 14 Apr 2017 11:23:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id 200-rI6BjnJr for <issues@camel.apache.org>;
	Fri, 14 Apr 2017 11:23:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 8E08F5FAF3
	for <issues@camel.apache.org>; Fri, 14 Apr 2017 11:23:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id D9745E0BCD
	for <issues@camel.apache.org>; Fri, 14 Apr 2017 11:23:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 01FF321B47
	for <issues@camel.apache.org>; Fri, 14 Apr 2017 11:23:42 +0000 (UTC)
Date: Fri, 14 Apr 2017 11:23:42 +0000 (UTC)
From: ASF GitHub Bot (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13043545.1487234039000.283682.1492169022005@Atlassian.JIRA>
In-Reply-To: <JIRA.13043545.1487234039000@Atlassian.JIRA>
References: <JIRA.13043545.1487234039000@Atlassian.JIRA> <JIRA.13043545.1487234039219@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-10843) Add readme.adoc files for other
 components
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-10843?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15968912#comment-15968912 ] 

ASF GitHub Bot commented on CAMEL-10843:
----------------------------------------

Github user igarashitm closed the pull request at:

    https://github.com/apache/camel/pull/1631


> Add readme.adoc files for other components
> ------------------------------------------
>
>                 Key: CAMEL-10843
>                 URL: https://issues.apache.org/jira/browse/CAMEL-10843
>             Project: Camel
>          Issue Type: Improvement
>          Components: documentation
>            Reporter: Claus Ibsen
>             Fix For: 2.19.0
>
>
> We need a little bit of documentation for these
> [INFO]
> [WARNING] 	Missing .adoc other documentation  : 11
> [WARNING] 		hystrix
> [WARNING] 		ribbon
> [WARNING] 		scala
> [WARNING] 		scr
> [WARNING] 		shiro
> [WARNING] 		spring-dm
> [WARNING] 		spring-javaconfig
> [WARNING] 		test-cdi
> [WARNING] 		test-karaf
> [WARNING] 		test-spring
> [WARNING] 		testng



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"31","746","2017-04-14 11:26:43+00:00","jenkins@builds.apache.org","['davsclaus@apache.org', 'lburgazzoli@gmail.com', 'dev@camel.apache.org']","Camel.trunk.notest - Build # 3138 - Fixed","Return-Path: <dev-return-47384-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 2465919A65
	for <apmail-camel-dev-archive@www.apache.org>; Fri, 14 Apr 2017 11:26:45 +0000 (UTC)
Received: (qmail 24661 invoked by uid 500); 14 Apr 2017 11:26:44 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 24610 invoked by uid 500); 14 Apr 2017 11:26:44 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 24594 invoked by uid 99); 14 Apr 2017 11:26:44 -0000
Received: from crius.apache.org (HELO crius.apache.org) (140.211.11.14)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 11:26:44 +0000
Received: from crius.apache.org (localhost [127.0.0.1])
	by crius.apache.org (ASF Mail Server at crius.apache.org) with ESMTP id 7CDC79C040F;
	Fri, 14 Apr 2017 11:26:44 +0000 (UTC)
Date: Fri, 14 Apr 2017 11:26:43 +0000 (UTC)
From: Apache Jenkins Server <jenkins@builds.apache.org>
To: davsclaus@apache.org, lburgazzoli@gmail.com, dev@camel.apache.org
Message-ID: <650829034.1122.1492169204513.JavaMail.jenkins@crius>
In-Reply-To: <1751424756.959.1492108315368.JavaMail.jenkins@crius>
References: <1751424756.959.1492108315368.JavaMail.jenkins@crius>
Subject: Camel.trunk.notest - Build # 3138 - Fixed
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary----_Part_1121_1790867414.1492169203339
X-Jenkins-Job: Camel.trunk.notest
X-Jenkins-Result: SUCCESS

------_Part_1121_1790867414.1492169203339
Content-Type: text/plain; charsetUTF-8
Content-Transfer-Encoding: 7bit

The Apache Jenkins build system has built Camel.trunk.notest (build #3138)

Status: Fixed

Check console output at https://builds.apache.org/job/Camel.trunk.notest/3138/ to view the results.
------_Part_1121_1790867414.1492169203339--

"
"32","747","2017-04-14 11:40:12+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1633: Camel-10141 Lets pass remaining tests on Java 9 an...","Return-Path: <dev-return-47385-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9054619AD8
	for <apmail-camel-dev-archive@www.apache.org>; Fri, 14 Apr 2017 11:40:12 +0000 (UTC)
Received: (qmail 44619 invoked by uid 500); 14 Apr 2017 11:40:12 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 44574 invoked by uid 500); 14 Apr 2017 11:40:12 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 44562 invoked by uid 99); 14 Apr 2017 11:40:12 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 11:40:12 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 0CE98DFDAC; Fri, 14 Apr 2017 11:40:12 +0000 (UTC)
From: johnpoth <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
References: <git-pr-1633-camel@git.apache.org>
In-Reply-To: <git-pr-1633-camel@git.apache.org>
Subject: [GitHub] camel pull request #1633: Camel-10141 Lets pass remaining tests on Java 9 an...
Content-Type: text/plain
Message-Id: <20170414114012.0CE98DFDAC@git1-us-west.apache.org>
Date: Fri, 14 Apr 2017 11:40:12 +0000 (UTC)

Github user johnpoth closed the pull request at:

    https://github.com/apache/camel/pull/1633


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"34","1340","2017-04-14 13:05:42+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-10896) camel-infinispan - Stores result in
 header and not body","Return-Path: <issues-return-41465-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 4269919DA5
	for <apmail-camel-issues-archive@minotaur.apache.org>; Fri, 14 Apr 2017 13:05:46 +0000 (UTC)
Received: (qmail 91135 invoked by uid 500); 14 Apr 2017 13:05:46 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 91095 invoked by uid 500); 14 Apr 2017 13:05:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 91086 invoked by uid 99); 14 Apr 2017 13:05:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 13:05:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 782551B0202
	for <issues@camel.apache.org>; Fri, 14 Apr 2017 13:05:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id i0-WAkmuZspT for <issues@camel.apache.org>;
	Fri, 14 Apr 2017 13:05:44 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 21BEE5FC3A
	for <issues@camel.apache.org>; Fri, 14 Apr 2017 13:05:44 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 5130AE0BCD
	for <issues@camel.apache.org>; Fri, 14 Apr 2017 13:05:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 6CB6221B46
	for <issues@camel.apache.org>; Fri, 14 Apr 2017 13:05:42 +0000 (UTC)
Date: Fri, 14 Apr 2017 13:05:42 +0000 (UTC)
From: Luca Burgazzoli (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13046297.1488037837000.284083.1492175142443@Atlassian.JIRA>
In-Reply-To: <JIRA.13046297.1488037837000@Atlassian.JIRA>
References: <JIRA.13046297.1488037837000@Atlassian.JIRA> <JIRA.13046297.1488037837080@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-10896) camel-infinispan - Stores result in
 header and not body
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-10896?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Luca Burgazzoli updated CAMEL-10896:
------------------------------------
    Fix Version/s: 2.20.0

> camel-infinispan - Stores result in header and not body
> -------------------------------------------------------
>
>                 Key: CAMEL-10896
>                 URL: https://issues.apache.org/jira/browse/CAMEL-10896
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-infinispan
>            Reporter: Claus Ibsen
>            Priority: Minor
>             Fix For: 2.20.0
>
>
> This component sadly does not work like others like hazelcast etc where the result is by default in message body, so it stores all magically in some result header which you do not expect. 
> So if you want to store some message body in a map cache you have to use headers and whatnot.
> We should add some way to configure this to work more like the others. Also it should have better NPE check as you can get NPEs such as
> {code}
> java.lang.NullPointerException
> 	at org.apache.camel.component.infinispan.InfinispanOperation$Operation$7.execute(InfinispanOperation.java:183)
> 	at org.apache.camel.component.infinispan.InfinispanOperation.process(InfinispanOperation.java:45)
> 	at org.apache.camel.component.infinispan.InfinispanProducer.process(InfinispanProducer.java:34)
> {code}



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"33","1341","2017-04-14 13:05:42+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Assigned] (CAMEL-10896) camel-infinispan - Stores result in
 header and not body","Return-Path: <issues-return-41466-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 79B6A19DA7
	for <apmail-camel-issues-archive@minotaur.apache.org>; Fri, 14 Apr 2017 13:05:46 +0000 (UTC)
Received: (qmail 91256 invoked by uid 500); 14 Apr 2017 13:05:46 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 91217 invoked by uid 500); 14 Apr 2017 13:05:46 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 91207 invoked by uid 99); 14 Apr 2017 13:05:46 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 13:05:46 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 0AAF8C047D
	for <issues@camel.apache.org>; Fri, 14 Apr 2017 13:05:46 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id XrZH2zy2WCXW for <issues@camel.apache.org>;
	Fri, 14 Apr 2017 13:05:45 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id A5A7F5FCD6
	for <issues@camel.apache.org>; Fri, 14 Apr 2017 13:05:44 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id B8E1EE0D20
	for <issues@camel.apache.org>; Fri, 14 Apr 2017 13:05:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 7297B21B49
	for <issues@camel.apache.org>; Fri, 14 Apr 2017 13:05:42 +0000 (UTC)
Date: Fri, 14 Apr 2017 13:05:42 +0000 (UTC)
From: Luca Burgazzoli (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13046297.1488037837000.284086.1492175142467@Atlassian.JIRA>
In-Reply-To: <JIRA.13046297.1488037837000@Atlassian.JIRA>
References: <JIRA.13046297.1488037837000@Atlassian.JIRA> <JIRA.13046297.1488037837080@jira-lw-us.apache.org>
Subject: [jira] [Assigned] (CAMEL-10896) camel-infinispan - Stores result in
 header and not body
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-10896?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Luca Burgazzoli reassigned CAMEL-10896:
---------------------------------------

    Assignee: Luca Burgazzoli

> camel-infinispan - Stores result in header and not body
> -------------------------------------------------------
>
>                 Key: CAMEL-10896
>                 URL: https://issues.apache.org/jira/browse/CAMEL-10896
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-infinispan
>            Reporter: Claus Ibsen
>            Assignee: Luca Burgazzoli
>            Priority: Minor
>             Fix For: 2.20.0
>
>
> This component sadly does not work like others like hazelcast etc where the result is by default in message body, so it stores all magically in some result header which you do not expect. 
> So if you want to store some message body in a map cache you have to use headers and whatnot.
> We should add some way to configure this to work more like the others. Also it should have better NPE check as you can get NPEs such as
> {code}
> java.lang.NullPointerException
> 	at org.apache.camel.component.infinispan.InfinispanOperation$Operation$7.execute(InfinispanOperation.java:183)
> 	at org.apache.camel.component.infinispan.InfinispanOperation.process(InfinispanOperation.java:45)
> 	at org.apache.camel.component.infinispan.InfinispanProducer.process(InfinispanProducer.java:34)
> {code}



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"35","748","2017-04-14 13:20:41+00:00","jenkins@builds.apache.org","['lburgazzoli@gmail.com', 'davsclaus@apache.org', 'dev@camel.apache.org']","Camel.trunk.notest - Build # 3139 - Failure","Return-Path: <dev-return-47386-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id B8D7A19DDB
	for <apmail-camel-dev-archive@www.apache.org>; Fri, 14 Apr 2017 13:20:45 +0000 (UTC)
Received: (qmail 14454 invoked by uid 500); 14 Apr 2017 13:20:45 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 14397 invoked by uid 500); 14 Apr 2017 13:20:45 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 14381 invoked by uid 99); 14 Apr 2017 13:20:45 -0000
Received: from crius.apache.org (HELO crius.apache.org) (140.211.11.14)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 13:20:45 +0000
Received: from crius.apache.org (localhost [127.0.0.1])
	by crius.apache.org (ASF Mail Server at crius.apache.org) with ESMTP id E548F9C040F;
	Fri, 14 Apr 2017 13:20:44 +0000 (UTC)
Date: Fri, 14 Apr 2017 13:20:41 +0000 (UTC)
From: Apache Jenkins Server <jenkins@builds.apache.org>
To: lburgazzoli@gmail.com, davsclaus@apache.org, dev@camel.apache.org
Message-ID: <1103389866.1132.1492176044941.JavaMail.jenkins@crius>
Subject: Camel.trunk.notest - Build # 3139 - Failure
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary----_Part_1131_683033851.1492176041359
X-Jenkins-Job: Camel.trunk.notest
X-Jenkins-Result: FAILURE

------_Part_1131_683033851.1492176041359
Content-Type: text/plain; charsetUTF-8
Content-Transfer-Encoding: 7bit

The Apache Jenkins build system has built Camel.trunk.notest (build #3139)

Status: Failure

Check console output at https://builds.apache.org/job/Camel.trunk.notest/3139/ to view the results.
------_Part_1131_683033851.1492176041359--

"
"36","329","2017-04-14 14:18:45+00:00","buildbot@apache.org","['commits@camel.apache.org']","svn commit: r1010488 - in /websites/production/camel/content:
 cache/main.pageCache cdi.html","Return-Path: <commits-return-55702-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 4442B19FB3
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 14:18:47 +0000 (UTC)
Received: (qmail 25048 invoked by uid 500); 14 Apr 2017 14:18:47 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 24998 invoked by uid 500); 14 Apr 2017 14:18:47 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 24989 invoked by uid 99); 14 Apr 2017 14:18:47 -0000
Received: from Unknown (HELO svn01-us-west.apache.org) (209.188.14.144)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 14:18:47 +0000
Received: from svn01-us-west.apache.org (localhost [127.0.0.1])
	by svn01-us-west.apache.org (ASF Mail Server at svn01-us-west.apache.org) with ESMTP id 6A33E3A51B2
	for <commits@camel.apache.org>; Fri, 14 Apr 2017 14:18:46 +0000 (UTC)
Content-Type: text/plain; charsetutf-8
MIME-Version: 1.0
Content-Transfer-Encoding: base64
Subject: svn commit: r1010488 - in /websites/production/camel/content:
 cache/main.pageCache cdi.html
Date: Fri, 14 Apr 2017 14:18:45 -0000
To: commits@camel.apache.org
From: buildbot@apache.org
X-Mailer: svnmailer-1.0.9
Message-Id: <20170414141846.6A33E3A51B2@svn01-us-west.apache.org>

QXV0aG9yOiBidWlsZGJvdApEYXRlOiBGcmkgQXByIDE0IDE0OjE4OjQ1IDIwMTcKTmV3IFJldmlz
aW9uOiAxMDEwNDg4CgpMb2c6ClByb2R1Y3Rpb24gdXBkYXRlIGJ5IGJ1aWxkYm90IGZvciBjYW1l
bAoKTW9kaWZpZWQ6CiAgICB3ZWJzaXRlcy9wcm9kdWN0aW9uL2NhbWVsL2NvbnRlbnQvY2FjaGUv
bWFpbi5wYWdlQ2FjaGUKICAgIHdlYnNpdGVzL3Byb2R1Y3Rpb24vY2FtZWwvY29udGVudC9jZGku
aHRtbAoKTW9kaWZpZWQ6IHdlYnNpdGVzL3Byb2R1Y3Rpb24vY2FtZWwvY29udGVudC9jYWNoZS9t
YWluLnBhZ2VDYWNoZQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KQmluYXJ5IGZpbGVzIC0gbm8gZGlm
ZiBhdmFpbGFibGUuCgpNb2RpZmllZDogd2Vic2l0ZXMvcHJvZHVjdGlvbi9jYW1lbC9jb250ZW50
L2NkaS5odG1sCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQotLS0gd2Vic2l0ZXMvcHJvZHVjdGlvbi9j
YW1lbC9jb250ZW50L2NkaS5odG1sIChvcmlnaW5hbCkKKysrIHdlYnNpdGVzL3Byb2R1Y3Rpb24v
Y2FtZWwvY29udGVudC9jZGkuaHRtbCBGcmkgQXByIDE0IDE0OjE4OjQ1IDIwMTcKQEAgLTQ3Myw2
ICs0NzMsNTMgQEAgUHJvY2Vzc29yIHByb2Nlc3NvciA9IGV4Y2hhbmdlIC0mZ3Q7IGV4YwogICAg
ICAgICAmbHQ7cHJvY2VzcyByZWY9JnF1b3Q7YmF6JnF1b3Q7LyZndDsKICAgICAmbHQ7L3JvdXRl
Jmd0OwogJmx0O2NhbWVsQ29udGV4dC8mZ3Q7XV0+PC9zY3JpcHQ+Cis8L2Rpdj48L2Rpdj48aDMg
aWQ9IkNESS1UcmFuc2FjdGlvbnN1cHBvcnQiPlRyYW5zYWN0aW9uIHN1cHBvcnQ8L2gzPjxwPjxz
dHJvbmc+QXZhaWxhYmxlIGFzIG9mIENhbWVsIDIuMTk8L3N0cm9uZz48L3A+PHA+Q2FtZWwgQ0RJ
IHByb3ZpZGVzIHN1cHBvcnQgZm9yIENhbWVsIDxhIHNoYXBlPSJyZWN0IiBocmVmPSJ0cmFuc2Fj
dGlvbmFsLWNsaWVudC5odG1sIj50cmFuc2FjdGlvbmFsIGNsaWVudDwvYT4gdXNpbmcgSlRBLjwv
cD48cD5UaGF0IHN1cHBvcnQgaXMgb3B0aW9uYWwgaGVuY2UgeW91IG5lZWQgdG8gaGF2ZSBKVEEg
aW4geW91ciBhcHBsaWNhdGlvbiBjbGFzc3BhdGgsIGUuZy4sIGJ5IGV4cGxpY2l0bHkgYWRkIEpU
QSBhcyBhIGRlcGVuZGVuY3kgd2hlbiB1c2luZyBNYXZlbjo8L3A+PGRpdiBjbGFzcz0iY29kZSBw
YW5lbCBwZGwiIHN0eWxlPSJib3JkZXItd2lkdGg6IDFweDsiPjxkaXYgY2xhc3M9ImNvZGVDb250
ZW50IHBhbmVsQ29udGVudCBwZGwiPgorPHNjcmlwdCBjbGFzcz0iYnJ1c2g6IHhtbDsgZ3V0dGVy
OiBmYWxzZTsgdGhlbWU6IERlZmF1bHQiIHR5cGU9InN5bnRheGhpZ2hsaWdodGVyIj48IVtDREFU
QVsmbHQ7ZGVwZW5kZW5jeSZndDsKKyAgICAmbHQ7Z3JvdXBJZCZndDtqYXZheC50cmFuc2FjdGlv
biZsdDsvZ3JvdXBJZCZndDsKKyAgICAmbHQ7YXJ0aWZhY3RJZCZndDtqYXZheC50cmFuc2FjdGlv
bi1hcGkmbHQ7L2FydGlmYWN0SWQmZ3Q7CisgICAgJmx0O3Njb3BlJmd0O3J1bnRpbWUmbHQ7L3Nj
b3BlJmd0OworJmx0Oy9kZXBlbmRlbmN5Jmd0O11dPjwvc2NyaXB0PgorPC9kaXY+PC9kaXY+PHA+
WW91J2xsIGhhdmUgdG8gaGF2ZSB5b3VyIGFwcGxpY2F0aW9uIGRlcGxveWVkIGluIGEgSlRBIGNh
cGFibGUgY29udGFpbmVyIG9yIHByb3ZpZGUgYSBzdGFuZGFsb25lIEpUQSBpbXBsZW1lbnRhdGlv
bi48L3A+PGRpdiBjbGFzcz0iY29uZmx1ZW5jZS1pbmZvcm1hdGlvbi1tYWNybyBjb25mbHVlbmNl
LWluZm9ybWF0aW9uLW1hY3JvLW5vdGUiPjxzcGFuIGNsYXNzPSJhdWktaWNvbiBhdWktaWNvbi1z
bWFsbCBhdWktaWNvbmZvbnQtd2FybmluZyBjb25mbHVlbmNlLWluZm9ybWF0aW9uLW1hY3JvLWlj
b24iPjwvc3Bhbj48ZGl2IGNsYXNzPSJjb25mbHVlbmNlLWluZm9ybWF0aW9uLW1hY3JvLWJvZHki
PjxwPk5vdGUgdGhhdCwgZm9yIHRoZSB0aW1lIGJlaW5nLCB0aGUgdHJhbnNhY3Rpb24gbWFuYWdl
ciBpcyBsb29rZWQgdXAgYXMgSk5ESSByZXNvdXJjZSB3aXRoIHRoZSA8Y29kZT5qYXZhOi9UcmFu
c2FjdGlvbk1hbmFnZXI8L2NvZGU+IGtleS4gTW9yZSBmbGV4aWJsZSBzdHJhdGVnaWVzIHdpbGwg
YmUgYWRkZWQgaW4gdGhlIGZ1dHVyZSB0byBzdXBwb3J0IGEgd2lkZXIgcmFuZ2Ugb2YgZGVwbG95
bWVudCBzY2VuYXJpb3MuPC9wPjwvZGl2PjwvZGl2PjxoNCBpZD0iQ0RJLVRyYW5zYWN0aW9ucG9s
aWNpZXMiPlRyYW5zYWN0aW9uIHBvbGljaWVzPC9oND48cD5DYW1lbCBDREkgcHJvdmlkZXMgaW1w
bGVtZW50YXRpb24gZm9yIHRoZSB0eXBpY2FsbHkgc3VwcG9ydGVkIENhbWVsIDxjb2RlPlRyYW5z
YWN0ZWRQb2xpY3k8L2NvZGU+IGFzIENESSBiZWFucy4gSXQgaXMgcG9zc2libGUgdG8gaGF2ZSB0
aGVzZSBwb2xpY2llcyBsb29rZWQgdXAgYnkgbmFtZSB1c2luZyB0aGUgPGNvZGU+dHJhbnNhY3Rl
ZDwvY29kZT4gRUlQLCBlLmcuOjwvcD48ZGl2IGNsYXNzPSJjb2RlIHBhbmVsIHBkbCIgc3R5bGU9
ImJvcmRlci13aWR0aDogMXB4OyI+PGRpdiBjbGFzcz0iY29kZUNvbnRlbnQgcGFuZWxDb250ZW50
IHBkbCI+Cis8c2NyaXB0IGNsYXNzPSJicnVzaDogamF2YTsgZ3V0dGVyOiBmYWxzZTsgdGhlbWU6
IERlZmF1bHQiIHR5cGU9InN5bnRheGhpZ2hsaWdodGVyIj48IVtDREFUQVtjbGFzcyBNeVJvdXRl
QmVhbiBleHRlbmRzIFJvdXRlQnVpbGRlciB7CisgCisJQE92ZXJyaWRlCisgICAgcHVibGljIHZv
aWQgY29uZmlndXJlKCkgeworICAgICAgICBmcm9tKCZxdW90O2FjdGl2ZW1xOnF1ZXVlOmZvbyZx
dW90OykKKyAgICAgICAgICAgIC50cmFuc2FjdGVkKCZxdW90O1BST1BBR0FUSU9OX1JFUVVJUkVE
JnF1b3Q7KQorICAgICAgICAgICAgLmJlYW4oJnF1b3Q7dHJhbnNmb3JtZXImcXVvdDspCisgICAg
ICAgICAgICAudG8oJnF1b3Q7anBhOm15LmFwcGxpY2F0aW9uLmVudGl0eS5CYXImcXVvdDspCisg
ICAgICAgICAgICAubG9nKCZxdW90OyR7Ym9keS5pZH0gaW5zZXJ0ZWQmcXVvdDspOworICAgIH0K
K31dXT48L3NjcmlwdD4KKzwvZGl2PjwvZGl2PjxwPlRoaXMgd291bGQgYmUgZXF1aXZhbGVudCB0
bzo8L3A+PGRpdiBjbGFzcz0iY29kZSBwYW5lbCBwZGwiIHN0eWxlPSJib3JkZXItd2lkdGg6IDFw
eDsiPjxkaXYgY2xhc3M9ImNvZGVDb250ZW50IHBhbmVsQ29udGVudCBwZGwiPgorPHNjcmlwdCBj
bGFzcz0iYnJ1c2g6IGphdmE7IGd1dHRlcjogZmFsc2U7IHRoZW1lOiBEZWZhdWx0IiB0eXBlPSJz
eW50YXhoaWdobGlnaHRlciI+PCFbQ0RBVEFbY2xhc3MgTXlSb3V0ZUJlYW4gZXh0ZW5kcyBSb3V0
ZUJ1aWxkZXIgeworCisgICAgQEluamVjdAorICAgIEBOYW1lZCgmcXVvdDtQUk9QQUdBVElPTl9S
RVFVSVJFRCZxdW90OykKKyAgICBQb2xpY3kgcmVxdWlyZWQ7CivDgsKgCisJQE92ZXJyaWRlCisg
ICAgcHVibGljIHZvaWQgY29uZmlndXJlKCkgeworICAgICAgICBmcm9tKCZxdW90O2FjdGl2ZW1x
OnF1ZXVlOmZvbyZxdW90OykKKyAgICAgICAgICAgIC5wb2xpY3kocmVxdWlyZWQpCisgICAgICAg
ICAgICAuYmVhbigmcXVvdDt0cmFuc2Zvcm1lciZxdW90OykKKyAgICAgICAgICAgIC50bygmcXVv
dDtqcGE6bXkuYXBwbGljYXRpb24uZW50aXR5LkJhciZxdW90OykKKyAgICAgICAgICAgIC5sb2co
JnF1b3Q7JHtib2R5LmlkfSBpbnNlcnRlZCZxdW90Oyk7CisgICAgfQorfV1dPjwvc2NyaXB0Pgor
PC9kaXY+PC9kaXY+PHA+VGhlIGxpc3Qgb2Ygc3VwcG9ydGVkIHRyYW5zYWN0aW9uIHBvbGljeSBu
YW1lcyBpczogPGNvZGU+UFJPUEFHQVRJT05fTkVWRVI8L2NvZGU+LCYjMTYwOzxjb2RlPlBST1BB
R0FUSU9OX05PVF9TVVBQT1JURUQ8L2NvZGU+LCA8Y29kZT5QUk9QQUdBVElPTl9TVVBQT1JUUzwv
Y29kZT4sJiMxNjA7PGNvZGU+UFJPUEFHQVRJT05fUkVRVUlSRUQ8L2NvZGU+LCYjMTYwOzxjb2Rl
PlBST1BBR0FUSU9OX1JFUVVJUkVTX05FVzwvY29kZT4sIDxjb2RlPlBST1BBR0FUSU9OX05FU1RF
RDwvY29kZT4sJiMxNjA7PGNvZGU+UFJPUEFHQVRJT05fTUFOREFUT1JZPC9jb2RlPi48L3A+PGg0
IGlkPSJDREktVHJhbnNhY3Rpb25hbGVycm9yaGFuZGxlciI+VHJhbnNhY3Rpb25hbCBlcnJvciBo
YW5kbGVyPC9oND48cD5DYW1lbCBDREkgcHJvdmlkZXMgYSB0cmFuc2FjdGlvbmFsIDxhIHNoYXBl
PSJyZWN0IiBocmVmPSJlcnJvci1oYW5kbGVyLmh0bWwiPmVycm9yIGhhbmRsZXI8L2E+IHRoYXQg
ZXh0ZW5kcyB0aGUgcmVkZWxpdmVyeSBlcnJvciBoYW5kbGVyLCBmb3JjZXMgYSByb2xsYmFjayB3
aGVuZXZlciBhbiBleGNlcHRpb24gb2NjdXJzIGFuZCBjcmVhdGVzIGEgbmV3IHRyYW5zYWN0aW9u
IGZvciBlYWNoIHJlZGVsaXZlcnkuIENhbWVsIENESSBwcm92aWRlcyB0aGUgPGNvZGU+Q2RpUm91
dGVCdWlsZGVyPC9jb2RlPiBjbGFzcyB0aGF0IGV4cG9zZXMgdGhlIDxjb2RlPnRyYW5zYWN0aW9u
RXJyb3JIYW5kbGVyPC9jb2RlPiBoZWxwZXIgbWV0aG9kIHRvIGVuYWJsZSBxdWljayBhY2Nlc3Mg
dG8gdGhlIGNvbmZpZ3VyYXRpb24sIGUuZy46PC9wPjxkaXYgY2xhc3M9ImNvZGUgcGFuZWwgcGRs
IiBzdHlsZT0iYm9yZGVyLXdpZHRoOiAxcHg7Ij48ZGl2IGNsYXNzPSJjb2RlQ29udGVudCBwYW5l
bENvbnRlbnQgcGRsIj4KKzxzY3JpcHQgY2xhc3M9ImJydXNoOiBqYXZhOyBndXR0ZXI6IGZhbHNl
OyB0aGVtZTogRGVmYXVsdCIgdHlwZT0ic3ludGF4aGlnaGxpZ2h0ZXIiPjwhW0NEQVRBW2NsYXNz
IE15Um91dGVCZWFuIGV4dGVuZHMgQ2RpUm91dGVCdWlsZGVyIHsKKworCUBPdmVycmlkZQorICAg
IHB1YmxpYyB2b2lkIGNvbmZpZ3VyZSgpIHsKKyAgICAgICAgZXJyb3JIYW5kbGVyKHRyYW5zYWN0
aW9uRXJyb3JIYW5kbGVyKCkKKyAgICAgICAgICAgIC5zZXRUcmFuc2FjdGlvblBvbGljeSgmcXVv
dDtQUk9QQUdBVElPTl9TVVBQT1JUUyZxdW90OykKKyAgICAgICAgICAgIC5tYXhpbXVtUmVkZWxp
dmVyaWVzKDUpCisgICAgICAgICAgICAubWF4aW11bVJlZGVsaXZlcnlEZWxheSg1MDAwKQorICAg
ICAgICAgICAgLmNvbGxpc2lvbkF2b2lkYW5jZVBlcmNlbnQoMTApCisgICAgICAgICAgICAuYmFj
a09mZk11bHRpcGxpZXIoMS41KSk7CisgICAgfQorfV1dPjwvc2NyaXB0PgogPC9kaXY+PC9kaXY+
PGgzIGlkPSJDREktQXV0by1jb25maWd1cmVkT1NHaWludGVncmF0aW9uIj5BdXRvLWNvbmZpZ3Vy
ZWQgT1NHaSBpbnRlZ3JhdGlvbjwvaDM+PHA+PHN0cm9uZz5BdmFpbGFibGUgYXMgb2YgQ2FtZWwg
Mi4xNzwvc3Ryb25nPjwvcD48cD5UaGUgQ2FtZWwgY29udGV4dCBiZWFucyBhcmUgYXV0b21hdGlj
YWxseSBhZGFwdGVkIGJ5IENhbWVsIENESSBzbyB0aGF0IHRoZXkgYXJlIHJlZ2lzdGVyZWQgYXMg
T1NHaSBzZXJ2aWNlcyBhbmQgdGhlIHZhcmlvdXMgcmVzb2x2ZXJzIChsaWtlJiMxNjA7PHN0cm9u
Zz48Y29kZT5Db21wb25lbnRSZXNvbHZlcjwvY29kZT48L3N0cm9uZz4gYW5kJiMxNjA7PHN0cm9u
Zz48Y29kZT5EYXRhRm9ybWF0UmVzb2x2ZXI8L2NvZGU+PC9zdHJvbmc+KSBpbnRlZ3JhdGUgd2l0
aCB0aGUgT1NHaSByZWdpc3RyeS4gVGhhdCBtZWFucyB0aGF0IHRoZSA8YSBzaGFwZT0icmVjdCIg
aHJlZj0ia2FyYWYuaHRtbCNLYXJhZi1LYXJhZmNvbW1hbmRzIj5LYXJhZiBDYW1lbCBjb21tYW5k
czwvYT4gY2FuIGJlIHVzZWQgdG8gb3BlcmF0ZSB0aGUgQ2FtZWwgY29udGV4dHMgYXV0by1jb25m
aWd1cmVkIGJ5IENhbWVsIENESSwgZS5nLjo8L3A+PGRpdiBjbGFzcz0iY29kZSBwYW5lbCBwZGwi
IHN0eWxlPSJib3JkZXItd2lkdGg6IDFweDsiPjxkaXYgY2xhc3M9ImNvZGVDb250ZW50IHBhbmVs
Q29udGVudCBwZGwiPgogPHNjcmlwdCBjbGFzcz0iYnJ1c2g6IHRleHQ7IGd1dHRlcjogZmFsc2U7
IHRoZW1lOiBEZWZhdWx0IiB0eXBlPSJzeW50YXhoaWdobGlnaHRlciI+PCFbQ0RBVEFba2FyYWZA
cm9vdCgpJmd0OyBjYW1lbDpjb250ZXh0LWxpc3QKICBDb250ZXh0ICAgICAgICBTdGF0dXMgICAg
ICAgICAgICAgIFRvdGFsICMgICAgICAgRmFpbGVkICMgICAgIEluZmxpZ2h0ICMgICBVcHRpbWUg
ICAgICAgIAoKCgo
"
"37","330","2017-04-14 14:26:14+00:00","astefanutti@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-10685: documentation","Return-Path: <commits-return-55703-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 622391A01C
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 14:26:15 +0000 (UTC)
Received: (qmail 47383 invoked by uid 500); 14 Apr 2017 14:26:15 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 47331 invoked by uid 500); 14 Apr 2017 14:26:15 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 47322 invoked by uid 99); 14 Apr 2017 14:26:15 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 14:26:15 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id D634EDFF36; Fri, 14 Apr 2017 14:26:14 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: astefanutti@apache.org
To: commits@camel.apache.org
Message-Id: <fa61a27cf04c43a69b13da26e7ff1d9d@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-10685: documentation
Date: Fri, 14 Apr 2017 14:26:14 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master ddd2347d9 -> 6ec8df219


CAMEL-10685: documentation


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/6ec8df21
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/6ec8df21
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/6ec8df21

Branch: refs/heads/master
Commit: 6ec8df21959037351bbf786cc5d1716696ab1829
Parents: ddd2347
Author: Antonin Stefanutti <antonin@stefanutti.fr>
Authored: Fri Apr 14 16:24:49 2017 +0200
Committer: Antonin Stefanutti <antonin@stefanutti.fr>
Committed: Fri Apr 14 16:26:00 2017 +0200

----------------------------------------------------------------------
 components/camel-cdi/src/main/docs/cdi.adoc | 100 +++++++++++++++++++++++
 1 file changed, 100 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/6ec8df21/components/camel-cdi/src/main/docs/cdi.adoc
----------------------------------------------------------------------
diff --git a/components/camel-cdi/src/main/docs/cdi.adoc b/components/camel-cdi/src/main/docs/cdi.adoc
index 572eec3..1a3931e 100644
--- a/components/camel-cdi/src/main/docs/cdi.adoc
+++ b/components/camel-cdi/src/main/docs/cdi.adoc
@@ -855,6 +855,106 @@ configuration, e.g.:
 <camelContext/>
 ----
 
+
+### Transaction support
+
+*Available as of Camel 2.19*
+
+Camel CDI provides support for Camel transactional client using JTA.
+
+That support is optional hence you need to have JTA in your application classpath, e.g., by explicitly add JTA as a dependency when using Maven:
+
+[source,xml]
+----
+<dependency>
+    <groupId>javax.transaction</groupId>
+    <artifactId>javax.transaction-api</artifactId>
+    <scope>runtime</scope>
+</dependency>
+----
+
+Youll have to have your application deployed in a JTA capable container or provide a standalone JTA implementation.
+
+[CAUTION]
+
+Note that, for the time being, the transaction manager is looked up as JNDI resource with the `java:/TransactionManager` key.
+
+More flexible strategies will be added in the future to support a wider range of deployment scenarios.
+
+
+#### Transaction policies
+
+Camel CDI provides implementation for the typically supported Camel `TransactedPolicy` as CDI beans. It is possible to have these policies looked up by name using the transacted EIP, e.g.:
+
+[source,java]
+----
+class MyRouteBean extends RouteBuilder {
+
+    @Override
+    public void configure() {
+        from(activemq:queue:foo)
+            .transacted(PROPAGATION_REQUIRED)
+            .bean(transformer)
+            .to(jpa:my.application.entity.Bar)
+            .log(${body.id} inserted);
+    }
+}
+----
+
+This would be equivalent to:
+
+[source,java]
+----
+class MyRouteBean extends RouteBuilder {
+
+    @Inject
+    @Named(PROPAGATION_REQUIRED)
+    Policy required;
+
+    @Override
+    public void configure() {
+        from(activemq:queue:foo)
+            .policy(required)
+            .bean(transformer)
+            .to(jpa:my.application.entity.Bar)
+            .log(${body.id} inserted);
+    }
+}
+----
+
+The list of supported transaction policy names is:
+
+- `PROPAGATION_NEVER`,
+- `PROPAGATION_NOT_SUPPORTED`,
+- `PROPAGATION_SUPPORTS`,
+- `PROPAGATION_REQUIRED`,
+- `PROPAGATION_REQUIRES_NEW`,
+- `PROPAGATION_NESTED`,
+- `PROPAGATION_MANDATORY`.
+
+#### Transactional error handler
+
+Camel CDI provides a transactional error handler that extends the redelivery error handler, forces a rollback whenever an exception occurs and creates a new transaction for each redelivery.
+
+Camel CDI provides the `CdiRouteBuilder` class that exposes the `transactionErrorHandler` helper method to enable quick access to the configuration, e.g.:
+
+[source,java]
+----
+class MyRouteBean extends CdiRouteBuilder {
+
+    @Override
+    public void configure() {
+        errorHandler(transactionErrorHandler()
+            .setTransactionPolicy(PROPAGATION_SUPPORTS)
+            .maximumRedeliveries(5)
+            .maximumRedeliveryDelay(5000)
+            .collisionAvoidancePercent(10)
+            .backOffMultiplier(1.5));
+    }
+}
+----
+
+
 ### Auto-configured OSGi integration
 
 *Available as of Camel 2.17*


"
"38","331","2017-04-14 14:35:24+00:00","astefanutti@apache.org","['commits@camel.apache.org']","camel git commit: Camel CDI: update testing container versions in
 documentation","Return-Path: <commits-return-55704-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id D16051A074
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 14:35:24 +0000 (UTC)
Received: (qmail 80256 invoked by uid 500); 14 Apr 2017 14:35:24 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 80202 invoked by uid 500); 14 Apr 2017 14:35:24 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 80193 invoked by uid 99); 14 Apr 2017 14:35:24 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 14:35:24 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 9EB2BDFE8F; Fri, 14 Apr 2017 14:35:24 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: astefanutti@apache.org
To: commits@camel.apache.org
Message-Id: <f67338e8a03243c58900544fea88dc32@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Camel CDI: update testing container versions in
 documentation
Date: Fri, 14 Apr 2017 14:35:24 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 6ec8df219 -> cd84f3857


Camel CDI: update testing container versions in documentation


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/cd84f385
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/cd84f385
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/cd84f385

Branch: refs/heads/master
Commit: cd84f3857d87b26543989bede3d953dadbd48cf6
Parents: 6ec8df2
Author: Antonin Stefanutti <antonin@stefanutti.fr>
Authored: Fri Apr 14 16:35:16 2017 +0200
Committer: Antonin Stefanutti <antonin@stefanutti.fr>
Committed: Fri Apr 14 16:35:16 2017 +0200

----------------------------------------------------------------------
 components/camel-cdi/src/main/docs/cdi.adoc | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/cd84f385/components/camel-cdi/src/main/docs/cdi.adoc
----------------------------------------------------------------------
diff --git a/components/camel-cdi/src/main/docs/cdi.adoc b/components/camel-cdi/src/main/docs/cdi.adoc
index 1a3931e..30c7512 100644
--- a/components/camel-cdi/src/main/docs/cdi.adoc
+++ b/components/camel-cdi/src/main/docs/cdi.adoc
@@ -1084,11 +1084,11 @@ following runtimes:
 |Container |Version |Runtime
 |Weld SE |1.1.28.Final |CDI 1.0 / Java SE 7
 |OpenWebBeans |1.2.7 |CDI 1.0 / Java SE 7
-|Weld SE |2.3.4.Final |CDI 1.2 / Java SE 7
-|OpenWebBeans |1.6.3 |CDI 1.2 / Java SE 7
+|Weld SE |2.4.2.Final |CDI 1.2 / Java SE 7
+|OpenWebBeans |1.7.2 |CDI 1.2 / Java SE 7
 |WildFly |8.2.1.Final |CDI 1.2 / Java EE 7
 |WildFly |9.0.1.Final |CDI 1.2 / Java EE 7
-|WildFly |10.0.0.Final |CDI 1.2 / Java EE 7
+|WildFly |10.1.0.Final |CDI 1.2 / Java EE 7
 |Karaf |2.4.4 |CDI 1.2 / OSGi 4 / PAX CDI
 |Karaf |3.0.5 |CDI 1.2 / OSGi 5 / PAX CDI
 |Karaf |4.0.4 |CDI 1.2 / OSGi 6 / PAX CDI


"
"39","332","2017-04-14 14:42:28+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: Rename catalog to runtimecatalog to avoid clash
 with same package name in camel-catalog.","Return-Path: <commits-return-55705-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 577651A093
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 14:42:29 +0000 (UTC)
Received: (qmail 1492 invoked by uid 500); 14 Apr 2017 14:42:29 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 1437 invoked by uid 500); 14 Apr 2017 14:42:29 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 1428 invoked by uid 99); 14 Apr 2017 14:42:29 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 14:42:29 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id ECE97DFE8F; Fri, 14 Apr 2017 14:42:28 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <0a03a23cc44e4ff9933d9f3be0bacc36@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Rename catalog to runtimecatalog to avoid clash
 with same package name in camel-catalog.
Date: Fri, 14 Apr 2017 14:42:28 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master cd84f3857 -> 49e1c0111


Rename catalog to runtimecatalog to avoid clash with same package name in camel-catalog.


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/49e1c011
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/49e1c011
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/49e1c011

Branch: refs/heads/master
Commit: 49e1c011126df57f41987e432cf0566a523e9ffd
Parents: cd84f38
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Fri Apr 14 16:41:58 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Fri Apr 14 16:42:21 2017 +0200

----------------------------------------------------------------------
 .../camel/commands/AbstractCamelController.java |  9 +++---
 .../camel/commands/internal/MatchUtil.java      | 31 ++++++++++++++++++++
 2 files changed, 36 insertions(+), 4 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/49e1c011/platforms/commands/commands-core/src/main/java/org/apache/camel/commands/AbstractCamelController.java
----------------------------------------------------------------------
diff --git a/platforms/commands/commands-core/src/main/java/org/apache/camel/commands/AbstractCamelController.java b/platforms/commands/commands-core/src/main/java/org/apache/camel/commands/AbstractCamelController.java
index 3036d46..2937d10 100644
--- a/platforms/commands/commands-core/src/main/java/org/apache/camel/commands/AbstractCamelController.java
+++ b/platforms/commands/commands-core/src/main/java/org/apache/camel/commands/AbstractCamelController.java
@@ -21,11 +21,12 @@ import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 
-import org.apache.camel.catalog.CatalogHelper;
-import org.apache.camel.commands.internal.RegexUtil;
 import org.apache.camel.util.JsonSchemaHelper;
 import org.apache.camel.util.ObjectHelper;
 
+import static org.apache.camel.commands.internal.MatchUtil.matchWildcard;
+import static org.apache.camel.commands.internal.RegexUtil.wildcardAsRegex;
+
 /**
  * Abstract {@link org.apache.camel.commands.CamelController} that implementators should extend.
  */
@@ -37,13 +38,13 @@ public abstract class AbstractCamelController implements CamelController {
 
         List<Map<String, String>> context  getCamelContexts();
         if (filter ! null) {
-            filter  RegexUtil.wildcardAsRegex(filter);
+            filter  wildcardAsRegex(filter);
         } else {
             filter  *;
         }
         for (Map<String, String> entry : context) {
             String name  entry.get(name);
-            if (name.equalsIgnoreCase(filter) || CatalogHelper.matchWildcard(name, filter) || name.matches(filter)) {
+            if (name.equalsIgnoreCase(filter) || matchWildcard(name, filter) || name.matches(filter)) {
                 answer.add(entry);
             }
         }

http://git-wip-us.apache.org/repos/asf/camel/blob/49e1c011/platforms/commands/commands-core/src/main/java/org/apache/camel/commands/internal/MatchUtil.java
----------------------------------------------------------------------
diff --git a/platforms/commands/commands-core/src/main/java/org/apache/camel/commands/internal/MatchUtil.java b/platforms/commands/commands-core/src/main/java/org/apache/camel/commands/internal/MatchUtil.java
new file mode 100644
index 0000000..874276e
--- /dev/null
+++ b/platforms/commands/commands-core/src/main/java/org/apache/camel/commands/internal/MatchUtil.java
@@ -0,0 +1,31 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.commands.internal;
+
+/**
+ * Util class.
+ */
+public final class MatchUtil {
+
+    private MatchUtil() {
+    }
+
+    public static boolean matchWildcard(String name, String pattern) {
+        return pattern.endsWith(*) && name.startsWith(pattern.substring(0, pattern.length() - 1));
+    }
+
+}


"
"40","333","2017-04-14 14:53:30+00:00","astefanutti@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-10685: Use multi-catch exceptions and polish","Return-Path: <commits-return-55706-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 8D38C1A0DB
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 14:53:30 +0000 (UTC)
Received: (qmail 24666 invoked by uid 500); 14 Apr 2017 14:53:30 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 24612 invoked by uid 500); 14 Apr 2017 14:53:30 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 24603 invoked by uid 99); 14 Apr 2017 14:53:30 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 14:53:30 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 46980DFE8F; Fri, 14 Apr 2017 14:53:30 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: astefanutti@apache.org
To: commits@camel.apache.org
Message-Id: <523e9812ac07429db3bf7a8a5c06d8db@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-10685: Use multi-catch exceptions and polish
Date: Fri, 14 Apr 2017 14:53:30 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 49e1c0111 -> d41194b8b


CAMEL-10685: Use multi-catch exceptions and polish


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/d41194b8
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/d41194b8
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/d41194b8

Branch: refs/heads/master
Commit: d41194b8bb822d70f706d9359d6694723cfb034b
Parents: 49e1c01
Author: Antonin Stefanutti <antonin@stefanutti.fr>
Authored: Fri Apr 14 16:52:59 2017 +0200
Committer: Antonin Stefanutti <antonin@stefanutti.fr>
Committed: Fri Apr 14 16:53:23 2017 +0200

----------------------------------------------------------------------
 .../org/apache/camel/cdi/CdiRouteBuilder.java   |  4 +---
 .../JtaTransactionErrorHandlerBuilder.java      |  2 +-
 .../cdi/transaction/JtaTransactionPolicy.java   |  1 -
 .../MandatoryJtaTransactionPolicy.java          |  1 -
 .../transaction/NeverJtaTransactionPolicy.java  |  1 -
 .../NotSupportedJtaTransactionPolicy.java       |  1 -
 .../RequiresNewJtaTransactionPolicy.java        |  1 -
 .../transaction/TransactionErrorHandler.java    |  2 +-
 .../TransactionalJtaTransactionPolicy.java      | 23 ++------------------
 9 files changed, 5 insertions(+), 31 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/d41194b8/components/camel-cdi/src/main/java/org/apache/camel/cdi/CdiRouteBuilder.java
----------------------------------------------------------------------
diff --git a/components/camel-cdi/src/main/java/org/apache/camel/cdi/CdiRouteBuilder.java b/components/camel-cdi/src/main/java/org/apache/camel/cdi/CdiRouteBuilder.java
index 4c4e445..337351d 100644
--- a/components/camel-cdi/src/main/java/org/apache/camel/cdi/CdiRouteBuilder.java
+++ b/components/camel-cdi/src/main/java/org/apache/camel/cdi/CdiRouteBuilder.java
@@ -21,9 +21,7 @@ import org.apache.camel.cdi.transaction.JtaTransactionErrorHandlerBuilder;
 
 /**
  * An extension of the {@link RouteBuilder} to provide some additional helper
- * methods
- *
- * @version
+ * methods.
  */
 public abstract class CdiRouteBuilder extends RouteBuilder {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/d41194b8/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/JtaTransactionErrorHandlerBuilder.java
----------------------------------------------------------------------
diff --git a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/JtaTransactionErrorHandlerBuilder.java b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/JtaTransactionErrorHandlerBuilder.java
index 3be2d1d..6d72aaa 100644
--- a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/JtaTransactionErrorHandlerBuilder.java
+++ b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/JtaTransactionErrorHandlerBuilder.java
@@ -94,7 +94,7 @@ public class JtaTransactionErrorHandlerBuilder extends DefaultErrorHandlerBuilde
         // try to lookup default policy
         if (transactionPolicy  null) {
             LOG.debug(
-                    No tranaction policiy configured on TransactionErrorHandlerBuilder. Will try find it in the registry.);
+                    No transaction policy configured on TransactionErrorHandlerBuilder. Will try find it in the registry.);
 
             Map<String, TransactedPolicy> mapPolicy  routeContext.lookupByType(TransactedPolicy.class);
             if (mapPolicy ! null && mapPolicy.size()  1) {

http://git-wip-us.apache.org/repos/asf/camel/blob/d41194b8/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/JtaTransactionPolicy.java
----------------------------------------------------------------------
diff --git a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/JtaTransactionPolicy.java b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/JtaTransactionPolicy.java
index 0917278..f856261 100644
--- a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/JtaTransactionPolicy.java
+++ b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/JtaTransactionPolicy.java
@@ -126,7 +126,6 @@ public abstract class JtaTransactionPolicy implements TransactedPolicy {
 
     protected JtaTransactionErrorHandler createTransactionErrorHandler(RouteContext routeContext, Processor processor,
             ErrorHandlerBuilder builder) {
-
         JtaTransactionErrorHandler answer;
         try {
             answer  (JtaTransactionErrorHandler) builder.createErrorHandler(routeContext, processor);

http://git-wip-us.apache.org/repos/asf/camel/blob/d41194b8/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/MandatoryJtaTransactionPolicy.java
----------------------------------------------------------------------
diff --git a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/MandatoryJtaTransactionPolicy.java b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/MandatoryJtaTransactionPolicy.java
index 5adbb8a..ef90018 100644
--- a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/MandatoryJtaTransactionPolicy.java
+++ b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/MandatoryJtaTransactionPolicy.java
@@ -23,7 +23,6 @@ public class MandatoryJtaTransactionPolicy extends TransactionalJtaTransactionPo
 
     @Override
     public void run(final Runnable runnable) throws Exception {
-
         if (!hasActiveTransaction()) {
             throw new IllegalStateException(
                     Policy PROPAGATION_MANDATORY is configured but no active transaction was found!);

http://git-wip-us.apache.org/repos/asf/camel/blob/d41194b8/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/NeverJtaTransactionPolicy.java
----------------------------------------------------------------------
diff --git a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/NeverJtaTransactionPolicy.java b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/NeverJtaTransactionPolicy.java
index 61a5a3f..ff1da9f 100644
--- a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/NeverJtaTransactionPolicy.java
+++ b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/NeverJtaTransactionPolicy.java
@@ -23,7 +23,6 @@ public class NeverJtaTransactionPolicy extends TransactionalJtaTransactionPolicy
 
     @Override
     public void run(final Runnable runnable) throws Exception {
-
         if (hasActiveTransaction()) {
             throw new IllegalStateException(
                     Policy PROPAGATION_NEVER is configured but an active transaction was found!);

http://git-wip-us.apache.org/repos/asf/camel/blob/d41194b8/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/NotSupportedJtaTransactionPolicy.java
----------------------------------------------------------------------
diff --git a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/NotSupportedJtaTransactionPolicy.java b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/NotSupportedJtaTransactionPolicy.java
index 20e9edf..5767b9f 100644
--- a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/NotSupportedJtaTransactionPolicy.java
+++ b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/NotSupportedJtaTransactionPolicy.java
@@ -24,7 +24,6 @@ public class NotSupportedJtaTransactionPolicy extends TransactionalJtaTransactio
 
     @Override
     public void run(final Runnable runnable) throws Throwable {
-
         Transaction suspendedTransaction  null;
         try {
             suspendedTransaction  suspendTransaction();

http://git-wip-us.apache.org/repos/asf/camel/blob/d41194b8/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/RequiresNewJtaTransactionPolicy.java
----------------------------------------------------------------------
diff --git a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/RequiresNewJtaTransactionPolicy.java b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/RequiresNewJtaTransactionPolicy.java
index 84dd20f..dc3fcc8 100644
--- a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/RequiresNewJtaTransactionPolicy.java
+++ b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/RequiresNewJtaTransactionPolicy.java
@@ -24,7 +24,6 @@ public class RequiresNewJtaTransactionPolicy extends TransactionalJtaTransaction
 
     @Override
     public void run(final Runnable runnable) throws Throwable {
-
         Transaction suspendedTransaction  null;
         try {
             suspendedTransaction  suspendTransaction();

http://git-wip-us.apache.org/repos/asf/camel/blob/d41194b8/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/TransactionErrorHandler.java
----------------------------------------------------------------------
diff --git a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/TransactionErrorHandler.java b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/TransactionErrorHandler.java
index 14e4557..57245b5 100644
--- a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/TransactionErrorHandler.java
+++ b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/TransactionErrorHandler.java
@@ -357,7 +357,7 @@ public class TransactionErrorHandler extends ErrorHandlerSupport
         if (!hasNext()) {
             return null;
         }
-        List<Processor> answer  new ArrayList<Processor>(1);
+        List<Processor> answer  new ArrayList<>(1);
         answer.add(output);
         return answer;
     }

http://git-wip-us.apache.org/repos/asf/camel/blob/d41194b8/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/TransactionalJtaTransactionPolicy.java
----------------------------------------------------------------------
diff --git a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/TransactionalJtaTransactionPolicy.java b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/TransactionalJtaTransactionPolicy.java
index 188b587..3b515c8 100644
--- a/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/TransactionalJtaTransactionPolicy.java
+++ b/components/camel-cdi/src/main/java/org/apache/camel/cdi/transaction/TransactionalJtaTransactionPolicy.java
@@ -40,12 +40,6 @@ public abstract class TransactionalJtaTransactionPolicy extends JtaTransactionPo
         }
         try {
             runnable.run();
-        } catch (RuntimeException e) {
-            rollback(isNew);
-            throw e;
-        } catch (Error e) {
-            rollback(isNew);
-            throw e;
         } catch (Throwable e) {
             rollback(isNew);
             throw e;
@@ -53,7 +47,6 @@ public abstract class TransactionalJtaTransactionPolicy extends JtaTransactionPo
         if (isNew) {
             commit();
         }
-        return;
     }
 
     private void begin() throws Exception {
@@ -63,21 +56,9 @@ public abstract class TransactionalJtaTransactionPolicy extends JtaTransactionPo
     private void commit() throws Exception {
         try {
             transactionManager.commit();
-        } catch (HeuristicMixedException e) {
-            throw new CamelException(Unable to commit transaction, e);
-        } catch (HeuristicRollbackException e) {
-            throw new CamelException(Unable to commit transaction, e);
-        } catch (RollbackException e) {
+        } catch (HeuristicMixedException | HeuristicRollbackException | RollbackException | SystemException e) {
             throw new CamelException(Unable to commit transaction, e);
-        } catch (SystemException e) {
-            throw new CamelException(Unable to commit transaction, e);
-        } catch (RuntimeException e) {
-            rollback(true);
-            throw e;
-        } catch (Exception e) {
-            rollback(true);
-            throw e;
-        } catch (Error e) {
+        } catch (Exception | Error e) {
             rollback(true);
             throw e;
         }


"
"41","334","2017-04-14 15:39:24+00:00","astefanutti@apache.org","['commits@camel.apache.org']","camel git commit: Camel CDI: Support TransactionErrorHandler in Camel
 XML DSL","Return-Path: <commits-return-55707-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 67EC81A313
	for <apmail-camel-commits-archive@www.apache.org>; Fri, 14 Apr 2017 15:39:24 +0000 (UTC)
Received: (qmail 20251 invoked by uid 500); 14 Apr 2017 15:39:24 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 20195 invoked by uid 500); 14 Apr 2017 15:39:24 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 20185 invoked by uid 99); 14 Apr 2017 15:39:24 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 15:39:24 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 37CE9DFC31; Fri, 14 Apr 2017 15:39:24 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: astefanutti@apache.org
To: commits@camel.apache.org
Message-Id: <38066940ce0a47efa5600056b64f3d22@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Camel CDI: Support TransactionErrorHandler in Camel
 XML DSL
Date: Fri, 14 Apr 2017 15:39:24 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master d41194b8b -> ec9ab4e0b


Camel CDI: Support TransactionErrorHandler in Camel XML DSL


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/ec9ab4e0
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/ec9ab4e0
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/ec9ab4e0

Branch: refs/heads/master
Commit: ec9ab4e0be554528d7173df3af12bc275fb2289e
Parents: d41194b
Author: Antonin Stefanutti <antonin@stefanutti.fr>
Authored: Fri Apr 14 17:39:16 2017 +0200
Committer: Antonin Stefanutti <antonin@stefanutti.fr>
Committed: Fri Apr 14 17:39:16 2017 +0200

----------------------------------------------------------------------
 .../src/main/java/org/apache/camel/cdi/xml/ErrorHandlerType.java | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/ec9ab4e0/components/camel-cdi/src/main/java/org/apache/camel/cdi/xml/ErrorHandlerType.java
----------------------------------------------------------------------
diff --git a/components/camel-cdi/src/main/java/org/apache/camel/cdi/xml/ErrorHandlerType.java b/components/camel-cdi/src/main/java/org/apache/camel/cdi/xml/ErrorHandlerType.java
index 57b0860..1f9d4c0 100644
--- a/components/camel-cdi/src/main/java/org/apache/camel/cdi/xml/ErrorHandlerType.java
+++ b/components/camel-cdi/src/main/java/org/apache/camel/cdi/xml/ErrorHandlerType.java
@@ -25,6 +25,8 @@ import org.apache.camel.builder.ErrorHandlerBuilder;
 import org.apache.camel.builder.LoggingErrorHandlerBuilder;
 import org.apache.camel.builder.NoErrorHandlerBuilder;
 
+import org.apache.camel.cdi.transaction.JtaTransactionErrorHandlerBuilder;
+
 /**
  * Used to configure the errorHandler type
  */
@@ -54,7 +56,7 @@ public enum ErrorHandlerType {
         case NoErrorHandler:
             return NoErrorHandlerBuilder.class;
         case TransactionErrorHandler:
-            throw new UnsupportedOperationException(Unsupported error handler:  + this);
+            return JtaTransactionErrorHandlerBuilder.class;
         default:
             throw new IllegalArgumentException(Unknown error handler:  + this);
         }


"
"42","749","2017-04-14 16:08:45+00:00","jenkins@builds.apache.org","['davsclaus@apache.org', 'lburgazzoli@gmail.com', 'dev@camel.apache.org']","Camel.trunk.notest - Build # 3140 - Still Failing","Return-Path: <dev-return-47387-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id CAE1D1A475
	for <apmail-camel-dev-archive@www.apache.org>; Fri, 14 Apr 2017 16:08:48 +0000 (UTC)
Received: (qmail 78352 invoked by uid 500); 14 Apr 2017 16:08:48 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 78321 invoked by uid 500); 14 Apr 2017 16:08:48 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 78269 invoked by uid 99); 14 Apr 2017 16:08:45 -0000
Received: from crius.apache.org (HELO crius.apache.org) (140.211.11.14)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 16:08:45 +0000
Received: from crius.apache.org (localhost [127.0.0.1])
	by crius.apache.org (ASF Mail Server at crius.apache.org) with ESMTP id A2E009C009A;
	Fri, 14 Apr 2017 16:08:45 +0000 (UTC)
Date: Fri, 14 Apr 2017 16:08:45 +0000 (UTC)
From: Apache Jenkins Server <jenkins@builds.apache.org>
To: davsclaus@apache.org, lburgazzoli@gmail.com, dev@camel.apache.org
Message-ID: <532825254.1161.1492186125669.JavaMail.jenkins@crius>
In-Reply-To: <1103389866.1132.1492176044941.JavaMail.jenkins@crius>
References: <1103389866.1132.1492176044941.JavaMail.jenkins@crius>
Subject: Camel.trunk.notest - Build # 3140 - Still Failing
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary----_Part_1160_451354998.1492186125020
X-Jenkins-Job: Camel.trunk.notest
X-Jenkins-Result: FAILURE

------_Part_1160_451354998.1492186125020
Content-Type: text/plain; charsetUTF-8
Content-Transfer-Encoding: 7bit

The Apache Jenkins build system has built Camel.trunk.notest (build #3140)

Status: Still Failing

Check console output at https://builds.apache.org/job/Camel.trunk.notest/3140/ to view the results.
------_Part_1160_451354998.1492186125020--

"
"43","1844","2017-04-14 10:15:23-07:00","revathykuberan@gmail.com","['users@camel.apache.org']","Re: Multiple from end points traversing to different routes","Return-Path: <users-return-65327-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 5BD471A67E
	for <apmail-camel-users-archive@www.apache.org>; Fri, 14 Apr 2017 17:15:27 +0000 (UTC)
Received: (qmail 5040 invoked by uid 500); 14 Apr 2017 17:15:26 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 4986 invoked by uid 500); 14 Apr 2017 17:15:26 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 4975 invoked by uid 99); 14 Apr 2017 17:15:26 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 17:15:26 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 4364CC015C
	for <users@camel.apache.org>; Fri, 14 Apr 2017 17:15:26 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 3.486
X-Spam-Level: ***
X-Spam-Status: No, score3.486 tagged_above-999 required6.31
	tests[DKIM_ADSP_CUSTOM_MED0.001, NML_ADSP_CUSTOM_MED1.2,
	RCVD_IN_DNSWL_NONE-0.0001, SPF_SOFTFAIL0.972, URI_HEX1.313]
	autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id 5c2R6LFseaQp for <users@camel.apache.org>;
	Fri, 14 Apr 2017 17:15:24 +0000 (UTC)
Received: from mwork.nabble.com (mwork.nabble.com [162.253.133.43])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 05CF85FBA7
	for <users@camel.apache.org>; Fri, 14 Apr 2017 17:15:24 +0000 (UTC)
Received: from static.162.255.23.22.macminivault.com (unknown [162.255.23.22])
	by mwork.nabble.com (Postfix) with ESMTP id 4942539E3205C
	for <users@camel.apache.org>; Fri, 14 Apr 2017 10:15:23 -0700 (MST)
Date: Fri, 14 Apr 2017 10:15:23 -0700 (MST)
From: erevkub1 <revathykuberan@gmail.com>
To: users@camel.apache.org
Message-ID: <1492190123294-5797757.post@n5.nabble.com>
In-Reply-To: <CA+D-ZCQOvarsj9s7V0SRPXu7f6rmrxdEVpuqLeoVYHrOvfKvDA@mail.gmail.com>
References: <1492106505122-5797650.post@n5.nabble.com> <CA+D-ZCQOvarsj9s7V0SRPXu7f6rmrxdEVpuqLeoVYHrOvfKvDA@mail.gmail.com>
Subject: Re: Multiple from end points traversing to different routes
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Thanks for your quick response. I also tried using  multiple routebuilder and
tried a small POC and it worked. Please let em know if this is a good
option?



--
View this message in context: http://camel.465427.n5.nabble.com/Multiple-from-end-points-traversing-to-different-routes-tp5797650p5797757.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"44","750","2017-04-14 18:13:42+00:00","jenkins@builds.apache.org","['davsclaus@apache.org', 'lburgazzoli@gmail.com', 'dev@camel.apache.org']","Camel.trunk.notest - Build # 3141 - Still Failing","Return-Path: <dev-return-47388-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id A11821A923
	for <apmail-camel-dev-archive@www.apache.org>; Fri, 14 Apr 2017 18:13:43 +0000 (UTC)
Received: (qmail 40889 invoked by uid 500); 14 Apr 2017 18:13:43 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 40831 invoked by uid 500); 14 Apr 2017 18:13:43 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 40814 invoked by uid 99); 14 Apr 2017 18:13:43 -0000
Received: from crius.apache.org (HELO crius.apache.org) (140.211.11.14)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 18:13:43 +0000
Received: from crius.apache.org (localhost [127.0.0.1])
	by crius.apache.org (ASF Mail Server at crius.apache.org) with ESMTP id 074A79C009A;
	Fri, 14 Apr 2017 18:13:42 +0000 (UTC)
Date: Fri, 14 Apr 2017 18:13:42 +0000 (UTC)
From: Apache Jenkins Server <jenkins@builds.apache.org>
To: davsclaus@apache.org, lburgazzoli@gmail.com, dev@camel.apache.org
Message-ID: <1866482530.1202.1492193623031.JavaMail.jenkins@crius>
In-Reply-To: <532825254.1161.1492186125669.JavaMail.jenkins@crius>
References: <532825254.1161.1492186125669.JavaMail.jenkins@crius>
Subject: Camel.trunk.notest - Build # 3141 - Still Failing
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary----_Part_1201_1232975375.1492193622072
X-Jenkins-Job: Camel.trunk.notest
X-Jenkins-Result: FAILURE

------_Part_1201_1232975375.1492193622072
Content-Type: text/plain; charsetUTF-8
Content-Transfer-Encoding: 7bit

The Apache Jenkins build system has built Camel.trunk.notest (build #3141)

Status: Still Failing

Check console output at https://builds.apache.org/job/Camel.trunk.notest/3141/ to view the results.
------_Part_1201_1232975375.1492193622072--

"
"45","1845","2017-04-14 13:39:13-07:00","dariuscooper@gmail.com","['users@camel.apache.org']","Transformation options","Return-Path: <users-return-65328-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id E72F11AE3B
	for <apmail-camel-users-archive@www.apache.org>; Fri, 14 Apr 2017 20:39:21 +0000 (UTC)
Received: (qmail 24013 invoked by uid 500); 14 Apr 2017 20:39:17 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 23968 invoked by uid 500); 14 Apr 2017 20:39:17 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 23446 invoked by uid 99); 14 Apr 2017 20:39:16 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Apr 2017 20:39:16 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 9AA32D0A6E
	for <users@camel.apache.org>; Fri, 14 Apr 2017 20:39:16 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 3.486
X-Spam-Level: ***
X-Spam-Status: No, score3.486 tagged_above-999 required6.31
	tests[DKIM_ADSP_CUSTOM_MED0.001, NML_ADSP_CUSTOM_MED1.2,
	RCVD_IN_DNSWL_NONE-0.0001, SPF_SOFTFAIL0.972, URI_HEX1.313]
	autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id eNETv7dQyygz for <users@camel.apache.org>;
	Fri, 14 Apr 2017 20:39:14 +0000 (UTC)
Received: from mwork.nabble.com (mwork.nabble.com [162.253.133.43])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 49F085FB49
	for <users@camel.apache.org>; Fri, 14 Apr 2017 20:39:14 +0000 (UTC)
Received: from static.162.255.23.22.macminivault.com (unknown [162.255.23.22])
	by mwork.nabble.com (Postfix) with ESMTP id A5E2E39ECB08B
	for <users@camel.apache.org>; Fri, 14 Apr 2017 13:39:13 -0700 (MST)
Date: Fri, 14 Apr 2017 13:39:13 -0700 (MST)
From: DariusX <dariuscooper@gmail.com>
To: users@camel.apache.org
Message-ID: <1492202353675-5797759.post@n5.nabble.com>
Subject: Transformation options
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

The Camel in Action book says Prefer to use beans over processors (pg 112
in 2nd Edition), because theyre not dependent on the Camel API. 

This leads me to a follow-up question: 
- if we need to tranform between 2 custom formats (i.e. annot use an
existing Dataformat);and,
- also do not need the Exchange, but can transform the body

With those assumptions, should we also prefer to use Beans over a
Custom-Dataformat or Camel Transformer? Or, are their situations where those
two are useful even if one does not need anything but the body()  ?




--
View this message in context: http://camel.465427.n5.nabble.com/Transformation-options-tp5797759.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"46","1846","2017-04-15 20:49:18-07:00","contactreji@gmail.com","['users@camel.apache.org']","Camel Websocket // Binding error","Return-Path: <users-return-65329-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id B511B18808
	for <apmail-camel-users-archive@www.apache.org>; Sun, 16 Apr 2017 03:49:29 +0000 (UTC)
Received: (qmail 14360 invoked by uid 500); 16 Apr 2017 03:49:29 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 14296 invoked by uid 500); 16 Apr 2017 03:49:29 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 14285 invoked by uid 99); 16 Apr 2017 03:49:28 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 16 Apr 2017 03:49:28 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 5B5C1C1275
	for <users@camel.apache.org>; Sun, 16 Apr 2017 03:49:28 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 3.486
X-Spam-Level: ***
X-Spam-Status: No, score3.486 tagged_above-999 required6.31
	tests[DKIM_ADSP_CUSTOM_MED0.001, NML_ADSP_CUSTOM_MED1.2,
	RCVD_IN_DNSWL_NONE-0.0001, SPF_SOFTFAIL0.972, URI_HEX1.313]
	autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id m12bx8nScTXd for <users@camel.apache.org>;
	Sun, 16 Apr 2017 03:49:25 +0000 (UTC)
Received: from mwork.nabble.com (mwork.nabble.com [162.253.133.43])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 594DF5F343
	for <users@camel.apache.org>; Sun, 16 Apr 2017 03:49:25 +0000 (UTC)
Received: from static.162.255.23.22.macminivault.com (unknown [162.255.23.22])
	by mwork.nabble.com (Postfix) with ESMTP id 73ECB3A3F956A
	for <users@camel.apache.org>; Sat, 15 Apr 2017 20:49:18 -0700 (MST)
Date: Sat, 15 Apr 2017 20:49:18 -0700 (MST)
From: contactreji <contactreji@gmail.com>
To: users@camel.apache.org
Message-ID: <1492314558425-5797760.post@n5.nabble.com>
Subject: Camel Websocket // Binding error
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Hello guys

I am doing a POC on camel websockets. I have some data being pushed from UI
layer over websockets

from(websocket://0.0.0.0:9293/hotelsearch)
                .log(LoggingLevel.INFO,TestServices,Received Search
Request data ${body})
                .removeHeaders(*)
                .to(direct:Authenticate)...... and so On...

This deploys perfectly fine as long as I have no other modules deployed on
the same server. ( Deployed as a springboot application). Another project is
running on same server which binds to 9292 for its websocket consumer
endpoint . And for the above module I changed it to 9293  to avoid port
conflict. 

But surprisingly, when i start this app, it tries to bind port *9292*
instead of *9293* and as a result, I get port binding error.

*Will not consumer endpoint like from(websocket://0.0.0.0:9293/hotelsearch)
bind to 9293? Why is it trying to bind to 9292? Could this be a bug in
Websocket Component?
*
Cheers
Reji





-----
Reji Mathews
Sr. Developer - Middleware Integration / SOA ( Open Source - Apache Camel & Jboss Fuse ESB | Mule ESB )
LinkedIn - http://in.linkedin.com/pub/reji-mathews/31/9a2/40a
Twitter - reji_mathews
--
View this message in context: http://camel.465427.n5.nabble.com/Camel-Websocket-Binding-error-tp5797760.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"47","1847","2017-04-16 09:22:58+02:00","claus.ibsen@gmail.com","['users@camel.apache.org']","Apache Camel reviews","Return-Path: <users-return-65330-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id AE5F118B95
	for <apmail-camel-users-archive@www.apache.org>; Sun, 16 Apr 2017 07:23:23 +0000 (UTC)
Received: (qmail 11030 invoked by uid 500); 16 Apr 2017 07:23:23 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 10974 invoked by uid 500); 16 Apr 2017 07:23:23 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 10962 invoked by uid 99); 16 Apr 2017 07:23:22 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 16 Apr 2017 07:23:22 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 68D8AC0145
	for <users@camel.apache.org>; Sun, 16 Apr 2017 07:23:22 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 0.379
X-Spam-Level: 
X-Spam-Status: No, score0.379 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RCVD_IN_SORBS_SPAM0.5, SPF_PASS-0.001]
	autolearndisabled
Authentication-Results: spamd4-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id J_E_-ZLAPUaH for <users@camel.apache.org>;
	Sun, 16 Apr 2017 07:23:20 +0000 (UTC)
Received: from mail-qt0-f169.google.com (mail-qt0-f169.google.com [209.85.216.169])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id A6F885F3BC
	for <users@camel.apache.org>; Sun, 16 Apr 2017 07:23:19 +0000 (UTC)
Received: by mail-qt0-f169.google.com with SMTP id c45so85072681qtb.1
        for <users@camel.apache.org>; Sun, 16 Apr 2017 00:23:19 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:from:date:message-id:subject:to;
        bhtPpLeV16UK61VJeQGKHnOGQCMxj1ZVvvRZckOfuUnx4;
        bKBzXG1tMOVmNy/HZOY21ZmOdnzJZJF114+A6GzIhjkvrl8CPqKt1VL7cQ0RbRXxVJ3
         iqmh6krUDkFpuJWCy1x87ZSmmt2TXiJcQZ59OTu1zZUEb31oQ44F+NT30hM7zvVjk8V3
         uU+KhjH2oa/1dLztTkQPpyMiW6ADEF19tj36jWb1yd5CMoI17xW2UlsGnRwIo/TrcqPn
         /Oc9ZyjruJGA9E/smdnwZJvQGhouDmDKk9MbeKoEY6skLmAuqOPImA8SPGB4mmVtPdpR
         A4IrBSxE4OUjPyy2KFWDK+u6y6a9EvKb/MheN1ve6HgDUqCW35EC92O67ZYyukVNWy1u
         IuWQ
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:from:date:message-id:subject:to;
        bhtPpLeV16UK61VJeQGKHnOGQCMxj1ZVvvRZckOfuUnx4;
        bSMy7nxQRekyLlftmlrVG/+Z6tCuH58+S6Aip49V7DaTmIpMB6UPMJALokHWdVuanI5
         Q1EwX12YdjSwt26hhMTY7b1HAFkLf9yzLox6SMwN3bUn8Eb2/Mu4m+vatDoooCdyZnJ9
         lC59oJs/M5kv8qg/9rE7XVL5zQIf6IijC2GkZS9qZ9dcQ41Zm9xomLFEDgVBw9tWNEyk
         kTQ8+9mnpd3M2tfawi1uiV3ANhue+h70qJyc8t6cby9ERh1HP+x6zLqP15njzH05u4M2
         jq+ABdQDIJg5IPTJCOxLGSUB5fFKQfpKyfhPT0RaA1cRyZCPozWv19mFqpBW6nzO9Dvi
         HwtA
X-Gm-Message-State: AN3rC/77V7r1GtXEy7k1g1R+cnae/4BP3yddIyFiZS56uo0ZHU72VPz5
	GCLvzM8LFT3PSyeZlHYfpfLs4F2vO5H2Z14
X-Received: by 10.237.41.199 with SMTP id o65mr4923536qtd.239.1492327398694;
 Sun, 16 Apr 2017 00:23:18 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.200.50.39 with HTTP; Sun, 16 Apr 2017 00:22:58 -0700 (PDT)
From: Claus Ibsen <claus.ibsen@gmail.com>
Date: Sun, 16 Apr 2017 09:22:58 +0200
Message-ID: <CAGB5yNmmyxHaQg1vVfqNH7KD_H3dUjyi5S2yhdjYGqrn2TGWw@mail.gmail.com>
Subject: Apache Camel reviews
To: users@camel.apache.org <users@camel.apache.org>
Content-Type: text/plain; charsetUTF-8

Hi

Recently I stumbled on a tweet about an Apache Camel review and
therefore I was intrigued.

It was a review from a site I have not head about before - trustradius.

You can read the text for a minute or two before I asks for login so I
was skeptic at first.

Well this morning I logged in using linkedin and there was 11 reviews,
which provides good insight for Camel developers like myself to get
feedback from real users. Surprisingly those reviews are fairly new
from late 2016 and up till today. So they seem more relevant than eg
reviews from 2009 etc.

The reviews are at (mind you need to login via linkedin or signup)
https://www.trustradius.com/products/apache-camel/reviews


-- 
Claus Ibsen
-----------------
http://davsclaus.com @davsclaus
Camel in Action 2: https://www.manning.com/ibsen2

"
"48","1848","2017-04-16 09:27:20+02:00","claus.ibsen@gmail.com","['users@camel.apache.org']","Re: Transformation options","Return-Path: <users-return-65331-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id D934B18BA7
	for <apmail-camel-users-archive@www.apache.org>; Sun, 16 Apr 2017 07:27:55 +0000 (UTC)
Received: (qmail 16459 invoked by uid 500); 16 Apr 2017 07:27:50 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 16420 invoked by uid 500); 16 Apr 2017 07:27:50 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 16408 invoked by uid 99); 16 Apr 2017 07:27:50 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 16 Apr 2017 07:27:50 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 8EBB21A04A6
	for <users@camel.apache.org>; Sun, 16 Apr 2017 07:27:49 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 1.692
X-Spam-Level: *
X-Spam-Status: No, score1.692 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RCVD_IN_SORBS_SPAM0.5, SPF_PASS-0.001,
	URI_HEX1.313] autolearndisabled
Authentication-Results: spamd2-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id 4z15yWsMx01g for <users@camel.apache.org>;
	Sun, 16 Apr 2017 07:27:48 +0000 (UTC)
Received: from mail-qk0-f173.google.com (mail-qk0-f173.google.com [209.85.220.173])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id DE88A5F39C
	for <users@camel.apache.org>; Sun, 16 Apr 2017 07:27:47 +0000 (UTC)
Received: by mail-qk0-f173.google.com with SMTP id h67so88903060qke.0
        for <users@camel.apache.org>; Sun, 16 Apr 2017 00:27:47 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bhWeS8dUHSa1z84+wNyl0Qu+sDut6oYtm8PWp7HJl64Dw;
        bmfiY7qPaaTIFvi4iKS4Emw/7a/0PhspaXTTTpVhIl0d6ty/ROsr0JTkGGeMVzg0rQB
         Imhg7fgZI3KrKgJItQR8zvnjzn9YUyuH/PNu71VOfNdVNa+c3/35xw6XZdOQTrS+1e5k
         gdi/r3ysKcE5rFPKFW4PybxMffRGXZZ869XULnnoS6yJC5pQYFhjusyj53ijGHLIDpTA
         Vggk25FNFY3w18cAjAfldfsgsJqUsNDxDmtr58Hc13e9GBOk/kdB9GeIK2YSc4WCC0OB
         wiUpZCRLt403Wdq9FpAq0BOvEEGyJetkM26uFAegQ1lL8m1++7mu2ncmF55etKOxlfo5
         qkwg
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bhWeS8dUHSa1z84+wNyl0Qu+sDut6oYtm8PWp7HJl64Dw;
        bXC5iWDf3WrFXqQHCN6sWM7MF/hjZlFpAXSfSxUYe9NtznbT3R1JQz53JI2rAhhESE7
         wBUMtFEBAjKzS8awZ/FRKCKMojiQBWtmt+/CJYtYHzBEy4txz0vVSUl+/dgKqsrr9Oet
         jDwMgCtvI/5x9cKsXnzfMrF9RMZ1Yo3m12Kh9bCHDK9nWXtIKARkgnoTJvYpsQR8GGJ1
         ndTogtTnIiUY91sHX6bi8oiIGofmnG7X8ytePE6rAkImjMouDEflj7mstV9LtjMbVnt3
         w0fi4NP9DaQGA1f829IPoSEarBxn0zAdEoG1HNROGFgy/t/p6Vm5oJhOAnBAKSIPXvU5
         jlMQ
X-Gm-Message-State: AN3rC/76ho+JMTOJNZUvmwRbHFECOa7ol/mtQP+1FZZ+puEtKkmxuLNP
	Db3qRoRO3YhqP4vNDGIaIsx0blKzculq
X-Received: by 10.55.48.68 with SMTP id w65mr4757898qkw.160.1492327661236;
 Sun, 16 Apr 2017 00:27:41 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.200.50.39 with HTTP; Sun, 16 Apr 2017 00:27:20 -0700 (PDT)
In-Reply-To: <1492202353675-5797759.post@n5.nabble.com>
References: <1492202353675-5797759.post@n5.nabble.com>
From: Claus Ibsen <claus.ibsen@gmail.com>
Date: Sun, 16 Apr 2017 09:27:20 +0200
Message-ID: <CAGB5yNn27z64jcBOZuPJy7E79eZgLF7E6Us71nK-XkMK2nNw@mail.gmail.com>
Subject: Re: Transformation options
To: users@camel.apache.org <users@camel.apache.org>
Content-Type: text/plain; charsetUTF-8

Hi

Try to think how you would write the java api for the message
transformation without Camel. What would the input and outputs be
etc.

Then try to write unit test for these transformation that dont use
Camel if possible.

When using beans the return type is the message body, and as such if
you need to enrich with message headers as well, you can bind the
@Headers Map as parameter and add your headers on this.

But if you are comfortable with the Camel API on Exchange then a
processor is fine as well. It just has a direct dependency on Camel
and is more low level, eg you need to know about IN vs OUT message
etc. And from the code you cannot see what is the expected input and
output java/data types etc.

A processor however is faster at runtime as its just a direct method
call, where as a bean is called using a bit of reflection to find the
relevant method and then bean bindings etc. For people whom care about
CPU cycles. But the overhead is negligible.



On Fri, Apr 14, 2017 at 10:39 PM, DariusX <dariuscooper@gmail.com> wrote:
> The Camel in Action book says Prefer to use beans over processors (pg 112
> in 2nd Edition), because theyre not dependent on the Camel API.
>
> This leads me to a follow-up question:
> - if we need to tranform between 2 custom formats (i.e. annot use an
> existing Dataformat);and,
> - also do not need the Exchange, but can transform the body
>
> With those assumptions, should we also prefer to use Beans over a
> Custom-Dataformat or Camel Transformer? Or, are their situations where those
> two are useful even if one does not need anything but the body()  ?
>
>
>
>
> --
> View this message in context: http://camel.465427.n5.nabble.com/Transformation-options-tp5797759.html
> Sent from the Camel - Users mailing list archive at Nabble.com.



-- 
Claus Ibsen
-----------------
http://davsclaus.com @davsclaus
Camel in Action 2: https://www.manning.com/ibsen2

"
"49","1849","2017-04-16 09:27:52+02:00","claus.ibsen@gmail.com","['users@camel.apache.org']","Re: Camel Websocket // Binding error","Return-Path: <users-return-65332-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 1207B18BA8
	for <apmail-camel-users-archive@www.apache.org>; Sun, 16 Apr 2017 07:28:23 +0000 (UTC)
Received: (qmail 17651 invoked by uid 500); 16 Apr 2017 07:28:22 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 17597 invoked by uid 500); 16 Apr 2017 07:28:22 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 17585 invoked by uid 99); 16 Apr 2017 07:28:22 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 16 Apr 2017 07:28:22 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id A70021A04A6
	for <users@camel.apache.org>; Sun, 16 Apr 2017 07:28:21 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 1.692
X-Spam-Level: *
X-Spam-Status: No, score1.692 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RCVD_IN_SORBS_SPAM0.5, SPF_PASS-0.001,
	URI_HEX1.313] autolearndisabled
Authentication-Results: spamd2-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id oCYnadWVx_Mz for <users@camel.apache.org>;
	Sun, 16 Apr 2017 07:28:20 +0000 (UTC)
Received: from mail-qk0-f174.google.com (mail-qk0-f174.google.com [209.85.220.174])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id E86455F39C
	for <users@camel.apache.org>; Sun, 16 Apr 2017 07:28:19 +0000 (UTC)
Received: by mail-qk0-f174.google.com with SMTP id d131so88754538qkc.3
        for <users@camel.apache.org>; Sun, 16 Apr 2017 00:28:19 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh5z0Ym7LNmrResJ7LYF7tl8+FbVdh3tQUkQdOsJCFGik;
        bdxsZ/Go2fYRHHj9Qfx/GNKtW4XIvEURZxkyJmtUI8LuDselJCq8RQb6vyHN9oeXGL6
         yxHOIDXtUC/6OFBJrK/YmlpdYRwEiABLp/YPicCerKH33qulxNanJSQSHiKzSeRgIO1N
         /sLCDVbetv/b/XcOsarld9mVg2cdyA8kgIfsvDOx8bml7XT5oj9eOEXXDS51HsujTRzn
         McAPr+8BkNhksug+wlZDlYnbTXlG7ye2+N84LKpbitwvNpKOuVqwDCRFs+DWCU79an2l
         zgWeSkkdpCfPfXZ7jJstrh7DWpPZDX2xu3n3kaXzceEjwlVLZ0CC41sfJTV1yOQmykMl
         Gtkw
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bh5z0Ym7LNmrResJ7LYF7tl8+FbVdh3tQUkQdOsJCFGik;
        bEB4/ebv5/K85aDZv5MthsCZVcUqZS2O3/Hu80AJ0prORFrim3K6yY9s7ZajNhRwo6Y
         kKJXF903G+66q2mbADm4OTgIiydrrXAhYapg4AH5fjxClJW+/DJQFI9JlSOp9zlr2uo8
         xY43UEUPaIVDGhIghTiv3WUP1N6RdC0DIyHcyjp4zLXexmna4sHUXB5AvoavLL2bPft9
         GD1geMcW+Ix3E3/GQKG72X16RTDoo/PF07Nm06uL8ApcU5YSZi8QvrgBlfFpgDBNyimH
         ne8IaXVjQiz133JZyRkW4dIfYLRSBPZ1KUGbtCULmtM/QqeYU8TyZX/3D3PPNnBK9oz5
         JiYg
X-Gm-Message-State: AN3rC/5cIblzzeZ/b8uQ3N5Imv1+pSlo5l11nZkYCiXEJ3ySKd57UNnU
	EXzOw0jRGThlk7pAD8+h1htS+Fw0Pihh
X-Received: by 10.55.5.17 with SMTP id 17mr4803558qkf.279.1492327692867; Sun,
 16 Apr 2017 00:28:12 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.200.50.39 with HTTP; Sun, 16 Apr 2017 00:27:52 -0700 (PDT)
In-Reply-To: <1492314558425-5797760.post@n5.nabble.com>
References: <1492314558425-5797760.post@n5.nabble.com>
From: Claus Ibsen <claus.ibsen@gmail.com>
Date: Sun, 16 Apr 2017 09:27:52 +0200
Message-ID: <CAGB5yNnHqnw1uMwUAdXDpQzi372xVMBxWpBWfWConVFEG1E4ww@mail.gmail.com>
Subject: Re: Camel Websocket // Binding error
To: users@camel.apache.org <users@camel.apache.org>
Content-Type: text/plain; charsetUTF-8

Hi

Maybe there is some old code with 9292 or and old java / jvm process
running that take up the old port, or something.

On Sun, Apr 16, 2017 at 5:49 AM, contactreji <contactreji@gmail.com> wrote:
> Hello guys
>
> I am doing a POC on camel websockets. I have some data being pushed from UI
> layer over websockets
>
> from(websocket://0.0.0.0:9293/hotelsearch)
>                 .log(LoggingLevel.INFO,TestServices,Received Search
> Request data ${body})
>                 .removeHeaders(*)
>                 .to(direct:Authenticate)...... and so On...
>
> This deploys perfectly fine as long as I have no other modules deployed on
> the same server. ( Deployed as a springboot application). Another project is
> running on same server which binds to 9292 for its websocket consumer
> endpoint . And for the above module I changed it to 9293  to avoid port
> conflict.
>
> But surprisingly, when i start this app, it tries to bind port *9292*
> instead of *9293* and as a result, I get port binding error.
>
> *Will not consumer endpoint like from(websocket://0.0.0.0:9293/hotelsearch)
> bind to 9293? Why is it trying to bind to 9292? Could this be a bug in
> Websocket Component?
> *
> Cheers
> Reji
>
>
>
>
>
> -----
> Reji Mathews
> Sr. Developer - Middleware Integration / SOA ( Open Source - Apache Camel & Jboss Fuse ESB | Mule ESB )
> LinkedIn - http://in.linkedin.com/pub/reji-mathews/31/9a2/40a
> Twitter - reji_mathews
> --
> View this message in context: http://camel.465427.n5.nabble.com/Camel-Websocket-Binding-error-tp5797760.html
> Sent from the Camel - Users mailing list archive at Nabble.com.



-- 
Claus Ibsen
-----------------
http://davsclaus.com @davsclaus
Camel in Action 2: https://www.manning.com/ibsen2

"
"50","1342","2017-04-16 07:31:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11152) camel-ssh - Allow to use message
 headers for username/password","Return-Path: <issues-return-41467-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 3F7A918BB0
	for <apmail-camel-issues-archive@minotaur.apache.org>; Sun, 16 Apr 2017 07:31:46 +0000 (UTC)
Received: (qmail 22143 invoked by uid 500); 16 Apr 2017 07:31:46 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 22105 invoked by uid 500); 16 Apr 2017 07:31:46 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 22091 invoked by uid 99); 16 Apr 2017 07:31:46 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 16 Apr 2017 07:31:46 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 66ED61A04A6
	for <issues@camel.apache.org>; Sun, 16 Apr 2017 07:31:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -98.689
X-Spam-Level: 
X-Spam-Status: No, score-98.689 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001, URI_HEX1.313,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id 5aGsbuEWZ8kp for <issues@camel.apache.org>;
	Sun, 16 Apr 2017 07:31:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 8C2E45F29C
	for <issues@camel.apache.org>; Sun, 16 Apr 2017 07:31:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id DEB28E0D19
	for <issues@camel.apache.org>; Sun, 16 Apr 2017 07:31:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id A4C3C21B4F
	for <issues@camel.apache.org>; Sun, 16 Apr 2017 07:31:41 +0000 (UTC)
Date: Sun, 16 Apr 2017 07:31:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064259.1492327880000.291543.1492327901673@Atlassian.JIRA>
In-Reply-To: <JIRA.13064259.1492327880000@Atlassian.JIRA>
References: <JIRA.13064259.1492327880000@Atlassian.JIRA> <JIRA.13064259.1492327880472@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11152) camel-ssh - Allow to use message
 headers for username/password
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Claus Ibsen created CAMEL-11152:
-----------------------------------

             Summary: camel-ssh - Allow to use message headers for username/password
                 Key: CAMEL-11152
                 URL: https://issues.apache.org/jira/browse/CAMEL-11152
             Project: Camel
          Issue Type: Improvement
          Components: camel-ssh
            Reporter: Claus Ibsen
            Priority: Minor
             Fix For: Future


See nabble
http://camel.465427.n5.nabble.com/Camel-SSH-dynamic-values-tp5797435p5797545.html

In the 
org.apache.camel.component.ssh.SshHelper#sendExecCommand

We should allow the exchange to provide a username/password to be used, so you can more dynamic reuse the same ssh endpoint but for different logins.

Using toD has a drawback of creating a new endpoint per username.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"51","1850","2017-04-16 09:31:43+02:00","claus.ibsen@gmail.com","['users@camel.apache.org']","Re: Camel SSH - dynamic values","Return-Path: <users-return-65333-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 3FBC918BB6
	for <apmail-camel-users-archive@www.apache.org>; Sun, 16 Apr 2017 07:32:13 +0000 (UTC)
Received: (qmail 22906 invoked by uid 500); 16 Apr 2017 07:32:12 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 22778 invoked by uid 500); 16 Apr 2017 07:32:12 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 22765 invoked by uid 99); 16 Apr 2017 07:32:12 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 16 Apr 2017 07:32:12 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 02B1F181323
	for <users@camel.apache.org>; Sun, 16 Apr 2017 07:32:12 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 1.692
X-Spam-Level: *
X-Spam-Status: No, score1.692 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RCVD_IN_SORBS_SPAM0.5, SPF_PASS-0.001,
	URI_HEX1.313] autolearndisabled
Authentication-Results: spamd3-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id dH-feAAOJdPI for <users@camel.apache.org>;
	Sun, 16 Apr 2017 07:32:11 +0000 (UTC)
Received: from mail-qk0-f177.google.com (mail-qk0-f177.google.com [209.85.220.177])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id 8E73F5F3FF
	for <users@camel.apache.org>; Sun, 16 Apr 2017 07:32:10 +0000 (UTC)
Received: by mail-qk0-f177.google.com with SMTP id d131so88774944qkc.3
        for <users@camel.apache.org>; Sun, 16 Apr 2017 00:32:10 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bhc58/RIl5mPhm5YIy3xZYCkSJ8kaDLV5yu5pd5FNWlL0;
        bl4skEZkP6YeDbNxGk+Q5UAJ7e0QvBnL3DIvYAmy8UrEhOIWV+Xwvu+73ItvC6rF+de
         ahg7ujj/lGhSpAa2LU7cgjcA5y0dPKYriqOkeV1Cj1pNO/5N3lHW/36m+Vc0XrU99M2T
         qEXaXrgAEkUzzMauPL3AGnHTdH41t0aJq+NIr5dmkWWfvuAgf5vc97Z7al+N6YJEIDUm
         PB3OiFIzZ1Yb80VvDrCazxJDPVsXY0naRZaaHdKRYjdPtcs2YHMpQYvyC2GnAW/R4kqd
         pfxlNFuS36C4KxmolqCy/K65uvQWR2Xcdq+GLnlEuexCpVqnu+wabNCXcnGl71crKA2s
         Wl8w
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bhc58/RIl5mPhm5YIy3xZYCkSJ8kaDLV5yu5pd5FNWlL0;
        bt92r7vpitqKAt84Hp8Nto2jIWCtvMeS0Zu21GvY0rcIYi0661tpzuLtOmx7zjtV2PS
         yK0zd3M9c1m/mOqUXooj7V/u0KpquxL7KAwJ9oK/v3W2osJo8cqMzcQgqGwyji5G0x2P
         2kNlF0VzRUDtE92mjD3O0SVEx2k1pFqxjhCx1Ht92NnxDYAmyJ2SgSzQisQNI0qiTLAN
         kz+7Cf1AIdtJhfC3PE3E9Hpd/WsLdol0FjJ+UIAMwXf7z03XAVQT93dBIimmUxGedHx6
         rOWzs+OZ2YRoSmm7bM2QCCWt7+ITOeOYQBf2dM/KWjqwPbcGV/RqvPaSkh2C0vaDNB0M
         i+Bg
X-Gm-Message-State: AN3rC/4yIsUR5MXI4x3fU8hPkLnC9NJed+Sx6dLViDmQXnlyAQ2LaAH9
	LBiCafsHyLAAt53vHpj7JO60Tx1RPVQvaaM
X-Received: by 10.55.100.211 with SMTP id y202mr4702947qkb.290.1492327923928;
 Sun, 16 Apr 2017 00:32:03 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.200.50.39 with HTTP; Sun, 16 Apr 2017 00:31:43 -0700 (PDT)
In-Reply-To: <1492047617162-5797545.post@n5.nabble.com>
References: <1491946402202-5797435.post@n5.nabble.com> <CAGB5yNkQtu9BnL6p6C2JOALnSxciVUrELPceHfv0XHG4ZSfA@mail.gmail.com>
 <1492018475571-5797512.post@n5.nabble.com> <CABD_Zr9jDv_59vTnTk60F40BF8VC8foMLmWiXTLheknPDJ1HA@mail.gmail.com>
 <1492047617162-5797545.post@n5.nabble.com>
From: Claus Ibsen <claus.ibsen@gmail.com>
Date: Sun, 16 Apr 2017 09:31:43 +0200
Message-ID: <CAGB5yNsvdKvndZbWOCDESCMTj6qHqcHecpCAznnbj_aY9LMA@mail.gmail.com>
Subject: Re: Camel SSH - dynamic values
To: users@camel.apache.org <users@camel.apache.org>
Content-Type: text/plain; charsetUTF-8

Hi

I logged a ticket so we can support username/password headers in the future
https://issues.apache.org/jira/browse/CAMEL-11152

Contributions is welcome

On Thu, Apr 13, 2017 at 3:40 AM, urwithsumit <sumit.kushwaha@gmail.com> wrote:
> @Claus, toD() did worked for user id and password.
>
> @Zoran, the approach gives a null pointer exception for user id,  RSA token
> combination. I did not tried though with the password. For dynamic value i
> thus will go with toD()
>
>
> Still struggling to get it work with RSA token code.
>
>
>
> --
> View this message in context: http://camel.465427.n5.nabble.com/Camel-SSH-dynamic-values-tp5797435p5797545.html
> Sent from the Camel - Users mailing list archive at Nabble.com.



-- 
Claus Ibsen
-----------------
http://davsclaus.com @davsclaus
Camel in Action 2: https://www.manning.com/ibsen2

"
"52","1851","2017-04-16 15:46:11-07:00","priyanka@karnam.net","['users@camel.apache.org']","How to dynamically inject hystrix properties?","Return-Path: <users-return-65334-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 848C91A386
	for <apmail-camel-users-archive@www.apache.org>; Sun, 16 Apr 2017 22:46:26 +0000 (UTC)
Received: (qmail 93386 invoked by uid 500); 16 Apr 2017 22:46:26 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 93331 invoked by uid 500); 16 Apr 2017 22:46:24 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 93319 invoked by uid 99); 16 Apr 2017 22:46:21 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 16 Apr 2017 22:46:21 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 7AEBCC1406
	for <users@camel.apache.org>; Sun, 16 Apr 2017 22:46:21 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 2.48
X-Spam-Level: **
X-Spam-Status: No, score2.48 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, HTML_MESSAGE2,
	RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RCVD_IN_SORBS_SPAM0.5] autolearndisabled
Authentication-Results: spamd1-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dkarnam-net.20150623.gappssmtp.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id gcpkwdwgBnxX for <users@camel.apache.org>;
	Sun, 16 Apr 2017 22:46:20 +0000 (UTC)
Received: from mail-pg0-f50.google.com (mail-pg0-f50.google.com [74.125.83.50])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id 736195F39C
	for <users@camel.apache.org>; Sun, 16 Apr 2017 22:46:19 +0000 (UTC)
Received: by mail-pg0-f50.google.com with SMTP id 63so3962563pgh.0
        for <users@camel.apache.org>; Sun, 16 Apr 2017 15:46:19 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dkarnam-net.20150623.gappssmtp.com; s20150623;
        hmime-version:from:date:message-id:subject:to;
        bhq0fuVEDWTxCxCl2nWLTwFw+M09V5DSL/z9hFphSghJs;
        bYjWNy64LdYXEoOdxAdgrUoJK+l7HIko3hVaUQ6sQ2zOw3tbQksV5T8JBh4hSSBmtex
         3tNA56s9IL3AgGk0DHkf2L6yt+45fRJRaYxxVN8uPEivCa16sTiRe3HUV4Wx8TXJipPT
         +s1B1SiZLf1fUoEt/7y8EqZnBZz4SDv9mZVEhK9lgsbNgncytCrSPR3kjVAq8eD67yz4
         xyDTpbjd5q/v22R6C3ncSTL8Tp5Z/XCbo8pOeTDFUKi6eOwCtycNa/oG0VJogVbUhNUl
         jruY/KzHTEjx+KGzy4OjLa56I+7ZOO6XUumDolBFHk98kX8CYPhMjrFKBTfY1w16XG/K
         zNrQ
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:from:date:message-id:subject:to;
        bhq0fuVEDWTxCxCl2nWLTwFw+M09V5DSL/z9hFphSghJs;
        bsemXZ12TDTxbohnOUC9UD/YgqzVFhVdvZGd7duu4KZP7Rg0fzh/USOvoCil3KuItg+
         Ub/r6IHHV1Pc6w4ktCiuFxXrNZvV4KlLVjTF6R6TyfFUAW8zJO6mPSixkYBkhhwwToNm
         /Iq2PAzTuxqh7HuwDp5mRolWjahXWmJFYULwmfQabsb+VFNfD+ov8s0ZEGIEo0atOBRC
         nfR+9pdKf/JxDC5GadEKYn2+FGIyFFiThqSLDspXBRvZrR9XUOwxaG9wuxh14YL7GrgO
         LBSJNw/LYuum9+EzOYGdkRGboFd81jwnSoWLxKU6ct3AnOaIsHqKT8iTssDVkwEnILAE
         rkBw
X-Gm-Message-State: AN3rC/7lYjD3EScbpKZH/eoqke0Vf75rVM5tCBKHz2hXJL0dSZLpmDH2
	ALbzNloKuyuxQ0mqeZ7ABHrudwW3uCod
X-Received: by 10.99.149.16 with SMTP id p16mr8868897pgd.112.1492382772002;
 Sun, 16 Apr 2017 15:46:12 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.100.142.66 with HTTP; Sun, 16 Apr 2017 15:46:11 -0700 (PDT)
X-Originating-IP: [2601:600:8c01:43c0:e128:b8f2:2c36:8c5f]
From: Priyanka Gopinath <priyanka@karnam.net>
Date: Sun, 16 Apr 2017 15:46:11 -0700
Message-ID: <CAOFZOdXeJgWtpDdNrU+X0-w3kt-GQOXAOdY-5q8MQ3A47jNJkA@mail.gmail.com>
Subject: How to dynamically inject hystrix properties?
To: users@camel.apache.org
Content-Type: multipart/alternative; boundaryeb2c1b6a4cfe98ca054d5070a0

--94eb2c1b6a4cfe98ca054d5070a0
Content-Type: text/plain; charsetUTF-8

I have this special usecase where I want to change the threadpool size and
thread pool key based upon the endpoint that is getting called. All of
these values are available in the configuration on the exchange.

For eg :

Endpoint A > Threadpool(5) > Threadpool key(A)
Endpoint B > Threadpool(10) > Threadpool key(Z)
Endpoint C > Threadpool(5) > Threadpool Key(A)

However, in my hystrix route, all of the params for Hystrix EIP are strings
and I avent been able to figure the a way to evaluate the same.

from(direct:something)
.hystrix()
.threadPoolkey(hystrix.???? How to inject this value)
.end()
.to(direct:http-endpoint);

I also tried creating a HystrixThreadpoolDefinition and tried setting it
as .hystrix().hystrixConfiguration(configuration). But it comes back to the
same question of how to pass in this configuration. Method calls return
ValueBuilders and I could not cast them to the strings/configDefinitions.

Please suggest the correct way of doing it.

--94eb2c1b6a4cfe98ca054d5070a0--

"
"53","1858","2017-04-17 03:08:36-07:00","cgowda299@gmail.com","['users@camel.apache.org']","Camel not able to delete files Outside .camel","Return-Path: <users-return-65341-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6A12318E81
	for <apmail-camel-users-archive@www.apache.org>; Mon, 17 Apr 2017 18:55:12 +0000 (UTC)
Received: (qmail 13080 invoked by uid 500); 17 Apr 2017 18:55:12 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 13032 invoked by uid 500); 17 Apr 2017 18:55:11 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Delivered-To: moderator for users@camel.apache.org
Received: (qmail 22695 invoked by uid 99); 17 Apr 2017 10:08:41 -0000
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 3.736
X-Spam-Level: ***
X-Spam-Status: No, score3.736 tagged_above-999 required6.31
	tests[DKIM_ADSP_CUSTOM_MED0.001, FREEMAIL_ENVFROM_END_DIGIT0.25,
	NML_ADSP_CUSTOM_MED1.2, RCVD_IN_DNSWL_NONE-0.0001,
	SPF_SOFTFAIL0.972, URI_HEX1.313] autolearndisabled
Date: Mon, 17 Apr 2017 03:08:36 -0700 (MST)
From: chandangowda <cgowda299@gmail.com>
To: users@camel.apache.org
Message-ID: <1492423716313-5797768.post@n5.nabble.com>
Subject: Camel not able to delete files Outside .camel
MIME-Version: 1.0
Content-Type: text/plain; charsetUTF-8
Content-Transfer-Encoding: quoted-printable

>From one route IE28099m reading ZIP files after successful completion of
 reading
of files,camel not able to delete those files i.e. after moving files insid
e
.camel from outside .camel and throughing following exception.This issue
happened only for  first 21 records  out of 1000 records.Please replay ASAP
.

Stack trace
org.apache.camel.component.file.GenericFileOperationFailedException: Cannot
store file: E:\XX\XX\XXXX\XXXXX-000001-XXXX.zip
09at
org.apache.camel.component.file.FileOperations.storeFile(FileOperations.jav
a:269)
09at
org.apache.camel.component.file.GenericFileProducer.writeFile(GenericFilePr
oducer.java:278)
09at
org.apache.camel.component.file.GenericFileProducer.processExchange(Generic
FileProducer.java:166)
09at
org.apache.camel.component.file.GenericFileProducer.process(GenericFileProd
ucer.java:80)
09at
org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcess
orBridge.process(AsyncProcessorConverterHelper.java:61)
09at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:1
10)
09at
org.apache.camel.management.InstrumentationProcessor.process(Instrumentatio
nProcessor.java:72)
09at
org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHa
ndler.java:398)
09at
org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProc
essor.java:191)
09at
org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProc
essor.java:191)
09at
org.apache.camel.component.file.GenericFileConsumer.processExchange(Generic
FileConsumer.java:401)
09at
org.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFil
eConsumer.java:201)
09at
org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsume
r.java:165)
09at
org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.jav
a:187)
09at
org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:
114)
09at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:47
1)
09at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:304)
09at
java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access
$301(ScheduledThreadPoolExecutor.java:178)
09at
java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Sc
heduledThreadPoolExecutor.java:293)
09at
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1
145)
09at
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:
615)
09at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.FileNotFoundException: E:\XXX\XXXX\XX\XXXX-000001-XXX.zi
p
(Access is denied)
09at java.io.FileOutputStream.open(Native Method)
09at java.io.FileOutputStream.<init>(FileOutputStream.java:221)
09at java.io.FileOutputStream.<init>(FileOutputStream.java:171)
09at
org.apache.camel.component.file.FileOperations.prepareOutputFileChannel(Fil
eOperations.java:430)
09at
org.apache.camel.component.file.FileOperations.writeFileByFile(FileOperatio
ns.java:353)
09at
org.apache.camel.component.file.FileOperations.storeFile(FileOperations.jav
a:242)
09... 21 more



--
View this message in context: http://camel.465427.n5.nabble.com/Camel-not-a
ble-to-delete-files-Outside-camel-tp5797768.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"54","1343","2017-04-17 11:32:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Assigned] (CAMEL-11152) camel-ssh - Allow to use message
 headers for username/password","Return-Path: <issues-return-41468-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id D6A33196F9
	for <apmail-camel-issues-archive@minotaur.apache.org>; Mon, 17 Apr 2017 11:32:50 +0000 (UTC)
Received: (qmail 15574 invoked by uid 500); 17 Apr 2017 11:32:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 15150 invoked by uid 500); 17 Apr 2017 11:32:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 15141 invoked by uid 99); 17 Apr 2017 11:32:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 17 Apr 2017 11:32:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id C193B1A0643
	for <issues@camel.apache.org>; Mon, 17 Apr 2017 11:32:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -97.889
X-Spam-Level: 
X-Spam-Status: No, score-97.889 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, URI_HEX1.313, USER_IN_WHITELIST-100]
	autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id ikHq4T2Tifin for <issues@camel.apache.org>;
	Mon, 17 Apr 2017 11:32:44 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 6EFA45F4EE
	for <issues@camel.apache.org>; Mon, 17 Apr 2017 11:32:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id C4A47E00A6
	for <issues@camel.apache.org>; Mon, 17 Apr 2017 11:32:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id A4A3221B51
	for <issues@camel.apache.org>; Mon, 17 Apr 2017 11:32:41 +0000 (UTC)
Date: Mon, 17 Apr 2017 11:32:41 +0000 (UTC)
From: onder sezgin (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064259.1492327880000.295602.1492428761672@Atlassian.JIRA>
In-Reply-To: <JIRA.13064259.1492327880000@Atlassian.JIRA>
References: <JIRA.13064259.1492327880000@Atlassian.JIRA> <JIRA.13064259.1492327880472@jira-lw-us.apache.org>
Subject: [jira] [Assigned] (CAMEL-11152) camel-ssh - Allow to use message
 headers for username/password
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11152?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

onder sezgin reassigned CAMEL-11152:
------------------------------------

    Assignee: onder sezgin

> camel-ssh - Allow to use message headers for username/password
> --------------------------------------------------------------
>
>                 Key: CAMEL-11152
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11152
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-ssh
>            Reporter: Claus Ibsen
>            Assignee: onder sezgin
>            Priority: Minor
>             Fix For: Future
>
>
> See nabble
> http://camel.465427.n5.nabble.com/Camel-SSH-dynamic-values-tp5797435p5797545.html
> In the 
> org.apache.camel.component.ssh.SshHelper#sendExecCommand
> We should allow the exchange to provide a username/password to be used, so you can more dynamic reuse the same ssh endpoint but for different logins.
> Using toD has a drawback of creating a new endpoint per username.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"55","1857","2017-04-17 08:56:13-07:00","karthik_mit2002@yahoo.co.in","['users@camel.apache.org']","File Encoding falls back to default encoding while grouping after
 split using tokenize","Return-Path: <users-return-65340-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 59BA018E7F
	for <apmail-camel-users-archive@www.apache.org>; Mon, 17 Apr 2017 18:54:49 +0000 (UTC)
Received: (qmail 11960 invoked by uid 500); 17 Apr 2017 18:54:48 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 11919 invoked by uid 500); 17 Apr 2017 18:54:48 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Delivered-To: moderator for users@camel.apache.org
Received: (qmail 56780 invoked by uid 99); 17 Apr 2017 15:56:16 -0000
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 3.416
X-Spam-Level: ***
X-Spam-Status: No, score3.416 tagged_above-999 required6.31
	tests[DKIM_ADSP_CUSTOM_MED0.001, FREEMAIL_ENVFROM_END_DIGIT0.25,
	NML_ADSP_CUSTOM_MED1.2, RCVD_IN_DNSWL_NONE-0.0001,
	SPF_NEUTRAL0.652, URI_HEX1.313] autolearndisabled
Date: Mon, 17 Apr 2017 08:56:13 -0700 (MST)
From: Karthick K R <karthik_mit2002@yahoo.co.in>
To: users@camel.apache.org
Message-ID: <1492444573134-5797769.post@n5.nabble.com>
Subject: File Encoding falls back to default encoding while grouping after
 split using tokenize
MIME-Version: 1.0
Content-Type: text/plain; charsetUTF-8
Content-Transfer-Encoding: quoted-printable

I am quite new to Apache Camel. But after using it for a month now, I reall
y
feel it is a great Integration framework which makes solving various
enterprise problems very effectively with minimal effort.

Coming to the issue, I had been working on splitting a huge csv using the
splitter with tokenize & grouping N lines approach and ran into encoding
issues with the grouped content.A similar issue had been raised in StackOverflow:  Camel: UTF-8 Encoding is
lost after using Group
<http://stackoverflow.com/questions/36075063/camel-utf-8-encoding-is-lost-a
fter-using-group> 
I had also commented on the same issue with my usecase and observations
made. Including the same text here:

Sample csv file: (with Delimiter - |)
CandidateNumber|CandidateLastName|CandidateFirstName|EducationLevel

CAND123C001|Wells|Jimmy|Bachelors Degree (C2B116 years)

CAND123C002|Wells|Tom|Bachelors Degree (C2B116 years)

CAND123C003|Wells|James|Bachelors Degree (C2B116 years)

CAND123C004|Wells|Tim|Bachelors Degree (C2B116 years)

The C2B1 character is corrupted after tokenize with grouping. I was initi
ally
under the assumption that the problem was with not setting the proper File
Encoding for split, but the exchange seems to have the right value for
property CamelCharsetName3DISO-8859-1.

from(file://<dir with csv files>?noop3Dtrue&charset3DISO-8859-1)
.split(body().tokenize(\n,2,true)).streaming()
.log(body: ${body});

The same works fine with dont use grouping.

from(file://<dir with csv files>?noop3Dtrue&charset3DISO-8859-1)
.split(body().tokenize(\n)).streaming()
.log(body: ${body});

Looking at  GroupTokenIterator
<https://github.com/apache/camel/blob/master/camel-core/src/main/java/org/a
pache/camel/util/GroupTokenIterator.java> in camel code base the problem seems to be with the way TypeConverter is
used to convert String to InputStream

// convert to input stream
InputStream is 3D
camelContext.getTypeConverter().mandatoryConvertTo(InputStream.class, data)
;
...
Note: the mandatoryConvertTo() has an overloaded method with exchange

<T> T mandatoryConvertTo(Class<T> type, Exchange exchange, Object value)
As the exchange is not passed as argument it always falls back to default
charset set using system property org.apache.camel.default.charset

Potential Fix:

// convert to input stream
InputStream is 3D
camelContext.getTypeConverter().mandatoryConvertTo(InputStream.class,
exchange, data);
...
As this fix is in the camel-core, another potential option is to use split
without grouping and use AgrregateStrategy with completionSize() and
completionTimeout().

Although it would be great to get this fixed in camel-core.

Kindly let me know your thoughts and as to whether this can be handled in a
different way.




--
View this message in context: http://camel.465427.n5.nabble.com/File-Encodi
ng-falls-back-to-default-encoding-while-grouping-after-split-using-tokenize
-tp5797769.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"56","1856","2017-04-17 09:45:13-07:00","andcrow25@gmail.com","['users@camel.apache.org']","Re: Using Split with JSON File","Return-Path: <users-return-65339-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 75B9C18E7A
	for <apmail-camel-users-archive@www.apache.org>; Mon, 17 Apr 2017 18:54:34 +0000 (UTC)
Received: (qmail 10688 invoked by uid 500); 17 Apr 2017 18:54:34 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 10641 invoked by uid 500); 17 Apr 2017 18:54:34 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Delivered-To: moderator for users@camel.apache.org
Received: (qmail 89403 invoked by uid 99); 17 Apr 2017 16:45:17 -0000
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 3.736
X-Spam-Level: ***
X-Spam-Status: No, score3.736 tagged_above-999 required6.31
	tests[DKIM_ADSP_CUSTOM_MED0.001, FREEMAIL_ENVFROM_END_DIGIT0.25,
	NML_ADSP_CUSTOM_MED1.2, RCVD_IN_DNSWL_NONE-0.0001,
	SPF_SOFTFAIL0.972, URI_HEX1.313] autolearndisabled
Date: Mon, 17 Apr 2017 09:45:13 -0700 (MST)
From: andcrow <andcrow25@gmail.com>
To: users@camel.apache.org
Message-ID: <1492447513299-5797770.post@n5.nabble.com>
In-Reply-To: <1492005997292-5797508.post@n5.nabble.com>
References: <1492005997292-5797508.post@n5.nabble.com>
Subject: Re: Using Split with JSON File
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Still in the battle with this case ..... hehehehe

Viewing the documentation I found the component SQL Component:

In the options:

maxMessagesPerPoll: Camel 2.11: SQL consumer only: An integer value to
define the maximum number of messages to gather per poll. By default, no
maximum is set.

But also with this component he ignores this option:

from(timer://query?fixedRatetrue&delay5s&period10800s) 
    .routeId(route-product) 
    .setBody(constant(new ProductQuery().getProductSelect())) 
to(sql: + new ProductQuery().getProductSelect() +
?maxMessagesPerPoll1000&dataSourcemyDataSource)
    .marshal() 
        .json(JsonLibrary.Gson) 
        .setHeader(Exchange.CONTENT_TYPE, constant(application/json)) 
        .setHeader(CamelFileName, simple(${id}.json)) 
.to(file:product); 



--
View this message in context: http://camel.465427.n5.nabble.com/Using-Split-with-JSON-File-tp5797508p5797770.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"57","1852","2017-04-17 10:40:41-07:00","souciance.eqdam.rashti@gmail.com","['users@camel.apache.org']","Re: Using Split with JSON File","Return-Path: <users-return-65335-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 8F0F018A8B
	for <apmail-camel-users-archive@www.apache.org>; Mon, 17 Apr 2017 17:40:46 +0000 (UTC)
Received: (qmail 20238 invoked by uid 500); 17 Apr 2017 17:40:46 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 20190 invoked by uid 500); 17 Apr 2017 17:40:46 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 20165 invoked by uid 99); 17 Apr 2017 17:40:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 17 Apr 2017 17:40:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 481261B04A3
	for <users@camel.apache.org>; Mon, 17 Apr 2017 17:40:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 5.486
X-Spam-Level: *****
X-Spam-Status: No, score5.486 tagged_above-999 required6.31
	tests[DKIM_ADSP_CUSTOM_MED0.001, HTML_MESSAGE2,
	NML_ADSP_CUSTOM_MED1.2, RCVD_IN_DNSWL_NONE-0.0001,
	SPF_SOFTFAIL0.972, URI_HEX1.313] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id XLhmt2SPPny7 for <users@camel.apache.org>;
	Mon, 17 Apr 2017 17:40:43 +0000 (UTC)
Received: from mbob.nabble.com (mbob.nabble.com [162.253.133.15])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 465A45F4EE
	for <users@camel.apache.org>; Mon, 17 Apr 2017 17:40:42 +0000 (UTC)
Received: from static.162.255.23.22.macminivault.com (unknown [162.255.23.22])
	by mbob.nabble.com (Postfix) with ESMTP id 7FCD3414621F
	for <users@camel.apache.org>; Mon, 17 Apr 2017 10:39:22 -0700 (PDT)
Date: Mon, 17 Apr 2017 10:40:41 -0700 (MST)
From: souciance <souciance.eqdam.rashti@gmail.com>
To: users@camel.apache.org
Message-ID: <CA+wbgs1zLBw0E657fkB3ogHHVPmxSu9ozauK0nbPgBG4t89A@mail.gmail.com>
In-Reply-To: <1492447513299-5797770.post@n5.nabble.com>
References: <1492005997292-5797508.post@n5.nabble.com> <1492447513299-5797770.post@n5.nabble.com>
Subject: Re: Using Split with JSON File
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary----_Part_9603_1717783903.1492450841602

------_Part_9603_1717783903.1492450841602
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Couldnt you split the resultset from the database and for each split
produce a json and send that batch to your web service?

On Mon, Apr 17, 2017 at 6:45 PM, andcrow [via Camel] <
ml-node+s465427n5797770h33@n5.nabble.com> wrote:

> Still in the battle with this case ..... hehehehe
>
> Viewing the documentation I found the component SQL Component:
>
> In the options:
>
> maxMessagesPerPoll: Camel 2.11: SQL consumer only: An integer value to
> define the maximum number of messages to gather per poll. By default, no
> maximum is set.
>
> But also with this component he ignores this option:
>
> from(timer://query?fixedRatetrue&delay5s&period10800s)
>     .routeId(route-product)
>     .setBody(constant(new ProductQuery().getProductSelect()))
> to(sql: + new ProductQuery().getProductSelect() +
> ?maxMessagesPerPoll1000&dataSourcemyDataSource)
>     .marshal()
>         .json(JsonLibrary.Gson)
>         .setHeader(Exchange.CONTENT_TYPE, constant(application/json))
>         .setHeader(CamelFileName, simple(${id}.json))
> .to(file:product);
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://camel.465427.n5.nabble.com/Using-Split-with-JSON-
> File-tp5797508p5797770.html
> To start a new topic under Camel - Users, email
> ml-node+s465427n465428h31@n5.nabble.com
> To unsubscribe from Camel - Users, click here
> <http://camel.465427.n5.nabble.com/template/NamlServlet.jtp?macrounsubscribe_by_code&node465428&codec291Y2lhbmNlLmVxZGFtLnJhc2h0aUBnbWFpbC5jb218NDY1NDI4fDE1MzI5MTE2NTY>
> .
> NAML
> <http://camel.465427.n5.nabble.com/template/NamlServlet.jtp?macromacro_viewer&idinstant_html%21nabble%3Aemail.naml&basenabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbsnotify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://camel.465427.n5.nabble.com/Using-Split-with-JSON-File-tp5797508p5797771.html
Sent from the Camel - Users mailing list archive at Nabble.com.
------_Part_9603_1717783903.1492450841602--

"
"58","1855","2017-04-17 10:49:25-07:00","andcrow25@gmail.com","['users@camel.apache.org']","Re: Using Split with JSON File","Return-Path: <users-return-65338-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0974818E79
	for <apmail-camel-users-archive@www.apache.org>; Mon, 17 Apr 2017 18:54:27 +0000 (UTC)
Received: (qmail 9677 invoked by uid 500); 17 Apr 2017 18:54:26 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 9631 invoked by uid 500); 17 Apr 2017 18:54:26 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Delivered-To: moderator for users@camel.apache.org
Received: (qmail 37520 invoked by uid 99); 17 Apr 2017 17:49:29 -0000
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 3.736
X-Spam-Level: ***
X-Spam-Status: No, score3.736 tagged_above-999 required6.31
	tests[DKIM_ADSP_CUSTOM_MED0.001, FREEMAIL_ENVFROM_END_DIGIT0.25,
	NML_ADSP_CUSTOM_MED1.2, RCVD_IN_DNSWL_NONE-0.0001,
	SPF_SOFTFAIL0.972, URI_HEX1.313] autolearndisabled
Date: Mon, 17 Apr 2017 10:49:25 -0700 (MST)
From: andcrow <andcrow25@gmail.com>
To: users@camel.apache.org
Message-ID: <1492451365998-5797772.post@n5.nabble.com>
In-Reply-To: <CA+wbgs1zLBw0E657fkB3ogHHVPmxSu9ozauK0nbPgBG4t89A@mail.gmail.com>
References: <1492005997292-5797508.post@n5.nabble.com> <1492447513299-5797770.post@n5.nabble.com> <CA+wbgs1zLBw0E657fkB3ogHHVPmxSu9ozauK0nbPgBG4t89A@mail.gmail.com>
Subject: Re: Using Split with JSON File
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Did not work using maxMessagesPerPoll.

Does not group every 1000 records.

Creates 1 JSON file for each record.



--
View this message in context: http://camel.465427.n5.nabble.com/Using-Split-with-JSON-File-tp5797508p5797772.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"59","1853","2017-04-17 11:21:25-07:00","souciance.eqdam.rashti@gmail.com","['users@camel.apache.org']","Re: Using Split with JSON File","Return-Path: <users-return-65336-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 456C218CEB
	for <apmail-camel-users-archive@www.apache.org>; Mon, 17 Apr 2017 18:21:30 +0000 (UTC)
Received: (qmail 45243 invoked by uid 500); 17 Apr 2017 18:21:29 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 45193 invoked by uid 500); 17 Apr 2017 18:21:29 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 45181 invoked by uid 99); 17 Apr 2017 18:21:29 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 17 Apr 2017 18:21:29 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 15C111809FC
	for <users@camel.apache.org>; Mon, 17 Apr 2017 18:21:29 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 5.486
X-Spam-Level: *****
X-Spam-Status: No, score5.486 tagged_above-999 required6.31
	tests[DKIM_ADSP_CUSTOM_MED0.001, HTML_MESSAGE2,
	NML_ADSP_CUSTOM_MED1.2, RCVD_IN_DNSWL_NONE-0.0001,
	SPF_SOFTFAIL0.972, URI_HEX1.313] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id UYdkLenJGEKM for <users@camel.apache.org>;
	Mon, 17 Apr 2017 18:21:27 +0000 (UTC)
Received: from mbob.nabble.com (mbob.nabble.com [162.253.133.15])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id C9EC25F20C
	for <users@camel.apache.org>; Mon, 17 Apr 2017 18:21:26 +0000 (UTC)
Received: from static.162.255.23.22.macminivault.com (unknown [162.255.23.22])
	by mbob.nabble.com (Postfix) with ESMTP id 26A274146D4E
	for <users@camel.apache.org>; Mon, 17 Apr 2017 11:20:06 -0700 (PDT)
Date: Mon, 17 Apr 2017 11:21:25 -0700 (MST)
From: souciance <souciance.eqdam.rashti@gmail.com>
To: users@camel.apache.org
Message-ID: <CA+wbgs2xSLT+Ay9dzbV+qRd76WTPbtZ049x6CNUCX05e5G8aA@mail.gmail.com>
In-Reply-To: <1492451365998-5797772.post@n5.nabble.com>
References: <1492005997292-5797508.post@n5.nabble.com> <1492447513299-5797770.post@n5.nabble.com> <CA+wbgs1zLBw0E657fkB3ogHHVPmxSu9ozauK0nbPgBG4t89A@mail.gmail.com> <1492451365998-5797772.post@n5.nabble.com>
Subject: Re: Using Split with JSON File
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary----_Part_10520_1890086824.1492453285407

------_Part_10520_1890086824.1492453285407
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

I would suggest get the whole resultset and save the data on a queue or
even as a file. Then you can parse it as a stream or every x number of rows
and split.

On Mon, Apr 17, 2017 at 7:49 PM, andcrow [via Camel] <
ml-node+s465427n5797772h95@n5.nabble.com> wrote:

> Did not work using maxMessagesPerPoll.
>
> Does not group every 1000 records.
>
> Creates 1 JSON file for each record.
>
> ------------------------------
> If you reply to this email, your message will be added to the discussion
> below:
> http://camel.465427.n5.nabble.com/Using-Split-with-JSON-
> File-tp5797508p5797772.html
> To start a new topic under Camel - Users, email
> ml-node+s465427n465428h31@n5.nabble.com
> To unsubscribe from Camel - Users, click here
> <http://camel.465427.n5.nabble.com/template/NamlServlet.jtp?macrounsubscribe_by_code&node465428&codec291Y2lhbmNlLmVxZGFtLnJhc2h0aUBnbWFpbC5jb218NDY1NDI4fDE1MzI5MTE2NTY>
> .
> NAML
> <http://camel.465427.n5.nabble.com/template/NamlServlet.jtp?macromacro_viewer&idinstant_html%21nabble%3Aemail.naml&basenabble.naml.namespaces.BasicNamespace-nabble.view.web.template.NabbleNamespace-nabble.view.web.template.NodeNamespace&breadcrumbsnotify_subscribers%21nabble%3Aemail.naml-instant_emails%21nabble%3Aemail.naml-send_instant_email%21nabble%3Aemail.naml>
>




--
View this message in context: http://camel.465427.n5.nabble.com/Using-Split-with-JSON-File-tp5797508p5797773.html
Sent from the Camel - Users mailing list archive at Nabble.com.
------_Part_10520_1890086824.1492453285407--

"
"60","1854","2017-04-17 11:32:24-07:00","andcrow25@gmail.com","['users@camel.apache.org']","Re: Using Split with JSON File","Return-Path: <users-return-65337-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 17DEE18E78
	for <apmail-camel-users-archive@www.apache.org>; Mon, 17 Apr 2017 18:54:20 +0000 (UTC)
Received: (qmail 8607 invoked by uid 500); 17 Apr 2017 18:54:19 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 8559 invoked by uid 500); 17 Apr 2017 18:54:19 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Delivered-To: moderator for users@camel.apache.org
Received: (qmail 66101 invoked by uid 99); 17 Apr 2017 18:32:28 -0000
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 3.736
X-Spam-Level: ***
X-Spam-Status: No, score3.736 tagged_above-999 required6.31
	tests[DKIM_ADSP_CUSTOM_MED0.001, FREEMAIL_ENVFROM_END_DIGIT0.25,
	NML_ADSP_CUSTOM_MED1.2, RCVD_IN_DNSWL_NONE-0.0001,
	SPF_SOFTFAIL0.972, URI_HEX1.313] autolearndisabled
Date: Mon, 17 Apr 2017 11:32:24 -0700 (MST)
From: andcrow <andcrow25@gmail.com>
To: users@camel.apache.org
Message-ID: <1492453944657-5797774.post@n5.nabble.com>
In-Reply-To: <CA+wbgs2xSLT+Ay9dzbV+qRd76WTPbtZ049x6CNUCX05e5G8aA@mail.gmail.com>
References: <1492005997292-5797508.post@n5.nabble.com> <1492447513299-5797770.post@n5.nabble.com> <CA+wbgs1zLBw0E657fkB3ogHHVPmxSu9ozauK0nbPgBG4t89A@mail.gmail.com> <1492451365998-5797772.post@n5.nabble.com> <CA+wbgs2xSLT+Ay9dzbV+qRd76WTPbtZ049x6CNUCX05e5G8aA@mail.gmail.com>
Subject: Re: Using Split with JSON File
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Ill try




--
View this message in context: http://camel.465427.n5.nabble.com/Using-Split-with-JSON-File-tp5797508p5797774.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"61","1344","2017-04-18 01:35:42+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11153) camel-protobuf - itest starts to
 fail again","Return-Path: <issues-return-41469-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 7567018F62
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 01:35:46 +0000 (UTC)
Received: (qmail 43176 invoked by uid 500); 18 Apr 2017 01:35:46 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 43131 invoked by uid 500); 18 Apr 2017 01:35:46 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 43121 invoked by uid 99); 18 Apr 2017 01:35:46 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 01:35:46 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id DD419C0B41
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:35:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id ub_U3ts9OumK for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 01:35:45 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 9FED05FB3D
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:35:44 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id DB030E0A6C
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:35:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 8D3CC21B4F
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:35:42 +0000 (UTC)
Date: Tue, 18 Apr 2017 01:35:42 +0000 (UTC)
From: Tadayoshi Sato (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064549.1492479333000.301583.1492479342576@Atlassian.JIRA>
In-Reply-To: <JIRA.13064549.1492479333000@Atlassian.JIRA>
References: <JIRA.13064549.1492479333000@Atlassian.JIRA> <JIRA.13064549.1492479333233@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11153) camel-protobuf - itest starts to
 fail again
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Tadayoshi Sato created CAMEL-11153:
--------------------------------------

             Summary: camel-protobuf - itest starts to fail again
                 Key: CAMEL-11153
                 URL: https://issues.apache.org/jira/browse/CAMEL-11153
             Project: Camel
          Issue Type: Bug
            Reporter: Tadayoshi Sato
             Fix For: 2.19.0


{{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason (I mean not just flaky):
https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/activity

I remember it worked fine locally a few days ago but now it even fails locally. Test it with:
{code}$ mvn test -DtestCamelProtobufTest{code}
in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"62","1345","2017-04-18 01:36:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to
 fail again","Return-Path: <issues-return-41470-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 58AB218F6C
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 01:36:44 +0000 (UTC)
Received: (qmail 45493 invoked by uid 500); 18 Apr 2017 01:36:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 45451 invoked by uid 500); 18 Apr 2017 01:36:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 45442 invoked by uid 99); 18 Apr 2017 01:36:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 01:36:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id D09CA1809FF
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:36:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id IZocnlk-qYPy for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 01:36:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 78EDD5F405
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:36:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id C9EF1E00A6
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:36:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 85AE321B45
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:36:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 01:36:41 +0000 (UTC)
From: Tadayoshi Sato (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064549.1492479333000.301586.1492479401545@Atlassian.JIRA>
In-Reply-To: <JIRA.13064549.1492479333000@Atlassian.JIRA>
References: <JIRA.13064549.1492479333000@Atlassian.JIRA> <JIRA.13064549.1492479333233@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to
 fail again
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11153?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Tadayoshi Sato updated CAMEL-11153:
-----------------------------------
    Affects Version/s: 2.19.0

> camel-protobuf - itest starts to fail again
> -------------------------------------------
>
>                 Key: CAMEL-11153
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11153
>             Project: Camel
>          Issue Type: Bug
>    Affects Versions: 2.19.0
>            Reporter: Tadayoshi Sato
>             Fix For: 2.19.0
>
>
> {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason (I mean not just flaky):
> https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/activity
> I remember it worked fine locally a few days ago but now it even fails locally. Test it with:
> {code}$ mvn test -DtestCamelProtobufTest{code}
> in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"63","1346","2017-04-18 01:37:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to
 fail again","Return-Path: <issues-return-41471-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9555918F76
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 01:37:44 +0000 (UTC)
Received: (qmail 46178 invoked by uid 500); 18 Apr 2017 01:37:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 46132 invoked by uid 500); 18 Apr 2017 01:37:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 46113 invoked by uid 99); 18 Apr 2017 01:37:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 01:37:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id C44FDC342F
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:37:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id u_D7bNNgVDI4 for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 01:37:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 0E8995F36B
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:37:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 64CE7E0A31
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:37:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id B14E221B47
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:37:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 01:37:41 +0000 (UTC)
From: Tadayoshi Sato (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064549.1492479333000.301590.1492479461724@Atlassian.JIRA>
In-Reply-To: <JIRA.13064549.1492479333000@Atlassian.JIRA>
References: <JIRA.13064549.1492479333000@Atlassian.JIRA> <JIRA.13064549.1492479333233@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to
 fail again
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11153?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Tadayoshi Sato updated CAMEL-11153:
-----------------------------------
    Labels: protobuf  (was: )

> camel-protobuf - itest starts to fail again
> -------------------------------------------
>
>                 Key: CAMEL-11153
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11153
>             Project: Camel
>          Issue Type: Bug
>          Components: tests
>    Affects Versions: 2.19.0
>            Reporter: Tadayoshi Sato
>              Labels: protobuf
>             Fix For: 2.19.0
>
>
> {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason (I mean not just flaky):
> https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/activity
> I remember it worked fine locally a few days ago but now it even fails locally. Test it with:
> {code}$ mvn test -DtestCamelProtobufTest{code}
> in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"64","1347","2017-04-18 01:37:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to
 fail again","Return-Path: <issues-return-41472-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9A47418F77
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 01:37:44 +0000 (UTC)
Received: (qmail 46279 invoked by uid 500); 18 Apr 2017 01:37:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 46135 invoked by uid 500); 18 Apr 2017 01:37:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 46122 invoked by uid 99); 18 Apr 2017 01:37:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 01:37:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id F16FC1A06C5
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:37:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id LkARavgA-mH6 for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 01:37:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id B2FBF5F4EE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:37:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 0284FE0458
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:37:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id AD3F621B45
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:37:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 01:37:41 +0000 (UTC)
From: Tadayoshi Sato (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064549.1492479333000.301588.1492479461707@Atlassian.JIRA>
In-Reply-To: <JIRA.13064549.1492479333000@Atlassian.JIRA>
References: <JIRA.13064549.1492479333000@Atlassian.JIRA> <JIRA.13064549.1492479333233@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to
 fail again
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11153?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Tadayoshi Sato updated CAMEL-11153:
-----------------------------------
    Component/s: tests

> camel-protobuf - itest starts to fail again
> -------------------------------------------
>
>                 Key: CAMEL-11153
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11153
>             Project: Camel
>          Issue Type: Bug
>          Components: tests
>    Affects Versions: 2.19.0
>            Reporter: Tadayoshi Sato
>              Labels: protobuf
>             Fix For: 2.19.0
>
>
> {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some valid reason (I mean not just flaky):
> https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.karaf/activity
> I remember it worked fine locally a few days ago but now it even fails locally. Test it with:
> {code}$ mvn test -DtestCamelProtobufTest{code}
> in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause this issue?



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"65","1348","2017-04-18 01:52:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to
 fail again","Return-Path: <issues-return-41473-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id DBB7A180D8
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 01:52:45 +0000 (UTC)
Received: (qmail 69021 invoked by uid 500); 18 Apr 2017 01:52:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 68813 invoked by uid 500); 18 Apr 2017 01:52:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 68803 invoked by uid 99); 18 Apr 2017 01:52:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 01:52:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 8E5ACC86ED
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:52:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id AwW6a6-SPbVD for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 01:52:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 516AF5F20C
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:52:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id B0377E0458
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:52:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id AB83D21B53
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:52:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 01:52:41 +0000 (UTC)
From: Tadayoshi Sato (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064549.1492479333000.301680.1492480361700@Atlassian.JIRA>
In-Reply-To: <JIRA.13064549.1492479333000@Atlassian.JIRA>
References: <JIRA.13064549.1492479333000@Atlassian.JIRA> <JIRA.13064549.1492479333233@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to
 fail again
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11153?page3Dcom.atlassi
an.jira.plugin.system.issuetabpanels:all-tabpanel ]

Tadayoshi Sato updated CAMEL-11153:
-----------------------------------
    Description:{{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some
 valid reason (I mean not just flaky):
https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.kara
f/activity

{code}
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec
 <<< FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest
test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212
 sec  <<< ERROR!
org.apache.karaf.features.internal.util.MultiException: Error
09at org.apache.karaf.features.internal.download.impl.MavenDownloadManager
$MavenDownloader.<init>(MavenDownloadManager.java:84)
09at org.apache.karaf.features.internal.download.impl.MavenDownloadManager
.createDownloader(MavenDownloadManager.java:72)
09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(S
ubsystem.java:375)
09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(S
ubsystem.java:372)
09at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(S
ubsystemResolver.java:187)
09at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.j
ava:285)
09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProv
ision(FeaturesServiceImpl.java:1170)
09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda
$doProvisionInThread$0(FeaturesServiceImpl.java:1069)
09at java.util.concurrent.FutureTask.run(FutureTask.java:266)
09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.
java:1142)
09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor
.java:617)
09at java.lang.Thread.run(Thread.java:745)


Results :

Tests in error:  CamelProtobufTest.test C2BB Multi Error

Tests run: 1, Failures: 0, Errors: 1, Skipped: 0

[INFO] --------------------------------------------------------------------
----
[INFO] BUILD FAILURE
[INFO] --------------------------------------------------------------------
----
[INFO] Total time: 02:07 min
[INFO] Finished at: 2017-04-18T10:26:57+09:00
[INFO] Final Memory: 41M/2875M
[INFO] --------------------------------------------------------------------
----
{code}

I remember it worked fine locally a few days ago but now it even fails loca
lly. Test it with:
{code}$ mvn test -Dtest3DCamelProtobufTest{code}
in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause th
is issue?

  was:
{{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some
 valid reason (I mean not just flaky):
https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.kara
f/activity

I remember it worked fine locally a few days ago but now it even fails loca
lly. Test it with:
{code}$ mvn test -Dtest3DCamelProtobufTest{code}
in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause th
is issue?


> camel-protobuf - itest starts to fail again
> -------------------------------------------
>
>                 Key: CAMEL-11153
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11153
>             Project: Camel
>          Issue Type: Bug
>          Components: tests
>    Affects Versions: 2.19.0
>            Reporter: Tadayoshi Sato
>              Labels: protobuf
>             Fix For: 2.19.0
>
>
> {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for so
me valid reason (I mean not just flaky):
> https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.ka
raf/activity
> {code}
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 s
ec <<< FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest
> test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.2
12 sec  <<< ERROR!
> org.apache.karaf.features.internal.util.MultiException: Error
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er$MavenDownloader.<init>(MavenDownloadManager.java:84)
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er.createDownloader(MavenDownloadManager.java:72)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:375)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:372)
> 09at org.apache.karaf.features.internal.region.SubsystemResolver.resolve
(SubsystemResolver.java:187)
> 09at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer
.java:285)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doPr
ovision(FeaturesServiceImpl.java:1170)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lamb
da$doProvisionInThread$0(FeaturesServiceImpl.java:1069)
> 09at java.util.concurrent.FutureTask.run(FutureTask.java:266)
> 09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecuto
r.java:1142)
> 09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecut
or.java:617)
> 09at java.lang.Thread.run(Thread.java:745)
> Results :
> Tests in error:>   CamelProtobufTest.test C2BB Multi Error
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0
> [INFO] ------------------------------------------------------------------
------
> [INFO] BUILD FAILURE
> [INFO] ------------------------------------------------------------------
------
> [INFO] Total time: 02:07 min
> [INFO] Finished at: 2017-04-18T10:26:57+09:00
> [INFO] Final Memory: 41M/2875M
> [INFO] ------------------------------------------------------------------
------
> {code}
> I remember it worked fine locally a few days ago but now it even fails lo
cally. Test it with:
> {code}$ mvn test -Dtest3DCamelProtobufTest{code}
> in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause 
this issue?



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"66","1349","2017-04-18 01:53:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to
 fail again","Return-Path: <issues-return-41474-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 16C27180F0
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 01:53:45 +0000 (UTC)
Received: (qmail 75641 invoked by uid 500); 18 Apr 2017 01:53:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 75602 invoked by uid 500); 18 Apr 2017 01:53:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 75591 invoked by uid 99); 18 Apr 2017 01:53:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 01:53:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 8AF52C0B41
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:53:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id QwnrEwGYZ-lr for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 01:53:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 6C32E5F20C
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:53:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id D1F62E00A6
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:53:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 8E7EB21B45
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 01:53:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 01:53:41 +0000 (UTC)
From: Tadayoshi Sato (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064549.1492479333000.301682.1492480421582@Atlassian.JIRA>
In-Reply-To: <JIRA.13064549.1492479333000@Atlassian.JIRA>
References: <JIRA.13064549.1492479333000@Atlassian.JIRA> <JIRA.13064549.1492479333233@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to
 fail again
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11153?page3Dcom.atlassi
an.jira.plugin.system.issuetabpanels:all-tabpanel ]

Tadayoshi Sato updated CAMEL-11153:
-----------------------------------
    Description:{{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some
 valid reason (I mean not just flaky):
https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.kara
f/detail/Camel.trunk.itest.karaf/1569/pipeline

{code}
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec
 <<< FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest
test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212
 sec  <<< ERROR!
org.apache.karaf.features.internal.util.MultiException: Error
09at org.apache.karaf.features.internal.download.impl.MavenDownloadManager
$MavenDownloader.<init>(MavenDownloadManager.java:84)
09at org.apache.karaf.features.internal.download.impl.MavenDownloadManager
.createDownloader(MavenDownloadManager.java:72)
09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(S
ubsystem.java:375)
09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(S
ubsystem.java:372)
09at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(S
ubsystemResolver.java:187)
09at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.j
ava:285)
09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProv
ision(FeaturesServiceImpl.java:1170)
09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda
$doProvisionInThread$0(FeaturesServiceImpl.java:1069)
09at java.util.concurrent.FutureTask.run(FutureTask.java:266)
09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.
java:1142)
09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor
.java:617)
09at java.lang.Thread.run(Thread.java:745)


Results :

Tests in error:  CamelProtobufTest.test C2BB Multi Error

Tests run: 1, Failures: 0, Errors: 1, Skipped: 0

[INFO] --------------------------------------------------------------------
----
[INFO] BUILD FAILURE
[INFO] --------------------------------------------------------------------
----
[INFO] Total time: 02:07 min
[INFO] Finished at: 2017-04-18T10:26:57+09:00
[INFO] Final Memory: 41M/2875M
[INFO] --------------------------------------------------------------------
----
{code}

I remember it worked fine locally a few days ago but now it even fails loca
lly. Test it with:
{code}$ mvn test -Dtest3DCamelProtobufTest{code}
in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause th
is issue?

  was:
{{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for some
 valid reason (I mean not just flaky):
https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.kara
f/activity

{code}
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 sec
 <<< FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest
test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.212
 sec  <<< ERROR!
org.apache.karaf.features.internal.util.MultiException: Error
09at org.apache.karaf.features.internal.download.impl.MavenDownloadManager
$MavenDownloader.<init>(MavenDownloadManager.java:84)
09at org.apache.karaf.features.internal.download.impl.MavenDownloadManager
.createDownloader(MavenDownloadManager.java:72)
09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(S
ubsystem.java:375)
09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles(S
ubsystem.java:372)
09at org.apache.karaf.features.internal.region.SubsystemResolver.resolve(S
ubsystemResolver.java:187)
09at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.j
ava:285)
09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProv
ision(FeaturesServiceImpl.java:1170)
09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda
$doProvisionInThread$0(FeaturesServiceImpl.java:1069)
09at java.util.concurrent.FutureTask.run(FutureTask.java:266)
09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.
java:1142)
09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor
.java:617)
09at java.lang.Thread.run(Thread.java:745)


Results :

Tests in error:  CamelProtobufTest.test C2BB Multi Error

Tests run: 1, Failures: 0, Errors: 1, Skipped: 0

[INFO] --------------------------------------------------------------------
----
[INFO] BUILD FAILURE
[INFO] --------------------------------------------------------------------
----
[INFO] Total time: 02:07 min
[INFO] Finished at: 2017-04-18T10:26:57+09:00
[INFO] Final Memory: 41M/2875M
[INFO] --------------------------------------------------------------------
----
{code}

I remember it worked fine locally a few days ago but now it even fails loca
lly. Test it with:
{code}$ mvn test -Dtest3DCamelProtobufTest{code}
in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause th
is issue?


> camel-protobuf - itest starts to fail again
> -------------------------------------------
>
>                 Key: CAMEL-11153
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11153
>             Project: Camel
>          Issue Type: Bug
>          Components: tests
>    Affects Versions: 2.19.0
>            Reporter: Tadayoshi Sato
>              Labels: protobuf
>             Fix For: 2.19.0
>
>
> {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for so
me valid reason (I mean not just flaky):
> https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.ka
raf/detail/Camel.trunk.itest.karaf/1569/pipeline
> {code}
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 s
ec <<< FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest
> test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.2
12 sec  <<< ERROR!
> org.apache.karaf.features.internal.util.MultiException: Error
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er$MavenDownloader.<init>(MavenDownloadManager.java:84)
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er.createDownloader(MavenDownloadManager.java:72)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:375)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:372)
> 09at org.apache.karaf.features.internal.region.SubsystemResolver.resolve
(SubsystemResolver.java:187)
> 09at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer
.java:285)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doPr
ovision(FeaturesServiceImpl.java:1170)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lamb
da$doProvisionInThread$0(FeaturesServiceImpl.java:1069)
> 09at java.util.concurrent.FutureTask.run(FutureTask.java:266)
> 09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecuto
r.java:1142)
> 09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecut
or.java:617)
> 09at java.lang.Thread.run(Thread.java:745)
> Results :
> Tests in error:>   CamelProtobufTest.test C2BB Multi Error
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0
> [INFO] ------------------------------------------------------------------
------
> [INFO] BUILD FAILURE
> [INFO] ------------------------------------------------------------------
------
> [INFO] Total time: 02:07 min
> [INFO] Finished at: 2017-04-18T10:26:57+09:00
> [INFO] Final Memory: 41M/2875M
> [INFO] ------------------------------------------------------------------
------
> {code}
> I remember it worked fine locally a few days ago but now it even fails lo
cally. Test it with:
> {code}$ mvn test -Dtest3DCamelProtobufTest{code}
> in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause 
this issue?



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"67","1350","2017-04-18 02:22:42+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Assigned] (CAMEL-11153) camel-protobuf - itest starts to
 fail again","Return-Path: <issues-return-41475-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 94569181AF
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 02:22:47 +0000 (UTC)
Received: (qmail 4832 invoked by uid 500); 18 Apr 2017 02:22:47 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 4764 invoked by uid 500); 18 Apr 2017 02:22:46 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 4755 invoked by uid 99); 18 Apr 2017 02:22:46 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 02:22:46 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 3B0C91A06D4
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 02:22:46 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id 61XviV-aK1Mp for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 02:22:45 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 7BD9C5FBB9
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 02:22:44 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id A070DE0BCD
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 02:22:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 5EA4721B4F
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 02:22:42 +0000 (UTC)
Date: Tue, 18 Apr 2017 02:22:42 +0000 (UTC)
From: Tadayoshi Sato (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064549.1492479333000.301847.1492482162385@Atlassian.JIRA>
In-Reply-To: <JIRA.13064549.1492479333000@Atlassian.JIRA>
References: <JIRA.13064549.1492479333000@Atlassian.JIRA> <JIRA.13064549.1492479333233@jira-lw-us.apache.org>
Subject: [jira] [Assigned] (CAMEL-11153) camel-protobuf - itest starts to
 fail again
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11153?page3Dcom.atlassi
an.jira.plugin.system.issuetabpanels:all-tabpanel ]

Tadayoshi Sato reassigned CAMEL-11153:
--------------------------------------

    Assignee: Tadayoshi Sato

> camel-protobuf - itest starts to fail again
> -------------------------------------------
>
>                 Key: CAMEL-11153
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11153
>             Project: Camel
>          Issue Type: Bug
>          Components: tests
>    Affects Versions: 2.19.0
>            Reporter: Tadayoshi Sato
>            Assignee: Tadayoshi Sato
>              Labels: protobuf
>             Fix For: 2.19.0
>
>
> {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for so
me valid reason (I mean not just flaky):
> https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.ka
raf/detail/Camel.trunk.itest.karaf/1569/pipeline
> {code}
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 s
ec <<< FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest
> test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.2
12 sec  <<< ERROR!
> org.apache.karaf.features.internal.util.MultiException: Error
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er$MavenDownloader.<init>(MavenDownloadManager.java:84)
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er.createDownloader(MavenDownloadManager.java:72)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:375)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:372)
> 09at org.apache.karaf.features.internal.region.SubsystemResolver.resolve
(SubsystemResolver.java:187)
> 09at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer
.java:285)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doPr
ovision(FeaturesServiceImpl.java:1170)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lamb
da$doProvisionInThread$0(FeaturesServiceImpl.java:1069)
> 09at java.util.concurrent.FutureTask.run(FutureTask.java:266)
> 09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecuto
r.java:1142)
> 09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecut
or.java:617)
> 09at java.lang.Thread.run(Thread.java:745)
> Results :
> Tests in error:>   CamelProtobufTest.test C2BB Multi Error
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0
> [INFO] ------------------------------------------------------------------
------
> [INFO] BUILD FAILURE
> [INFO] ------------------------------------------------------------------
------
> [INFO] Total time: 02:07 min
> [INFO] Finished at: 2017-04-18T10:26:57+09:00
> [INFO] Final Memory: 41M/2875M
> [INFO] ------------------------------------------------------------------
------
> {code}
> I remember it worked fine locally a few days ago but now it even fails lo
cally. Test it with:
> {code}$ mvn test -Dtest3DCamelProtobufTest{code}
> in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause 
this issue?



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"68","1351","2017-04-18 02:25:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11153) camel-protobuf - itest starts to
 fail again","Return-Path: <issues-return-41476-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6117A181C4
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 02:25:45 +0000 (UTC)
Received: (qmail 7921 invoked by uid 500); 18 Apr 2017 02:25:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 7864 invoked by uid 500); 18 Apr 2017 02:25:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 7847 invoked by uid 99); 18 Apr 2017 02:25:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 02:25:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id F121618FCE4
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 02:25:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id MQgpB7l_kh3h for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 02:25:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 972235FBB9
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 02:25:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 092FEE0272
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 02:25:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id BA41421B45
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 02:25:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 02:25:41 +0000 (UTC)
From: Tadayoshi Sato (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064549.1492479333000.301861.1492482341760@Atlassian.JIRA>
In-Reply-To: <JIRA.13064549.1492479333000@Atlassian.JIRA>
References: <JIRA.13064549.1492479333000@Atlassian.JIRA> <JIRA.13064549.1492479333233@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11153) camel-protobuf - itest starts to
 fail again
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11153?page3Dcom.atlassia
n.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId3D159
72013#comment-15972013 ]
Tadayoshi Sato commented on CAMEL-11153:
----------------------------------------

Oops, my bad!  I missed one dependency {{protobuf-guava-version}} for the f
ix of CAMEL-11130. Will send a pull req soon.

> camel-protobuf - itest starts to fail again
> -------------------------------------------
>
>                 Key: CAMEL-11153
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11153
>             Project: Camel
>          Issue Type: Bug
>          Components: tests
>    Affects Versions: 2.19.0
>            Reporter: Tadayoshi Sato
>            Assignee: Tadayoshi Sato
>              Labels: protobuf
>             Fix For: 2.19.0
>
>
> {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for so
me valid reason (I mean not just flaky):
> https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.ka
raf/detail/Camel.trunk.itest.karaf/1569/pipeline
> {code}
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 s
ec <<< FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest
> test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.2
12 sec  <<< ERROR!
> org.apache.karaf.features.internal.util.MultiException: Error
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er$MavenDownloader.<init>(MavenDownloadManager.java:84)
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er.createDownloader(MavenDownloadManager.java:72)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:375)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:372)
> 09at org.apache.karaf.features.internal.region.SubsystemResolver.resolve
(SubsystemResolver.java:187)
> 09at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer
.java:285)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doPr
ovision(FeaturesServiceImpl.java:1170)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lamb
da$doProvisionInThread$0(FeaturesServiceImpl.java:1069)
> 09at java.util.concurrent.FutureTask.run(FutureTask.java:266)
> 09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecuto
r.java:1142)
> 09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecut
or.java:617)
> 09at java.lang.Thread.run(Thread.java:745)
> Results :
> Tests in error:>   CamelProtobufTest.test C2BB Multi Error
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0
> [INFO] ------------------------------------------------------------------
------
> [INFO] BUILD FAILURE
> [INFO] ------------------------------------------------------------------
------
> [INFO] Total time: 02:07 min
> [INFO] Finished at: 2017-04-18T10:26:57+09:00
> [INFO] Final Memory: 41M/2875M
> [INFO] ------------------------------------------------------------------
------
> {code}
> I remember it worked fine locally a few days ago but now it even fails lo
cally. Test it with:
> {code}$ mvn test -Dtest3DCamelProtobufTest{code}
> in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause 
this issue?



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"69","751","2017-04-18 02:28:26+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1634: CAMEL-11153: Add missing protobuf-guava-version de...","Return-Path: <dev-return-47389-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id A0CC218233
	for <apmail-camel-dev-archive@www.apache.org>; Tue, 18 Apr 2017 02:28:27 +0000 (UTC)
Received: (qmail 14660 invoked by uid 500); 18 Apr 2017 02:28:27 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 14609 invoked by uid 500); 18 Apr 2017 02:28:27 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 14598 invoked by uid 99); 18 Apr 2017 02:28:27 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 02:28:27 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id EE94EDFC4A; Tue, 18 Apr 2017 02:28:26 +0000 (UTC)
From: tadayosi <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
Message-ID: <git-pr-1634-camel@git.apache.org>
Subject: [GitHub] camel pull request #1634: CAMEL-11153: Add missing protobuf-guava-version de...
Content-Type: text/plain
Date: Tue, 18 Apr 2017 02:28:26 +0000 (UTC)

GitHub user tadayosi opened a pull request:

    https://github.com/apache/camel/pull/1634

    CAMEL-11153: Add missing protobuf-guava-version declaration for camel-protobuf karaf feature

    https://issues.apache.org/jira/browse/CAMEL-11153

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/tadayosi/camel CAMEL-11153

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/camel/pull/1634.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1634
    
----
commit ecee62a8147c77c757d796d6301e8f9c1fb59308
Author: Tadayoshi Sato <sato.tadayoshi@gmail.com>
Date:   2017-04-18T02:25:56Z

    CAMEL-11153: Add missing protobuf-guava-version declaration for camel-protobuf karaf feature

----


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"70","1352","2017-04-18 02:28:42+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11153) camel-protobuf - itest starts to
 fail again","Return-Path: <issues-return-41477-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 5A69418237
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 02:28:47 +0000 (UTC)
Received: (qmail 15724 invoked by uid 500); 18 Apr 2017 02:28:47 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 15681 invoked by uid 500); 18 Apr 2017 02:28:47 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 15672 invoked by uid 99); 18 Apr 2017 02:28:47 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 02:28:47 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id C36681A06D3
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 02:28:46 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id IWJt7-vKbU4v for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 02:28:45 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id B503860D9F
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 02:28:44 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id E69C4E0BFB
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 02:28:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 7F85C21B51
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 02:28:42 +0000 (UTC)
Date: Tue, 18 Apr 2017 02:28:42 +0000 (UTC)
From: ASF GitHub Bot (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064549.1492479333000.301898.1492482522520@Atlassian.JIRA>
In-Reply-To: <JIRA.13064549.1492479333000@Atlassian.JIRA>
References: <JIRA.13064549.1492479333000@Atlassian.JIRA> <JIRA.13064549.1492479333233@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11153) camel-protobuf - itest starts to
 fail again
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11153?page3Dcom.atlassia
n.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId3D159
72017#comment-15972017 ]
ASF GitHub Bot commented on CAMEL-11153:
----------------------------------------

GitHub user tadayosi opened a pull request:

    https://github.com/apache/camel/pull/1634

    CAMEL-11153: Add missing protobuf-guava-version declaration for camel-p
rotobuf karaf feature

    https://issues.apache.org/jira/browse/CAMEL-11153

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/tadayosi/camel CAMEL-11153

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/camel/pull/1634.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1634
   ----
commit ecee62a8147c77c757d796d6301e8f9c1fb59308
Author: Tadayoshi Sato <sato.tadayoshi@gmail.com>
Date:   2017-04-18T02:25:56Z

    CAMEL-11153: Add missing protobuf-guava-version declaration for camel-p
rotobuf karaf feature

----


> camel-protobuf - itest starts to fail again
> -------------------------------------------
>
>                 Key: CAMEL-11153
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11153
>             Project: Camel
>          Issue Type: Bug
>          Components: tests
>    Affects Versions: 2.19.0
>            Reporter: Tadayoshi Sato
>            Assignee: Tadayoshi Sato
>              Labels: protobuf
>             Fix For: 2.19.0
>
>
> {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for so
me valid reason (I mean not just flaky):
> https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.ka
raf/detail/Camel.trunk.itest.karaf/1569/pipeline
> {code}
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 s
ec <<< FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest
> test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.2
12 sec  <<< ERROR!
> org.apache.karaf.features.internal.util.MultiException: Error
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er$MavenDownloader.<init>(MavenDownloadManager.java:84)
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er.createDownloader(MavenDownloadManager.java:72)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:375)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:372)
> 09at org.apache.karaf.features.internal.region.SubsystemResolver.resolve
(SubsystemResolver.java:187)
> 09at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer
.java:285)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doPr
ovision(FeaturesServiceImpl.java:1170)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lamb
da$doProvisionInThread$0(FeaturesServiceImpl.java:1069)
> 09at java.util.concurrent.FutureTask.run(FutureTask.java:266)
> 09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecuto
r.java:1142)
> 09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecut
or.java:617)
> 09at java.lang.Thread.run(Thread.java:745)
> Results :
> Tests in error:>   CamelProtobufTest.test C2BB Multi Error
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0
> [INFO] ------------------------------------------------------------------
------
> [INFO] BUILD FAILURE
> [INFO] ------------------------------------------------------------------
------
> [INFO] Total time: 02:07 min
> [INFO] Finished at: 2017-04-18T10:26:57+09:00
> [INFO] Final Memory: 41M/2875M
> [INFO] ------------------------------------------------------------------
------
> {code}
> I remember it worked fine locally a few days ago but now it even fails lo
cally. Test it with:
> {code}$ mvn test -Dtest3DCamelProtobufTest{code}
> in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause 
this issue?



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"71","1859","2017-04-17 21:11:28-07:00","khaja.nawas@me.com","['users@camel.apache.org']","Camel Route - File name","Return-Path: <users-return-65342-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id D939A189E0
	for <apmail-camel-users-archive@www.apache.org>; Tue, 18 Apr 2017 06:50:02 +0000 (UTC)
Received: (qmail 74942 invoked by uid 500); 18 Apr 2017 06:50:02 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 74903 invoked by uid 500); 18 Apr 2017 06:50:02 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Delivered-To: moderator for users@camel.apache.org
Received: (qmail 74287 invoked by uid 99); 18 Apr 2017 04:11:32 -0000
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 2.285
X-Spam-Level: **
X-Spam-Status: No, score2.285 tagged_above-999 required6.31
	tests[RCVD_IN_DNSWL_NONE-0.0001, SPF_SOFTFAIL0.972, URI_HEX1.313]
	autolearndisabled
Date: Mon, 17 Apr 2017 21:11:28 -0700 (MST)
From: KhajaNawas14 <khaja.nawas@me.com>
To: users@camel.apache.org
Message-ID: <1492488688966-5797776.post@n5.nabble.com>
Subject: Camel Route - File name
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Hi All,

currently my query is like any file that comes to this folder will be
processed to next stage. However I would like to add the file name also my
camel route so that i can re-use the same folder for multiple files.

sample folder cd-erpdata-csv
sample file name us-ddmmyy.csv and uk-ddmmyy.csv

<camel:from
urifile:messaging/cd-erpdata-csv?preMoveinprogress&amp;move.done/>






--
View this message in context: http://camel.465427.n5.nabble.com/Camel-Route-File-name-tp5797776.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"72","1860","2017-04-17 21:13:56-07:00","khaja.nawas@me.com","['users@camel.apache.org']","Re: Camel Route - File name","Return-Path: <users-return-65343-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id EB5E8189E5
	for <apmail-camel-users-archive@www.apache.org>; Tue, 18 Apr 2017 06:50:06 +0000 (UTC)
Received: (qmail 75996 invoked by uid 500); 18 Apr 2017 06:50:06 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 75952 invoked by uid 500); 18 Apr 2017 06:50:06 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Delivered-To: moderator for users@camel.apache.org
Received: (qmail 76656 invoked by uid 99); 18 Apr 2017 04:13:57 -0000
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 2.285
X-Spam-Level: **
X-Spam-Status: No, score2.285 tagged_above-999 required6.31
	tests[RCVD_IN_DNSWL_NONE-0.0001, SPF_SOFTFAIL0.972, URI_HEX1.313]
	autolearndisabled
Date: Mon, 17 Apr 2017 21:13:56 -0700 (MST)
From: KhajaNawas14 <khaja.nawas@me.com>
To: users@camel.apache.org
Message-ID: <1492488836335-5797777.post@n5.nabble.com>
In-Reply-To: <1492488688966-5797776.post@n5.nabble.com>
References: <1492488688966-5797776.post@n5.nabble.com>
Subject: Re: Camel Route - File name
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Note:- I am a beginner to camel route.



--
View this message in context: http://camel.465427.n5.nabble.com/Camel-Route-File-name-tp5797776p5797777.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"73","335","2017-04-18 06:46:50+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-11153: Add missing protobuf-guava-version
 declaration for camel-protobuf karaf feature","Return-Path: <commits-return-55708-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 46F50189AE
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 06:46:51 +0000 (UTC)
Received: (qmail 69683 invoked by uid 500); 18 Apr 2017 06:46:51 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 69626 invoked by uid 500); 18 Apr 2017 06:46:50 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 69611 invoked by uid 99); 18 Apr 2017 06:46:50 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 06:46:50 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id CE74EE117B; Tue, 18 Apr 2017 06:46:50 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <4ef0cf1f83e44e90a9ab4a5befdc817b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-11153: Add missing protobuf-guava-version
 declaration for camel-protobuf karaf feature
Date: Tue, 18 Apr 2017 06:46:50 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master ec9ab4e0b -> ecee62a81


CAMEL-11153: Add missing protobuf-guava-version declaration for camel-protobuf karaf feature


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/ecee62a8
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/ecee62a8
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/ecee62a8

Branch: refs/heads/master
Commit: ecee62a8147c77c757d796d6301e8f9c1fb59308
Parents: ec9ab4e
Author: Tadayoshi Sato <sato.tadayoshi@gmail.com>
Authored: Tue Apr 18 11:25:56 2017 +0900
Committer: Tadayoshi Sato <sato.tadayoshi@gmail.com>
Committed: Tue Apr 18 11:25:56 2017 +0900

----------------------------------------------------------------------
 parent/pom.xml | 1 +
 1 file changed, 1 insertion(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/ecee62a8/parent/pom.xml
----------------------------------------------------------------------
diff --git a/parent/pom.xml b/parent/pom.xml
index 09719b1..e09c123 100644
--- a/parent/pom.xml
+++ b/parent/pom.xml
@@ -518,6 +518,7 @@
     <pgjdbc-ng-driver-version>0.7.1</pgjdbc-ng-driver-version>
     <powermock-version>1.6.6</powermock-version>
     <protobuf-version>3.1.0</protobuf-version>
+    <protobuf-guava-version>18.0</protobuf-guava-version>
     <pubnub-version>4.6.1</pubnub-version>
     <qpid-bundle-version>0.28_1</qpid-bundle-version>
     <qpid-proton-j-version>0.16.0</qpid-proton-j-version>


"
"74","752","2017-04-18 06:47:17+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1634: CAMEL-11153: Add missing protobuf-guava-version de...","Return-Path: <dev-return-47390-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id E8709189B2
	for <apmail-camel-dev-archive@www.apache.org>; Tue, 18 Apr 2017 06:47:18 +0000 (UTC)
Received: (qmail 70021 invoked by uid 500); 18 Apr 2017 06:47:18 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 69977 invoked by uid 500); 18 Apr 2017 06:47:18 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 69960 invoked by uid 99); 18 Apr 2017 06:47:17 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 06:47:17 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 4D188E117B; Tue, 18 Apr 2017 06:47:17 +0000 (UTC)
From: asfgit <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
References: <git-pr-1634-camel@git.apache.org>
In-Reply-To: <git-pr-1634-camel@git.apache.org>
Subject: [GitHub] camel pull request #1634: CAMEL-11153: Add missing protobuf-guava-version de...
Content-Type: text/plain
Message-Id: <20170418064717.4D188E117B@git1-us-west.apache.org>
Date: Tue, 18 Apr 2017 06:47:17 +0000 (UTC)

Github user asfgit closed the pull request at:

    https://github.com/apache/camel/pull/1634


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"75","1353","2017-04-18 06:47:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11153) camel-protobuf - itest starts to
 fail again","Return-Path: <issues-return-41478-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 06879189B5
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 06:47:46 +0000 (UTC)
Received: (qmail 70682 invoked by uid 500); 18 Apr 2017 06:47:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 70645 invoked by uid 500); 18 Apr 2017 06:47:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 70636 invoked by uid 99); 18 Apr 2017 06:47:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 06:47:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 6FEEFC06D5
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 06:47:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id f4ZtkaZbcUG2 for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 06:47:44 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 0FC0C5FBB0
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 06:47:44 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 12DB0E0875
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 06:47:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 9F99821B4F
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 06:47:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 06:47:41 +0000 (UTC)
From: ASF GitHub Bot (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064549.1492479333000.303034.1492498061651@Atlassian.JIRA>
In-Reply-To: <JIRA.13064549.1492479333000@Atlassian.JIRA>
References: <JIRA.13064549.1492479333000@Atlassian.JIRA> <JIRA.13064549.1492479333233@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11153) camel-protobuf - itest starts to
 fail again
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11153?page3Dcom.atlassia
n.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId3D159
72204#comment-15972204 ]
ASF GitHub Bot commented on CAMEL-11153:
----------------------------------------

Github user asfgit closed the pull request at:

    https://github.com/apache/camel/pull/1634


> camel-protobuf - itest starts to fail again
> -------------------------------------------
>
>                 Key: CAMEL-11153
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11153
>             Project: Camel
>          Issue Type: Bug
>          Components: tests
>    Affects Versions: 2.19.0
>            Reporter: Tadayoshi Sato
>            Assignee: Tadayoshi Sato
>              Labels: protobuf
>             Fix For: 2.19.0
>
>
> {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for so
me valid reason (I mean not just flaky):
> https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.ka
raf/detail/Camel.trunk.itest.karaf/1569/pipeline
> {code}
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 s
ec <<< FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest
> test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.2
12 sec  <<< ERROR!
> org.apache.karaf.features.internal.util.MultiException: Error
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er$MavenDownloader.<init>(MavenDownloadManager.java:84)
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er.createDownloader(MavenDownloadManager.java:72)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:375)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:372)
> 09at org.apache.karaf.features.internal.region.SubsystemResolver.resolve
(SubsystemResolver.java:187)
> 09at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer
.java:285)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doPr
ovision(FeaturesServiceImpl.java:1170)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lamb
da$doProvisionInThread$0(FeaturesServiceImpl.java:1069)
> 09at java.util.concurrent.FutureTask.run(FutureTask.java:266)
> 09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecuto
r.java:1142)
> 09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecut
or.java:617)
> 09at java.lang.Thread.run(Thread.java:745)
> Results :
> Tests in error:>   CamelProtobufTest.test C2BB Multi Error
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0
> [INFO] ------------------------------------------------------------------
------
> [INFO] BUILD FAILURE
> [INFO] ------------------------------------------------------------------
------
> [INFO] Total time: 02:07 min
> [INFO] Finished at: 2017-04-18T10:26:57+09:00
> [INFO] Final Memory: 41M/2875M
> [INFO] ------------------------------------------------------------------
------
> {code}
> I remember it worked fine locally a few days ago but now it even fails lo
cally. Test it with:
> {code}$ mvn test -Dtest3DCamelProtobufTest{code}
> in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause 
this issue?



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"76","336","2017-04-18 06:48:14+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: Upgrade AMQ","Return-Path: <commits-return-55709-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 98B36189B8
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 06:48:14 +0000 (UTC)
Received: (qmail 71047 invoked by uid 500); 18 Apr 2017 06:48:14 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 70989 invoked by uid 500); 18 Apr 2017 06:48:14 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 70980 invoked by uid 99); 18 Apr 2017 06:48:14 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 06:48:14 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 61823E117B; Tue, 18 Apr 2017 06:48:14 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <dc774b23a45c417189ea8e1585625374@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Upgrade AMQ
Date: Tue, 18 Apr 2017 06:48:14 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master ecee62a81 -> c5bd87682


Upgrade AMQ


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/c5bd8768
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/c5bd8768
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/c5bd8768

Branch: refs/heads/master
Commit: c5bd876822f08eb44f5d16ae1127e21f366a91be
Parents: ecee62a
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Tue Apr 18 08:48:11 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Tue Apr 18 08:48:11 2017 +0200

----------------------------------------------------------------------
 parent/pom.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/c5bd8768/parent/pom.xml
----------------------------------------------------------------------
diff --git a/parent/pom.xml b/parent/pom.xml
index e09c123..f661ee3 100644
--- a/parent/pom.xml
+++ b/parent/pom.xml
@@ -37,7 +37,7 @@
     <!-- dependency versions -->
     <abdera-version>1.1.3</abdera-version>
     <!-- Note that activemq dependency is only used for testing! -->
-    <activemq-version>5.14.4</activemq-version>
+    <activemq-version>5.14.5</activemq-version>
     <activemq-artemis-version>1.5.4</activemq-artemis-version>
     <aether-version>1.0.2.v20150114</aether-version>
     <ahc-version>2.0.31</ahc-version>


"
"77","1354","2017-04-18 07:04:42+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11154) itest - spring-boot fails for
 camel-hbase","Return-Path: <issues-return-41479-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id DA97418A99
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 07:04:46 +0000 (UTC)
Received: (qmail 13141 invoked by uid 500); 18 Apr 2017 07:04:46 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 13108 invoked by uid 500); 18 Apr 2017 07:04:46 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 13099 invoked by uid 99); 18 Apr 2017 07:04:46 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:04:46 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 16475180A5A
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:04:46 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id W7GKn6_d-_t2 for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 07:04:45 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id D56FD5FDC4
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:04:44 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id E2B9CE0875
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:04:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 8148521B4F
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:04:42 +0000 (UTC)
Date: Tue, 18 Apr 2017 07:04:42 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064597.1492499068000.303202.1492499082527@Atlassian.JIRA>
In-Reply-To: <JIRA.13064597.1492499068000@Atlassian.JIRA>
References: <JIRA.13064597.1492499068000@Atlassian.JIRA> <JIRA.13064597.1492499068132@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11154) itest - spring-boot fails for
 camel-hbase
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Claus Ibsen created CAMEL-11154:
-----------------------------------

             Summary: itest - spring-boot fails for camel-hbase
                 Key: CAMEL-11154
                 URL: https://issues.apache.org/jira/browse/CAMEL-11154
             Project: Camel
          Issue Type: Test
    Affects Versions: 2.19.0
            Reporter: Claus Ibsen
             Fix For: 2.19.0


Tests in error:org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apache.
camel.itest.springboot.CamelHbaseTest)
  Run 1: CamelHbaseTest>AbstractSpringBootTestSupport.startSpringBoot:44 
C2BB InvocationTarget
  Run 2: CamelHbaseTest>AbstractSpringBootTestSupport.startSpringBoot:44 
C2BB InvocationTarget


Tests run: 217, Failures: 0, Errors: 1, Skipped: 0

[ERROR] There are test failures.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"79","1356","2017-04-18 07:07:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Resolved] (CAMEL-11153) camel-protobuf - itest starts to
 fail again","Return-Path: <issues-return-41481-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 858C918AB1
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 07:07:46 +0000 (UTC)
Received: (qmail 15791 invoked by uid 500); 18 Apr 2017 07:07:46 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 15754 invoked by uid 500); 18 Apr 2017 07:07:46 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 15744 invoked by uid 99); 18 Apr 2017 07:07:46 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:07:46 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id E28FD181069
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:07:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id FD0IcsTw6Dd7 for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 07:07:44 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 0C11D5F5FD
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:07:44 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 1BEE0E0250
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:07:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id C99EE21B49
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:07:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 07:07:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064549.1492479333000.303219.1492499261824@Atlassian.JIRA>
In-Reply-To: <JIRA.13064549.1492479333000@Atlassian.JIRA>
References: <JIRA.13064549.1492479333000@Atlassian.JIRA> <JIRA.13064549.1492479333233@jira-lw-us.apache.org>
Subject: [jira] [Resolved] (CAMEL-11153) camel-protobuf - itest starts to
 fail again
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11153?page3Dcom.atlassi
an.jira.plugin.system.issuetabpanels:all-tabpanel ]

Claus Ibsen resolved CAMEL-11153.
---------------------------------
    Resolution: Fixed

> camel-protobuf - itest starts to fail again
> -------------------------------------------
>
>                 Key: CAMEL-11153
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11153
>             Project: Camel
>          Issue Type: Test
>          Components: tests
>    Affects Versions: 2.19.0
>            Reporter: Tadayoshi Sato
>            Assignee: Tadayoshi Sato
>              Labels: protobuf
>             Fix For: 2.19.0
>
>
> {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for so
me valid reason (I mean not just flaky):
> https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.ka
raf/detail/Camel.trunk.itest.karaf/1569/pipeline
> {code}
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 s
ec <<< FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest
> test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.2
12 sec  <<< ERROR!
> org.apache.karaf.features.internal.util.MultiException: Error
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er$MavenDownloader.<init>(MavenDownloadManager.java:84)
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er.createDownloader(MavenDownloadManager.java:72)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:375)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:372)
> 09at org.apache.karaf.features.internal.region.SubsystemResolver.resolve
(SubsystemResolver.java:187)
> 09at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer
.java:285)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doPr
ovision(FeaturesServiceImpl.java:1170)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lamb
da$doProvisionInThread$0(FeaturesServiceImpl.java:1069)
> 09at java.util.concurrent.FutureTask.run(FutureTask.java:266)
> 09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecuto
r.java:1142)
> 09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecut
or.java:617)
> 09at java.lang.Thread.run(Thread.java:745)
> Results :
> Tests in error:>   CamelProtobufTest.test C2BB Multi Error
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0
> [INFO] ------------------------------------------------------------------
------
> [INFO] BUILD FAILURE
> [INFO] ------------------------------------------------------------------
------
> [INFO] Total time: 02:07 min
> [INFO] Finished at: 2017-04-18T10:26:57+09:00
> [INFO] Final Memory: 41M/2875M
> [INFO] ------------------------------------------------------------------
------
> {code}
> I remember it worked fine locally a few days ago but now it even fails lo
cally. Test it with:
> {code}$ mvn test -Dtest3DCamelProtobufTest{code}
> in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause 
this issue?



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"78","1355","2017-04-18 07:07:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to
 fail again","Return-Path: <issues-return-41480-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0DD5C18AAE
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 07:07:46 +0000 (UTC)
Received: (qmail 15656 invoked by uid 500); 18 Apr 2017 07:07:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 15618 invoked by uid 500); 18 Apr 2017 07:07:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 15609 invoked by uid 99); 18 Apr 2017 07:07:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:07:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id BFFC7181069
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:07:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id RJeP3FJ0hN92 for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 07:07:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 5A26960E16
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:07:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id AF7BEE06BE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:07:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id C2FC421B46
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:07:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 07:07:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064549.1492479333000.303216.1492499261796@Atlassian.JIRA>
In-Reply-To: <JIRA.13064549.1492479333000@Atlassian.JIRA>
References: <JIRA.13064549.1492479333000@Atlassian.JIRA> <JIRA.13064549.1492479333233@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-11153) camel-protobuf - itest starts to
 fail again
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11153?page3Dcom.atlassi
an.jira.plugin.system.issuetabpanels:all-tabpanel ]

Claus Ibsen updated CAMEL-11153:
--------------------------------
    Issue Type: Test  (was: Bug)

> camel-protobuf - itest starts to fail again
> -------------------------------------------
>
>                 Key: CAMEL-11153
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11153
>             Project: Camel
>          Issue Type: Test
>          Components: tests
>    Affects Versions: 2.19.0
>            Reporter: Tadayoshi Sato
>            Assignee: Tadayoshi Sato
>              Labels: protobuf
>             Fix For: 2.19.0
>
>
> {{camel-itest-karaf}} seems to be failing at {{CamelProtobufTest}} for so
me valid reason (I mean not just flaky):
> https://builds.apache.org/blue/organizations/jenkins/Camel.trunk.itest.ka
raf/detail/Camel.trunk.itest.karaf/1569/pipeline
> {code}
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 123.321 s
ec <<< FAILURE! - in org.apache.camel.itest.karaf.CamelProtobufTest
> test(org.apache.camel.itest.karaf.CamelProtobufTest)  Time elapsed: 123.2
12 sec  <<< ERROR!
> org.apache.karaf.features.internal.util.MultiException: Error
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er$MavenDownloader.<init>(MavenDownloadManager.java:84)
> 09at org.apache.karaf.features.internal.download.impl.MavenDownloadManag
er.createDownloader(MavenDownloadManager.java:72)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:375)
> 09at org.apache.karaf.features.internal.region.Subsystem.downloadBundles
(Subsystem.java:372)
> 09at org.apache.karaf.features.internal.region.SubsystemResolver.resolve
(SubsystemResolver.java:187)
> 09at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer
.java:285)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doPr
ovision(FeaturesServiceImpl.java:1170)
> 09at org.apache.karaf.features.internal.service.FeaturesServiceImpl.lamb
da$doProvisionInThread$0(FeaturesServiceImpl.java:1069)
> 09at java.util.concurrent.FutureTask.run(FutureTask.java:266)
> 09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecuto
r.java:1142)
> 09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecut
or.java:617)
> 09at java.lang.Thread.run(Thread.java:745)
> Results :
> Tests in error:>   CamelProtobufTest.test C2BB Multi Error
> Tests run: 1, Failures: 0, Errors: 1, Skipped: 0
> [INFO] ------------------------------------------------------------------
------
> [INFO] BUILD FAILURE
> [INFO] ------------------------------------------------------------------
------
> [INFO] Total time: 02:07 min
> [INFO] Finished at: 2017-04-18T10:26:57+09:00
> [INFO] Final Memory: 41M/2875M
> [INFO] ------------------------------------------------------------------
------
> {code}
> I remember it worked fine locally a few days ago but now it even fails lo
cally. Test it with:
> {code}$ mvn test -Dtest3DCamelProtobufTest{code}
> in {{camel-itest-karaf}}. Probably some recent dependency upgrades cause 
this issue?



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"80","753","2017-04-18 07:22:10+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1635: CAMEL-11152 - set credentials for ssh connection t...","Return-Path: <dev-return-47391-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id DB5C418B28
	for <apmail-camel-dev-archive@www.apache.org>; Tue, 18 Apr 2017 07:22:11 +0000 (UTC)
Received: (qmail 34603 invoked by uid 500); 18 Apr 2017 07:22:11 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 34555 invoked by uid 500); 18 Apr 2017 07:22:11 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 34544 invoked by uid 99); 18 Apr 2017 07:22:11 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:22:11 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id CC98BDFBB7; Tue, 18 Apr 2017 07:22:10 +0000 (UTC)
From: onders86 <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
Message-ID: <git-pr-1635-camel@git.apache.org>
Subject: [GitHub] camel pull request #1635: CAMEL-11152 - set credentials for ssh connection t...
Content-Type: text/plain
Date: Tue, 18 Apr 2017 07:22:10 +0000 (UTC)

GitHub user onders86 opened a pull request:

    https://github.com/apache/camel/pull/1635

    CAMEL-11152 - set credentials for ssh connection through headers

    adoc updated and ut provided.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/onders86/camel CAMEL-11152

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/camel/pull/1635.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1635
    
----
commit 89b1738e437df3ae3d79d424dc0dc0bb3b8b02f0
Author: onders86 <ondersezgin@gmail.com>
Date:   2017-04-18T06:06:39Z

    CAMEL-11152 - set credentials for ssh connection through headers

----


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"81","1357","2017-04-18 07:22:42+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11152) camel-ssh - Allow to use message
 headers for username/password","Return-Path: <issues-return-41482-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0379E18B2C
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 07:22:47 +0000 (UTC)
Received: (qmail 35192 invoked by uid 500); 18 Apr 2017 07:22:46 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 35152 invoked by uid 500); 18 Apr 2017 07:22:46 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 35143 invoked by uid 99); 18 Apr 2017 07:22:46 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:22:46 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 4EDC9C0040
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:22:46 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -97.889
X-Spam-Level: 
X-Spam-Status: No, score-97.889 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, URI_HEX1.313, USER_IN_WHITELIST-100]
	autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id dUg9E9D76Nzq for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 07:22:44 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id F23455FB5C
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:22:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 57AFBE06C5
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:22:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 6B60C21B46
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:22:42 +0000 (UTC)
Date: Tue, 18 Apr 2017 07:22:42 +0000 (UTC)
From: ASF GitHub Bot (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064259.1492327880000.303269.1492500162438@Atlassian.JIRA>
In-Reply-To: <JIRA.13064259.1492327880000@Atlassian.JIRA>
References: <JIRA.13064259.1492327880000@Atlassian.JIRA> <JIRA.13064259.1492327880472@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11152) camel-ssh - Allow to use message
 headers for username/password
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11152?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15972234#comment-15972234 ] 

ASF GitHub Bot commented on CAMEL-11152:
----------------------------------------

GitHub user onders86 opened a pull request:

    https://github.com/apache/camel/pull/1635

    CAMEL-11152 - set credentials for ssh connection through headers

    adoc updated and ut provided.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/onders86/camel CAMEL-11152

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/camel/pull/1635.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1635
    
----
commit 89b1738e437df3ae3d79d424dc0dc0bb3b8b02f0
Author: onders86 <ondersezgin@gmail.com>
Date:   2017-04-18T06:06:39Z

    CAMEL-11152 - set credentials for ssh connection through headers

----


> camel-ssh - Allow to use message headers for username/password
> --------------------------------------------------------------
>
>                 Key: CAMEL-11152
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11152
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-ssh
>            Reporter: Claus Ibsen
>            Assignee: onder sezgin
>            Priority: Minor
>             Fix For: Future
>
>
> See nabble
> http://camel.465427.n5.nabble.com/Camel-SSH-dynamic-values-tp5797435p5797545.html
> In the 
> org.apache.camel.component.ssh.SshHelper#sendExecCommand
> We should allow the exchange to provide a username/password to be used, so you can more dynamic reuse the same ssh endpoint but for different logins.
> Using toD has a drawback of creating a new endpoint per username.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"82","1861","2017-04-18 07:25:40+00:00","stephan.siano@sap.com","['users@camel.apache.org']","RE: Camel not able to delete files Outside .camel","Return-Path: <users-return-65344-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id CB14518B4A
	for <apmail-camel-users-archive@www.apache.org>; Tue, 18 Apr 2017 07:25:51 +0000 (UTC)
Received: (qmail 42191 invoked by uid 500); 18 Apr 2017 07:25:51 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 42148 invoked by uid 500); 18 Apr 2017 07:25:51 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 42136 invoked by uid 99); 18 Apr 2017 07:25:51 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:25:51 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 9DA44C343A
	for <users@camel.apache.org>; Tue, 18 Apr 2017 07:25:50 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -6.485
X-Spam-Level: 
X-Spam-Status: No, score-6.485 tagged_above-999 required6.31
	tests[RCVD_IN_DNSWL_HI-5, RCVD_IN_MSPIKE_H2-2.796,
	SPF_HELO_PASS-0.001, SPF_PASS-0.001, URI_HEX1.313]
	autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id szPYtCd1k8_3 for <users@camel.apache.org>;
	Tue, 18 Apr 2017 07:25:47 +0000 (UTC)
Received: from smtpgw.sap-ag.de (smtpgw04.sap-ag.de [155.56.66.99])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id 3129D5F4EE
	for <users@camel.apache.org>; Tue, 18 Apr 2017 07:25:47 +0000 (UTC)
From: Siano, Stephan <stephan.siano@sap.com>
To: users@camel.apache.org <users@camel.apache.org>
Subject: RE: Camel not able to delete files Outside .camel
Thread-Topic: Camel not able to delete files Outside .camel
Thread-Index: AQHSt6wonnPAbhQV70GQKlI9sN25l6HKujsg
Date: Tue, 18 Apr 2017 07:25:40 +0000
Message-ID: <06958692acac4954991dfa4ddee55a45@sap.com>
References: <1492423716313-5797768.post@n5.nabble.com>
In-Reply-To: <1492423716313-5797768.post@n5.nabble.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.21.23.233]
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: base64
MIME-Version: 1.0

SGksDQoNCkNhdXNlZCBieTogamF2YS5pby5GaWxlTm90Rm91bmRFeGNlcHRpb246IEU6XFhYWFxY
WFhYXFhYXFhYWFgtMDAwMDAxLVhYWC56aXANCihBY2Nlc3MgaXMgZGVuaWVkKQ0KDQpUaGlzIGxv
b2tzIGFzIGlmIHRoZSBwcm9jZXNzIHJ1bm5pbmcgeW91ciBjYW1lbCByb3V0ZSBkb2VzIG5vdCBo
YXZlIGFjY2VzcyB0byB0aGUgZGlyZWN0b3J5IGNvbnRhaW5pbmcgdGhlIGZpbGUgKGl0IHdvdWxk
IG5lZWQgZXhlY3V0aW9uIHJpZ2h0cyBvbiB0aGUgZGlyZWN0b3J5KS4NCg0KQmVzdCByZWdhcmRz
DQpTdGVwaGFuDQoNCi0tLS0tT3JpZ2luYWwgTWVzc2FnZS0tLS0tDQpGcm9tOiBjaGFuZGFuZ293
ZGEgW21haWx0bzpjZ293ZGEyOTlAZ21haWwuY29tXSANClNlbnQ6IE1vbnRhZywgMTcuIEFwcmls
IDIwMTcgMTI6MDkNClRvOiB1c2Vyc0BjYW1lbC5hcGFjaGUub3JnDQpTdWJqZWN0OiBDYW1lbCBu
b3QgYWJsZSB0byBkZWxldGUgZmlsZXMgT3V0c2lkZSAuY2FtZWwNCg0KRnJvbSBvbmUgcm91dGUg
SeKAmW0gcmVhZGluZyBaSVAgZmlsZXMgYWZ0ZXIgc3VjY2Vzc2Z1bCBjb21wbGV0aW9uIG9mIHJl
YWRpbmcNCm9mIGZpbGVzLGNhbWVsIG5vdCBhYmxlIHRvIGRlbGV0ZSB0aG9zZSBmaWxlcyBpLmUu
IGFmdGVyIG1vdmluZyBmaWxlcyBpbnNpZGUNCi5jYW1lbCBmcm9tIG91dHNpZGUgLmNhbWVsIGFu
ZCB0aHJvdWdoaW5nIGZvbGxvd2luZyBleGNlcHRpb24uVGhpcyBpc3N1ZQ0KaGFwcGVuZWQgb25s
eSBmb3IgIGZpcnN0IDIxIHJlY29yZHMgIG91dCBvZiAxMDAwIHJlY29yZHMuUGxlYXNlIHJlcGxh
eSBBU0FQLg0KDQpTdGFjayB0cmFjZSANCg0Kb3JnLmFwYWNoZS5jYW1lbC5jb21wb25lbnQuZmls
ZS5HZW5lcmljRmlsZU9wZXJhdGlvbkZhaWxlZEV4Y2VwdGlvbjogQ2Fubm90DQpzdG9yZSBmaWxl
OiBFOlxYWFxYWFxYWFhYXFhYWFhYLTAwMDAwMS1YWFhYLnppcA0KCWF0DQpvcmcuYXBhY2hlLmNh
bWVsLmNvbXBvbmVudC5maWxlLkZpbGVPcGVyYXRpb25zLnN0b3JlRmlsZShGaWxlT3BlcmF0aW9u
cy5qYXZhOjI2OSkNCglhdA0Kb3JnLmFwYWNoZS5jYW1lbC5jb21wb25lbnQuZmlsZS5HZW5lcmlj
RmlsZVByb2R1Y2VyLndyaXRlRmlsZShHZW5lcmljRmlsZVByb2R1Y2VyLmphdmE6Mjc4KQ0KCWF0
DQpvcmcuYXBhY2hlLmNhbWVsLmNvbXBvbmVudC5maWxlLkdlbmVyaWNGaWxlUHJvZHVjZXIucHJv
Y2Vzc0V4Y2hhbmdlKEdlbmVyaWNGaWxlUHJvZHVjZXIuamF2YToxNjYpDQoJYXQNCm9yZy5hcGFj
aGUuY2FtZWwuY29tcG9uZW50LmZpbGUuR2VuZXJpY0ZpbGVQcm9kdWNlci5wcm9jZXNzKEdlbmVy
aWNGaWxlUHJvZHVjZXIuamF2YTo4MCkNCglhdA0Kb3JnLmFwYWNoZS5jYW1lbC51dGlsLkFzeW5j
UHJvY2Vzc29yQ29udmVydGVySGVscGVyJFByb2Nlc3NvclRvQXN5bmNQcm9jZXNzb3JCcmlkZ2Uu
cHJvY2VzcyhBc3luY1Byb2Nlc3NvckNvbnZlcnRlckhlbHBlci5qYXZhOjYxKQ0KCWF0IG9yZy5h
cGFjaGUuY2FtZWwucHJvY2Vzc29yLlNlbmRQcm9jZXNzb3IucHJvY2VzcyhTZW5kUHJvY2Vzc29y
LmphdmE6MTEwKQ0KCWF0DQpvcmcuYXBhY2hlLmNhbWVsLm1hbmFnZW1lbnQuSW5zdHJ1bWVudGF0
aW9uUHJvY2Vzc29yLnByb2Nlc3MoSW5zdHJ1bWVudGF0aW9uUHJvY2Vzc29yLmphdmE6NzIpDQoJ
YXQNCm9yZy5hcGFjaGUuY2FtZWwucHJvY2Vzc29yLlJlZGVsaXZlcnlFcnJvckhhbmRsZXIucHJv
Y2VzcyhSZWRlbGl2ZXJ5RXJyb3JIYW5kbGVyLmphdmE6Mzk4KQ0KCWF0DQpvcmcuYXBhY2hlLmNh
bWVsLnByb2Nlc3Nvci5DYW1lbEludGVybmFsUHJvY2Vzc29yLnByb2Nlc3MoQ2FtZWxJbnRlcm5h
bFByb2Nlc3Nvci5qYXZhOjE5MSkNCglhdA0Kb3JnLmFwYWNoZS5jYW1lbC5wcm9jZXNzb3IuQ2Ft
ZWxJbnRlcm5hbFByb2Nlc3Nvci5wcm9jZXNzKENhbWVsSW50ZXJuYWxQcm9jZXNzb3IuamF2YTox
OTEpDQoJYXQNCm9yZy5hcGFjaGUuY2FtZWwuY29tcG9uZW50LmZpbGUuR2VuZXJpY0ZpbGVDb25z
dW1lci5wcm9jZXNzRXhjaGFuZ2UoR2VuZXJpY0ZpbGVDb25zdW1lci5qYXZhOjQwMSkNCglhdA0K
b3JnLmFwYWNoZS5jYW1lbC5jb21wb25lbnQuZmlsZS5HZW5lcmljRmlsZUNvbnN1bWVyLnByb2Nl
c3NCYXRjaChHZW5lcmljRmlsZUNvbnN1bWVyLmphdmE6MjAxKQ0KCWF0DQpvcmcuYXBhY2hlLmNh
bWVsLmNvbXBvbmVudC5maWxlLkdlbmVyaWNGaWxlQ29uc3VtZXIucG9sbChHZW5lcmljRmlsZUNv
bnN1bWVyLmphdmE6MTY1KQ0KCWF0DQpvcmcuYXBhY2hlLmNhbWVsLmltcGwuU2NoZWR1bGVkUG9s
bENvbnN1bWVyLmRvUnVuKFNjaGVkdWxlZFBvbGxDb25zdW1lci5qYXZhOjE4NykNCglhdA0Kb3Jn
LmFwYWNoZS5jYW1lbC5pbXBsLlNjaGVkdWxlZFBvbGxDb25zdW1lci5ydW4oU2NoZWR1bGVkUG9s
bENvbnN1bWVyLmphdmE6MTE0KQ0KCWF0IGphdmEudXRpbC5jb25jdXJyZW50LkV4ZWN1dG9ycyRS
dW5uYWJsZUFkYXB0ZXIuY2FsbChFeGVjdXRvcnMuamF2YTo0NzEpDQoJYXQgamF2YS51dGlsLmNv
bmN1cnJlbnQuRnV0dXJlVGFzay5ydW5BbmRSZXNldChGdXR1cmVUYXNrLmphdmE6MzA0KQ0KCWF0
DQpqYXZhLnV0aWwuY29uY3VycmVudC5TY2hlZHVsZWRUaHJlYWRQb29sRXhlY3V0b3IkU2NoZWR1
bGVkRnV0dXJlVGFzay5hY2Nlc3MkMzAxKFNjaGVkdWxlZFRocmVhZFBvb2xFeGVjdXRvci5qYXZh
OjE3OCkNCglhdA0KamF2YS51dGlsLmNvbmN1cnJlbnQuU2NoZWR1bGVkVGhyZWFkUG9vbEV4ZWN1
dG9yJFNjaGVkdWxlZEZ1dHVyZVRhc2sucnVuKFNjaGVkdWxlZFRocmVhZFBvb2xFeGVjdXRvci5q
YXZhOjI5MykNCglhdA0KamF2YS51dGlsLmNvbmN1cnJlbnQuVGhyZWFkUG9vbEV4ZWN1dG9yLnJ1
bldvcmtlcihUaHJlYWRQb29sRXhlY3V0b3IuamF2YToxMTQ1KQ0KCWF0DQpqYXZhLnV0aWwuY29u
Y3VycmVudC5UaHJlYWRQb29sRXhlY3V0b3IkV29ya2VyLnJ1bihUaHJlYWRQb29sRXhlY3V0b3Iu
amF2YTo2MTUpDQoJYXQgamF2YS5sYW5nLlRocmVhZC5ydW4oVGhyZWFkLmphdmE6NzQ1KQ0KQ2F1
c2VkIGJ5OiBqYXZhLmlvLkZpbGVOb3RGb3VuZEV4Y2VwdGlvbjogRTpcWFhYXFhYWFhcWFhcWFhY
WC0wMDAwMDEtWFhYLnppcA0KKEFjY2VzcyBpcyBkZW5pZWQpDQoJYXQgamF2YS5pby5GaWxlT3V0
cHV0U3RyZWFtLm9wZW4oTmF0aXZlIE1ldGhvZCkNCglhdCBqYXZhLmlvLkZpbGVPdXRwdXRTdHJl
YW0uPGluaXQ+KEZpbGVPdXRwdXRTdHJlYW0uamF2YToyMjEpDQoJYXQgamF2YS5pby5GaWxlT3V0
cHV0U3RyZWFtLjxpbml0PihGaWxlT3V0cHV0U3RyZWFtLmphdmE6MTcxKQ0KCWF0DQpvcmcuYXBh
Y2hlLmNhbWVsLmNvbXBvbmVudC5maWxlLkZpbGVPcGVyYXRpb25zLnByZXBhcmVPdXRwdXRGaWxl
Q2hhbm5lbChGaWxlT3BlcmF0aW9ucy5qYXZhOjQzMCkNCglhdA0Kb3JnLmFwYWNoZS5jYW1lbC5j
b21wb25lbnQuZmlsZS5GaWxlT3BlcmF0aW9ucy53cml0ZUZpbGVCeUZpbGUoRmlsZU9wZXJhdGlv
bnMuamF2YTozNTMpDQoJYXQNCm9yZy5hcGFjaGUuY2FtZWwuY29tcG9uZW50LmZpbGUuRmlsZU9w
ZXJhdGlvbnMuc3RvcmVGaWxlKEZpbGVPcGVyYXRpb25zLmphdmE6MjQyKQ0KCS4uLiAyMSBtb3Jl
DQoNCg0KDQotLQ0KVmlldyB0aGlzIG1lc3NhZ2UgaW4gY29udGV4dDogaHR0cDovL2NhbWVsLjQ2
NTQyNy5uNS5uYWJibGUuY29tL0NhbWVsLW5vdC1hYmxlLXRvLWRlbGV0ZS1maWxlcy1PdXRzaWRl
LWNhbWVsLXRwNTc5Nzc2OC5odG1sDQpTZW50IGZyb20gdGhlIENhbWVsIC0gVXNlcnMgbWFpbGlu
ZyBsaXN0IGFyY2hpdmUgYXQgTmFiYmxlLmNvbS4NCg

"
"83","1862","2017-04-18 07:29:15+00:00","stephan.siano@sap.com","['users@camel.apache.org']","RE: Camel Route - File name","Return-Path: <users-return-65345-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id D6F3D18B64
	for <apmail-camel-users-archive@www.apache.org>; Tue, 18 Apr 2017 07:29:19 +0000 (UTC)
Received: (qmail 48730 invoked by uid 500); 18 Apr 2017 07:29:19 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 48681 invoked by uid 500); 18 Apr 2017 07:29:19 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 48668 invoked by uid 99); 18 Apr 2017 07:29:19 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:29:19 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id AF63B185E72
	for <users@camel.apache.org>; Tue, 18 Apr 2017 07:29:18 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -6.485
X-Spam-Level: 
X-Spam-Status: No, score-6.485 tagged_above-999 required6.31
	tests[RCVD_IN_DNSWL_HI-5, RCVD_IN_MSPIKE_H2-2.796,
	SPF_HELO_PASS-0.001, SPF_PASS-0.001, URI_HEX1.313]
	autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id 90SEdAoEpvU5 for <users@camel.apache.org>;
	Tue, 18 Apr 2017 07:29:16 +0000 (UTC)
Received: from smtpgw.sap-ag.de (smtpgw04.sap-ag.de [155.56.66.99])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id E33BC5FDC4
	for <users@camel.apache.org>; Tue, 18 Apr 2017 07:29:15 +0000 (UTC)
From: Siano, Stephan <stephan.siano@sap.com>
To: users@camel.apache.org <users@camel.apache.org>
Subject: RE: Camel Route - File name
Thread-Topic: Camel Route - File name
Thread-Index: AQHSuBAEOn4QKuSrNECKEDCt/uTf3KHKYr0AgABXb4A
Date: Tue, 18 Apr 2017 07:29:15 +0000
Message-ID: <a386bde03ab947529067523c0d2bc4c6@sap.com>
References: <1492488688966-5797776.post@n5.nabble.com>
 <1492488836335-5797777.post@n5.nabble.com>
In-Reply-To: <1492488836335-5797777.post@n5.nabble.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.21.23.233]
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0

Hi,

see http://camel.apache.org/file2.html
you should especially have a look into the fileName option which will likel
y do what you want.

Best regards
Stephan

-----Original Message-----
From: KhajaNawas14 [mailto:khaja.nawas@me.com]Sent: Dienstag, 18. April 2017 06:14
To: users@camel.apache.org
Subject: Re: Camel Route - File name

Note:- I am a beginner to camel route.



--
View this message in context: http://camel.465427.n5.nabble.com/Camel-Route
-File-name-tp5797776p5797777.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"85","1358","2017-04-18 07:34:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11150) camel-solr is removed from readme
 on each full build","Return-Path: <issues-return-41483-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 5CC6C18BA0
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 07:34:45 +0000 (UTC)
Received: (qmail 59447 invoked by uid 500); 18 Apr 2017 07:34:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 59407 invoked by uid 500); 18 Apr 2017 07:34:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 59398 invoked by uid 99); 18 Apr 2017 07:34:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:34:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 86F55C0027
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:34:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id OkO5n-8LpAS0 for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 07:34:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 9ADDA60F6C
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:34:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id AE76FE0907
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:34:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id D0F6A21B57
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:34:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 07:34:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064021.1492157502000.303405.1492500881854@Atlassian.JIRA>
In-Reply-To: <JIRA.13064021.1492157502000@Atlassian.JIRA>
References: <JIRA.13064021.1492157502000@Atlassian.JIRA> <JIRA.13064021.1492157502203@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11150) camel-solr is removed from readme
 on each full build
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11150?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15972252#comment-15972252 ] 

Claus Ibsen commented on CAMEL-11150:
-------------------------------------

I cannot see this when I build locally.

However camel-ignite is removed as its a bit wrongly developed (there is another ticket) so we may need to add some special code in the maven plugin that builds these readme files to include camel-ignite anyway.

> camel-solr is removed from readme on each full build
> ----------------------------------------------------
>
>                 Key: CAMEL-11150
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11150
>             Project: Camel
>          Issue Type: Bug
>          Components: documentation
>            Reporter: Tomohisa Igarashi
>            Assignee: Tomohisa Igarashi
>            Priority: Minor
>
> On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md which shouldnt happen.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"84","1359","2017-04-18 07:34:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-11150) camel-solr is removed from readme on
 each full build","Return-Path: <issues-return-41484-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id C1FF818BA7
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 07:34:46 +0000 (UTC)
Received: (qmail 60054 invoked by uid 500); 18 Apr 2017 07:34:46 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 60019 invoked by uid 500); 18 Apr 2017 07:34:46 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 60010 invoked by uid 99); 18 Apr 2017 07:34:46 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:34:46 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 36D6C1A0345
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:34:46 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id Dgb6rOfWQgEl for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 07:34:45 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 194125FDF6
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:34:44 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id BB60CE093E
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:34:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id D493121B59
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:34:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 07:34:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064021.1492157502000.303407.1492500881869@Atlassian.JIRA>
In-Reply-To: <JIRA.13064021.1492157502000@Atlassian.JIRA>
References: <JIRA.13064021.1492157502000@Atlassian.JIRA> <JIRA.13064021.1492157502203@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-11150) camel-solr is removed from readme on
 each full build
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11150?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Claus Ibsen updated CAMEL-11150:
--------------------------------
    Issue Type: Task  (was: Bug)

> camel-solr is removed from readme on each full build
> ----------------------------------------------------
>
>                 Key: CAMEL-11150
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11150
>             Project: Camel
>          Issue Type: Task
>          Components: documentation
>            Reporter: Tomohisa Igarashi
>            Assignee: Tomohisa Igarashi
>            Priority: Minor
>
> On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md which shouldnt happen.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"86","1360","2017-04-18 07:41:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11150) camel-solr is removed from readme
 on each full build","Return-Path: <issues-return-41485-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id E44D018BD4
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 07:41:43 +0000 (UTC)
Received: (qmail 70652 invoked by uid 500); 18 Apr 2017 07:41:43 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 70614 invoked by uid 500); 18 Apr 2017 07:41:43 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 70600 invoked by uid 99); 18 Apr 2017 07:41:43 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:41:43 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 2E5C2C8780
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:41:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id 2oTUzm4RUDmQ for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 07:41:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 5594F5F27E
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:41:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id D29C3E04FE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:41:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 89BD921B45
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:41:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 07:41:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064021.1492157502000.303478.1492501301562@Atlassian.JIRA>
In-Reply-To: <JIRA.13064021.1492157502000@Atlassian.JIRA>
References: <JIRA.13064021.1492157502000@Atlassian.JIRA> <JIRA.13064021.1492157502203@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11150) camel-solr is removed from readme
 on each full build
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11150?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15972260#comment-15972260 ] 

Claus Ibsen commented on CAMEL-11150:
-------------------------------------

Tomo, I think its in these maven goals
https://github.com/apache/camel/blob/master/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareReadmeMojo.java

https://github.com/apache/camel/blob/master/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/PrepareUserGuideMojo.java

You may need to add some special logic to include camel-ignite. Its fine to hardcode something.
This ticket should be fix this when camel-ignite becomes like other components: https://issues.apache.org/jira/browse/CAMEL-10798


> camel-solr is removed from readme on each full build
> ----------------------------------------------------
>
>                 Key: CAMEL-11150
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11150
>             Project: Camel
>          Issue Type: Task
>          Components: documentation
>            Reporter: Tomohisa Igarashi
>            Assignee: Tomohisa Igarashi
>            Priority: Minor
>
> On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md which shouldnt happen.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"87","1361","2017-04-18 07:42:42+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11154) itest - spring-boot fails for
 camel-hbase","Return-Path: <issues-return-41486-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 580B718BDC
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 07:42:45 +0000 (UTC)
Received: (qmail 71651 invoked by uid 500); 18 Apr 2017 07:42:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 71615 invoked by uid 500); 18 Apr 2017 07:42:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 71605 invoked by uid 99); 18 Apr 2017 07:42:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:42:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id D968F186274
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:42:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id vNrSNi5VveGV for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 07:42:44 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 829C860E22
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:42:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id E5E94E00A6
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:42:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 6BEA421B52
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:42:42 +0000 (UTC)
Date: Tue, 18 Apr 2017 07:42:42 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064597.1492499068000.303490.1492501362440@Atlassian.JIRA>
In-Reply-To: <JIRA.13064597.1492499068000@Atlassian.JIRA>
References: <JIRA.13064597.1492499068000@Atlassian.JIRA> <JIRA.13064597.1492499068132@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11154) itest - spring-boot fails for
 camel-hbase
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11154?page3Dcom.atlassia
n.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId3D159
72262#comment-15972262 ]
Claus Ibsen commented on CAMEL-11154:
-------------------------------------

[~nferraro] wonder if you could take a look?

> itest - spring-boot fails for camel-hbase
> -----------------------------------------
>
>                 Key: CAMEL-11154
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11154
>             Project: Camel
>          Issue Type: Test
>    Affects Versions: 2.19.0
>            Reporter: Claus Ibsen
>             Fix For: 2.19.0
>
>
> Tests in error:> org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apach
e.camel.itest.springboot.CamelHbaseTest)
>   Run 1: CamelHbaseTest>AbstractSpringBootTestSupport.startSpringBoot:44 
C2BB InvocationTarget
>   Run 2: CamelHbaseTest>AbstractSpringBootTestSupport.startSpringBoot:44 
C2BB InvocationTarget
> Tests run: 217, Failures: 0, Errors: 1, Skipped: 0
> [ERROR] There are test failures.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"88","1363","2017-04-18 07:44:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Assigned] (CAMEL-10497) Improve documentation detailing
 websocket implementation details","Return-Path: <issues-return-41488-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0B2D418BF2
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 07:44:45 +0000 (UTC)
Received: (qmail 74211 invoked by uid 500); 18 Apr 2017 07:44:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 74173 invoked by uid 500); 18 Apr 2017 07:44:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 74164 invoked by uid 99); 18 Apr 2017 07:44:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:44:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 52613185E72
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:44:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id XvDuxgie4cxw for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 07:44:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id E159C60E16
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:44:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 7843BE0874
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:44:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id D237F21B49
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:44:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 07:44:41 +0000 (UTC)
From: onder sezgin (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13021752.1479475962000.303512.1492501481859@Atlassian.JIRA>
In-Reply-To: <JIRA.13021752.1479475962000@Atlassian.JIRA>
References: <JIRA.13021752.1479475962000@Atlassian.JIRA> <JIRA.13021752.1479475962248@jira-lw-us.apache.org>
Subject: [jira] [Assigned] (CAMEL-10497) Improve documentation detailing
 websocket implementation details
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-10497?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

onder sezgin reassigned CAMEL-10497:
------------------------------------

    Assignee:     (was: onder sezgin)

> Improve documentation detailing websocket implementation details
> ----------------------------------------------------------------
>
>                 Key: CAMEL-10497
>                 URL: https://issues.apache.org/jira/browse/CAMEL-10497
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-websocket, documentation
>    Affects Versions: 2.18.0
>            Reporter: Stuart Ingram
>            Priority: Minor
>             Fix For: Future
>
>
> Improve behavior documentation of this component, specifically around port workflows.
> While the initial port can be declaratively exposed for clients to connect the component opens up two random(?) ports per client connected rather than communicate through the single exposed port declared.
> This was not apparent from the documentation and makes this component somewhat inappropriate for containerization which would be useful to consider when evaluating the 3 websocket implementations currently available for Camel.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"89","1362","2017-04-18 07:44:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-10497) Improve documentation detailing
 websocket implementation details","Return-Path: <issues-return-41487-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id F25FE18BF0
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 07:44:43 +0000 (UTC)
Received: (qmail 74101 invoked by uid 500); 18 Apr 2017 07:44:43 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 74059 invoked by uid 500); 18 Apr 2017 07:44:43 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 74050 invoked by uid 99); 18 Apr 2017 07:44:43 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:44:43 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 6450EC8786
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:44:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id fu_2On0EapSS for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 07:44:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 8EEDB5FCAE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:44:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 1FC7DE0821
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:44:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id CCBDF21B46
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:44:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 07:44:41 +0000 (UTC)
From: onder sezgin (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13021752.1479475962000.303509.1492501481836@Atlassian.JIRA>
In-Reply-To: <JIRA.13021752.1479475962000@Atlassian.JIRA>
References: <JIRA.13021752.1479475962000@Atlassian.JIRA> <JIRA.13021752.1479475962248@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-10497) Improve documentation detailing
 websocket implementation details
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-10497?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15972268#comment-15972268 ] 

onder sezgin commented on CAMEL-10497:
--------------------------------------

[~singram777]i got what you mean. however, i can not verify that i can see what you meant in the code. if you could provide test env or steps that i can reproduce, i can provide better documentation (i just dont want to add a simple statement to adoc and close the issue.) or why dont you create github PR if you are already able to test and see the issue and maybe you can do a blog post about your experience?

> Improve documentation detailing websocket implementation details
> ----------------------------------------------------------------
>
>                 Key: CAMEL-10497
>                 URL: https://issues.apache.org/jira/browse/CAMEL-10497
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-websocket, documentation
>    Affects Versions: 2.18.0
>            Reporter: Stuart Ingram
>            Assignee: onder sezgin
>            Priority: Minor
>             Fix For: Future
>
>
> Improve behavior documentation of this component, specifically around port workflows.
> While the initial port can be declaratively exposed for clients to connect the component opens up two random(?) ports per client connected rather than communicate through the single exposed port declared.
> This was not apparent from the documentation and makes this component somewhat inappropriate for containerization which would be useful to consider when evaluating the 3 websocket implementations currently available for Camel.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"90","754","2017-04-18 09:45:20+02:00","claus.ibsen@gmail.com","['dev@camel.apache.org']","Re: Camel 2.19 Roadmap","Return-Path: <dev-return-47392-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id B0F0C18BF6
	for <apmail-camel-dev-archive@www.apache.org>; Tue, 18 Apr 2017 07:45:51 +0000 (UTC)
Received: (qmail 75498 invoked by uid 500); 18 Apr 2017 07:45:51 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 75448 invoked by uid 500); 18 Apr 2017 07:45:51 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 75436 invoked by uid 99); 18 Apr 2017 07:45:51 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:45:51 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id A7FB1C0027
	for <dev@camel.apache.org>; Tue, 18 Apr 2017 07:45:50 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 0.379
X-Spam-Level: 
X-Spam-Status: No, score0.379 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RCVD_IN_SORBS_SPAM0.5, SPF_PASS-0.001]
	autolearndisabled
Authentication-Results: spamd4-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id eKexoylyt5ov for <dev@camel.apache.org>;
	Tue, 18 Apr 2017 07:45:48 +0000 (UTC)
Received: from mail-qt0-f169.google.com (mail-qt0-f169.google.com [209.85.216.169])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id 94FB35FB29
	for <dev@camel.apache.org>; Tue, 18 Apr 2017 07:45:47 +0000 (UTC)
Received: by mail-qt0-f169.google.com with SMTP id g60so52590740qtd.3
        for <dev@camel.apache.org>; Tue, 18 Apr 2017 00:45:47 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh98ONxjaP8fupAX/u/kfVVyZTx8+Un7zlN3/vHjcfWF8;
        bW7e1trE4x+CgWvhJLYOd9L0qj8Md/oxvDhr71Qmdw0xGipSkgH0kknv1e0r5rZjOSY
         HjlR5yMcnDULEkWBth2XbHLmrTqzhaW+a0WkkRMFXpKjJ0eCppawIjXs1s2fKb+HA/Jn
         UoCKk/wuRZaYowIXgaui5J0G68dzE59fok6OPCrCkDP4kcNLVpq60gJpNqAZRzuoFrmO
         NYUCllsH9zbumauvSyxtfAXQzsRulMaa4+tt33tr+QrYj5Ry94xUCDVNOgLr3gWYzPEE
         iFYAl4bhnWEAdgs6XEvVU9U9bxo5iMP+Zt023I386zeKXYfppRfhNFgjOB+TY11jCiHq
         TCHA
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bh98ONxjaP8fupAX/u/kfVVyZTx8+Un7zlN3/vHjcfWF8;
        bH4gwiQMhgRojVqfg9KvlIw9NJyaGPQ6CXLiBfSarLbeT3TgtBYkDoKN3Cd6UfNwtUf
         eNQ6yosHvCTZncNffOPZE4Bswp5G2aZxHeEgE/7y/Ki853H+hwkf30Q6qALN0Uo2c9tT
         sAUB2RXgD+GwxeQvLrK5KpgJRRvwH0WVwySfZDFbW101+ZTk4oPSxbFYNfCPQrlm3MF9
         JXmLYh599LzTo/OWAhesTlN/Bo8lSiKJcjJuyt26DuaCSjnTcKD9ISSfCL+8x7VuSm9r
         YdhUFt2VnwoIb0e+7n+2frXNyfac4P5hsQmAyxmX0yNlQpwsZldsgS7sKLN01DqPnhgo
         dWzw
X-Gm-Message-State: AN3rC/7Md4QQssJN3jxE9UeXf6ekwJgV11M8On9ZC1mFyGGSHb/qewBj
	rZbl+vLS8uVDXEfnrswdSPCE3kZ/v06e3aI
X-Received: by 10.237.53.124 with SMTP id b57mr12019438qte.240.1492501541067;
 Tue, 18 Apr 2017 00:45:41 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.200.50.39 with HTTP; Tue, 18 Apr 2017 00:45:20 -0700 (PDT)
In-Reply-To: <CAGB5yNdaGpZRFdJ9raeKTPgnt9AYMFxp5r28M7NBg7C+32pBg@mail.gmail.com>
References: <CAGB5yNnndh24TLPL-rs4Vb1-foxXmXHdkRa3CKHW_r9kPdNEw@mail.gmail.com>
 <CAGB5yNkt-+7cTfSRW3wrhgJRJw+BPKRmRjL0vsjsprQpntRgw@mail.gmail.com>
 <CADL1oArZDm8_8Gyy-e15NeUQajdota+iUcsRSiiOTV65oi_VLg@mail.gmail.com>
 <CAGB5yN2bgLei+g6uQEMBp9UpmrNyR1CmT-GO7e-Vamrc+4bRg@mail.gmail.com>
 <CADL1oAq3UFMbOZkofhgrqd6B8rhxpr3UUz_dks5+Btm_S2A6zw@mail.gmail.com>
 <CAGB5yNz-4vjO04NDfCCubi8+wgZeRVFJJhQVsfe9f5ZQovhw@mail.gmail.com>
 <054035E8-B6D6-4636-B52D-D85A7B9F9C85@stefanutti.fr> <CAGB5yNdaGpZRFdJ9raeKTPgnt9AYMFxp5r28M7NBg7C+32pBg@mail.gmail.com>
From: Claus Ibsen <claus.ibsen@gmail.com>
Date: Tue, 18 Apr 2017 09:45:20 +0200
Message-ID: <CAGB5yNwYjV89vqRtAzS_VjdyQcByUgZBJML3iCrbZLCY4SU7A@mail.gmail.com>
Subject: Re: Camel 2.19 Roadmap
To: dev <dev@camel.apache.org>
Content-Type: text/plain; charsetUTF-8

Hi

Things start to look good. There is a itest that fails with spring
boot which we need to look at and get fixed
https://issues.apache.org/jira/browse/CAMEL-11154

The other tests was all passing recently and they ought to become blue
again. But lets keep an eye on them:
https://builds.apache.org/view/A-D/view/Camel/


On Thu, Apr 13, 2017 at 1:50 PM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
> Hi
>
> Thanks Antonin that sounds great.
>
> The JIRA tickets are down to 3
> https://issues.apache.org/jira/issues/?jqlproject%20%3D%20CAMEL%20AND%20fixVersion%20%3D%202.19.0%20AND%20resolution%20%3D%20Unresolved
>
> We have recently fixed up the missing component docs and fixed broken
> links from browsing on github.
>
> We should keep an eye on the CI servers and output from the
> camel-catalog report, to see if it reports more missing stuff.
> It currently has a false positive on some missing docs for some of the
> test components. I will try to fix this later today.
>
> However thats not all. At all time feel free to have fun and work on
> anything you like on Camel. There is still time for small improvements
> etc. But bigger stuff we should really defer to the next release.
>
>
> On Wed, Apr 12, 2017 at 3:35 PM, Antonin Stefanutti
> <antonin@stefanutti.fr> wrote:
>>
>>> On 12 Apr 2017, at 15:22, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>
>>> Hi
>>>
>>> Just a heads up that we plan to cut the RC for Camel 2.19 next week.
>>>
>>> So we are closing down on the last tickets, bugs, features etc to get
>>> the code base in shape.
>>>
>>> The JIRA has 9 tickets
>>> https://issues.apache.org/jira/issues/?jqlproject%20%3D%20CAMEL%20AND%20fixVersion%20%3D%202.19.0%20AND%20resolution%20%3D%20Unresolved
>>>
>>> But you are of course welcome to work on other tickets etc but just
>>> mind any big functionality is likely better to wait for next release.
>>>
>>> There is however the expected transaction stuff for CDI as a PR in the
>>> works, and also a new iot component
>>> https://github.com/apache/camel/pulls
>>
>> The CDI transaction support PR should be merged by end of week.
>>
>> https://github.com/apache/camel/pull/1390
>>
>>> We should keep an eye on the CI servers to see how they are and fix
>>> any test failures etc. Recently we got them to build and test the OSGi
>>> and spring-boot specific tests so we should be able to better keep an
>>> eye on this now and in the future.
>>> https://builds.apache.org/view/A-D/view/Camel/
>>>
>>>
>>>
>>>
>>>
>>> On Fri, Apr 7, 2017 at 8:45 AM, Gregor Zurowski
>>> <gregor@list.zurowski.org> wrote:
>>>> Hi Claus,
>>>>
>>>> Week 16 works for me.  I will send out another email shortly before
>>>> starting to build the RC.
>>>>
>>>> Thanks,
>>>> Gregor
>>>>
>>>>
>>>> On Wed, Apr 5, 2017 at 3:08 PM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>> Hi Gregor
>>>>>
>>>>> Yeah its April so we should get the 2.19.0 release out the door.
>>>>>
>>>>> We have just setup a 2.20.0 version in JIRA and folks should start
>>>>> moving their tickets to that version if its something that they cannot
>>>>> finish in time. Also we should refrain from doing bigger work at this
>>>>> time as we should close down on last tickets, bug fixes, and get the
>>>>> CI tests in good order, etc.
>>>>>
>>>>> I will look at the JIRAs later this week and cleanup a bit so we have
>>>>> a better overview of what work is yet to be done.
>>>>>
>>>>> As April has the easter holidays. I wonder what you time schedule looks like?
>>>>>
>>>>> Maybe if you have time to help with the release after the holidays?
>>>>>
>>>>> Week 16 and 17 are the last 2 weeks in April after the holidays.
>>>>> If we could maybe cut the RC in week 16 then that would be good.
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> On Mon, Apr 3, 2017 at 2:14 PM, Gregor Zurowski
>>>>> <gregor@list.zurowski.org> wrote:
>>>>>> Hi,
>>>>>>
>>>>>> Are we getting closer to build a 2.19.0 release?  I would volunteer
>>>>>> for creating the release, just wanted to check when would be a good
>>>>>> time to do so.
>>>>>>
>>>>>> Thanks,
>>>>>> Gregor
>>>>>>
>>>>>>
>>>>>> On Wed, Mar 15, 2017 at 9:29 AM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>>>> Hi
>>>>>>>
>>>>>>> Just wanted to bring up that we are closing in on a good time for
>>>>>>> doing a new release.
>>>>>>>
>>>>>>> For example in mid April it would be around 6 months since the last
>>>>>>> 2.18.0 release.
>>>>>>>
>>>>>>> Therefore we should start closing down and fixing bugs, and make sure
>>>>>>> the CI servers and tests are in good shape.
>>>>>>> This morning we have fixed a number of recent test failures and are
>>>>>>> down to only 1 test failure now.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> On Mon, Jan 16, 2017 at 10:28 AM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>>>>> Hi
>>>>>>>>
>>>>>>>> There is a bunch of stuff which we can/should have on the roadmap to
>>>>>>>> complete for the Camel 2.19 release.
>>>>>>>>
>>>>>>>> Here is on top of my head
>>>>>>>>
>>>>>>>> 1)
>>>>>>>> Finish migrating the wiki documentation to adoc files. I think its
>>>>>>>> most of the EIP patterns that are missing. There is a basic list of
>>>>>>>> EIPs here: https://github.com/apache/camel/blob/master/camel-core/readme-eip.adoc
>>>>>>>>
>>>>>>>> 2)
>>>>>>>> Generate documentation and website. Maybe documentation first and then
>>>>>>>> we come up with a modern website later - when we have a new logo as
>>>>>>>> well.
>>>>>>>>
>>>>>>>> 3)
>>>>>>>> Mark more stuff to @deprecate so we dont drag them into Camel 3.0.
>>>>>>>> This is both components / and other artifacts.
>>>>>>>> And as well the camel-core APIs where there is maybe more we can deprecate.
>>>>>>>> For example the old stuff that was created prior to the component docs
>>>>>>>> we do now with the apt plugin at build time instead of this old code
>>>>>>>> with runtime that dont really pan out anyway.
>>>>>>>>
>>>>>>>> 4)
>>>>>>>> Move spring-boot starters into the platforms folder. There is a ticket
>>>>>>>> about this.
>>>>>>>>
>>>>>>>> 5)
>>>>>>>> More improvements to spring boot auto configuration. We have a bunch
>>>>>>>> of tickets on that.
>>>>>>>>
>>>>>>>> 6)
>>>>>>>> Look at the health check API and see if there is something we can get
>>>>>>>> started on.
>>>>>>>> Possible some API to integrate with spring boot actuators (when using
>>>>>>>> SB) and allow each component to provide their own checks so they can
>>>>>>>> be implemented ad-hoc. There is a ticket about this.
>>>>>>>>
>>>>>>>> 7)
>>>>>>>> Possible some more teaks to camel-catalog based on feedback from IDEA
>>>>>>>> plugin and the maven validate goal.
>>>>>>>>
>>>>>>>> 8)
>>>>>>>> That CDI JEE transaction PR on github.
>>>>>>>> Ideally we would have had a transaction API in camel-core and then one
>>>>>>>> impl for camel-spring, and then another for camel-cdi-jee. But that
>>>>>>>> may require too much work.
>>>>>>>>
>>>>>>>> 9)
>>>>>>>> Work on the Java 8 DSL such as get more community feedback, and then
>>>>>>>> resolve the TODOs with the documentation updates and look into other
>>>>>>>> areas where the API can benefit from Java 8 lambdas and whatnot. I
>>>>>>>> dont think we have a ticket about this.
>>>>>>>>
>>>>>>>> 10)
>>>>>>>> Karaf users may want to improve/finish up the camel-test-karaf module
>>>>>>>> so its more usable and end users can use it to test integration tests
>>>>>>>> with Camel and Karaf.
>>>>>>>>
>>>>>>>> 11)
>>>>>>>> Introduce Camel Connectors (more about this later)
>>>>>>>>
>>>>>>>>
>>>>>>>> Anything else?
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> --
>>>>>>>> Claus Ibsen
>>>>>>>> -----------------
>>>>>>>> http://davsclaus.com @davsclaus
>>>>>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> --
>>>>>>> Claus Ibsen
>>>>>>> -----------------
>>>>>>> http://davsclaus.com @davsclaus
>>>>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>>>
>>>>>
>>>>>
>>>>> --
>>>>> Claus Ibsen
>>>>> -----------------
>>>>> http://davsclaus.com @davsclaus
>>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>
>>>
>>>
>>> --
>>> Claus Ibsen
>>> -----------------
>>> http://davsclaus.com @davsclaus
>>> Camel in Action 2: https://www.manning.com/ibsen2
>>
>
>
>
> --
> Claus Ibsen
> -----------------
> http://davsclaus.com @davsclaus
> Camel in Action 2: https://www.manning.com/ibsen2



-- 
Claus Ibsen
-----------------
http://davsclaus.com @davsclaus
Camel in Action 2: https://www.manning.com/ibsen2

"
"91","1364","2017-04-18 07:54:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11155) camel-infinispan: command and
 operation should match","Return-Path: <issues-return-41489-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6AA9218C75
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 07:54:49 +0000 (UTC)
Received: (qmail 94429 invoked by uid 500); 18 Apr 2017 07:54:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 94118 invoked by uid 500); 18 Apr 2017 07:54:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 94097 invoked by uid 99); 18 Apr 2017 07:54:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:54:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id D3CBCC0027
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:54:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id GU4qZuat0Orp for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 07:54:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 976C160E16
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:54:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 272C9E0821
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:54:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id D87D221B48
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:54:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 07:54:41 +0000 (UTC)
From: Luca Burgazzoli (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064616.1492502072000.303571.1492502081884@Atlassian.JIRA>
In-Reply-To: <JIRA.13064616.1492502072000@Atlassian.JIRA>
References: <JIRA.13064616.1492502072000@Atlassian.JIRA> <JIRA.13064616.1492502072736@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11155) camel-infinispan: command and
 operation should match
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Luca Burgazzoli created CAMEL-11155:
---------------------------------------

             Summary: camel-infinispan: command and operation should match
                 Key: CAMEL-11155
                 URL: https://issues.apache.org/jira/browse/CAMEL-11155
             Project: Camel
          Issue Type: Improvement
          Components: camel-infinispan
            Reporter: Luca Burgazzoli
            Assignee: Luca Burgazzoli
            Priority: Minor
             Fix For: 2.20.0


As today in camel-infinispan you can configure which operation the producer should perform in two ways:
- by setting the CamelInfinispanOperation header
- by setting the command option in the endpoint

The first thing to notice is that they use a different naming but for consistency we should use either operation or command but not both. The second thing is that if you set the operation on header you should use i.e. CamelInfinispanOperationPut but the same operation set to the command uri option is PUT so again there is a discrepancy in the naming used.

As solution we should use:
- CamelInfinispanOperation for the header
- operation as endpoint option
- the operation should be in the simple form like PUT, GET, etc as it is clear from the context that we are targeting Infinispan. 



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"92","1365","2017-04-18 07:55:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-11155) camel-infinispan - producer command
 and operation discrepancies","Return-Path: <issues-return-41490-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 818B318C78
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 07:55:44 +0000 (UTC)
Received: (qmail 94962 invoked by uid 500); 18 Apr 2017 07:55:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 94923 invoked by uid 500); 18 Apr 2017 07:55:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 94913 invoked by uid 99); 18 Apr 2017 07:55:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:55:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 0E1ED186274
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:55:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id XZocpxccLW2C for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 07:55:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 9F4C95FDC4
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:55:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id F002EE04FE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:55:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id AD59621B45
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:55:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 07:55:41 +0000 (UTC)
From: Luca Burgazzoli (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064616.1492502072000.303574.1492502141708@Atlassian.JIRA>
In-Reply-To: <JIRA.13064616.1492502072000@Atlassian.JIRA>
References: <JIRA.13064616.1492502072000@Atlassian.JIRA> <JIRA.13064616.1492502072736@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-11155) camel-infinispan - producer command
 and operation discrepancies
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11155?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Luca Burgazzoli updated CAMEL-11155:
------------------------------------
    Summary: camel-infinispan - producer command and operation discrepancies  (was: camel-infinispan: command and operation should match)

> camel-infinispan - producer command and operation discrepancies
> ---------------------------------------------------------------
>
>                 Key: CAMEL-11155
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11155
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-infinispan
>            Reporter: Luca Burgazzoli
>            Assignee: Luca Burgazzoli
>            Priority: Minor
>             Fix For: 2.20.0
>
>
> As today in camel-infinispan you can configure which operation the producer should perform in two ways:
> - by setting the CamelInfinispanOperation header
> - by setting the command option in the endpoint
> The first thing to notice is that they use a different naming but for consistency we should use either operation or command but not both. The second thing is that if you set the operation on header you should use i.e. CamelInfinispanOperationPut but the same operation set to the command uri option is PUT so again there is a discrepancy in the naming used.
> As solution we should use:
> - CamelInfinispanOperation for the header
> - operation as endpoint option
> - the operation should be in the simple form like PUT, GET, etc as it is clear from the context that we are targeting Infinispan. 



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"93","1366","2017-04-18 07:56:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Work started] (CAMEL-10896) camel-infinispan - Stores
 result in header and not body","Return-Path: <issues-return-41491-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0999618C98
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 07:56:45 +0000 (UTC)
Received: (qmail 96929 invoked by uid 500); 18 Apr 2017 07:56:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 96892 invoked by uid 500); 18 Apr 2017 07:56:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 96883 invoked by uid 99); 18 Apr 2017 07:56:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 07:56:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 840D0C0027
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:56:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id Gq9XJZccwWqP for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 07:56:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 66B865F576
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:56:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 06D64E04FE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:56:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id B344E21B46
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 07:56:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 07:56:41 +0000 (UTC)
From: Luca Burgazzoli (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13046297.1488037837000.303589.1492502201732@Atlassian.JIRA>
In-Reply-To: <JIRA.13046297.1488037837000@Atlassian.JIRA>
References: <JIRA.13046297.1488037837000@Atlassian.JIRA> <JIRA.13046297.1488037837080@jira-lw-us.apache.org>
Subject: [jira] [Work started] (CAMEL-10896) camel-infinispan - Stores
 result in header and not body
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-10896?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Work on CAMEL-10896 started by Luca Burgazzoli.
-----------------------------------------------
> camel-infinispan - Stores result in header and not body
> -------------------------------------------------------
>
>                 Key: CAMEL-10896
>                 URL: https://issues.apache.org/jira/browse/CAMEL-10896
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-infinispan
>            Reporter: Claus Ibsen
>            Assignee: Luca Burgazzoli
>            Priority: Minor
>             Fix For: 2.20.0
>
>
> This component sadly does not work like others like hazelcast etc where the result is by default in message body, so it stores all magically in some result header which you do not expect. 
> So if you want to store some message body in a map cache you have to use headers and whatnot.
> We should add some way to configure this to work more like the others. Also it should have better NPE check as you can get NPEs such as
> {code}
> java.lang.NullPointerException
> 	at org.apache.camel.component.infinispan.InfinispanOperation$Operation$7.execute(InfinispanOperation.java:183)
> 	at org.apache.camel.component.infinispan.InfinispanOperation.process(InfinispanOperation.java:45)
> 	at org.apache.camel.component.infinispan.InfinispanProducer.process(InfinispanProducer.java:34)
> {code}



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"94","1367","2017-04-18 08:08:42+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11154) itest - spring-boot fails for
 camel-hbase","Return-Path: <issues-return-41492-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id D981E18D3C
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 08:08:46 +0000 (UTC)
Received: (qmail 20454 invoked by uid 500); 18 Apr 2017 08:08:46 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 20423 invoked by uid 500); 18 Apr 2017 08:08:46 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 20413 invoked by uid 99); 18 Apr 2017 08:08:46 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 08:08:46 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 3186718965B
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:08:46 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id 7N2P2IcYo3MB for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 08:08:44 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 11AEC5F27E
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:08:44 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 6AEF8E0874
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:08:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 1A8B121B49
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:08:42 +0000 (UTC)
Date: Tue, 18 Apr 2017 08:08:42 +0000 (UTC)
From: Nicola Ferraro (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064597.1492499068000.303697.1492502922106@Atlassian.JIRA>
In-Reply-To: <JIRA.13064597.1492499068000@Atlassian.JIRA>
References: <JIRA.13064597.1492499068000@Atlassian.JIRA> <JIRA.13064597.1492499068132@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11154) itest - spring-boot fails for
 camel-hbase
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11154?page3Dcom.atlassia
n.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId3D159
72298#comment-15972298 ]
Nicola Ferraro commented on CAMEL-11154:
----------------------------------------

Checking...

> itest - spring-boot fails for camel-hbase
> -----------------------------------------
>
>                 Key: CAMEL-11154
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11154
>             Project: Camel
>          Issue Type: Test
>    Affects Versions: 2.19.0
>            Reporter: Claus Ibsen
>             Fix For: 2.19.0
>
>
> Tests in error:> org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apach
e.camel.itest.springboot.CamelHbaseTest)
>   Run 1: CamelHbaseTest>AbstractSpringBootTestSupport.startSpringBoot:44 
C2BB InvocationTarget
>   Run 2: CamelHbaseTest>AbstractSpringBootTestSupport.startSpringBoot:44 
C2BB InvocationTarget
> Tests run: 217, Failures: 0, Errors: 1, Skipped: 0
> [ERROR] There are test failures.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"95","1368","2017-04-18 08:11:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11156) Camel-Kubernetes: Add support for
 Deployment resources","Return-Path: <issues-return-41493-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 84C9118D80
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 08:11:43 +0000 (UTC)
Received: (qmail 32099 invoked by uid 500); 18 Apr 2017 08:11:43 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 32063 invoked by uid 500); 18 Apr 2017 08:11:43 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 32054 invoked by uid 99); 18 Apr 2017 08:11:43 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 08:11:43 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 0257EC0800
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:11:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id DIeTEwQE2Pqs for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 08:11:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 41F125F576
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:11:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id D450DE00A6
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:11:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 9117A21B44
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:11:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 08:11:41 +0000 (UTC)
From: Andrea Cosentino (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064619.1492503045000.303734.1492503101591@Atlassian.JIRA>
In-Reply-To: <JIRA.13064619.1492503045000@Atlassian.JIRA>
References: <JIRA.13064619.1492503045000@Atlassian.JIRA> <JIRA.13064619.1492503045870@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11156) Camel-Kubernetes: Add support for
 Deployment resources
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Andrea Cosentino created CAMEL-11156:
----------------------------------------

             Summary: Camel-Kubernetes: Add support for Deployment resources
                 Key: CAMEL-11156
                 URL: https://issues.apache.org/jira/browse/CAMEL-11156
             Project: Camel
          Issue Type: New Feature
          Components: camel-kubernetes
            Reporter: Andrea Cosentino
            Assignee: Andrea Cosentino
            Priority: Minor
             Fix For: 2.20.0






--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"96","1369","2017-04-18 08:17:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11157) Camel-Kubernetes: Add Support for
 DaemonSet resources","Return-Path: <issues-return-41494-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6082318DC6
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 08:17:48 +0000 (UTC)
Received: (qmail 53014 invoked by uid 500); 18 Apr 2017 08:17:48 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 52915 invoked by uid 500); 18 Apr 2017 08:17:48 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 52906 invoked by uid 99); 18 Apr 2017 08:17:48 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 08:17:48 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 962211A0389
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:17:47 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id i1DgT0yE67cv for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 08:17:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 958545F4EE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:17:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id E40D7E00A6
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:17:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 9AF5621B44
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:17:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 08:17:41 +0000 (UTC)
From: Andrea Cosentino (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064621.1492503424000.303763.1492503461631@Atlassian.JIRA>
In-Reply-To: <JIRA.13064621.1492503424000@Atlassian.JIRA>
References: <JIRA.13064621.1492503424000@Atlassian.JIRA> <JIRA.13064621.1492503424732@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11157) Camel-Kubernetes: Add Support for
 DaemonSet resources
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Andrea Cosentino created CAMEL-11157:
----------------------------------------

             Summary: Camel-Kubernetes: Add Support for DaemonSet resources
                 Key: CAMEL-11157
                 URL: https://issues.apache.org/jira/browse/CAMEL-11157
             Project: Camel
          Issue Type: New Feature
          Components: camel-kubernetes
            Reporter: Andrea Cosentino
            Assignee: Andrea Cosentino
            Priority: Minor
             Fix For: 2.20.0






--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"97","1370","2017-04-18 08:19:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11158) Camel-Kubernetes: Add support for
 Job resources","Return-Path: <issues-return-41495-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9C6EB18DDA
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 08:19:47 +0000 (UTC)
Received: (qmail 56168 invoked by uid 500); 18 Apr 2017 08:19:47 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 56095 invoked by uid 500); 18 Apr 2017 08:19:47 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 56060 invoked by uid 99); 18 Apr 2017 08:19:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 08:19:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id D860C18966B
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:19:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id czAvuHpbpEYk for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 08:19:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id B1FDE5F4EE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:19:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 1939EE081A
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:19:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id C443D21B47
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:19:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 08:19:41 +0000 (UTC)
From: Andrea Cosentino (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064624.1492503555000.303784.1492503581591@Atlassian.JIRA>
In-Reply-To: <JIRA.13064624.1492503555000@Atlassian.JIRA>
References: <JIRA.13064624.1492503555000@Atlassian.JIRA> <JIRA.13064624.1492503555593@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11158) Camel-Kubernetes: Add support for
 Job resources
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Andrea Cosentino created CAMEL-11158:
----------------------------------------

             Summary: Camel-Kubernetes: Add support for Job resources
                 Key: CAMEL-11158
                 URL: https://issues.apache.org/jira/browse/CAMEL-11158
             Project: Camel
          Issue Type: New Feature
          Components: camel-kubernetes
            Reporter: Andrea Cosentino
            Assignee: Andrea Cosentino
            Priority: Minor
             Fix For: 2.20.0






--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"98","1371","2017-04-18 08:21:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11159) Camel-Kubernetes: Add support for
 Ingress resources","Return-Path: <issues-return-41496-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id ECC4F18DF5
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 08:21:44 +0000 (UTC)
Received: (qmail 61846 invoked by uid 500); 18 Apr 2017 08:21:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 61326 invoked by uid 500); 18 Apr 2017 08:21:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 61308 invoked by uid 99); 18 Apr 2017 08:21:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 08:21:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id AC76CC1A58
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:21:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id HXwJzXHDZz_X for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 08:21:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id ECE875FCAE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:21:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 61DB5E0875
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:21:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id BB68621B49
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:21:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 08:21:41 +0000 (UTC)
From: Andrea Cosentino (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064625.1492503664000.303799.1492503701765@Atlassian.JIRA>
In-Reply-To: <JIRA.13064625.1492503664000@Atlassian.JIRA>
References: <JIRA.13064625.1492503664000@Atlassian.JIRA> <JIRA.13064625.1492503664695@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11159) Camel-Kubernetes: Add support for
 Ingress resources
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Andrea Cosentino created CAMEL-11159:
----------------------------------------

             Summary: Camel-Kubernetes: Add support for Ingress resources
                 Key: CAMEL-11159
                 URL: https://issues.apache.org/jira/browse/CAMEL-11159
             Project: Camel
          Issue Type: New Feature
          Components: camel-kubernetes
            Reporter: Andrea Cosentino
            Assignee: Andrea Cosentino
            Priority: Minor
             Fix For: 2.20.0






--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"99","755","2017-04-18 08:49:55+00:00","jenkins@builds.apache.org","['davsclaus@apache.org', 'lburgazzoli@gmail.com', 'dev@camel.apache.org']","Camel.trunk.notest - Build # 3142 - Still Failing","Return-Path: <dev-return-47393-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 3ACFF18F5A
	for <apmail-camel-dev-archive@www.apache.org>; Tue, 18 Apr 2017 08:49:57 +0000 (UTC)
Received: (qmail 18148 invoked by uid 500); 18 Apr 2017 08:49:57 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 18116 invoked by uid 500); 18 Apr 2017 08:49:57 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 18100 invoked by uid 99); 18 Apr 2017 08:49:56 -0000
Received: from crius.apache.org (HELO crius.apache.org) (140.211.11.14)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 08:49:56 +0000
Received: from crius.apache.org (localhost [127.0.0.1])
	by crius.apache.org (ASF Mail Server at crius.apache.org) with ESMTP id 8AD309C00C6;
	Tue, 18 Apr 2017 08:49:56 +0000 (UTC)
Date: Tue, 18 Apr 2017 08:49:55 +0000 (UTC)
From: Apache Jenkins Server <jenkins@builds.apache.org>
To: davsclaus@apache.org, lburgazzoli@gmail.com, dev@camel.apache.org
Message-ID: <1503066349.929.1492505396575.JavaMail.jenkins@crius>
In-Reply-To: <1866482530.1202.1492193623031.JavaMail.jenkins@crius>
References: <1866482530.1202.1492193623031.JavaMail.jenkins@crius>
Subject: Camel.trunk.notest - Build # 3142 - Still Failing
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary----_Part_928_1133011541.1492505395212
X-Jenkins-Job: Camel.trunk.notest
X-Jenkins-Result: FAILURE

------_Part_928_1133011541.1492505395212
Content-Type: text/plain; charsetUTF-8
Content-Transfer-Encoding: 7bit

The Apache Jenkins build system has built Camel.trunk.notest (build #3142)

Status: Still Failing

Check console output at https://builds.apache.org/job/Camel.trunk.notest/3142/ to view the results.
------_Part_928_1133011541.1492505395212--

"
"100","1372","2017-04-18 08:57:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11000) Property 'accessExternalDTD' is
 not recognized by (all) Xerces","Return-Path: <issues-return-41497-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id A4AB518FB5
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 08:57:44 +0000 (UTC)
Received: (qmail 36236 invoked by uid 500); 18 Apr 2017 08:57:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 36198 invoked by uid 500); 18 Apr 2017 08:57:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 36189 invoked by uid 99); 18 Apr 2017 08:57:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 08:57:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 13D2DC06D2
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:57:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id R9FI1jrfn-Dp for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 08:57:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id BC3535FCAE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:57:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 536ADE0821
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:57:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id CFD5E21B48
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:57:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 08:57:41 +0000 (UTC)
From: ?utf-8?Q?BjC3B8rn_Hilstad_28JIRA29? <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13050532.1489405412000.304013.1492505861849@Atlassian.JIRA>
In-Reply-To: <JIRA.13050532.1489405412000@Atlassian.JIRA>
References: <JIRA.13050532.1489405412000@Atlassian.JIRA> <JIRA.13050532.1489405412603@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11000) Property accessExternalDTD is
 not recognized by (all) Xerces
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11000?page3Dcom.atlassia
n.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId3D159
72349#comment-15972349 ]
BjC3B8rn Hilstad commented on CAMEL-11000:
---------------------------------------

This change does not actually seem to be in the 2.17.6 version. Something h
as gone wrong.

> Property accessExternalDTD is not recognized by (all) Xerces
> --------------------------------------------------------------
>
>                 Key: CAMEL-11000
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11000
>             Project: Camel
>          Issue Type: Bug
>          Components: camel-validator
>    Affects Versions: 2.17.5, 2.18.3
>            Reporter: Bernard Ligny
>            Assignee: Andrea Cosentino
>             Fix For: 2.17.6, 2.18.4, 2.19.0
>
>
> When upgrading from v2.18.1 to 2.18.3, we encounter a (blocking) regressi
on, preventing routes involving validator component to successfully start.
> Indeed, one of the recent validation-related changes is not fully compati
ble with all versions of Xerces. Especially when deployed on JBoss Wildlfy 
10.1.0.Final :-(
> *Stack trace*:
> {code:java}
> Caused by: java.lang.IllegalStateException: org.xml.sax.SAXNotRecognizedE
xception: Property http://javax.xml.XMLConstants/property/accessExternalDT
D is not recognized.
> 09at org.apache.camel.processor.validation.SchemaReader.createSchemaFact
ory(SchemaReader.java:181)
> 09at org.apache.camel.processor.validation.SchemaReader.getSchemaFactory
(SchemaReader.java:152)
> 09at org.apache.camel.processor.validation.SchemaReader.createSchema(Sch
emaReader.java:192)
> 09at org.apache.camel.processor.validation.SchemaReader.loadSchema(Schem
aReader.java:84)
> 09at org.apache.camel.component.validator.ValidatorEndpoint.createProduc
er(ValidatorEndpoint.java:119)
> 09at org.apache.camel.impl.ProducerCache.doGetProducer(ProducerCache.jav
a:574)
> 09... 78 more
> Caused by: org.xml.sax.SAXNotRecognizedException: Property http://javax.
xml.XMLConstants/property/accessExternalDTD is not recognized.
> 09at org.apache.xerces.jaxp.validation.XMLSchemaFactory.setProperty(XMLS
chemaFactory.java:436)
> 09at __redirected.__SchemaFactory.setProperty(__SchemaFactory.java:143)
> 09at org.apache.camel.processor.validation.SchemaReader.createSchemaFact
ory(SchemaReader.java:178)
> 09... 83 more
> {code}
> In particular, in the following code:
> {code:java}
> protected SchemaFactory createSchemaFactory() {
>    ...
> 09try {
> 0909factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, );
> 09} catch (SAXException e) {
> 0909LOG.error(e.getMessage(), e);
> 0909throw new IllegalStateException(e);
> 09}> > }  > {code}>   > Would it be possible to issue a simple warning, rather then raising an ex
ception ?
> (>see Oracle recommandations: https://docs.oracle.com/javase/tutorial/jax
p/properties/error.html)



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"101","1374","2017-04-18 08:59:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-11000) Property 'accessExternalDTD' is not
 recognized by (all) Xerces","Return-Path: <issues-return-41499-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 80DFE18FBF
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 08:59:45 +0000 (UTC)
Received: (qmail 38500 invoked by uid 500); 18 Apr 2017 08:59:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 38463 invoked by uid 500); 18 Apr 2017 08:59:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 38454 invoked by uid 99); 18 Apr 2017 08:59:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 08:59:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id E54EDC06D2
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:59:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id YdphShI_6P5D for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 08:59:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 7023D5FE06
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:59:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 85D06E04FE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:59:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id C138D21B51
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:59:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 08:59:41 +0000 (UTC)
From: Andrea Cosentino (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13050532.1489405412000.304039.1492505981789@Atlassian.JIRA>
In-Reply-To: <JIRA.13050532.1489405412000@Atlassian.JIRA>
References: <JIRA.13050532.1489405412000@Atlassian.JIRA> <JIRA.13050532.1489405412603@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-11000) Property accessExternalDTD is not
 recognized by (all) Xerces
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11000?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Andrea Cosentino updated CAMEL-11000:
-------------------------------------
    Fix Version/s:     (was: 2.17.6)
                   2.17.7

> Property accessExternalDTD is not recognized by (all) Xerces
> --------------------------------------------------------------
>
>                 Key: CAMEL-11000
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11000
>             Project: Camel
>          Issue Type: Bug
>          Components: camel-validator
>    Affects Versions: 2.17.5, 2.18.3
>            Reporter: Bernard Ligny
>            Assignee: Andrea Cosentino
>             Fix For: 2.17.7, 2.18.4, 2.19.0
>
>
> When upgrading from v2.18.1 to 2.18.3, we encounter a (blocking) regression, preventing routes involving validator component to successfully start.
> Indeed, one of the recent validation-related changes is not fully compatible with all versions of Xerces. Especially when deployed on JBoss Wildlfy 10.1.0.Final :-(
> *Stack trace*:
> {code:java}
> Caused by: java.lang.IllegalStateException: org.xml.sax.SAXNotRecognizedException: Property http://javax.xml.XMLConstants/property/accessExternalDTD is not recognized.
> 	at org.apache.camel.processor.validation.SchemaReader.createSchemaFactory(SchemaReader.java:181)
> 	at org.apache.camel.processor.validation.SchemaReader.getSchemaFactory(SchemaReader.java:152)
> 	at org.apache.camel.processor.validation.SchemaReader.createSchema(SchemaReader.java:192)
> 	at org.apache.camel.processor.validation.SchemaReader.loadSchema(SchemaReader.java:84)
> 	at org.apache.camel.component.validator.ValidatorEndpoint.createProducer(ValidatorEndpoint.java:119)
> 	at org.apache.camel.impl.ProducerCache.doGetProducer(ProducerCache.java:574)
> 	... 78 more
> Caused by: org.xml.sax.SAXNotRecognizedException: Property http://javax.xml.XMLConstants/property/accessExternalDTD is not recognized.
> 	at org.apache.xerces.jaxp.validation.XMLSchemaFactory.setProperty(XMLSchemaFactory.java:436)
> 	at __redirected.__SchemaFactory.setProperty(__SchemaFactory.java:143)
> 	at org.apache.camel.processor.validation.SchemaReader.createSchemaFactory(SchemaReader.java:178)
> 	... 83 more
> {code}
> In particular, in the following code:
> {code:java}
> protected SchemaFactory createSchemaFactory() {
>    ...
> 	try {
> 		factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, );
> 	} catch (SAXException e) {
> 		LOG.error(e.getMessage(), e);
> 		throw new IllegalStateException(e);
> 	} 
>  
> }   
> {code} 
>    
> Would it be possible to issue a simple warning, rather then raising an exception ?
> (>see Oracle recommandations: https://docs.oracle.com/javase/tutorial/jaxp/properties/error.html)



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"102","1373","2017-04-18 08:59:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11160) Component docs - ascii doc warns","Return-Path: <issues-return-41498-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id ED00018FBE
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 08:59:44 +0000 (UTC)
Received: (qmail 38379 invoked by uid 500); 18 Apr 2017 08:59:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 38346 invoked by uid 500); 18 Apr 2017 08:59:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 38337 invoked by uid 99); 18 Apr 2017 08:59:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 08:59:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 5B21018966B
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:59:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id 274-NfJb8zle for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 08:59:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id A46A15FDF3
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:59:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id E650BE0250
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:59:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id A06BA21B44
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 08:59:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 08:59:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064637.1492505952000.304032.1492505981652@Atlassian.JIRA>
In-Reply-To: <JIRA.13064637.1492505952000@Atlassian.JIRA>
References: <JIRA.13064637.1492505952000@Atlassian.JIRA> <JIRA.13064637.1492505952881@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11160) Component docs - ascii doc warns
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Claus Ibsen created CAMEL-11160:
-----------------------------------

             Summary: Component docs - ascii doc warns
                 Key: CAMEL-11160
                 URL: https://issues.apache.org/jira/browse/CAMEL-11160
             Project: Camel
          Issue Type: Task
          Components: documentation
            Reporter: Claus Ibsen
            Priority: Minor
             Fix For: 2.19.0


[INFO] 
[INFO] Copying all Camel documents (ascii docs)
[INFO] Found 349 ascii document files
asciidoctor: WARNING: ignite-component.adoc: line 44: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: ignite-component.adoc: line 136: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: ignite-component.adoc: line 213: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: ignite-component.adoc: line 258: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: ignite-component.adoc: line 287: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: ignite-component.adoc: line 327: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: ignite-component.adoc: line 384: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: ignite-component.adoc: line 415: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: ignite-component.adoc: line 460: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: ignite-component.adoc: line 474: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: ignite-component.adoc: line 486: list item index: expected 2, got 1
asciidoctor: WARNING: ignite-component.adoc: line 492: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: test-spring.adoc: line 81: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: test-spring.adoc: line 107: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: test-spring.adoc: line 245: invalid style for example block: INFO
asciidoctor: WARNING: test-spring.adoc: line 274: invalid style for example block: INFO
asciidoctor: WARNING: test-spring.adoc: line 303: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: test-spring.adoc: line 356: invalid style for example block: INFO
asciidoctor: WARNING: test-spring.adoc: line 394: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: test-spring.adoc: line 417: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: test-spring.adoc: line 447: section title out of sequence: expected level 2, got level 3
asciidoctor: WARNING: test-spring.adoc: line 471: section title out of sequence: expected level 2, got level 3
[INFO] Converted 349 ascii documents to HTML
[INFO] 



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"103","337","2017-04-18 09:00:40+00:00","acosentino@apache.org","['commits@camel.apache.org']","camel git commit: Upgrade Docker Java to version 3.0.9","Return-Path: <commits-return-55710-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 7A9A618017
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 09:00:41 +0000 (UTC)
Received: (qmail 44307 invoked by uid 500); 18 Apr 2017 09:00:41 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 44255 invoked by uid 500); 18 Apr 2017 09:00:41 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 44242 invoked by uid 99); 18 Apr 2017 09:00:40 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 09:00:40 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 53AD0DFB92; Tue, 18 Apr 2017 09:00:40 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: acosentino@apache.org
To: commits@camel.apache.org
Message-Id: <1ae914a52b5249f1bfda7237015c36ae@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Upgrade Docker Java to version 3.0.9
Date: Tue, 18 Apr 2017 09:00:40 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master c5bd87682 -> dd3eec651


Upgrade Docker Java to version 3.0.9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/dd3eec65
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/dd3eec65
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/dd3eec65

Branch: refs/heads/master
Commit: dd3eec6512ad2bde3a3511aa411c28f720d440f8
Parents: c5bd876
Author: Andrea Cosentino <ancosen@gmail.com>
Authored: Tue Apr 18 10:32:57 2017 +0200
Committer: Andrea Cosentino <ancosen@gmail.com>
Committed: Tue Apr 18 10:32:57 2017 +0200

----------------------------------------------------------------------
 parent/pom.xml                                                   | 2 +-
 .../spring-boot/components-starter/camel-docker-starter/pom.xml  | 4 ----
 2 files changed, 1 insertion(+), 5 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/dd3eec65/parent/pom.xml
----------------------------------------------------------------------
diff --git a/parent/pom.xml b/parent/pom.xml
index f661ee3..d5954e8 100644
--- a/parent/pom.xml
+++ b/parent/pom.xml
@@ -167,7 +167,7 @@
     <disruptor-version>3.3.6</disruptor-version>
     <dnsjava-version>2.1.8</dnsjava-version>
     <dnsjava-bundle-version>2.1.8_1</dnsjava-bundle-version>
-    <docker-java-version>3.0.8</docker-java-version>
+    <docker-java-version>3.0.9</docker-java-version>
     <dom4j-bundle-version>1.6.1_5</dom4j-bundle-version>
     <dozer-version>5.5.1</dozer-version>
     <drools-version>6.5.0.Final</drools-version>

http://git-wip-us.apache.org/repos/asf/camel/blob/dd3eec65/platforms/spring-boot/components-starter/camel-docker-starter/pom.xml
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-docker-starter/pom.xml b/platforms/spring-boot/components-starter/camel-docker-starter/pom.xml
index 5d889b2..f5ff82f 100644
--- a/platforms/spring-boot/components-starter/camel-docker-starter/pom.xml
+++ b/platforms/spring-boot/components-starter/camel-docker-starter/pom.xml
@@ -39,10 +39,6 @@
       <!--START OF GENERATED CODE-->
       <exclusions>
         <exclusion>
-          <groupId>commons-logging</groupId>
-          <artifactId>commons-logging</artifactId>
-        </exclusion>
-        <exclusion>
           <groupId>log4j</groupId>
           <artifactId>log4j</artifactId>
         </exclusion>


"
"104","1375","2017-04-18 09:00:50+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11000) Property 'accessExternalDTD' is
 not recognized by (all) Xerces","Return-Path: <issues-return-41500-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id BFD181801A
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 09:00:52 +0000 (UTC)
Received: (qmail 44633 invoked by uid 500); 18 Apr 2017 09:00:52 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 44599 invoked by uid 500); 18 Apr 2017 09:00:52 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 44590 invoked by uid 99); 18 Apr 2017 09:00:52 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 09:00:52 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id E5E56D26E7
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 09:00:51 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id MQoIYpV8NXxI for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 09:00:51 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id D57595FCAE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 09:00:50 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 78B01E0821
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 09:00:50 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 29EA921B48
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 09:00:50 +0000 (UTC)
Date: Tue, 18 Apr 2017 09:00:50 +0000 (UTC)
From: Andrea Cosentino (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13050532.1489405412000.304044.1492506050169@Atlassian.JIRA>
In-Reply-To: <JIRA.13050532.1489405412000@Atlassian.JIRA>
References: <JIRA.13050532.1489405412000@Atlassian.JIRA> <JIRA.13050532.1489405412603@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11000) Property accessExternalDTD is
 not recognized by (all) Xerces
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11000?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15972351#comment-15972351 ] 

Andrea Cosentino commented on CAMEL-11000:
------------------------------------------

It will be in 2.17.7 is we will release it. Thanks for spotting this.

> Property accessExternalDTD is not recognized by (all) Xerces
> --------------------------------------------------------------
>
>                 Key: CAMEL-11000
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11000
>             Project: Camel
>          Issue Type: Bug
>          Components: camel-validator
>    Affects Versions: 2.17.5, 2.18.3
>            Reporter: Bernard Ligny
>            Assignee: Andrea Cosentino
>             Fix For: 2.17.7, 2.18.4, 2.19.0
>
>
> When upgrading from v2.18.1 to 2.18.3, we encounter a (blocking) regression, preventing routes involving validator component to successfully start.
> Indeed, one of the recent validation-related changes is not fully compatible with all versions of Xerces. Especially when deployed on JBoss Wildlfy 10.1.0.Final :-(
> *Stack trace*:
> {code:java}
> Caused by: java.lang.IllegalStateException: org.xml.sax.SAXNotRecognizedException: Property http://javax.xml.XMLConstants/property/accessExternalDTD is not recognized.
> 	at org.apache.camel.processor.validation.SchemaReader.createSchemaFactory(SchemaReader.java:181)
> 	at org.apache.camel.processor.validation.SchemaReader.getSchemaFactory(SchemaReader.java:152)
> 	at org.apache.camel.processor.validation.SchemaReader.createSchema(SchemaReader.java:192)
> 	at org.apache.camel.processor.validation.SchemaReader.loadSchema(SchemaReader.java:84)
> 	at org.apache.camel.component.validator.ValidatorEndpoint.createProducer(ValidatorEndpoint.java:119)
> 	at org.apache.camel.impl.ProducerCache.doGetProducer(ProducerCache.java:574)
> 	... 78 more
> Caused by: org.xml.sax.SAXNotRecognizedException: Property http://javax.xml.XMLConstants/property/accessExternalDTD is not recognized.
> 	at org.apache.xerces.jaxp.validation.XMLSchemaFactory.setProperty(XMLSchemaFactory.java:436)
> 	at __redirected.__SchemaFactory.setProperty(__SchemaFactory.java:143)
> 	at org.apache.camel.processor.validation.SchemaReader.createSchemaFactory(SchemaReader.java:178)
> 	... 83 more
> {code}
> In particular, in the following code:
> {code:java}
> protected SchemaFactory createSchemaFactory() {
>    ...
> 	try {
> 		factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, );
> 	} catch (SAXException e) {
> 		LOG.error(e.getMessage(), e);
> 		throw new IllegalStateException(e);
> 	} 
>  
> }   
> {code} 
>    
> Would it be possible to issue a simple warning, rather then raising an exception ?
> (>see Oracle recommandations: https://docs.oracle.com/javase/tutorial/jaxp/properties/error.html)



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"105","338","2017-04-18 09:08:19+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: Fix pom.xml so camel-catalog javadoc can be
 generated as the copy/rename tasks must be run in same maven phase","Return-Path: <commits-return-55711-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9DBD218051
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 09:08:19 +0000 (UTC)
Received: (qmail 54892 invoked by uid 500); 18 Apr 2017 09:08:19 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 54837 invoked by uid 500); 18 Apr 2017 09:08:19 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 54828 invoked by uid 99); 18 Apr 2017 09:08:19 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 09:08:19 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 6D190DFB92; Tue, 18 Apr 2017 09:08:19 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <0d55a5f64d1c4e188602fa31519e3a36@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Fix pom.xml so camel-catalog javadoc can be
 generated as the copy/rename tasks must be run in same maven phase
Date: Tue, 18 Apr 2017 09:08:19 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master dd3eec651 -> d73893ffc


Fix pom.xml so camel-catalog javadoc can be generated as the copy/rename tasks must be run in same maven phase


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/d73893ff
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/d73893ff
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/d73893ff

Branch: refs/heads/master
Commit: d73893ffcacdb60d45107ff530153d547a494f60
Parents: dd3eec6
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Tue Apr 18 11:07:03 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Tue Apr 18 11:08:12 2017 +0200

----------------------------------------------------------------------
 platforms/camel-catalog/pom.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/d73893ff/platforms/camel-catalog/pom.xml
----------------------------------------------------------------------
diff --git a/platforms/camel-catalog/pom.xml b/platforms/camel-catalog/pom.xml
index 6c71fcb..07046c9 100644
--- a/platforms/camel-catalog/pom.xml
+++ b/platforms/camel-catalog/pom.xml
@@ -130,7 +130,7 @@
         <version>1.5.3</version>
         <executions>
           <execution>
-            <phase>process-sources</phase>
+            <phase>generate-sources</phase>
             <goals>
               <goal>replace</goal>
             </goals>


"
"106","339","2017-04-18 09:25:03+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-11160: Component docs - ascii doc warns","Return-Path: <commits-return-55712-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id A1DEB18125
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 09:25:04 +0000 (UTC)
Received: (qmail 12500 invoked by uid 500); 18 Apr 2017 09:25:04 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 12447 invoked by uid 500); 18 Apr 2017 09:25:04 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 12432 invoked by uid 99); 18 Apr 2017 09:25:03 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 09:25:03 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 139BCDFB92; Tue, 18 Apr 2017 09:25:03 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <fcf4e09a71a545ceb32101b629d433a3@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-11160: Component docs - ascii doc warns
Date: Tue, 18 Apr 2017 09:25:03 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master d73893ffc -> a49af7f1d


CAMEL-11160: Component docs - ascii doc warns


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/a49af7f1
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/a49af7f1
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/a49af7f1

Branch: refs/heads/master
Commit: a49af7f1d899080d0e3ddcc200a0b89c9c1320a1
Parents: d73893f
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Tue Apr 18 11:24:47 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Tue Apr 18 11:24:47 2017 +0200

----------------------------------------------------------------------
 .../src/main/docs/ignite-component.adoc         | 123 ++++++++-----------
 .../src/main/docs/test-spring.adoc              |  73 +++++------
 2 files changed, 79 insertions(+), 117 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/a49af7f1/components/camel-ignite/src/main/docs/ignite-component.adoc
----------------------------------------------------------------------
diff --git a/components/camel-ignite/src/main/docs/ignite-component.adoc b/components/camel-ignite/src/main/docs/ignite-component.adoc
index a721719..36b1e39 100644
--- a/components/camel-ignite/src/main/docs/ignite-component.adoc
+++ b/components/camel-ignite/src/main/docs/ignite-component.adoc
@@ -1,4 +1,3 @@
-[[Ignite-Component]]
 ## Ignite Component
 
 *Available as of Camel version 2.17*
@@ -40,9 +39,8 @@ If running in an OSGi container, please dont miss the <<Ignite-OsgiSupport,OSGi
 // endpoint options: END
 
 
-[[Ignite-Cache]]
-CACHE: Ignite Cache Endpoint
-^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+### CACHE: Ignite Cache Endpoint
+
 This endpoint allows you to interact with an https://apacheignite.readme.io/docs/data-grid[Ignite Cache]:
 
 [source,text]
@@ -56,8 +54,8 @@ The cache value is always the body of the message, whereas the cache key is alwa
 
 Even if you configure a fixed operation in the endpoint URI, you can vary it per-exchange by setting the `IgniteConstants.IGNITE_CACHE_OPERATION` message header.
 
-Options
-++++++
+#### Options
+
 [width100%,cols1,1,1,4,1,1,optionsheader]
 |
 | Option | Type | Default value | Description | Compulsory | Consumer/producer
@@ -102,8 +100,8 @@ N | Consumer
 Time interval in millis on the Continuous Query (see Ignite docs). | N | Consumer
 |
 
-Headers used
-+++++++++++
+#### Headers used
+
 This endpoint uses the following headers:
 [width100%,cols1,1,1,4,optionsheader]
 |
@@ -132,10 +130,9 @@ This header carries the old cache value when passed in the incoming cache event
 |
 
 
-[[Ignite-Compute]]
-COMPUTE: Ignite Compute Endpoint
-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
-This endpoint allows you to run https://apacheignite.readme.io/docs/compute-grid[compute operations] on the cluster by passing in an IgniteCallable, an IgniteRunnable, an IgniteClosure, or collections of them, along with their parameters if necessary. 
+### COMPUTE: Ignite Compute Endpoint
+
+This endpoint allows you to run https://apacheignite.readme.io/docs/compute-grid[compute operations] on the cluster by passing in an IgniteCallable, an IgniteRunnable, an IgniteClosure, or collections of them, along with their parameters if necessary.
 
 [source,text]
 ----
@@ -148,8 +145,8 @@ The host part of the endpoint URI is a symbolic endpoint ID, it is not used for
 
 The endpoint tries to run the object passed in the body of the IN message as the compute job. It expects different payload types depending on the execution type.
 
-Expected payload types
-+++++++++++++++++++++
+#### Expected payload types
+
 Each operation expects the indicated types:
 [width100%,cols1,4,optionsheader]
 |
@@ -163,8 +160,8 @@ Each operation expects the indicated types:
 | AFFINITY_RUN | IgniteRunnable.
 |
 
-Options
-++++++
+#### Options
+
 [width100%,cols1,1,1,4,1,1,optionsheader]
 |
 | Option | Type | Default value | Description | Compulsory | Consumer/producer
@@ -186,8 +183,8 @@ N | Producer
 | timeoutMillis | Long | --- | The timeout for the compute job. | N | Producer
 |
 
-Headers used
-+++++++++++
+#### Headers used
+
 This endpoint uses the following headers:
 [width100%,cols1,1,1,4,optionsheader]
 |
@@ -209,9 +206,8 @@ Affinity key for the AFFINITY_CALL and AFFINITY_RUN operations.
 |
 
 
-[[Ignite-Messaging]]
-MESSAGING: Ignite Messaging Endpoint
-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+### MESSAGING: Ignite Messaging Endpoint
+
 The Ignite Messaging endpoint allows you to send and consume messages from an https://apacheignite.readme.io/docs/messaging[Ignite topic].
 
 [source,text]
@@ -221,8 +217,8 @@ ignite:messaging:topicName?option1value1&option2value2...
 
 This endpoint supports producers (to send messages) and consumers (to receive messages).
 
-Options
-++++++
+#### Options
+
 [width100%,cols1,1,1,4,1,1,optionsheader]
 |
 | Option | Type | Default value | Description | Compulsory | Consumer/producer
@@ -239,8 +235,8 @@ N | Producer
 N | Producer
 |
 
-Headers used
-+++++++++++
+#### Headers used
+
 This endpoint uses the following headers:
 [width100%,cols1,1,1,4,optionsheader]
 |
@@ -254,9 +250,8 @@ This header is filled in with the UUID of the subscription when a message arrive
 |
 
 
-[[Ignite-Events]]
-EVENTS: Ignite Events Endpoint
-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+### EVENTS: Ignite Events Endpoint
+
 The Ignite Events endpoint allows you to https://apacheignite.readme.io/docs/events[receive events] from the Ignite cluster by creating a local event listener.
 
 [source,text]
@@ -267,8 +262,8 @@ ignite:events:endpointId?option1value1&option2value2...
 This endpoint only supports consumers.
 The Exchanges created by this consumer put the received Event object into the body of the IN message.
 
-Options
-++++++
+#### Options
+
 [width100%,cols1,1,1,4,1,1,optionsheader]
 |
 | Option | Type | Default value | Description | Compulsory | Consumer/producer
@@ -283,9 +278,8 @@ N | Consumer
 
 
 
-[[Ignite-Sets]]
-SETS: Ignite Sets Endpoint
-^^^^^^^^^^^^^^^^^^^^^^^^^^^
+### SETS: Ignite Sets Endpoint
+
 The Ignite Sets endpoint allows you to interact with https://apacheignite.readme.io/docs/queue-and-set[Ignite Set data structures].
 
 [source,text]
@@ -295,8 +289,8 @@ ignite:sets:setName?option1value1&option2value2...
 
 This endpoint only supports producers.
 
-Options
-++++++
+#### Options
+
 [width100%,cols1,1,1,4,1,1,optionsheader]
 |
 | Option | Type | Default value | Description | Compulsory | Consumer/producer
@@ -312,8 +306,8 @@ For example: ?config.backups4 |
 N | Producer
 |
 
-Headers used
-+++++++++++
+#### Headers used
+
 This endpoint uses the following headers:
 [width100%,cols1,1,1,4,optionsheader]
 |
@@ -323,9 +317,8 @@ Allows you to dynamically change the set operation.
 |
 
 
-[[Ignite-Queues]]
-QUEUES: Ignite Queue Endpoint
-^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+### QUEUES: Ignite Queue Endpoint
+
 The Ignite Queue endpoint allows you to interact with https://apacheignite.readme.io/docs/queue-and-set[Ignite Queue data structures].
 
 [source,text]
@@ -335,8 +328,8 @@ ignite:queue:queueName?option1value1&option2value2...
 
 This endpoint only supports producers.
 
-Options
-++++++
+#### Options
+
 [width100%,cols1,1,1,4,1,1,optionsheader]
 |
 | Option | Type | Default value | Description | Compulsory | Consumer/producer
@@ -360,8 +353,8 @@ The queue capacity if youd like to use a bounded queue. |
 N | Producer
 |
 
-Headers used
-+++++++++++
+#### Headers used
+
 This endpoint uses the following headers:
 [width100%,cols1,1,1,4,optionsheader]
 |
@@ -380,9 +373,8 @@ Dynamically sets the timeout in milliseconds to use when invoking the OFFER or P
 |
 
 
-[[Ignite-IDGenerator]]
-IDGEN: Ignite ID Generator Endpoint
-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+### IDGEN: Ignite ID Generator Endpoint
+
 The Ignite ID Generator endpoint allows you to interact with https://apacheignite.readme.io/docs/id-generator[Ignite Atomic Sequences and ID Generators].
 
 [source,text]
@@ -392,8 +384,8 @@ ignite:idgen:sequenceName?option1value1&option2value2...
 
 This endpoint only supports producers.
 
-Options
-++++++
+#### Options
+
 [width100%,cols1,1,1,4,1,1,optionsheader]
 |
 | Option | Type | Default value | Description | Compulsory | Consumer/producer
@@ -411,9 +403,8 @@ N | Producer
 
 
 
-[[Ignite-InitializeComponent]]
-Initializing the Ignite component
-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+### Initializing the Ignite component
+
 Each instance of the Ignite component is associated with an underlying org.apache.ignite.Ignite instance. You can interact with two Ignite clusters by initializing two instances of the Ignite component and binding them to different IgniteConfigurations. There are 3 ways to initialize the Ignite component:
 
 * By passing in an existing org.apache.ignite.Ignite instance. Heres an example using Spring config:
@@ -457,8 +448,7 @@ Additionally, if using Camel programmatically, there are several convenience sta
 
 You may use those methods to quickly create an IgniteComponent with your chosen configuration technique.
 
-General options
-^^^^^^^^^^^^^^
+### General options
 
 All endpoints share the following options:
 [width100%,cols1,1,1,4,1,1,optionsheader]
@@ -471,28 +461,13 @@ If the underlying Ignite operation returns void (no return type), this flag dete
 Some Ignite operations can deal with multiple elements at once, if passed a Collection. Enabling this option will treat Collections as a single object, invoking the operation variant for cardinality 1.
 |
 
-OSGi Support
-^^^^^^^^^^^
+### OSGi Support
 
-[TIP]
-
-Apache Ignite supports OSGi from version 1.5.0.final onwards.
-
+TIP: Apache Ignite supports OSGi from version 1.5.0.final onwards.
 
+When installing on Apache Karaf:
 
-[NOTE,titlewhen installing on Apache Karaf]
-
 1. Installing the camel-ignite feature will require the Ignite feature repository to be present.
-1. You must have exported from the JRE (system bundle) some low-level, non-standard packages that Ignite requires.
-
-Please refer to the OSGi section in the Ignite documentation for more information.
-
+2. You must have exported from the JRE (system bundle) some low-level, non-standard packages that Ignite requires.
 
-
-See Also
-^^^^^^^
-
-* http://camel.apache.org/configuring-camel.html[Configuring Camel]
-* http://camel.apache.org/component.html[Component]
-* http://camel.apache.org/endpoint.html[Endpoint]
-* http://camel.apache.org/getting-started.html[Getting Started]
\ No newline at end of file
+Please refer to the OSGi section in the Ignite documentation for more information.

http://git-wip-us.apache.org/repos/asf/camel/blob/a49af7f1/components/camel-test-spring/src/main/docs/test-spring.adoc
----------------------------------------------------------------------
diff --git a/components/camel-test-spring/src/main/docs/test-spring.adoc b/components/camel-test-spring/src/main/docs/test-spring.adoc
index 305c3e6..9cd8659 100644
--- a/components/camel-test-spring/src/main/docs/test-spring.adoc
+++ b/components/camel-test-spring/src/main/docs/test-spring.adoc
@@ -77,9 +77,8 @@ a|
 
 
 
-[[SpringTesting-CamelSpringTestSupport]]
-CamelSpringTestSupport
-^^^^^^^^^^^^^^^^^^^^^
+### CamelSpringTestSupport
+
 The following Spring test support classes:
 
 * `org.apache.camel.test.CamelSpringTestSupport`
@@ -103,13 +102,12 @@ You are responsible for the instantiation of the Spring context in the method im
 
 
 
-[[SpringTesting-PlainSpringTest]]
-Plain Spring Test
-^^^^^^^^^^^^^^^^^^
+### Plain Spring Test
+
 In this approach, your test classes directly inherit from the Spring Test abstract test classes or use the JUnit 4.x test runner provided in Spring Test.  This approach supports dependency injection into your test class and the full suite of Spring Test annotations. However, it does not support the features provided by the `CamelSpringTestSupport` classes.
 
-Plain Spring Test using JUnit 3.x with XML Config Example
-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+#### Plain Spring Test using JUnit 3.x with XML Config Example
+
 Here is a simple unit test using JUnit 3.x support from Spring Test using http://svn.apache.org/repos/asf/camel/trunk/components/camel-spring/src/test/java/org/apache/camel/spring/patterns/FilterTest.java[XML Config].
 [source,java]
 ----
@@ -183,8 +181,8 @@ src/test/java/org/apache/camel/spring/patterns/FilterTest.java
 src/test/resources/org/apache/camel/spring/patterns/FilterTest-context.xml
 ----
 
-Plain Spring Test Using JUnit 4.x With Java Config Example
-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+#### Plain Spring Test Using JUnit 4.x With Java Config Example
+
 You can completely avoid using an XML configuration file by using http://camel.apache.org/spring-java-config.html[Spring Java Config].  Here is a unit test using JUnit 4.x support from Spring Test using http://svn.apache.org/repos/asf/camel/trunk/components/camel-spring-javaconfig/src/test/java/org/apache/camel/spring/javaconfig/patterns/FilterTest.java[Java Config].
 [source,text]
 ----
@@ -238,13 +236,12 @@ public class FilterTest extends AbstractJUnit4SpringContextTests {
 
 This is similar to the XML Config example above except that there is no XML file and instead the nested `ContextConfig` class does all of the configuration; so your entire test case is contained in a single Java class. We currently have to reference by class name this class in the `@ContextConfiguration` which is a bit ugly. Please vote for http://jira.springframework.org/browse/SJC-238[SJC-238] to address this and make Spring Test work more cleanly with Spring JavaConfig.
 
-Plain Spring Test Using JUnit 4.0.x Runner With XML Config
-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+#### Plain Spring Test Using JUnit 4.0.x Runner With XML Config
+
 You can avoid extending Spring classes by using the `SpringJUnit4ClassRunner` provided by Spring Test.  This custom JUnit runner means you are free to choose your own class hierarchy while retaining all the capabilities of Spring Test.
-[INFO]
-
-This is for Spring 4.0.x. If you use Spring 4.1 or newer, then see the next section.
-
+
+TIP: This is for Spring 4.0.x. If you use Spring 4.1 or newer, then see the next section.
+
 [source,java]
 ----
 @RunWith(SpringJUnit4ClassRunner.class)
@@ -267,13 +264,12 @@ public class MyCamelTest {
 }
 ----
 
-Plain Spring Test Using JUnit 4.1.x Runner With XML Config
-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+#### Plain Spring Test Using JUnit 4.1.x Runner With XML Config
+
 You can avoid extending Spring classes by using the `SpringJUnit4ClassRunner` provided by Spring Test.  This custom JUnit runner means you are free to choose your own class hierarchy while retaining all the capabilities of Spring Test.
-[INFO]
-
-From *Spring 4.1*, you need to use the `@BootstrapWith` annotation to configure it to use Camel testing, as shown below.
-
+
+TIP: From *Spring 4.1*, you need to use the `@BootstrapWith` annotation to configure it to use Camel testing, as shown below.
+
 [source,java]
 ----
 @RunWith(CamelSpringJUnit4ClassRunner.class)
@@ -298,16 +294,14 @@ public class MyCamelTest {
 ----
 
 
+### Camel Enhanced Spring Test
 
-[[SpringTesting-CamelEnhancedSpringTest]]
-Camel Enhanced Spring Test
-^^^^^^^^^^^^^^^^^^^^^^^^^^
 Using the `org.apache.camel.test.junit4.CamelSpringJUnit4ClassRunner` runner with the `@RunWith` annotation or extending `org.apache.camel.testng.AbstractCamelTestNGSpringContextTests` provides the full feature set of Spring Test with support for the feature set provided in the `CamelTestSupport` classes.
 
 A number of Camel specific annotations have been developed in order to provide for declarative manipulation of the Camel context(s) involved in the test.  These annotations free your test classes from having to inherit from the `CamelSpringTestSupport` classes and also reduce the amount of code required to customize the tests.
 [width100%,cols1,1,4,1,1,optionsheader,]
 |
-|Annotation Class |Applies To |Description |Default Behavioir If Not Present |Default Behavior If Present
+|Annotation Class |Applies To |Description |Default Behaviour If Not Present |Default Behavior If Present
 |org.apache.camel.test.spring.DisableJmx a|Class a|
 Indicates if JMX should be globally disabled in the CamelContexts that are bootstrapped  during the test through the use of Spring Test loaded application contexts. a|
 JMX is disabled a|JMX is disabled
@@ -352,10 +346,9 @@ a|Override properties
 |
 
 The following example illustrates the use of the `@MockEndpoints` annotation in order to setup mock endpoints as interceptors on all endpoints using the Camel Log component and the `@DisableJmx` annotation to enable JMX which is disabled during tests by default.
-[INFO]
-
-Note: we still use the `@DirtiesContext` annotation to ensure that the CamelContext, routes, and mock endpoints are reinitialized between test methods.
-
+
+TIP: We still use the `@DirtiesContext` annotation to ensure that the CamelContext, routes, and mock endpoints are reinitialized between test methods.
+
 [source,java]
 ----
 @RunWith(CamelSpringJUnit4ClassRunner.class)
@@ -391,9 +384,9 @@ public class CamelSpringJUnit4ClassRunnerPlainTest {
 ----
 
 
-Adding More Mock Expectations
-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
-If you wish to programmatically add any new assertions to your test you can easily do so with the following. Notice how we use `@EndpointInject` to inject a Camel endpoint into our code then the http://camel.apache.org/mock.html[Mock] API to add an expectation on a specific message.
+### Adding More Mock Expectations
+
+If you wish to add any new assertions to your test you can easily do so with the following. Notice how we use `@EndpointInject` to inject a Camel endpoint into our code then the http://camel.apache.org/mock.html[Mock] API to add an expectation on a specific message.
 [source,java]
 ----
 @ContextConfiguration
@@ -414,8 +407,8 @@ public class MyCamelTest extends AbstractJUnit38SpringContextTests {
 ----
 
 
-Further Processing the Received Messages
-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+### Further Processing the Received Messages
+
 Sometimes once a http://camel.apache.org/mock.html[Mock] endpoint has received some messages you want to then process them further to add further assertions that your test case worked as you expect.
 
 So you can then process the received message exchanges if you like...
@@ -444,8 +437,8 @@ public class MyCamelTest extends AbstractJUnit38SpringContextTests {
 }
 ----
 
-Sending and Receiving Messages
-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+### Sending and Receiving Messages
+
 It might be that the http://camel.apache.org/enterprise-integration-patterns.html[Enterprise Integration Patterns] you have defined in either http://camel.apache.org/spring.html[Spring] XML or using the Java http://camel.apache.org/dsl.html[DSL] do all of the sending and receiving and you might just work with the http://camel.apache.org/mock.html[Mock] endpoints as described above. However sometimes in a test case its useful to explicitly send or receive messages directly.
 
 To send or receive messages you should use the http://camel.apache.org/bean-integration.html[Bean Integration] mechanism. For example to send messages inject a `ProducerTemplate` using the `@EndpointInject` annotation then call the various send methods on this object to send a message to an endpoint. To consume messages use the `@MessageDriven` annotation on a method to have the method invoked when a message is received.
@@ -468,10 +461,4 @@ public class Foo {
 }
 ----
 
-See Also
-^^^^^^^^
 
-* A https://svn.apache.org/repos/asf/camel/trunk/components/camel-spring/src/test/java/org/apache/camel/spring/mock/InterceptSendToMockEndpointStrategyTest.java[real example test case using Mock and Spring] along with its https://svn.apache.org/repos/asf/camel/trunk/components/camel-spring/src/test/resources/org/apache/camel/spring/mock/InterceptSendToMockEndpointStrategyTest.xml[Spring XML]
-* http://camel.apache.org/bean-integration.html[Bean Integration]
-* http://camel.apache.org/mock.html[Mock] endpoint
-* http://camel.apache.org/test.html[Test] endpoint


"
"107","1376","2017-04-18 09:25:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Resolved] (CAMEL-11160) Component docs - ascii doc warns","Return-Path: <issues-return-41501-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0604C18144
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 09:25:45 +0000 (UTC)
Received: (qmail 15580 invoked by uid 500); 18 Apr 2017 09:25:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 15397 invoked by uid 500); 18 Apr 2017 09:25:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 15274 invoked by uid 99); 18 Apr 2017 09:25:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 09:25:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 267701B0538
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 09:25:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id v22WsdcO5_9f for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 09:25:44 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id CEC5B5F1E7
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 09:25:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id E8450E04FE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 09:25:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id A58B821B45
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 09:25:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 09:25:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064637.1492505952000.304222.1492507541675@Atlassian.JIRA>
In-Reply-To: <JIRA.13064637.1492505952000@Atlassian.JIRA>
References: <JIRA.13064637.1492505952000@Atlassian.JIRA> <JIRA.13064637.1492505952881@jira-lw-us.apache.org>
Subject: [jira] [Resolved] (CAMEL-11160) Component docs - ascii doc warns
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11160?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Claus Ibsen resolved CAMEL-11160.
---------------------------------
    Resolution: Fixed
      Assignee: Claus Ibsen

> Component docs - ascii doc warns
> --------------------------------
>
>                 Key: CAMEL-11160
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11160
>             Project: Camel
>          Issue Type: Task
>          Components: documentation
>            Reporter: Claus Ibsen
>            Assignee: Claus Ibsen
>            Priority: Minor
>             Fix For: 2.19.0
>
>
> [INFO] 
> [INFO] Copying all Camel documents (ascii docs)
> [INFO] Found 349 ascii document files
> asciidoctor: WARNING: ignite-component.adoc: line 44: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: ignite-component.adoc: line 136: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: ignite-component.adoc: line 213: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: ignite-component.adoc: line 258: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: ignite-component.adoc: line 287: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: ignite-component.adoc: line 327: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: ignite-component.adoc: line 384: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: ignite-component.adoc: line 415: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: ignite-component.adoc: line 460: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: ignite-component.adoc: line 474: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: ignite-component.adoc: line 486: list item index: expected 2, got 1
> asciidoctor: WARNING: ignite-component.adoc: line 492: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: test-spring.adoc: line 81: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: test-spring.adoc: line 107: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: test-spring.adoc: line 245: invalid style for example block: INFO
> asciidoctor: WARNING: test-spring.adoc: line 274: invalid style for example block: INFO
> asciidoctor: WARNING: test-spring.adoc: line 303: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: test-spring.adoc: line 356: invalid style for example block: INFO
> asciidoctor: WARNING: test-spring.adoc: line 394: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: test-spring.adoc: line 417: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: test-spring.adoc: line 447: section title out of sequence: expected level 2, got level 3
> asciidoctor: WARNING: test-spring.adoc: line 471: section title out of sequence: expected level 2, got level 3
> [INFO] Converted 349 ascii documents to HTML
> [INFO] 



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"108","340","2017-04-18 09:28:42+00:00","nferraro@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-11154: do not load test dependencies","Return-Path: <commits-return-55713-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id BCE6518170
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 09:28:42 +0000 (UTC)
Received: (qmail 19811 invoked by uid 500); 18 Apr 2017 09:28:42 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 19751 invoked by uid 500); 18 Apr 2017 09:28:42 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 19742 invoked by uid 99); 18 Apr 2017 09:28:42 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 09:28:42 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 6010BDFCA1; Tue, 18 Apr 2017 09:28:42 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: nferraro@apache.org
To: commits@camel.apache.org
Message-Id: <e8b3644f5cd44939bb98b3c015b620ee@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-11154: do not load test dependencies
Date: Tue, 18 Apr 2017 09:28:42 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master a49af7f1d -> e961a2a8e


CAMEL-11154: do not load test dependencies


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/e961a2a8
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/e961a2a8
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/e961a2a8

Branch: refs/heads/master
Commit: e961a2a8e2ae7cad611cdfd42bf115d23ab891b4
Parents: a49af7f
Author: Nicola Ferraro <ni.ferraro@gmail.com>
Authored: Tue Apr 18 11:28:17 2017 +0200
Committer: Nicola Ferraro <ni.ferraro@gmail.com>
Committed: Tue Apr 18 11:28:26 2017 +0200

----------------------------------------------------------------------
 .../apache/camel/itest/springboot/ITestConfigBuilder.java | 10 ++++++++++
 .../org/apache/camel/itest/springboot/CamelHbaseTest.java |  8 ++------
 2 files changed, 12 insertions(+), 6 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/e961a2a8/tests/camel-itest-spring-boot/src/main/java/org/apache/camel/itest/springboot/ITestConfigBuilder.java
----------------------------------------------------------------------
diff --git a/tests/camel-itest-spring-boot/src/main/java/org/apache/camel/itest/springboot/ITestConfigBuilder.java b/tests/camel-itest-spring-boot/src/main/java/org/apache/camel/itest/springboot/ITestConfigBuilder.java
index 98c0e99..647b8ef 100644
--- a/tests/camel-itest-spring-boot/src/main/java/org/apache/camel/itest/springboot/ITestConfigBuilder.java
+++ b/tests/camel-itest-spring-boot/src/main/java/org/apache/camel/itest/springboot/ITestConfigBuilder.java
@@ -155,6 +155,16 @@ public class ITestConfigBuilder {
         return this;
     }
 
+    public ITestConfigBuilder includeTestDependencies(Boolean includeTestDependencies) {
+        config.setIncludeTestDependencies(includeTestDependencies);
+        return this;
+    }
+
+    public ITestConfigBuilder unitTestsEnabled(Boolean unitTestsEnabled) {
+        config.setUnitTestEnabled(unitTestsEnabled);
+        return this;
+    }
+
     public ITestConfig build() {
 
         // Checking conditions

http://git-wip-us.apache.org/repos/asf/camel/blob/e961a2a8/tests/camel-itest-spring-boot/src/test/java/org/apache/camel/itest/springboot/CamelHbaseTest.java
----------------------------------------------------------------------
diff --git a/tests/camel-itest-spring-boot/src/test/java/org/apache/camel/itest/springboot/CamelHbaseTest.java b/tests/camel-itest-spring-boot/src/test/java/org/apache/camel/itest/springboot/CamelHbaseTest.java
index 20cd0d7..014937f 100644
--- a/tests/camel-itest-spring-boot/src/test/java/org/apache/camel/itest/springboot/CamelHbaseTest.java
+++ b/tests/camel-itest-spring-boot/src/test/java/org/apache/camel/itest/springboot/CamelHbaseTest.java
@@ -17,7 +17,6 @@
 package org.apache.camel.itest.springboot;
 
 import org.apache.camel.itest.springboot.util.ArquillianPackager;
-import org.apache.camel.itest.springboot.util.DependencyResolver;
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
 import org.jboss.shrinkwrap.api.Archive;
@@ -36,11 +35,8 @@ public class CamelHbaseTest extends AbstractSpringBootTestSupport {
     public static ITestConfig createTestConfig() {
         return new ITestConfigBuilder()
                 .module(inferModuleName(CamelHbaseTest.class))
-                // Because HBase uses Hadoop 2.5.1 in test scope
-                .dependency(org.apache.hadoop:hadoop-common: + DependencyResolver.resolveParentProperty(${hadoop2-version}))
-                .dependency(org.apache.hadoop:hadoop-auth: + DependencyResolver.resolveParentProperty(${hadoop2-version}))
-                .dependency(org.apache.hadoop:hadoop-mapreduce-client-core: + DependencyResolver.resolveParentProperty(${hadoop2-version}))
-                .dependency(org.apache.hadoop:hadoop-yarn-common: + DependencyResolver.resolveParentProperty(${hadoop2-version}))
+                .unitTestsEnabled(false)
+                .includeTestDependencies(false)
                 .build();
     }
 


"
"109","1377","2017-04-18 09:31:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11154) itest - spring-boot fails for
 camel-hbase","Return-Path: <issues-return-41502-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id E27B11819E
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 09:31:44 +0000 (UTC)
Received: (qmail 25176 invoked by uid 500); 18 Apr 2017 09:31:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 25140 invoked by uid 500); 18 Apr 2017 09:31:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 25131 invoked by uid 99); 18 Apr 2017 09:31:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 09:31:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 12103D2995
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 09:31:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id 4WFqKQSLhpJA for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 09:31:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id E89705F5FD
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 09:31:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 36769E0875
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 09:31:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 943A521B49
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 09:31:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 09:31:41 +0000 (UTC)
From: Nicola Ferraro (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064597.1492499068000.304278.1492507901605@Atlassian.JIRA>
In-Reply-To: <JIRA.13064597.1492499068000@Atlassian.JIRA>
References: <JIRA.13064597.1492499068000@Atlassian.JIRA> <JIRA.13064597.1492499068132@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11154) itest - spring-boot fails for
 camel-hbase
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11154?page3Dcom.atlassia
n.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId3D159
72396#comment-15972396 ]
Nicola Ferraro commented on CAMEL-11154:
----------------------------------------

The problem is not happening locally, but current build is going to fail. I
ve changed the test not to try to embed test dependencies (that include a 
hbase server) inside spring-boot. The problem seems to be related to a tran
sitive import of log4j...

> itest - spring-boot fails for camel-hbase
> -----------------------------------------
>
>                 Key: CAMEL-11154
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11154
>             Project: Camel
>          Issue Type: Test
>    Affects Versions: 2.19.0
>            Reporter: Claus Ibsen
>             Fix For: 2.19.0
>
>
> Tests in error:> org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apach
e.camel.itest.springboot.CamelHbaseTest)
>   Run 1: CamelHbaseTest>AbstractSpringBootTestSupport.startSpringBoot:44 
C2BB InvocationTarget
>   Run 2: CamelHbaseTest>AbstractSpringBootTestSupport.startSpringBoot:44 
C2BB InvocationTarget
> Tests run: 217, Failures: 0, Errors: 1, Skipped: 0
> [ERROR] There are test failures.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"110","1378","2017-04-18 10:18:42+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11161) Service Call : allow to use
 properties to further customize the underlying camel component used to
 implement service-call concepts","Return-Path: <issues-return-41503-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id BAE0718403
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 10:18:44 +0000 (UTC)
Received: (qmail 7060 invoked by uid 500); 18 Apr 2017 10:18:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 7024 invoked by uid 500); 18 Apr 2017 10:18:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 7014 invoked by uid 99); 18 Apr 2017 10:18:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 10:18:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 41279CA71C
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 10:18:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id dESD4nlfpYRO for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 10:18:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 49A5F60E22
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 10:18:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id B777EE0905
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 10:18:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 1D91721B5B
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 10:18:42 +0000 (UTC)
Date: Tue, 18 Apr 2017 10:18:42 +0000 (UTC)
From: Luca Burgazzoli (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064660.1492510699000.304643.1492510722119@Atlassian.JIRA>
In-Reply-To: <JIRA.13064660.1492510699000@Atlassian.JIRA>
References: <JIRA.13064660.1492510699000@Atlassian.JIRA> <JIRA.13064660.1492510699869@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11161) Service Call : allow to use
 properties to further customize the underlying camel component used to
 implement service-call concepts
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Luca Burgazzoli created CAMEL-11161:
---------------------------------------

             Summary: Service Call : allow to use properties to further customize the underlying camel component used to implement service-call concepts
                 Key: CAMEL-11161
                 URL: https://issues.apache.org/jira/browse/CAMEL-11161
             Project: Camel
          Issue Type: Improvement
          Components: camel-core
            Reporter: Luca Burgazzoli
            Assignee: Luca Burgazzoli
             Fix For: 2.19.0


As today the configuration via dsl of service calls concpetts (i.e. service discovery) is limited to the options we have hard coded into the dsl but it would be nice to leverage the available properties to further customize the underlying components.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"111","1863","2017-04-18 12:44:12+02:00","claus.ibsen@gmail.com","['users@camel.apache.org']","Re: How to dynamically inject hystrix properties?","Return-Path: <users-return-65346-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9B9F818500
	for <apmail-camel-users-archive@www.apache.org>; Tue, 18 Apr 2017 10:44:37 +0000 (UTC)
Received: (qmail 51568 invoked by uid 500); 18 Apr 2017 10:44:37 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 51519 invoked by uid 500); 18 Apr 2017 10:44:37 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 51390 invoked by uid 99); 18 Apr 2017 10:44:36 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 10:44:36 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 518DAC06D2
	for <users@camel.apache.org>; Tue, 18 Apr 2017 10:44:36 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -0.321
X-Spam-Level: 
X-Spam-Status: No, score-0.321 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_LOW-0.7, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RCVD_IN_SORBS_SPAM0.5, SPF_PASS-0.001]
	autolearndisabled
Authentication-Results: spamd4-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id 7IZ3CsXXz2qz for <users@camel.apache.org>;
	Tue, 18 Apr 2017 10:44:34 +0000 (UTC)
Received: from mail-qt0-f180.google.com (mail-qt0-f180.google.com [209.85.216.180])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id 85B2A5FB29
	for <users@camel.apache.org>; Tue, 18 Apr 2017 10:44:33 +0000 (UTC)
Received: by mail-qt0-f180.google.com with SMTP id g60so55374194qtd.3
        for <users@camel.apache.org>; Tue, 18 Apr 2017 03:44:33 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bhpzkEygycI4W+cP0nB35AVE5katzZVypxmS0Ndx3Itr4;
        bkVx9/sjHScqsnIj4o0FDfBwWHyzSRSXMPR6c9aXYO8SPAEB2ypnYYdaLRTe0Sl7B4A
         AFx5dOsKgIT+CHMlS6XsguG8l1iM7f777+G0+8ve7PxJKDQpkxwKEDwAwyCWTRBbLhOI
         uXC9K+AbhDH7QXXgA8w88lWXcUlm9ffJdLozuzdeUzRIHERLkSdiD4nf6GB5zEDT5p9l
         BmHtGlQWwMZ0B0xB3YoUEVISD4di47plcBxhD6k2CBZWC2UmAPOUhIxvrHOSUkWc0lK6
         0wQ/gbSePj8B2ue+E8TegjQdYCHQtNw0EZ09HCrI4j+44OAQCR4a8xaSwNeqE/vKPk/T
         4vRQ
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bhpzkEygycI4W+cP0nB35AVE5katzZVypxmS0Ndx3Itr4;
        bPacieCvZwdtHJoYKgZu25+izFyU98LevEuXzvRXGfOVAVis+6PJBiST1y5Tvy2OXQB
         2T+XJpM3SiNcw4cQ93mjf6nuCk2E+u5HbbklcVLNzbfquhAUh+1t4Aj0i7aTlixxHVBD
         hR9Gf9YiWFZj+GO19ITQN/bInN8ylMj+3eTqictpVTXPwVWkBGw7sNUEcijoTyKEMwQO
         NTGKSb7pAW3Haai+MorMJOosc7OZAXF3fvMGjU0y8ubl3PNdiengBDs8EwpIzZWrv7k+
         qVVM/+HkLAbPOdWuGpGBUGtlDnxMTPSahKm1BHUmblbgorv2D7s8JOO7nAeDorhqOnEo
         gNDw
X-Gm-Message-State: AN3rC/4dlQDR2e+gjCjU0uKUk7RHp7UyCCH+J3th5f8CqRgnqY1JmRSK
	C/gJlTCvZMSZgDjhHVO2ZByP6C/5enKi
X-Received: by 10.200.43.120 with SMTP id 53mr12792045qtv.234.1492512272535;
 Tue, 18 Apr 2017 03:44:32 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.200.50.39 with HTTP; Tue, 18 Apr 2017 03:44:12 -0700 (PDT)
In-Reply-To: <CAOFZOdXeJgWtpDdNrU+X0-w3kt-GQOXAOdY-5q8MQ3A47jNJkA@mail.gmail.com>
References: <CAOFZOdXeJgWtpDdNrU+X0-w3kt-GQOXAOdY-5q8MQ3A47jNJkA@mail.gmail.com>
From: Claus Ibsen <claus.ibsen@gmail.com>
Date: Tue, 18 Apr 2017 12:44:12 +0200
Message-ID: <CAGB5yNnAjdPk+htrYF3zGJqVy9NqT+ZcZBEhfMm6mG3uhZGMdQ@mail.gmail.com>
Subject: Re: How to dynamically inject hystrix properties?
To: users@camel.apache.org <users@camel.apache.org>
Content-Type: text/plain; charsetUTF-8

Maybe create 3 different routes where each hystrix is using A, B or C
keys and then call the appropiate route.

On Mon, Apr 17, 2017 at 12:46 AM, Priyanka Gopinath <priyanka@karnam.net> wrote:
> I have this special usecase where I want to change the threadpool size and
> thread pool key based upon the endpoint that is getting called. All of
> these values are available in the configuration on the exchange.
>
> For eg :
>
> Endpoint A > Threadpool(5) > Threadpool key(A)
> Endpoint B > Threadpool(10) > Threadpool key(Z)
> Endpoint C > Threadpool(5) > Threadpool Key(A)
>
> However, in my hystrix route, all of the params for Hystrix EIP are strings
> and I avent been able to figure the a way to evaluate the same.
>
> from(direct:something)
> .hystrix()
> .threadPoolkey(hystrix.???? How to inject this value)
> .end()
> .to(direct:http-endpoint);
>
> I also tried creating a HystrixThreadpoolDefinition and tried setting it
> as .hystrix().hystrixConfiguration(configuration). But it comes back to the
> same question of how to pass in this configuration. Method calls return
> ValueBuilders and I could not cast them to the strings/configDefinitions.
>
> Please suggest the correct way of doing it.



-- 
Claus Ibsen
-----------------
http://davsclaus.com @davsclaus
Camel in Action 2: https://www.manning.com/ibsen2

"
"112","756","2017-04-18 10:51:17+00:00","jenkins@builds.apache.org","['davsclaus@apache.org', 'lburgazzoli@gmail.com', 'dev@camel.apache.org']","Camel.trunk.notest - Build # 3143 - Still Failing","Return-Path: <dev-return-47394-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 27E7618547
	for <apmail-camel-dev-archive@www.apache.org>; Tue, 18 Apr 2017 10:51:21 +0000 (UTC)
Received: (qmail 61297 invoked by uid 500); 18 Apr 2017 10:51:20 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 61251 invoked by uid 500); 18 Apr 2017 10:51:20 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 61235 invoked by uid 99); 18 Apr 2017 10:51:20 -0000
Received: from crius.apache.org (HELO crius.apache.org) (140.211.11.14)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 10:51:20 +0000
Received: from crius.apache.org (localhost [127.0.0.1])
	by crius.apache.org (ASF Mail Server at crius.apache.org) with ESMTP id 138029C00A6;
	Tue, 18 Apr 2017 10:51:20 +0000 (UTC)
Date: Tue, 18 Apr 2017 10:51:17 +0000 (UTC)
From: Apache Jenkins Server <jenkins@builds.apache.org>
To: davsclaus@apache.org, lburgazzoli@gmail.com, dev@camel.apache.org
Message-ID: <1640579252.977.1492512680081.JavaMail.jenkins@crius>
In-Reply-To: <1503066349.929.1492505396575.JavaMail.jenkins@crius>
References: <1503066349.929.1492505396575.JavaMail.jenkins@crius>
Subject: Camel.trunk.notest - Build # 3143 - Still Failing
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary----_Part_976_1921743782.1492512677465
X-Jenkins-Job: Camel.trunk.notest
X-Jenkins-Result: FAILURE

------_Part_976_1921743782.1492512677465
Content-Type: text/plain; charsetUTF-8
Content-Transfer-Encoding: 7bit

The Apache Jenkins build system has built Camel.trunk.notest (build #3143)

Status: Still Failing

Check console output at https://builds.apache.org/job/Camel.trunk.notest/3143/ to view the results.
------_Part_976_1921743782.1492512677465--

"
"113","341","2017-04-18 11:08:29+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: Polished example","Return-Path: <commits-return-55714-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 3E88A185B2
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 11:08:30 +0000 (UTC)
Received: (qmail 82660 invoked by uid 500); 18 Apr 2017 11:08:30 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 82611 invoked by uid 500); 18 Apr 2017 11:08:29 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 82602 invoked by uid 99); 18 Apr 2017 11:08:29 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 11:08:29 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 28917DFBDA; Tue, 18 Apr 2017 11:08:29 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <639ed319227c4d7b9e413e844ebeae34@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Polished example
Date: Tue, 18 Apr 2017 11:08:29 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master e961a2a8e -> 89ba56d3d


Polished example


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/89ba56d3
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/89ba56d3
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/89ba56d3

Branch: refs/heads/master
Commit: 89ba56d3de1b7181e158ac36d38d4d80ea56eca7
Parents: e961a2a
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Tue Apr 18 13:08:20 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Tue Apr 18 13:08:20 2017 +0200

----------------------------------------------------------------------
 .../README.adoc                                 |  3 +-
 .../service/src/main/bash/consul-run-linux.sh   | 52 ++++++++++++++++++
 .../service/src/main/bash/consul-run-osx.sh     | 55 ++++++++++++++++++++
 .../service/src/main/bash/consul-run.sh         | 52 ------------------
 4 files changed, 109 insertions(+), 53 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/89ba56d3/examples/camel-example-spring-cloud-servicecall/README.adoc
----------------------------------------------------------------------
diff --git a/examples/camel-example-spring-cloud-servicecall/README.adoc b/examples/camel-example-spring-cloud-servicecall/README.adoc
index 8d5f385..0d0fbce 100644
--- a/examples/camel-example-spring-cloud-servicecall/README.adoc
+++ b/examples/camel-example-spring-cloud-servicecall/README.adoc
@@ -24,7 +24,8 @@ Using multiple shells:
  - start consul:
 
   $ cd services
-  $ src/main/bash/consul-run.sh
+  $ src/main/bash/consul-run-linux.sh    (for linux)
+  $ src/main/bash/consul-run-osx.sh      (for mac osx)
 
  - start the service:
 

http://git-wip-us.apache.org/repos/asf/camel/blob/89ba56d3/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-linux.sh
----------------------------------------------------------------------
diff --git a/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-linux.sh b/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-linux.sh
new file mode 100755
index 0000000..14afcfe
--- /dev/null
+++ b/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-linux.sh
@@ -0,0 +1,52 @@
+#!/usr/bin/env bash
+
+CONSUL_VER0.8.1
+CONSUL_ZIPconsul_${CONSUL_VER}_linux_amd64.zip
+
+# cleanup
+rm -rf target/consul-data
+rm -rf target/consul-config
+rm -rf target/consul
+
+mkdir -p target/
+mkdir -p target/consul-data
+mkdir -p target/consul-config
+
+if [ ! -f target/${CONSUL_ZIP} ]; then
+    wget https://releases.hashicorp.com/consul/${CONSUL_VER}/${CONSUL_ZIP} -O target/${CONSUL_ZIP}
+fi
+
+cat > target/consul-config/services.json <<EOF
+{
+  services: [{
+    id: s1i1, name: service-1, tags: [camel, service-call], address: localhost, port: 9011
+  }, {
+    id: s1i2, name: service-1, tags: [camel, service-call], address: localhost, port: 9012
+  }, {
+    id: s1i3, name: service-1, tags: [camel, service-call], address: localhost, port: 9013
+  }, {
+    id: s1i4, name: service-1, address: localhost, port: 9014
+  }, {
+    id: s2i1, name: service-2, tags: [camel, service-call], address: localhost, port: 9021
+  }, {
+    id: s2i2, name: service-2, tags: [camel, service-call], address: localhost, port: 9022
+  }, {
+    id: s2i3, name: service-2, tags: [camel, service-call], address: localhost, port: 9023
+  }, {
+    id: s2i4, name: service-2, address: localhost, port: 9024
+  }]
+}
+EOF
+
+unzip -d target target/${CONSUL_ZIP}
+
+target/consul \
+    agent \
+    -server \
+    -bootstrap \
+    -datacenter camel \
+    -advertise 127.0.0.1 \
+    -bind 0.0.0.0 \
+    -log-level trace \
+    -data-dir target/consul-data \
+    -config-dir target/consul-config
\ No newline at end of file

http://git-wip-us.apache.org/repos/asf/camel/blob/89ba56d3/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-osx.sh
----------------------------------------------------------------------
diff --git a/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-osx.sh b/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-osx.sh
new file mode 100755
index 0000000..4b62282
--- /dev/null
+++ b/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-osx.sh
@@ -0,0 +1,55 @@
+#!/usr/bin/env bash
+
+CONSUL_VER0.8.1
+CONSUL_ZIPconsul_${CONSUL_VER}_darwin_amd64.zip
+
+# cleanup
+rm -rf target/consul-data
+rm -rf target/consul-config
+rm -rf target/consul
+
+mkdir -p target/
+mkdir -p target/consul-data
+mkdir -p target/consul-config
+
+
+if [ ! -f target/$CONSUL_ZIP ]; then
+    echo Downloading: https://releases.hashicorp.com/consul/$CONSUL_VER/$CONSUL_ZIP 
+    curl -o target/$CONSUL_ZIP https://releases.hashicorp.com/consul/$CONSUL_VER/$CONSUL_ZIP
+fi
+
+cat > target/consul-config/services.json <<EOF
+{
+  services: [{
+    id: s1i1, name: service-1, tags: [camel, service-call], address: localhost, port: 9011
+  }, {
+    id: s1i2, name: service-1, tags: [camel, service-call], address: localhost, port: 9012
+  }, {
+    id: s1i3, name: service-1, tags: [camel, service-call], address: localhost, port: 9013
+  }, {
+    id: s1i4, name: service-1, address: localhost, port: 9014
+  }, {
+    id: s2i1, name: service-2, tags: [camel, service-call], address: localhost, port: 9021
+  }, {
+    id: s2i2, name: service-2, tags: [camel, service-call], address: localhost, port: 9022
+  }, {
+    id: s2i3, name: service-2, tags: [camel, service-call], address: localhost, port: 9023
+  }, {
+    id: s2i4, name: service-2, address: localhost, port: 9024
+  }]
+}
+EOF
+
+unzip -d target target/$CONSUL_ZIP
+chmod +x target/consul
+
+target/consul \
+    agent \
+    -server \
+    -bootstrap \
+    -datacenter camel \
+    -advertise 127.0.0.1 \
+    -bind 0.0.0.0 \
+    -log-level trace \
+    -data-dir target/consul-data \
+    -config-dir target/consul-config
\ No newline at end of file

http://git-wip-us.apache.org/repos/asf/camel/blob/89ba56d3/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run.sh
----------------------------------------------------------------------
diff --git a/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run.sh b/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run.sh
deleted file mode 100755
index f5ac79c..0000000
--- a/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run.sh
+++ /dev/null
@@ -1,52 +0,0 @@
-#!/usr/bin/env bash
-
-CONSUL_VER0.7.5
-CONSUL_ZIPconsul_${CONSUL_VER}_linux_amd64.zip
-
-# cleanup
-rm -rf target/consul-data
-rm -rf target/consul-config
-rm -rf target/consul
-
-mkdir -p target/
-mkdir -p target/consul-data
-mkdir -p target/consul-config
-
-if [ ! -f target/${CONSUL_ZIP} ]; then
-    wget https://releases.hashicorp.com/consul/${CONSUL_VER}/${CONSUL_ZIP} -O target/${CONSUL_ZIP}
-fi
-
-cat > target/consul-config/services.json <<EOF
-{
-  services: [{
-    id: s1i1, name: service-1, tags: [camel, service-call], address: localhost, port: 9011
-  }, {
-    id: s1i2, name: service-1, tags: [camel, service-call], address: localhost, port: 9012
-  }, {
-    id: s1i3, name: service-1, tags: [camel, service-call], address: localhost, port: 9013
-  }, {
-    id: s1i4, name: service-1, address: localhost, port: 9014
-  }, {
-    id: s2i1, name: service-2, tags: [camel, service-call], address: localhost, port: 9021
-  }, {
-    id: s2i2, name: service-2, tags: [camel, service-call], address: localhost, port: 9022
-  }, {
-    id: s2i3, name: service-2, tags: [camel, service-call], address: localhost, port: 9023
-  }, {
-    id: s2i4, name: service-2, address: localhost, port: 9024
-  }]
-}
-EOF
-
-unzip -d target target/${CONSUL_ZIP}
-
-target/consul \
-    agent \
-    -server \
-    -bootstrap \
-    -datacenter camel \
-    -advertise 127.0.0.1 \
-    -bind 0.0.0.0 \
-    -log-level trace \
-    -data-dir target/consul-data \
-    -config-dir target/consul-config
\ No newline at end of file


"
"114","342","2017-04-18 11:09:43+00:00","lburgazzoli@apache.org","['commits@camel.apache.org']","camel git commit: Add ServiceCall EIP documentation","Return-Path: <commits-return-55715-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 05BD0185B4
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 11:09:44 +0000 (UTC)
Received: (qmail 82997 invoked by uid 500); 18 Apr 2017 11:09:43 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 82939 invoked by uid 500); 18 Apr 2017 11:09:43 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 82930 invoked by uid 99); 18 Apr 2017 11:09:43 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 11:09:43 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id C26F0DFBDA; Tue, 18 Apr 2017 11:09:43 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: lburgazzoli@apache.org
To: commits@camel.apache.org
Message-Id: <0be5337630534f32b8226bf42f53098d@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Add ServiceCall EIP documentation
Date: Tue, 18 Apr 2017 11:09:43 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 89ba56d3d -> 60675efc3


Add ServiceCall EIP documentation


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/60675efc
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/60675efc
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/60675efc

Branch: refs/heads/master
Commit: 60675efc3ac420b35da219542607bdc01e9f9598
Parents: 89ba56d
Author: lburgazzoli <lburgazzoli@gmail.com>
Authored: Tue Apr 18 13:09:12 2017 +0200
Committer: lburgazzoli <lburgazzoli@gmail.com>
Committed: Tue Apr 18 13:09:30 2017 +0200

----------------------------------------------------------------------
 .../src/main/docs/eips/serviceCall-eip.adoc     | 420 +++++++++++++++++++
 1 file changed, 420 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/60675efc/camel-core/src/main/docs/eips/serviceCall-eip.adoc
----------------------------------------------------------------------
diff --git a/camel-core/src/main/docs/eips/serviceCall-eip.adoc b/camel-core/src/main/docs/eips/serviceCall-eip.adoc
new file mode 100644
index 0000000..35965ea
--- /dev/null
+++ b/camel-core/src/main/docs/eips/serviceCall-eip.adoc
@@ -0,0 +1,420 @@
+## Service Call EIP
+
+The serviceCall EIP allows to call remote services in a distributed system. The service to call is looked up in a service registry of some sorts such as Kubernetes, Consul, Etcd, Zookeeper, DNS. The EIP separates the configuration of the service registry from the calling of the service.
+
+When calling a service you may just refer to the name of the service in the EIP as shown below:
+
+[source,java]
+.Java DSL
+----
+from(direct:start)
+    .serviceCall(foo)
+    .to(mock:result);
+----
+
+[source,xml]
+.XML DSL
+----
+<camelContext xmlnshttp://camel.apache.org/schema/spring>
+  <route>
+    <from uridirect:start/>
+    <serviceCall namefoo/>
+    <to urimock:result/>
+  </route>
+</camelContext>
+----
+
+Camel will then:
+
+* search for a service call configuration from the Camel context and registry
+* lookup a service with the name ```foo``` from an external service registry
+* filter the servers
+* select the server to use
+* build a Camel URI using the choosen server info
+
+By default the Service Call EIP uses camel-http4 so assuming that the selected service instance runs on host ```myhost.com``` on port ```80```, the computed Camel URI will be:
+
+[source]
+----
+    http4:myhost.com:80
+----
+
+### Service Name to Camel URI Examples
+
+It is often needed to build more complex Camel URI which may include options or paths which is possible through different options:name: value
+
+* The *service name* supports a limited uri like syntax, here some examples
++
+[width100%,cols25%a,75%a,optionsheader]
+|
+|Name |Resolution
+
+|foo | http4://host:port
+|foo/path | http4://host:port/path
+|foo/path?foobar | http4://host:port/path?foobar
+|
++
+[source,java]
+----
+from(direct:start)
+    .serviceCall(foo/hello)
+    .to(mock:result);
+----
++
+* If you wan to have more control over the uri construction, you can use the *uri* directive:
++
+[width100%,cols25%a,40%a,35%a,optionsheader]
+|
+|Name | URI | Resolution
+
+|foo | undertow:http://foo/hellp | undertow:http://host:port/hello
+|foo | undertow:http://foo.host:foo.port/hello | undertow:http://host:port/hello
+|
++
+[source,java]
+----
+from(direct:start)
+    .serviceCall(foo, undertow:http://foo/hello)
+    .to(mock:result);
+----
++
+* Advanced users can have full control over the uri construction through expressions:
++
+[source,java]
+----
+from(direct:start)
+    .serviceCall()
+        .name(foo)
+        .expression()
+            .simple(undertow:http://${header.CamelServiceCallServiceHost}:${header.CamelServiceCallServicePort}/hello);
+----
+
+### Configuring Service Call
+
+The Service Call EIP can be configured through the following options:
+
+[width100%,cols3,1m,6,optionsheader]
+|
+| Name | Java Type | Description
+| name | String | *Required* Sets the name of the service to use
+| uri | String | The uri of the endpoint to send to.
+| component | String | The component to use.
+| pattern | ExchangePattern | Sets the optional ExchangePattern used to invoke this endpoint
+| configurationRef | String | Refers to a ServiceCall configuration to use
+| serviceDiscoveryRef | String | Sets a reference to a custom ServiceDiscovery to use.
+| serviceDiscovery | ServiceDiscovery | Sets the ServiceDiscovery to use ([.underline]_Java DSL only_).
+| serviceFilterRef | String | Sets a reference to a custom ServiceFilter to use.
+| serviceFilter | ServiceFilter | Sets the ServiceFilter to use ([.underline]_Java DSL only_).
+| serviceChooserRef | String | Sets a reference to a custom ServiceChooser to use.
+| serviceChooser | ServiceChooser | Sets the ServiceChooser to use ([.underline]_Java DSL only_).
+| loadBalancerRef | String | Sets a reference to a custom LoadBalancer to use.
+| loadBalancer | LoadBalancer | Sets the LoadBalancer to use ([.underline]_Java DSL only_).
+| expressionRef | String | Set a reference to a custom Expression to use.
+| expression | Expression | Set the Expression to use to compute the Camel URI ([.underline]_Java DSL only_).
+|
+
+In addition to ref/binding configuration style you can leverage specific configuration DSL to customize specific options:
+
+* *Consul Service Discovery:*
++
+To leverage Consul for Service Discover, maven users will need to add the following dependency to their pom.xml
++
+[source,xml]
+----
+<dependency>
+    <groupId>org.apache.camel</groupId>
+    <artifactId>camel-consul</artifactId>
+    <!-- use the same version as your Camel core version -->
+    <version>x.y.z</version>
+</dependency>
+----
++
+*Available options:*
++
+[width100%,cols3,1m,6,optionsheader]
+|
+| Name | Java Type | Description
+| url | String | The Consul agent URL
+| datacenter | String | The data center
+| aclToken | String | Sets the ACL token to be used with Consul
+| userName | String | Sets the username to be used for basic authentication
+| password | String | Sets the password to be used for basic authentication
+| connectTimeoutMillis | Long | Connect timeout for OkHttpClient
+| readTimeoutMillis | Long | Read timeout for OkHttpClient
+| writeTimeoutMillis | Long | Write timeout for OkHttpClient
+|
++
+[source,java]
+.Example
+----
+from(direct:start)
+    .serviceCall(foo)
+        .consulServiceDiscovery()
+            .url(http://consul-cluster:8500)
+            .datacenter(neverland)
+            .end()
+    .to(mock:result);
+----
+
+* *DNS Service Discovery:*
++
+To leverage DNS for Service Discover, maven users will need to add the following dependency to their pom.xml
++
+[source,xml]
+----
+<dependency>
+    <groupId>org.apache.camel</groupId>
+    <artifactId>camel-dns</artifactId>
+    <!-- use the same version as your Camel core version -->
+    <version>x.y.z</version>
+</dependency>
+----
++
+[source,xml]
+.XML DSL
+----
+<camelContext xmlnshttp://camel.apache.org/schema/spring>
+  <route>
+    <from uridirect:start/>
+    <serviceCall namefoo>
+      <consulServiceDiscovery urlhttp://consul-cluster:8500 datacenterneverland/>
+    </serviceCall>
+    <to urimock:result/>
+  </route>
+</camelContext>
+----
+
++
+*Available options:*
++
+[width100%,cols3,1m,6,optionsheader]
+|
+| Name | Java Type | Description
+| proto | String | The transport protocol of the desired service, default _tcp
+| domain | String | The user name to use for basic authentication
+|
++
+[source,java]
+.Example
+----
+from(direct:start)
+    .serviceCall(foo)
+        .dnsServiceDiscovery(my.domain.com)
+    .to(mock:result);
+----
++
+[source,xml]
+.XML DSL
+----
+<camelContext xmlnshttp://camel.apache.org/schema/spring>
+  <route>
+    <from uridirect:start/>
+    <serviceCall namefoo>
+      <dnsServiceDiscovery domainmy.domain.com/>
+    </serviceCall>
+    <to urimock:result/>
+  </route>
+</camelContext>
+----
+
+* *Etcd Service Discovery:*
++
+To leverage Etcd for Service Discover, maven users will need to add the following dependency to their pom.xml
++
+[source,xml]
+----
+<dependency>
+    <groupId>org.apache.camel</groupId>
+    <artifactId>camel-etcd</artifactId>
+    <!-- use the same version as your Camel core version -->
+    <version>x.y.z</version>
+</dependency>
+----
++
+*Available options:*
++
+[width100%,cols3,1m,6,optionsheader]
+|
+| Name | Java Type | Description
+| uris | String | The URIs the client can connect to
+| userName | String | The user name to use for basic authentication
+| password | String | The password to use for basic authentication
+| timeout | Long | To set the maximum time an action could take to complete
+| servicePath | String | The path to look for for service discovery, default /services
+| type | String | To set the discovery type, valid values are on-demand and watch.
+|
++
+[source,java]
+.Example
+----
+from(direct:start)
+    .serviceCall(foo)
+        .etcdServiceDiscovery()
+            .uris(http://etcd1:4001,http://etcd2:4001)
+            .servicePath(/camel/services)
+            .end()
+    .to(mock:result);
+----
++
+[source,xml]
+.XML DSL
+----
+<camelContext xmlnshttp://camel.apache.org/schema/spring>
+  <route>
+    <from uridirect:start/>
+    <serviceCall namefoo>
+      <etcdServiceDiscovery urishttp://etcd1:4001,http://etcd2:4001 servicePath/camel/services/>
+    </serviceCall>
+    <to urimock:result/>
+  </route>
+</camelContext>
+----
+
+* *Kubernetes Service Discovery:*
++
+To leverage Kubernetes for Service Discover, maven users will need to add the following dependency to their pom.xml
++
+[source,xml]
+----
+<dependency>
+    <groupId>org.apache.camel</groupId>
+    <artifactId>camel-kubernetes</artifactId>
+    <!-- use the same version as your Camel core version -->
+    <version>x.y.z</version>
+</dependency>
+----
++
+*Available options:*
++
+[width100%,cols3,1m,6,optionsheader]
+|
+| Name | Java Type | Description
+| lookup | String | How to perform service lookup. Possible values: client, dns, environment
+| apiVersion | String | Kubernetes API version when using client lookup
+| caCertData | String | Sets the Certificate Authority data when using client lookup
+| caCertFile | String | Sets the Certificate Authority data that are loaded from the file when using client lookup
+| clientCertData | String | Sets the Client Certificate data when using client lookup
+| clientCertFile | String | Sets the Client Certificate data that are loaded from the file when using client lookup
+| clientKeyAlgo | String | Sets the Client Keystore algorithm, such as RSA when using client lookup
+| clientKeyData | String | Sets the Client Keystore data when using client lookup
+| clientKeyFile | String | Sets the Client Keystore data that are loaded from the file when using client lookup
+| clientKeyPassphrase | String | Sets the Client Keystore passphrase when using client lookup
+| dnsDomain | String | Sets the DNS domain to use for dns lookup
+| namespace | String | The Kubernetes namespace to use. By default the namespaces name is taken from the environment variable KUBERNETES_MASTER
+| oauthToken | String | Sets the OAUTH token for authentication (instead of username/password) when using client lookup
+| username | String | Sets the username for authentication when using client lookup
+| password | String | Sets the password for authentication when using client lookup
+| trustCerts | Boolean | Sets whether to turn on trust certificate check when using client lookup
+|
++
+[source,java]
+.Java DSL
+----
+from(direct:start)
+    .serviceCall(foo)
+        .kubernetesServiceDiscovery()
+            .lookup(dns)
+            .namespace(myNamespace)
+            .dnsDomain(my.domain.com)
+            .end()
+    .to(mock:result);
+----
++
+[source,xml]
+.XML DSL
+----
+<camelContext xmlnshttp://camel.apache.org/schema/spring>
+  <route>
+    <from uridirect:start/>
+    <serviceCall namefoo>
+      <kubernetesServiceDiscovery lookupdns namespacemyNamespace dnsDomainmy.domain.com/>
+    </serviceCall>
+    <to urimock:result/>
+  </route>
+</camelContext>
+----
+
+### Shared configurations
+
+The Service CAll EIP can be configured straight on the route definition or through shared configurations, here an example with two configurations registered in the Camel Context:
+
+[source,java]
+.Example
+----
+ServiceCallConfigurationDefinition globalConf  new ServiceCallConfigurationDefinition();
+globalConf.setServiceDiscovery(
+    name -> Arrays.asList(
+        new DefaultServiceDefinition(name, my.host1.com, 8080),
+        new DefaultServiceDefinition(name, my.host2.com, 443))
+);
+globalConf.setServiceChooser(
+    list -> list.get(ThreadLocalRandom.current().nextInt(list.size()))
+);
+
+ServiceCallConfigurationDefinition httpsConf  new ServiceCallConfigurationDefinition();
+httpsConf.setServiceFilter(
+    list -> list.stream().filter(s -> s.getPort()  443).collect(toList())
+);
+
+getContext().setServiceCallConfiguration(globalConf);
+getContext().addServiceCallConfiguration(https, httpsConf);
+----
+
+Each Service Call definition and configuration will inheriths from the ```globalConf``` which can be see as default configuration, then you can reference the ```httpsConf``` in your rute as follow:
+
+[source,java]
+.Example
+----
+rom(direct_:start)
+    .serviceCall()
+        .name(foo)
+        .serviceCallConfiguration(https)
+        .end()
+    .to(mock:result);
+----
+
+This route will leverages the service discovery and service chooser from ```globalConf``` and the service filter from ```httpsConf``` but you can override any of them if needed straight on the route:
+
+[source,java]
+.Example
+----
+rom(direc_:start)
+    .serviceCall()
+        .name(foo)
+        .serviceCallConfiguration(https)
+        .serviceChooser(list -> list.get(0))
+        .end()
+    .to(mock:result);
+----
+
+### Spring Boot support
+
+In a Spring-Boot application you can externalize most of the configuration options:
+
+[source,properties]
+.application.properties
+----
+# this can be configured stright tot he route and it has been included to show
+# property placeholders support
+service.name  foo
+
+# this property is not mandatory and it has been included to show how to configure
+# the service discovery implementation provided by camel-consul
+camel.cloud.consul.service-discovery.url  http://localhost:8500
+
+# Add a static list of servers for the service named foo
+camel.cloud.service-discovery.services[foo]  host1.static:8080,host2.static:8080
+----
+
+[source,java]
+.Routes
+----
+@Component
+public class MyRouteBuilder implements RouteBuilder {
+    @Override
+    public void configure() throws Exception {
+        from(direct:start)
+            .serviceCall({{service.name}});
+    }
+}
+----


"
"115","757","2017-04-18 11:10:54+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1636: Protobuf issue","Return-Path: <dev-return-47395-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id E4324185C1
	for <apmail-camel-dev-archive@www.apache.org>; Tue, 18 Apr 2017 11:10:54 +0000 (UTC)
Received: (qmail 84816 invoked by uid 500); 18 Apr 2017 11:10:54 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 84769 invoked by uid 500); 18 Apr 2017 11:10:54 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 84758 invoked by uid 99); 18 Apr 2017 11:10:54 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 11:10:54 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 033D2DFBDA; Tue, 18 Apr 2017 11:10:54 +0000 (UTC)
From: dmvolod <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
Message-ID: <git-pr-1636-camel@git.apache.org>
Subject: [GitHub] camel pull request #1636: Protobuf issue
Content-Type: text/plain
Date: Tue, 18 Apr 2017 11:10:54 +0000 (UTC)

GitHub user dmvolod opened a pull request:

    https://github.com/apache/camel/pull/1636

    Protobuf issue

    Check if the running OS platform supports the protobuf generator plugin. 
    If the platform doesnt support, the protobuf test code generation, their  assembly and launch will be skipped 
    Supported platforms are: 
    - Linux (x86 32 and 64-bit)
    - Windows (x86 32 and 64-bit)
    - OSX (x86 32 and 64-bit)
    This prevents fails when build without fastinstall profile will run on unsupported by protoc plugin platform

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/dmvolod/camel protobuf-issue

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/camel/pull/1636.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1636
    
----
commit 35ab9fa64958ba451cc5d2ca81a499059831ddc1
Author: Dmitry Volodin <dmvolod@gmail.com>
Date:   2017-04-18T10:59:18Z

    camel-protobuf: Check if the OS supports the protobuf generator plugin

commit cb9e031f46ec917793775f49535633af88da02c3
Author: Dmitry Volodin <dmvolod@gmail.com>
Date:   2017-04-18T11:08:10Z

    camel-protobuf: set gmaven-plugin version to global param

----


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"116","343","2017-04-18 11:17:25+00:00","acosentino@apache.org","['commits@camel.apache.org']","camel git commit: Avoid the use of StringUtils in favor of
 ObjectHelper","Return-Path: <commits-return-55716-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id CA057185DC
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 11:17:25 +0000 (UTC)
Received: (qmail 93957 invoked by uid 500); 18 Apr 2017 11:17:25 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 93901 invoked by uid 500); 18 Apr 2017 11:17:25 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 93892 invoked by uid 99); 18 Apr 2017 11:17:25 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 11:17:25 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 7E202DFBDA; Tue, 18 Apr 2017 11:17:25 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: acosentino@apache.org
To: commits@camel.apache.org
Message-Id: <043bf010120840de9dcc5e49fb1d0ebb@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Avoid the use of StringUtils in favor of
 ObjectHelper
Date: Tue, 18 Apr 2017 11:17:25 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 60675efc3 -> 33bb03fb2


Avoid the use of StringUtils in favor of ObjectHelper


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/33bb03fb
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/33bb03fb
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/33bb03fb

Branch: refs/heads/master
Commit: 33bb03fb24db0df2489686513cf0676983a3df27
Parents: 60675ef
Author: Andrea Cosentino <ancosen@gmail.com>
Authored: Tue Apr 18 13:14:59 2017 +0200
Committer: Andrea Cosentino <ancosen@gmail.com>
Committed: Tue Apr 18 13:17:11 2017 +0200

----------------------------------------------------------------------
 .../java/org/apache/camel/component/grpc/GrpcProducer.java     | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/33bb03fb/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java
----------------------------------------------------------------------
diff --git a/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java b/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java
index 10d8faf..232b8d7 100644
--- a/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java
+++ b/components/camel-grpc/src/main/java/org/apache/camel/component/grpc/GrpcProducer.java
@@ -27,9 +27,9 @@ import org.apache.camel.AsyncProcessor;
 import org.apache.camel.Exchange;
 import org.apache.camel.Message;
 import org.apache.camel.impl.DefaultProducer;
+import org.apache.camel.util.ObjectHelper;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
-import org.springframework.util.StringUtils;
 
 /**
  * Represents asynchronous and synchronous gRPC producer implementations.
@@ -122,10 +122,10 @@ public class GrpcProducer extends DefaultProducer implements AsyncProcessor {
     }
 
     protected void initializeChannel() {
-        if (!StringUtils.isEmpty(configuration.getHost()) && !StringUtils.isEmpty(configuration.getPort())) {
+        if (!ObjectHelper.isEmpty(configuration.getHost()) && !ObjectHelper.isEmpty(configuration.getPort())) {
             LOG.info(Creating channel to the remote gRPC server  + configuration.getHost() + : + configuration.getPort());
             channel  ManagedChannelBuilder.forAddress(configuration.getHost(), configuration.getPort()).usePlaintext(configuration.getUsePlainText()).build();
-        } else if (!StringUtils.isEmpty(configuration.getTarget())) {
+        } else if (!ObjectHelper.isEmpty(configuration.getTarget())) {
             LOG.info(Creating channel to the remote gRPC server  + configuration.getTarget());
             channel  ManagedChannelBuilder.forTarget(configuration.getTarget()).usePlaintext(configuration.getUsePlainText()).build();
         } else {


"
"117","344","2017-04-18 11:21:09+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[1/2] camel git commit: camel-protobuf: set gmaven-plugin version to
 global param","Return-Path: <commits-return-55717-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 639F618611
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 11:21:09 +0000 (UTC)
Received: (qmail 1326 invoked by uid 500); 18 Apr 2017 11:21:09 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 1272 invoked by uid 500); 18 Apr 2017 11:21:09 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 1263 invoked by uid 99); 18 Apr 2017 11:21:09 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 11:21:09 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 32447DFBDA; Tue, 18 Apr 2017 11:21:09 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Tue, 18 Apr 2017 11:21:09 -0000
Message-Id: <c9356b760c6d4805b7146ca866dd8676@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [1/2] camel git commit: camel-protobuf: set gmaven-plugin version to
 global param

Repository: camel
Updated Branches:
  refs/heads/master 33bb03fb2 -> b3f0c7407


camel-protobuf: set gmaven-plugin version to global param

Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/b3f0c740
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/b3f0c740
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/b3f0c740

Branch: refs/heads/master
Commit: b3f0c7407633538fd4648175a87522343dd28f05
Parents: ecaf006
Author: Dmitry Volodin <dmvolod@gmail.com>
Authored: Tue Apr 18 14:08:10 2017 +0300
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Tue Apr 18 13:20:19 2017 +0200

----------------------------------------------------------------------
 components/camel-protobuf/pom.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/b3f0c740/components/camel-protobuf/pom.xml
----------------------------------------------------------------------
diff --git a/components/camel-protobuf/pom.xml b/components/camel-protobuf/pom.xml
index f97679c..536d95c 100644
--- a/components/camel-protobuf/pom.xml
+++ b/components/camel-protobuf/pom.xml
@@ -107,7 +107,7 @@
       <plugin>
         <groupId>org.codehaus.gmaven</groupId>
         <artifactId>gmaven-plugin</artifactId>
-        <version>1.5</version>
+        <version>${gmaven-plugin-version}</version>
         <executions>
           <execution>
             <phase>validate</phase>


"
"118","345","2017-04-18 11:21:10+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[2/2] camel git commit: camel-protobuf: Check if the OS supports the
 protobuf generator plugin","Return-Path: <commits-return-55718-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 8800E18612
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 11:21:09 +0000 (UTC)
Received: (qmail 1431 invoked by uid 500); 18 Apr 2017 11:21:09 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 1373 invoked by uid 500); 18 Apr 2017 11:21:09 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 1364 invoked by uid 99); 18 Apr 2017 11:21:09 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 11:21:09 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 35613DFDAC; Tue, 18 Apr 2017 11:21:09 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Tue, 18 Apr 2017 11:21:10 -0000
Message-Id: <971bc01990b54dd98b543e3fea3351da@git.apache.org>
In-Reply-To: <c9356b760c6d4805b7146ca866dd8676@git.apache.org>
References: <c9356b760c6d4805b7146ca866dd8676@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [2/2] camel git commit: camel-protobuf: Check if the OS supports the
 protobuf generator plugin

camel-protobuf: Check if the OS supports the protobuf generator plugin

Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/ecaf0064
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/ecaf0064
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/ecaf0064

Branch: refs/heads/master
Commit: ecaf006408b55857abf341a505124befc4fb4be5
Parents: 33bb03f
Author: Dmitry Volodin <dmvolod@gmail.com>
Authored: Tue Apr 18 13:59:18 2017 +0300
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Tue Apr 18 13:20:19 2017 +0200

----------------------------------------------------------------------
 components/camel-protobuf/pom.xml | 58 ++++++++++++++++++++++++++++++++--
 1 file changed, 55 insertions(+), 3 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/ecaf0064/components/camel-protobuf/pom.xml
----------------------------------------------------------------------
diff --git a/components/camel-protobuf/pom.xml b/components/camel-protobuf/pom.xml
index 6785890..f97679c 100644
--- a/components/camel-protobuf/pom.xml
+++ b/components/camel-protobuf/pom.xml
@@ -17,6 +17,7 @@
 -->
 <project xmlnshttp://maven.apache.org/POM/4.0.0 xmlns:xsihttp://www.w3.org/2001/XMLSchema-instance
          xsi:schemaLocationhttp://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd>
+  
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
@@ -51,7 +52,7 @@
       <version>${protobuf-version}</version>
     </dependency>
     <dependency>
-    <groupId>commons-io</groupId>
+      <groupId>commons-io</groupId>
       <artifactId>commons-io</artifactId>
     </dependency>
 
@@ -82,7 +83,7 @@
       <scope>test</scope>
     </dependency>
   </dependencies>
-  
+
   <build>
     <extensions>
       <!-- Operating system and CPU architecture detection extension -->
@@ -92,8 +93,34 @@
         <version>1.4.1.Final</version>
       </extension>
     </extensions>
-    
+
     <plugins>
+      <!--
+        Check if the running OS platform supports the protobuf generator plugin. 
+        If the platform doesnt support, the protobuf test code generation, their 
+        assembly and launch will be skipped 
+        Supported platforms are: 
+        - Linux (x86 32 and 64-bit)
+        - Windows (x86 32 and 64-bit)
+        - OSX (x86 32 and 64-bit)
+      -->
+      <plugin>
+        <groupId>org.codehaus.gmaven</groupId>
+        <artifactId>gmaven-plugin</artifactId>
+        <version>1.5</version>
+        <executions>
+          <execution>
+            <phase>validate</phase>
+            <goals>
+              <goal>execute</goal>
+            </goals>
+            <configuration>
+              <source><![CDATA[pom.properties[skip-test]pom.properties[os.detected.classifier].matches(^.*?(linux|windows|osx)-x86.*$) ? false : true;]]></source>
+            </configuration>
+          </execution>
+        </executions>
+      </plugin>
+
       <!-- Protobuf Java code generator plugin -->
       <plugin>
         <groupId>org.xolstice.maven.plugins</groupId>
@@ -107,10 +134,35 @@
             </goals>
             <configuration>
               <protocArtifact>com.google.protobuf:protoc:${protobuf-version}:exe:${os.detected.classifier}</protocArtifact>
+              <skip>${skip-test}</skip>
             </configuration>
           </execution>
         </executions>
       </plugin>
+
+      <plugin>
+        <artifactId>maven-compiler-plugin</artifactId>
+        <executions>
+          <execution>
+            <id>default-testCompile</id>
+            <phase>test-compile</phase>
+            <goals>
+              <goal>testCompile</goal>
+            </goals>
+            <configuration>
+              <skip>${skip-test}</skip>
+            </configuration>
+          </execution>
+        </executions>
+      </plugin>
+
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-surefire-plugin</artifactId>
+        <configuration>
+          <skipTests>${skip-test}</skipTests>
+        </configuration>
+      </plugin>
     </plugins>
   </build>
 </project>
\ No newline at end of file


"
"119","346","2017-04-18 11:21:42+00:00","acosentino@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-11152 - naming fix with the impl","Return-Path: <commits-return-55719-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0190A1861B
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 11:21:43 +0000 (UTC)
Received: (qmail 1856 invoked by uid 500); 18 Apr 2017 11:21:42 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 1795 invoked by uid 500); 18 Apr 2017 11:21:42 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 1786 invoked by uid 99); 18 Apr 2017 11:21:42 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 11:21:42 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id AC667DFBDA; Tue, 18 Apr 2017 11:21:42 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: acosentino@apache.org
To: commits@camel.apache.org
Message-Id: <fa7ce0ca871b470d8708d03086386d92@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-11152 - naming fix with the impl
Date: Tue, 18 Apr 2017 11:21:42 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master b3f0c7407 -> 4f01b7861


CAMEL-11152 - naming fix with the impl


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/4f01b786
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/4f01b786
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/4f01b786

Branch: refs/heads/master
Commit: 4f01b7861e3cced634926dc4baa3377c9fa32a47
Parents: b3f0c74
Author: onders86 <ondersezgin@gmail.com>
Authored: Tue Apr 18 09:06:39 2017 +0300
Committer: Andrea Cosentino <ancosen@gmail.com>
Committed: Tue Apr 18 13:21:20 2017 +0200

----------------------------------------------------------------------
 .../camel-ssh/src/main/docs/ssh-component.adoc  |  6 ++++-
 .../camel/component/ssh/SshConstants.java       | 24 ++++++++++++++++++
 .../apache/camel/component/ssh/SshConsumer.java |  5 ++--
 .../apache/camel/component/ssh/SshHelper.java   | 20 ++++++++++++---
 .../apache/camel/component/ssh/SshProducer.java |  6 ++++-
 .../component/ssh/SshComponentProducerTest.java | 26 ++++++++++++++++++++
 6 files changed, 80 insertions(+), 7 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/4f01b786/components/camel-ssh/src/main/docs/ssh-component.adoc
----------------------------------------------------------------------
diff --git a/components/camel-ssh/src/main/docs/ssh-component.adoc b/components/camel-ssh/src/main/docs/ssh-component.adoc
index 3db3d0e..d38b469 100644
--- a/components/camel-ssh/src/main/docs/ssh-component.adoc
+++ b/components/camel-ssh/src/main/docs/ssh-component.adoc
@@ -141,7 +141,11 @@ and use that for authentication.
 `keyPairProvider` has been set, and if so, it will use that to for
 certificate based authentication.
 3.  If neither `certResource` nor `keyPairProvider` are set, it will use
-the `username` and `password` options for authentication.
+the `username` and `password` options for authentication. Even though the `username` 
+and `password` are provided in the endpoint configuration and headers set with 
+`SshConstants.USERNAME_HEADER` (`CamelSshUsername`) and 
+`SshConstants.PASSWORD_HEADER` (`CamelSshPassword`), the endpoint 
+configuration is surpassed and credentials set in the headers are used.
 
 The following route fragment shows an SSH polling consumer using a
 certificate from the classpath.

http://git-wip-us.apache.org/repos/asf/camel/blob/4f01b786/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshConstants.java
----------------------------------------------------------------------
diff --git a/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshConstants.java b/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshConstants.java
new file mode 100644
index 0000000..f3f2527
--- /dev/null
+++ b/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshConstants.java
@@ -0,0 +1,24 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.component.ssh;
+
+public interface SshConstants {
+
+    String USERNAME_HEADER  CamelSshUsername;
+    String PASSWORD_HEADER  CamelSshPassword;
+
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/4f01b786/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshConsumer.java
----------------------------------------------------------------------
diff --git a/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshConsumer.java b/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshConsumer.java
index da12bd2..3e07bb9 100644
--- a/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshConsumer.java
+++ b/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshConsumer.java
@@ -56,9 +56,10 @@ public class SshConsumer extends ScheduledPollConsumer {
         }
         
         String command  endpoint.getPollCommand();
-        SshResult result  SshHelper.sendExecCommand(command, endpoint, client);
-
         Exchange exchange  endpoint.createExchange();
+        
+        SshResult result  SshHelper.sendExecCommand(exchange.getIn().getHeaders(), command, endpoint, client);
+        
         exchange.getIn().setBody(result.getStdout());
         exchange.getIn().setHeader(SshResult.EXIT_VALUE, result.getExitValue());
         exchange.getIn().setHeader(SshResult.STDERR, result.getStderr());

http://git-wip-us.apache.org/repos/asf/camel/blob/4f01b786/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshHelper.java
----------------------------------------------------------------------
diff --git a/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshHelper.java b/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshHelper.java
index 6c9ea02..972bb8a 100644
--- a/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshHelper.java
+++ b/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshHelper.java
@@ -19,6 +19,7 @@ package org.apache.camel.component.ssh;
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
 import java.security.KeyPair;
+import java.util.Map;
 
 import org.apache.camel.RuntimeCamelException;
 import org.apache.sshd.ClientChannel;
@@ -38,7 +39,7 @@ public final class SshHelper {
     private SshHelper() {
     }
     
-    public static SshResult sendExecCommand(String command, SshEndpoint endpoint, SshClient client) throws Exception {
+    public static SshResult sendExecCommand(Map<String, Object> headers, String command, SshEndpoint endpoint, SshClient client) throws Exception {
         SshResult result  null;
         
         SshConfiguration configuration  endpoint.getConfiguration();
@@ -81,8 +82,21 @@ public final class SshHelper {
                 KeyPair pair  keyPairProvider.loadKey(configuration.getKeyType());
                 authResult  session.authPublicKey(configuration.getUsername(), pair);
             } else {
-                LOG.debug(Attempting to authenticate username {} using Password..., configuration.getUsername());
-                authResult  session.authPassword(configuration.getUsername(), configuration.getPassword());
+                String userName  configuration.getUsername();
+                String password  configuration.getPassword();
+                
+                Object userNameHeaderObj  headers.get(SshConstants.USERNAME_HEADER);
+                if (userNameHeaderObj ! null && userNameHeaderObj instanceof String) {
+                    userName  (String) headers.get(SshConstants.USERNAME_HEADER);
+                }
+                
+                Object passwordHeaderObj  headers.get(SshConstants.PASSWORD_HEADER);
+                if (passwordHeaderObj ! null && passwordHeaderObj instanceof String) {
+                    password  (String) headers.get(SshConstants.PASSWORD_HEADER);
+                }
+                
+                LOG.debug(Attempting to authenticate username {} using Password..., userName);
+                authResult  session.authPassword(userName, password);
             }
     
             authResult.await(configuration.getTimeout());

http://git-wip-us.apache.org/repos/asf/camel/blob/4f01b786/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshProducer.java
----------------------------------------------------------------------
diff --git a/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshProducer.java b/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshProducer.java
index 7c4b663..9a731cf 100644
--- a/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshProducer.java
+++ b/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/SshProducer.java
@@ -16,6 +16,8 @@
  */
 package org.apache.camel.component.ssh;
 
+import java.util.Map;
+
 import org.apache.camel.CamelExchangeException;
 import org.apache.camel.Exchange;
 import org.apache.camel.Message;
@@ -54,9 +56,11 @@ public class SshProducer extends DefaultProducer {
     public void process(Exchange exchange) throws Exception {
         final Message in  exchange.getIn();
         String command  in.getMandatoryBody(String.class);
+        
+        final Map<String, Object> headers  exchange.getIn().getHeaders();
 
         try {
-            SshResult result  SshHelper.sendExecCommand(command, endpoint, client);
+            SshResult result  SshHelper.sendExecCommand(headers, command, endpoint, client);
             exchange.getOut().setBody(result.getStdout());
             exchange.getOut().setHeader(SshResult.EXIT_VALUE, result.getExitValue());
             exchange.getOut().setHeader(SshResult.STDERR, result.getStderr());

http://git-wip-us.apache.org/repos/asf/camel/blob/4f01b786/components/camel-ssh/src/test/java/org/apache/camel/component/ssh/SshComponentProducerTest.java
----------------------------------------------------------------------
diff --git a/components/camel-ssh/src/test/java/org/apache/camel/component/ssh/SshComponentProducerTest.java b/components/camel-ssh/src/test/java/org/apache/camel/component/ssh/SshComponentProducerTest.java
index c34f565..b781e33 100644
--- a/components/camel-ssh/src/test/java/org/apache/camel/component/ssh/SshComponentProducerTest.java
+++ b/components/camel-ssh/src/test/java/org/apache/camel/component/ssh/SshComponentProducerTest.java
@@ -16,6 +16,9 @@
  */
 package org.apache.camel.component.ssh;
 
+import java.util.HashMap;
+import java.util.Map;
+
 import org.apache.camel.builder.RouteBuilder;
 import org.apache.camel.component.mock.MockEndpoint;
 
@@ -79,6 +82,25 @@ public class SshComponentProducerTest extends SshComponentTestSupport {
 
         assertMockEndpointsSatisfied();
     }
+    
+    @Test
+    public void testCredentialsAsHeaders() throws Exception {
+        final String msg  test\n;
+
+        MockEndpoint mock  getMockEndpoint(mock:password);
+        mock.expectedMinimumMessageCount(1);
+        mock.expectedBodiesReceived(msg);
+        mock.expectedHeaderReceived(SshResult.EXIT_VALUE, 0);
+        mock.expectedHeaderReceived(SshResult.STDERR, Error:test\n);
+        
+        Map<String, Object> headers  new HashMap<String, Object>();
+        headers.put(SshConstants.USERNAME_HEADER, smx);
+        headers.put(SshConstants.PASSWORD_HEADER, smx);
+
+        template.sendBodyAndHeaders(direct:sshCredentialsWithHeaders, msg, headers);
+
+        assertMockEndpointsSatisfied();
+    }
 
     @Override
     protected RouteBuilder createRouteBuilder() throws Exception {
@@ -92,6 +114,10 @@ public class SshComponentProducerTest extends SshComponentTestSupport {
                 from(direct:ssh)
                         .to(ssh://smx:smx@localhost: + port + ?timeout3000)
                         .to(mock:password);
+                
+                from(direct:sshCredentialsWithHeaders)
+                        .to(ssh://localhost: + port + ?timeout3000)
+                        .to(mock:password);
             }
         };
     }


"
"120","1379","2017-04-18 11:22:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-11152) camel-ssh - Allow to use message
 headers for username/password","Return-Path: <issues-return-41504-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id A51F418635
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 11:22:44 +0000 (UTC)
Received: (qmail 2823 invoked by uid 500); 18 Apr 2017 11:22:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 2787 invoked by uid 500); 18 Apr 2017 11:22:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 2773 invoked by uid 99); 18 Apr 2017 11:22:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 11:22:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 224511A0346
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:22:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -97.889
X-Spam-Level: 
X-Spam-Status: No, score-97.889 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, URI_HEX1.313, USER_IN_WHITELIST-100]
	autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id VCqKv6OuTLrP for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 11:22:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id F0D425FC96
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:22:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 7A14CE0874
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:22:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id A6DA521B49
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:22:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 11:22:41 +0000 (UTC)
From: Andrea Cosentino (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064259.1492327880000.304954.1492514561681@Atlassian.JIRA>
In-Reply-To: <JIRA.13064259.1492327880000@Atlassian.JIRA>
References: <JIRA.13064259.1492327880000@Atlassian.JIRA> <JIRA.13064259.1492327880472@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-11152) camel-ssh - Allow to use message
 headers for username/password
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11152?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Andrea Cosentino updated CAMEL-11152:
-------------------------------------
    Fix Version/s:     (was: Future)
                   2.19.0

> camel-ssh - Allow to use message headers for username/password
> --------------------------------------------------------------
>
>                 Key: CAMEL-11152
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11152
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-ssh
>            Reporter: Claus Ibsen
>            Assignee: onder sezgin
>            Priority: Minor
>             Fix For: 2.19.0
>
>
> See nabble
> http://camel.465427.n5.nabble.com/Camel-SSH-dynamic-values-tp5797435p5797545.html
> In the 
> org.apache.camel.component.ssh.SshHelper#sendExecCommand
> We should allow the exchange to provide a username/password to be used, so you can more dynamic reuse the same ssh endpoint but for different logins.
> Using toD has a drawback of creating a new endpoint per username.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"121","1380","2017-04-18 11:23:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Resolved] (CAMEL-11152) camel-ssh - Allow to use message
 headers for username/password","Return-Path: <issues-return-41505-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id A1D401863B
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 11:23:43 +0000 (UTC)
Received: (qmail 3496 invoked by uid 500); 18 Apr 2017 11:23:43 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 3457 invoked by uid 500); 18 Apr 2017 11:23:43 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 3447 invoked by uid 99); 18 Apr 2017 11:23:43 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 11:23:43 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 34E63C1A9E
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:23:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -97.889
X-Spam-Level: 
X-Spam-Status: No, score-97.889 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, URI_HEX1.313, USER_IN_WHITELIST-100]
	autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id NuFXJ-QIzVLk for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 11:23:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 65A1E5F576
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:23:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id E4D1BE04FE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:23:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 9C28D21B47
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:23:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 11:23:41 +0000 (UTC)
From: Andrea Cosentino (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064259.1492327880000.304958.1492514621638@Atlassian.JIRA>
In-Reply-To: <JIRA.13064259.1492327880000@Atlassian.JIRA>
References: <JIRA.13064259.1492327880000@Atlassian.JIRA> <JIRA.13064259.1492327880472@jira-lw-us.apache.org>
Subject: [jira] [Resolved] (CAMEL-11152) camel-ssh - Allow to use message
 headers for username/password
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11152?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Andrea Cosentino resolved CAMEL-11152.
--------------------------------------
    Resolution: Fixed

> camel-ssh - Allow to use message headers for username/password
> --------------------------------------------------------------
>
>                 Key: CAMEL-11152
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11152
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-ssh
>            Reporter: Claus Ibsen
>            Assignee: onder sezgin
>            Priority: Minor
>             Fix For: 2.19.0
>
>
> See nabble
> http://camel.465427.n5.nabble.com/Camel-SSH-dynamic-values-tp5797435p5797545.html
> In the 
> org.apache.camel.component.ssh.SshHelper#sendExecCommand
> We should allow the exchange to provide a username/password to be used, so you can more dynamic reuse the same ssh endpoint but for different logins.
> Using toD has a drawback of creating a new endpoint per username.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"122","758","2017-04-18 11:24:47+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1635: CAMEL-11152 - set credentials for ssh connection t...","Return-Path: <dev-return-47396-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 7F2B418655
	for <apmail-camel-dev-archive@www.apache.org>; Tue, 18 Apr 2017 11:24:48 +0000 (UTC)
Received: (qmail 6218 invoked by uid 500); 18 Apr 2017 11:24:48 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 6168 invoked by uid 500); 18 Apr 2017 11:24:48 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 6157 invoked by uid 99); 18 Apr 2017 11:24:48 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 11:24:48 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id E9CAADFBDA; Tue, 18 Apr 2017 11:24:47 +0000 (UTC)
From: onders86 <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
References: <git-pr-1635-camel@git.apache.org>
In-Reply-To: <git-pr-1635-camel@git.apache.org>
Subject: [GitHub] camel pull request #1635: CAMEL-11152 - set credentials for ssh connection t...
Content-Type: text/plain
Message-Id: <20170418112447.E9CAADFBDA@git1-us-west.apache.org>
Date: Tue, 18 Apr 2017 11:24:47 +0000 (UTC)

Github user onders86 closed the pull request at:

    https://github.com/apache/camel/pull/1635


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"123","1381","2017-04-18 11:25:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11152) camel-ssh - Allow to use message
 headers for username/password","Return-Path: <issues-return-41506-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 010D618665
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 11:25:45 +0000 (UTC)
Received: (qmail 6855 invoked by uid 500); 18 Apr 2017 11:25:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 6811 invoked by uid 500); 18 Apr 2017 11:25:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 6801 invoked by uid 99); 18 Apr 2017 11:25:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 11:25:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 86B141A0346
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:25:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -97.889
X-Spam-Level: 
X-Spam-Status: No, score-97.889 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, URI_HEX1.313, USER_IN_WHITELIST-100]
	autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id 0K2apdyDnjcM for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 11:25:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 6D2105F1E7
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:25:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 03111E04FE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:25:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id B438921B46
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:25:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 11:25:41 +0000 (UTC)
From: ASF GitHub Bot (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064259.1492327880000.304968.1492514741736@Atlassian.JIRA>
In-Reply-To: <JIRA.13064259.1492327880000@Atlassian.JIRA>
References: <JIRA.13064259.1492327880000@Atlassian.JIRA> <JIRA.13064259.1492327880472@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11152) camel-ssh - Allow to use message
 headers for username/password
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11152?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15972515#comment-15972515 ] 

ASF GitHub Bot commented on CAMEL-11152:
----------------------------------------

Github user onders86 closed the pull request at:

    https://github.com/apache/camel/pull/1635


> camel-ssh - Allow to use message headers for username/password
> --------------------------------------------------------------
>
>                 Key: CAMEL-11152
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11152
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-ssh
>            Reporter: Claus Ibsen
>            Assignee: onder sezgin
>            Priority: Minor
>             Fix For: 2.19.0
>
>
> See nabble
> http://camel.465427.n5.nabble.com/Camel-SSH-dynamic-values-tp5797435p5797545.html
> In the 
> org.apache.camel.component.ssh.SshHelper#sendExecCommand
> We should allow the exchange to provide a username/password to be used, so you can more dynamic reuse the same ssh endpoint but for different logins.
> Using toD has a drawback of creating a new endpoint per username.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"124","347","2017-04-18 11:38:19+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: Polished example","Return-Path: <commits-return-55720-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6027C186C9
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 11:38:19 +0000 (UTC)
Received: (qmail 25655 invoked by uid 500); 18 Apr 2017 11:38:19 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 25603 invoked by uid 500); 18 Apr 2017 11:38:19 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 25594 invoked by uid 99); 18 Apr 2017 11:38:19 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 11:38:19 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 2C0FDDFC70; Tue, 18 Apr 2017 11:38:19 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <f8b363ce36914d9397d29cac12a2cd88@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Polished example
Date: Tue, 18 Apr 2017 11:38:19 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 4f01b7861 -> bef5ab7ec


Polished example


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/bef5ab7e
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/bef5ab7e
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/bef5ab7e

Branch: refs/heads/master
Commit: bef5ab7ec52a55394ea516dd9836fb62d7cac571
Parents: 4f01b78
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Tue Apr 18 13:38:05 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Tue Apr 18 13:38:12 2017 +0200

----------------------------------------------------------------------
 .../README.adoc                                 | 12 ++++-
 .../services/src/main/bash/consul-run-linux.sh  | 43 ++++++++++++++++++
 .../services/src/main/bash/consul-run-osx.sh    | 46 ++++++++++++++++++++
 .../services/src/main/bash/consul-run.sh        | 42 ------------------
 .../README.adoc                                 |  8 ++++
 .../service/src/main/bash/consul-run-linux.sh   |  3 +-
 .../service/src/main/bash/consul-run-osx.sh     |  3 +-
 7 files changed, 112 insertions(+), 45 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/bef5ab7e/examples/camel-example-spring-boot-servicecall/README.adoc
----------------------------------------------------------------------
diff --git a/examples/camel-example-spring-boot-servicecall/README.adoc b/examples/camel-example-spring-boot-servicecall/README.adoc
index 2a0d097..e02ce31 100644
--- a/examples/camel-example-spring-boot-servicecall/README.adoc
+++ b/examples/camel-example-spring-boot-servicecall/README.adoc
@@ -31,7 +31,8 @@ Using multiple shells:
  - start consul:
 
   $ cd services
-  $ src/main/bash/consul-run.sh
+  $ src/main/bash/consul-run-linx.sh       (for linux)
+  $ src/main/bash/consul-run-osx.sh        (for mac osx)
 
  - start the service-1 service group:
 
@@ -59,6 +60,15 @@ In a new shell:
 
 If you keep calling the http endpoint youll notice they are consumed using a round robin policy and that one of the services registered in consul is not taken into account according to the blacklist.
 
+## Web console
+
+You can open the Consul web console
+
+     http://localhost:8500/ui
+
+Where you can find information about the services and its state.
+     
+
 ## More information
 
 You can find more information about Apache Camel at the website: http://camel.apache.org/

http://git-wip-us.apache.org/repos/asf/camel/blob/bef5ab7e/examples/camel-example-spring-boot-servicecall/services/src/main/bash/consul-run-linux.sh
----------------------------------------------------------------------
diff --git a/examples/camel-example-spring-boot-servicecall/services/src/main/bash/consul-run-linux.sh b/examples/camel-example-spring-boot-servicecall/services/src/main/bash/consul-run-linux.sh
new file mode 100755
index 0000000..aa5dd3f
--- /dev/null
+++ b/examples/camel-example-spring-boot-servicecall/services/src/main/bash/consul-run-linux.sh
@@ -0,0 +1,43 @@
+#!/usr/bin/env bash
+
+CONSUL_VER0.8.1
+CONSUL_ZIPconsul_${CONSUL_VER}_linux_amd64.zip
+
+# cleanup
+rm -rf target/consul-data
+rm -rf target/consul-config
+rm -rf target/consul
+
+mkdir -p target/
+mkdir -p target/consul-data
+mkdir -p target/consul-config
+
+if [ ! -f target/${CONSUL_ZIP} ]; then
+    wget https://releases.hashicorp.com/consul/${CONSUL_VER}/${CONSUL_ZIP} -O target/${CONSUL_ZIP}
+fi
+
+cat > target/consul-config/services.json <<EOF
+{
+  services: [{
+    id: s1i1, name: service-1, tags: [camel, service-call], address: localhost, port: 9011
+  }, {
+    id: s1i2, name: service-1, tags: [camel, service-call], address: localhost, port: 9012
+  }, {
+    id: s1i3, name: service-1, tags: [camel, service-call], address: localhost, port: 9013
+  }]
+}
+EOF
+
+unzip -d target target/${CONSUL_ZIP}
+
+target/consul \
+    agent \
+    -server \
+    -bootstrap \
+    -datacenter camel \
+    -advertise 127.0.0.1 \
+    -bind 0.0.0.0 \
+    -log-level trace \
+    -data-dir target/consul-data \
+    -config-dir target/consul-config \
+    -ui
\ No newline at end of file

http://git-wip-us.apache.org/repos/asf/camel/blob/bef5ab7e/examples/camel-example-spring-boot-servicecall/services/src/main/bash/consul-run-osx.sh
----------------------------------------------------------------------
diff --git a/examples/camel-example-spring-boot-servicecall/services/src/main/bash/consul-run-osx.sh b/examples/camel-example-spring-boot-servicecall/services/src/main/bash/consul-run-osx.sh
new file mode 100755
index 0000000..b3be9e1
--- /dev/null
+++ b/examples/camel-example-spring-boot-servicecall/services/src/main/bash/consul-run-osx.sh
@@ -0,0 +1,46 @@
+#!/usr/bin/env bash
+
+CONSUL_VER0.8.1
+CONSUL_ZIPconsul_${CONSUL_VER}_darwin_amd64.zip
+
+# cleanup
+rm -rf target/consul-data
+rm -rf target/consul-config
+rm -rf target/consul
+
+mkdir -p target/
+mkdir -p target/consul-data
+mkdir -p target/consul-config
+
+
+if [ ! -f target/$CONSUL_ZIP ]; then
+    echo Downloading: https://releases.hashicorp.com/consul/$CONSUL_VER/$CONSUL_ZIP 
+    curl -o target/$CONSUL_ZIP https://releases.hashicorp.com/consul/$CONSUL_VER/$CONSUL_ZIP
+fi
+
+cat > target/consul-config/services.json <<EOF
+{
+  services: [{
+    id: s1i1, name: service-1, tags: [camel, service-call], address: localhost, port: 9011
+  }, {
+    id: s1i2, name: service-1, tags: [camel, service-call], address: localhost, port: 9012
+  }, {
+    id: s1i3, name: service-1, tags: [camel, service-call], address: localhost, port: 9013
+  }]
+}
+EOF
+
+unzip -d target target/$CONSUL_ZIP
+chmod +x target/consul
+
+target/consul \
+    agent \
+    -server \
+    -bootstrap \
+    -datacenter camel \
+    -advertise 127.0.0.1 \
+    -bind 0.0.0.0 \
+    -log-level trace \
+    -data-dir target/consul-data \
+    -config-dir target/consul-config \
+    -ui
\ No newline at end of file

http://git-wip-us.apache.org/repos/asf/camel/blob/bef5ab7e/examples/camel-example-spring-boot-servicecall/services/src/main/bash/consul-run.sh
----------------------------------------------------------------------
diff --git a/examples/camel-example-spring-boot-servicecall/services/src/main/bash/consul-run.sh b/examples/camel-example-spring-boot-servicecall/services/src/main/bash/consul-run.sh
deleted file mode 100755
index bb74d96..0000000
--- a/examples/camel-example-spring-boot-servicecall/services/src/main/bash/consul-run.sh
+++ /dev/null
@@ -1,42 +0,0 @@
-#!/usr/bin/env bash
-
-CONSUL_VER0.7.5
-CONSUL_ZIPconsul_${CONSUL_VER}_linux_amd64.zip
-
-# cleanup
-rm -rf target/consul-data
-rm -rf target/consul-config
-rm -rf target/consul
-
-mkdir -p target/
-mkdir -p target/consul-data
-mkdir -p target/consul-config
-
-if [ ! -f target/${CONSUL_ZIP} ]; then
-    wget https://releases.hashicorp.com/consul/${CONSUL_VER}/${CONSUL_ZIP} -O target/${CONSUL_ZIP}
-fi
-
-cat > target/consul-config/services.json <<EOF
-{
-  services: [{
-    id: s1i1, name: service-1, tags: [camel, service-call], address: localhost, port: 9011
-  }, {
-    id: s1i2, name: service-1, tags: [camel, service-call], address: localhost, port: 9012
-  }, {
-    id: s1i3, name: service-1, tags: [camel, service-call], address: localhost, port: 9013
-  }]
-}
-EOF
-
-unzip -d target target/${CONSUL_ZIP}
-
-target/consul \
-    agent \
-    -server \
-    -bootstrap \
-    -datacenter camel \
-    -advertise 127.0.0.1 \
-    -bind 0.0.0.0 \
-    -log-level trace \
-    -data-dir target/consul-data \
-    -config-dir target/consul-config
\ No newline at end of file

http://git-wip-us.apache.org/repos/asf/camel/blob/bef5ab7e/examples/camel-example-spring-cloud-servicecall/README.adoc
----------------------------------------------------------------------
diff --git a/examples/camel-example-spring-cloud-servicecall/README.adoc b/examples/camel-example-spring-cloud-servicecall/README.adoc
index 0d0fbce..3e66d3b 100644
--- a/examples/camel-example-spring-cloud-servicecall/README.adoc
+++ b/examples/camel-example-spring-cloud-servicecall/README.adoc
@@ -48,6 +48,14 @@ In a new shell:
 
 If you keep calling the http endpoint youll notice they are consumed using a round robin policy and that only the services matching specific tags are consumed.
 
+## Web console
+
+You can open the Consul web console
+
+     http://localhost:8500/ui
+
+Where you can find information about the services and its state.
+
 ## More information
 
 You can find more information about Apache Camel at the website: http://camel.apache.org/

http://git-wip-us.apache.org/repos/asf/camel/blob/bef5ab7e/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-linux.sh
----------------------------------------------------------------------
diff --git a/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-linux.sh b/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-linux.sh
index 14afcfe..c170c04 100755
--- a/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-linux.sh
+++ b/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-linux.sh
@@ -49,4 +49,5 @@ target/consul \
     -bind 0.0.0.0 \
     -log-level trace \
     -data-dir target/consul-data \
-    -config-dir target/consul-config
\ No newline at end of file
+    -config-dir target/consul-config \
+    -ui
\ No newline at end of file

http://git-wip-us.apache.org/repos/asf/camel/blob/bef5ab7e/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-osx.sh
----------------------------------------------------------------------
diff --git a/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-osx.sh b/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-osx.sh
index 4b62282..ff314cc 100755
--- a/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-osx.sh
+++ b/examples/camel-example-spring-cloud-servicecall/service/src/main/bash/consul-run-osx.sh
@@ -52,4 +52,5 @@ target/consul \
     -bind 0.0.0.0 \
     -log-level trace \
     -data-dir target/consul-data \
-    -config-dir target/consul-config
\ No newline at end of file
+    -config-dir target/consul-config \
+    -ui
\ No newline at end of file


"
"125","759","2017-04-18 11:42:51+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1636: Protobuf issue","Return-Path: <dev-return-47397-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6D576186D5
	for <apmail-camel-dev-archive@www.apache.org>; Tue, 18 Apr 2017 11:42:52 +0000 (UTC)
Received: (qmail 30116 invoked by uid 500); 18 Apr 2017 11:42:52 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 30077 invoked by uid 500); 18 Apr 2017 11:42:52 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 30064 invoked by uid 99); 18 Apr 2017 11:42:51 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 11:42:51 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id D3BB3DFC70; Tue, 18 Apr 2017 11:42:51 +0000 (UTC)
From: dmvolod <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
References: <git-pr-1636-camel@git.apache.org>
In-Reply-To: <git-pr-1636-camel@git.apache.org>
Subject: [GitHub] camel pull request #1636: Protobuf issue
Content-Type: text/plain
Message-Id: <20170418114251.D3BB3DFC70@git1-us-west.apache.org>
Date: Tue, 18 Apr 2017 11:42:51 +0000 (UTC)

Github user dmvolod closed the pull request at:

    https://github.com/apache/camel/pull/1636


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"126","1382","2017-04-18 11:58:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Work started] (CAMEL-11161) Service Call : allow to use
 properties to further customize the underlying camel component used to
 implement service-call concepts","Return-Path: <issues-return-41507-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 5C0411876B
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 11:58:44 +0000 (UTC)
Received: (qmail 59042 invoked by uid 500); 18 Apr 2017 11:58:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 59004 invoked by uid 500); 18 Apr 2017 11:58:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 58994 invoked by uid 99); 18 Apr 2017 11:58:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 11:58:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id D060D18966B
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:58:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id eHvSRs0VQFXX for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 11:58:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 86AAF5F405
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:58:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id D1457E04FE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:58:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 87D5321B45
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 11:58:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 11:58:41 +0000 (UTC)
From: Luca Burgazzoli (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064660.1492510699000.305128.1492516721554@Atlassian.JIRA>
In-Reply-To: <JIRA.13064660.1492510699000@Atlassian.JIRA>
References: <JIRA.13064660.1492510699000@Atlassian.JIRA> <JIRA.13064660.1492510699869@jira-lw-us.apache.org>
Subject: [jira] [Work started] (CAMEL-11161) Service Call : allow to use
 properties to further customize the underlying camel component used to
 implement service-call concepts
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11161?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Work on CAMEL-11161 started by Luca Burgazzoli.
-----------------------------------------------
> Service Call : allow to use properties to further customize the underlying camel component used to implement service-call concepts
> ----------------------------------------------------------------------------------------------------------------------------------
>
>                 Key: CAMEL-11161
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11161
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-core
>            Reporter: Luca Burgazzoli
>            Assignee: Luca Burgazzoli
>             Fix For: 2.19.0
>
>
> As today the configuration via dsl of service calls concpetts (i.e. service discovery) is limited to the options we have hard coded into the dsl but it would be nice to leverage the available properties to further customize the underlying components.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"127","1383","2017-04-18 12:13:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11150) camel-solr is removed from readme
 on each full build","Return-Path: <issues-return-41508-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id F26D318822
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 12:13:45 +0000 (UTC)
Received: (qmail 92716 invoked by uid 500); 18 Apr 2017 12:13:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 92675 invoked by uid 500); 18 Apr 2017 12:13:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 92666 invoked by uid 99); 18 Apr 2017 12:13:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 12:13:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 78558C151C
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:13:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id GKzpFxEoxt_b for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 12:13:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 493085FDF3
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:13:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 7FE4CE0821
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:13:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id BF72F21B48
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:13:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 12:13:41 +0000 (UTC)
From: Tomohisa Igarashi (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064021.1492157502000.305203.1492517621782@Atlassian.JIRA>
In-Reply-To: <JIRA.13064021.1492157502000@Atlassian.JIRA>
References: <JIRA.13064021.1492157502000@Atlassian.JIRA> <JIRA.13064021.1492157502203@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11150) camel-solr is removed from readme
 on each full build
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11150?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15972564#comment-15972564 ] 

Tomohisa Igarashi commented on CAMEL-11150:
-------------------------------------------

Thanks for the hints Claus! Ill look at it tomorrow.
BTW its weird about camel-solr. It seems that the solr.json file is not generated at all in my local build. Not sure why it happens here but doesnt there.

> camel-solr is removed from readme on each full build
> ----------------------------------------------------
>
>                 Key: CAMEL-11150
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11150
>             Project: Camel
>          Issue Type: Task
>          Components: documentation
>            Reporter: Tomohisa Igarashi
>            Assignee: Tomohisa Igarashi
>            Priority: Minor
>
> On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md which shouldnt happen.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"128","1384","2017-04-18 12:13:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-11150) camel-solr/camel-ignite is removed
 from readme on each full build","Return-Path: <issues-return-41509-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0E4C918823
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 12:13:46 +0000 (UTC)
Received: (qmail 92833 invoked by uid 500); 18 Apr 2017 12:13:46 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 92791 invoked by uid 500); 18 Apr 2017 12:13:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 92676 invoked by uid 99); 18 Apr 2017 12:13:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 12:13:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 774BBC1572
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:13:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id KBuYcMsn2jTM for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 12:13:45 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 6BF1660F6C
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:13:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 29CEDE0875
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:13:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id C8A9721B53
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:13:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 12:13:41 +0000 (UTC)
From: Tomohisa Igarashi (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064021.1492157502000.305208.1492517621820@Atlassian.JIRA>
In-Reply-To: <JIRA.13064021.1492157502000@Atlassian.JIRA>
References: <JIRA.13064021.1492157502000@Atlassian.JIRA> <JIRA.13064021.1492157502203@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-11150) camel-solr/camel-ignite is removed
 from readme on each full build
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11150?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Tomohisa Igarashi updated CAMEL-11150:
--------------------------------------
    Summary: camel-solr/camel-ignite is removed from readme on each full build  (was: camel-solr is removed from readme on each full build)

> camel-solr/camel-ignite is removed from readme on each full build
> -----------------------------------------------------------------
>
>                 Key: CAMEL-11150
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11150
>             Project: Camel
>          Issue Type: Task
>          Components: documentation
>            Reporter: Tomohisa Igarashi
>            Assignee: Tomohisa Igarashi
>            Priority: Minor
>
> On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md which shouldnt happen.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"129","760","2017-04-18 12:14:39+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1637: camel-grpc: Check if the OS supports the protoc/gr...","Return-Path: <dev-return-47398-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 7161418829
	for <apmail-camel-dev-archive@www.apache.org>; Tue, 18 Apr 2017 12:14:40 +0000 (UTC)
Received: (qmail 93276 invoked by uid 500); 18 Apr 2017 12:14:40 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 93227 invoked by uid 500); 18 Apr 2017 12:14:40 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 93214 invoked by uid 99); 18 Apr 2017 12:14:39 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 12:14:39 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id D7F15DFB92; Tue, 18 Apr 2017 12:14:39 +0000 (UTC)
From: dmvolod <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
Message-ID: <git-pr-1637-camel@git.apache.org>
Subject: [GitHub] camel pull request #1637: camel-grpc: Check if the OS supports the protoc/gr...
Content-Type: text/plain
Date: Tue, 18 Apr 2017 12:14:39 +0000 (UTC)

GitHub user dmvolod opened a pull request:

    https://github.com/apache/camel/pull/1637

    camel-grpc: Check if the OS supports the protoc/grpc generator plugin

    Check if the running OS platform supports the protobuf generator plugin.
    If the platform doesnt support, the protobuf test code generation, their  assembly and launch will be skipped. This prevents fails when build without fastinstall profile will run on unsupported by protoc plugin platform.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/dmvolod/camel grpc-issue

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/camel/pull/1637.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1637
    
----
commit 1d82e2074266f2ae75abe79128344acc5ebb88c9
Author: Dmitry Volodin <dmvolod@gmail.com>
Date:   2017-04-18T12:10:44Z

    camel-grpc: Check if the OS supports the protobuf generator plugin

----


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"130","1385","2017-04-18 12:14:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11162) camel-rest - Should we add
 content-type check for server side","Return-Path: <issues-return-41510-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id AE6001882A
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 12:14:43 +0000 (UTC)
Received: (qmail 93713 invoked by uid 500); 18 Apr 2017 12:14:43 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 93675 invoked by uid 500); 18 Apr 2017 12:14:43 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 93666 invoked by uid 99); 18 Apr 2017 12:14:43 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 12:14:43 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 3D8FF18967B
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:14:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id nVl3A5gGiMSb for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 12:14:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 5A17F5F1E7
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:14:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id E4C3EE04FE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:14:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 9C55821B44
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:14:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 12:14:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064684.1492517629000.305209.1492517681637@Atlassian.JIRA>
In-Reply-To: <JIRA.13064684.1492517629000@Atlassian.JIRA>
References: <JIRA.13064684.1492517629000@Atlassian.JIRA> <JIRA.13064684.1492517629119@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11162) camel-rest - Should we add
 content-type check for server side
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Claus Ibsen created CAMEL-11162:
-----------------------------------

             Summary: camel-rest - Should we add content-type check for server side
                 Key: CAMEL-11162
                 URL: https://issues.apache.org/jira/browse/CAMEL-11162
             Project: Camel
          Issue Type: Improvement
          Components: camel-core
            Reporter: Claus Ibsen
             Fix For: 2.20.0


For example setting up a rest-dsl which consumes application/json and then a client calls it with text/plain or application/xml, should we then automatic let rest consumer detect this and return a HTTP status 415 (unsuported media type)

Not all the HTTP server components does this today, eg jetty etc. But when using restlet which is more natual REST it would do so.

We could then add an option to turn this on|off. 

The check is only if the media-type is within the list that may have been specified on consumes in the rest-dsl.




--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"131","1386","2017-04-18 12:17:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed
 from readme on each full build","Return-Path: <issues-return-41511-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0A7D81885C
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 12:17:44 +0000 (UTC)
Received: (qmail 440 invoked by uid 500); 18 Apr 2017 12:17:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 401 invoked by uid 500); 18 Apr 2017 12:17:43 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 388 invoked by uid 99); 18 Apr 2017 12:17:43 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 12:17:43 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 904D6C192D
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:17:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id 4_zzW3cCmKy4 for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 12:17:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id CA96D60DB8
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:17:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 44579E081A
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:17:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 9814821B46
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:17:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 12:17:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064021.1492157502000.305218.1492517861621@Atlassian.JIRA>
In-Reply-To: <JIRA.13064021.1492157502000@Atlassian.JIRA>
References: <JIRA.13064021.1492157502000@Atlassian.JIRA> <JIRA.13064021.1492157502203@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed
 from readme on each full build
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11150?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15972567#comment-15972567 ] 

Claus Ibsen commented on CAMEL-11150:
-------------------------------------

Is there a apt-error log file in the camel-solr directory ?

> camel-solr/camel-ignite is removed from readme on each full build
> -----------------------------------------------------------------
>
>                 Key: CAMEL-11150
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11150
>             Project: Camel
>          Issue Type: Task
>          Components: documentation
>            Reporter: Tomohisa Igarashi
>            Assignee: Tomohisa Igarashi
>            Priority: Minor
>
> On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md which shouldnt happen.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"132","348","2017-04-18 12:26:07+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: camel-grpc: Check if the OS supports the protobuf
 generator plugin","Return-Path: <commits-return-55721-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 1FAB8188BA
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 12:26:08 +0000 (UTC)
Received: (qmail 17502 invoked by uid 500); 18 Apr 2017 12:26:08 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 17445 invoked by uid 500); 18 Apr 2017 12:26:08 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 17436 invoked by uid 99); 18 Apr 2017 12:26:08 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 12:26:08 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id E288BDFB92; Tue, 18 Apr 2017 12:26:07 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <29a67d48337041cb9a58ce5068414454@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: camel-grpc: Check if the OS supports the protobuf
 generator plugin
Date: Tue, 18 Apr 2017 12:26:07 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master bef5ab7ec -> 1d82e2074


camel-grpc: Check if the OS supports the protobuf generator plugin

Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/1d82e207
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/1d82e207
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/1d82e207

Branch: refs/heads/master
Commit: 1d82e2074266f2ae75abe79128344acc5ebb88c9
Parents: bef5ab7
Author: Dmitry Volodin <dmvolod@gmail.com>
Authored: Tue Apr 18 15:10:44 2017 +0300
Committer: Dmitry Volodin <dmvolod@gmail.com>
Committed: Tue Apr 18 15:10:44 2017 +0300

----------------------------------------------------------------------
 components/camel-grpc/pom.xml | 63 ++++++++++++++++++++++++++++++++++----
 1 file changed, 57 insertions(+), 6 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/1d82e207/components/camel-grpc/pom.xml
----------------------------------------------------------------------
diff --git a/components/camel-grpc/pom.xml b/components/camel-grpc/pom.xml
index 4d45f0c..af65988 100644
--- a/components/camel-grpc/pom.xml
+++ b/components/camel-grpc/pom.xml
@@ -16,7 +16,8 @@
   limitations under the License.
 -->
 <project xmlnshttp://maven.apache.org/POM/4.0.0 xmlns:xsihttp://www.w3.org/2001/XMLSchema-instance
-  xsi:schemaLocationhttp://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd>
+         xsi:schemaLocationhttp://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd>
+
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
@@ -29,7 +30,7 @@
   <packaging>jar</packaging>
   <name>Camel :: gRPC</name>
   <description>Camel component for gRPC (Remote Procedure Call) support</description>
-  
+
   <properties>
     <camel.osgi.export.pkg>org.apache.camel.component.grpc.*;${camel.osgi.version}</camel.osgi.export.pkg>
     <camel.osgi.export.service>org.apache.camel.spi.ComponentResolver;componentgrpc</camel.osgi.export.service>
@@ -55,7 +56,7 @@
       <artifactId>grpc-stub</artifactId>
       <version>${grpc-version}</version>
     </dependency>
-    
+
     <dependency>
       <groupId>org.springframework</groupId>
       <artifactId>spring-core</artifactId>
@@ -90,7 +91,7 @@
       <scope>test</scope>
     </dependency>
   </dependencies>
-  
+
   <build>
     <extensions>
       <!-- Operating system and CPU architecture detection extension -->
@@ -100,8 +101,34 @@
         <version>1.4.1.Final</version>
       </extension>
     </extensions>
-    
+
     <plugins>
+      <!--
+        Check if the running OS platform supports the protobuf generator plugin. 
+        If the platform doesnt support, the protobuf test code generation, their 
+        assembly and launch will be skipped 
+        Supported platforms are: 
+        - Linux (x86 32 and 64-bit)
+        - Windows (x86 32 and 64-bit)
+        - OSX (x86 32 and 64-bit)
+      -->
+      <plugin>
+        <groupId>org.codehaus.gmaven</groupId>
+        <artifactId>gmaven-plugin</artifactId>
+        <version>${gmaven-plugin-version}</version>
+        <executions>
+          <execution>
+            <phase>validate</phase>
+            <goals>
+              <goal>execute</goal>
+            </goals>
+            <configuration>
+              <source><![CDATA[pom.properties[skip-test]pom.properties[os.detected.classifier].matches(^.*?(linux|windows|osx)-x86.*$) ? false : true;]]></source>
+            </configuration>
+          </execution>
+        </executions>
+      </plugin>
+
       <!-- gRPC and protobuf Java code generator plugin -->
       <plugin>
         <groupId>org.xolstice.maven.plugins</groupId>
@@ -111,6 +138,7 @@
           <protocArtifact>com.google.protobuf:protoc:${protobuf-version}:exe:${os.detected.classifier}</protocArtifact>
           <pluginId>grpc-java</pluginId>
           <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc-version}:exe:${os.detected.classifier}</pluginArtifact>
+          <skip>${skip-test}</skip>
         </configuration>
         <executions>
           <execution>
@@ -121,7 +149,30 @@
           </execution>
         </executions>
       </plugin>
+
+      <plugin>
+        <artifactId>maven-compiler-plugin</artifactId>
+        <executions>
+          <execution>
+            <id>default-testCompile</id>
+            <phase>test-compile</phase>
+            <goals>
+              <goal>testCompile</goal>
+            </goals>
+            <configuration>
+              <skip>${skip-test}</skip>
+            </configuration>
+          </execution>
+        </executions>
+      </plugin>
+
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-surefire-plugin</artifactId>
+        <configuration>
+          <skipTests>${skip-test}</skipTests>
+        </configuration>
+      </plugin>
     </plugins>
   </build>
-  
 </project>


"
"133","761","2017-04-18 12:26:22+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1637: camel-grpc: Check if the OS supports the protoc/gr...","Return-Path: <dev-return-47399-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id F17A1188BB
	for <apmail-camel-dev-archive@www.apache.org>; Tue, 18 Apr 2017 12:26:22 +0000 (UTC)
Received: (qmail 17627 invoked by uid 500); 18 Apr 2017 12:26:22 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 17577 invoked by uid 500); 18 Apr 2017 12:26:22 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 17566 invoked by uid 99); 18 Apr 2017 12:26:22 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 12:26:22 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 5E6E2DFDAC; Tue, 18 Apr 2017 12:26:22 +0000 (UTC)
From: asfgit <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
References: <git-pr-1637-camel@git.apache.org>
In-Reply-To: <git-pr-1637-camel@git.apache.org>
Subject: [GitHub] camel pull request #1637: camel-grpc: Check if the OS supports the protoc/gr...
Content-Type: text/plain
Message-Id: <20170418122622.5E6E2DFDAC@git1-us-west.apache.org>
Date: Tue, 18 Apr 2017 12:26:22 +0000 (UTC)

Github user asfgit closed the pull request at:

    https://github.com/apache/camel/pull/1637


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"134","350","2017-04-18 12:27:16+00:00","acosentino@apache.org","['commits@camel.apache.org']","[1/2] camel git commit: Upgrade Kubernetes Model to version 1.0.72","Return-Path: <commits-return-55722-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 54C73188C8
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 12:27:17 +0000 (UTC)
Received: (qmail 18859 invoked by uid 500); 18 Apr 2017 12:27:16 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 18775 invoked by uid 500); 18 Apr 2017 12:27:16 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 18760 invoked by uid 99); 18 Apr 2017 12:27:16 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 12:27:16 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id B87FDDFDAC; Tue, 18 Apr 2017 12:27:16 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: acosentino@apache.org
To: commits@camel.apache.org
Date: Tue, 18 Apr 2017 12:27:16 -0000
Message-Id: <e0df644a013f4f298599ab186e64347d@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [1/2] camel git commit: Upgrade Kubernetes Model to version 1.0.72

Repository: camel
Updated Branches:
  refs/heads/master 1d82e2074 -> 915b53685


Upgrade Kubernetes Model to version 1.0.72


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/49ae86c4
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/49ae86c4
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/49ae86c4

Branch: refs/heads/master
Commit: 49ae86c4868b2fc82ce094efe0eac90f1f966140
Parents: 1d82e20
Author: Andrea Cosentino <ancosen@gmail.com>
Authored: Tue Apr 18 14:21:15 2017 +0200
Committer: Andrea Cosentino <ancosen@gmail.com>
Committed: Tue Apr 18 14:26:42 2017 +0200

----------------------------------------------------------------------
 parent/pom.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/49ae86c4/parent/pom.xml
----------------------------------------------------------------------
diff --git a/parent/pom.xml b/parent/pom.xml
index d5954e8..99168ff 100644
--- a/parent/pom.xml
+++ b/parent/pom.xml
@@ -405,7 +405,7 @@
     <kie-version>6.5.0.Final</kie-version>
     <krati-version>0.4.9</krati-version>
     <kubernetes-client-version>2.2.13</kubernetes-client-version>
-    <kubernetes-model-version>1.0.67</kubernetes-model-version>
+    <kubernetes-model-version>1.0.72</kubernetes-model-version>
     <kxml2-bundle-version>2.3.0_3</kxml2-bundle-version>
     <leveldbjni-version>1.8</leveldbjni-version>
     <libphonenumber-version>8.3.3</libphonenumber-version>


"
"135","349","2017-04-18 12:27:17+00:00","acosentino@apache.org","['commits@camel.apache.org']","[2/2] camel git commit: Upgrade Kubernetes Client to version 2.2.14","Return-Path: <commits-return-55723-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 038DB188C7
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 12:27:17 +0000 (UTC)
Received: (qmail 18898 invoked by uid 500); 18 Apr 2017 12:27:16 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 18780 invoked by uid 500); 18 Apr 2017 12:27:16 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 18763 invoked by uid 99); 18 Apr 2017 12:27:16 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 12:27:16 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id BB2E0DFDCD; Tue, 18 Apr 2017 12:27:16 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: acosentino@apache.org
To: commits@camel.apache.org
Date: Tue, 18 Apr 2017 12:27:17 -0000
Message-Id: <cc4f4a1bbbdb4c96aa1ddfae3862d806@git.apache.org>
In-Reply-To: <e0df644a013f4f298599ab186e64347d@git.apache.org>
References: <e0df644a013f4f298599ab186e64347d@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [2/2] camel git commit: Upgrade Kubernetes Client to version 2.2.14

Upgrade Kubernetes Client to version 2.2.14


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/915b5368
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/915b5368
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/915b5368

Branch: refs/heads/master
Commit: 915b5368566d250dad2e58b4b6b9813bed335a61
Parents: 49ae86c
Author: Andrea Cosentino <ancosen@gmail.com>
Authored: Tue Apr 18 14:21:36 2017 +0200
Committer: Andrea Cosentino <ancosen@gmail.com>
Committed: Tue Apr 18 14:26:43 2017 +0200

----------------------------------------------------------------------
 parent/pom.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/915b5368/parent/pom.xml
----------------------------------------------------------------------
diff --git a/parent/pom.xml b/parent/pom.xml
index 99168ff..b3284be 100644
--- a/parent/pom.xml
+++ b/parent/pom.xml
@@ -404,7 +404,7 @@
     <karaf4-version>4.1.1</karaf4-version>
     <kie-version>6.5.0.Final</kie-version>
     <krati-version>0.4.9</krati-version>
-    <kubernetes-client-version>2.2.13</kubernetes-client-version>
+    <kubernetes-client-version>2.2.14</kubernetes-client-version>
     <kubernetes-model-version>1.0.72</kubernetes-model-version>
     <kxml2-bundle-version>2.3.0_3</kxml2-bundle-version>
     <leveldbjni-version>1.8</leveldbjni-version>


"
"136","1387","2017-04-18 12:34:42+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed
 from readme on each full build","Return-Path: <issues-return-41512-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 03DFC18931
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 12:34:45 +0000 (UTC)
Received: (qmail 30992 invoked by uid 500); 18 Apr 2017 12:34:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 30950 invoked by uid 500); 18 Apr 2017 12:34:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 30941 invoked by uid 99); 18 Apr 2017 12:34:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 12:34:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 804E41A0610
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:34:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id lSHC2WEmozp2 for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 12:34:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 9C03A5FC96
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:34:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 10CA2E081E
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:34:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 02F6A21B47
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:34:42 +0000 (UTC)
Date: Tue, 18 Apr 2017 12:34:42 +0000 (UTC)
From: Tomohisa Igarashi (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064021.1492157502000.305299.1492518882010@Atlassian.JIRA>
In-Reply-To: <JIRA.13064021.1492157502000@Atlassian.JIRA>
References: <JIRA.13064021.1492157502000@Atlassian.JIRA> <JIRA.13064021.1492157502203@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed
 from readme on each full build
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11150?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15972585#comment-15972585 ] 

Tomohisa Igarashi commented on CAMEL-11150:
-------------------------------------------

Nope, I do see one in camel-ignite dir, but not in camel-solr. Ill check maven log (maybe with -X) for the solr.

> camel-solr/camel-ignite is removed from readme on each full build
> -----------------------------------------------------------------
>
>                 Key: CAMEL-11150
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11150
>             Project: Camel
>          Issue Type: Task
>          Components: documentation
>            Reporter: Tomohisa Igarashi
>            Assignee: Tomohisa Igarashi
>            Priority: Minor
>
> On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md which shouldnt happen.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"137","351","2017-04-18 12:35:02+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-11144: Add components to component table,
 add description","Return-Path: <commits-return-55724-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 69CC218933
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 12:35:02 +0000 (UTC)
Received: (qmail 31294 invoked by uid 500); 18 Apr 2017 12:35:02 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 31240 invoked by uid 500); 18 Apr 2017 12:35:02 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 31231 invoked by uid 99); 18 Apr 2017 12:35:02 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 12:35:02 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 31D7ADFBC8; Tue, 18 Apr 2017 12:35:02 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <31404b92b08745528cd711f567adc0e4@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-11144: Add components to component table,
 add description
Date: Tue, 18 Apr 2017 12:35:02 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 915b53685 -> 13d16f1db


CAMEL-11144: Add components to component table, add description

Signed-off-by: Jens Reimann <jreimann@redhat.com>

Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/13d16f1d
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/13d16f1d
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/13d16f1d

Branch: refs/heads/master
Commit: 13d16f1dbf6e5da345a07e3852a2790ea1845889
Parents: 915b536
Author: Jens Reimann <jreimann@redhat.com>
Authored: Fri Apr 14 10:42:43 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Tue Apr 18 14:32:50 2017 +0200

----------------------------------------------------------------------
 .../camel/component/milo/client/MiloClientEndpoint.java       | 7 +++++--
 .../camel/component/milo/server/MiloServerEndpoint.java       | 5 ++---
 components/readme.adoc                                        | 4 ++--
 .../client/springboot/MiloClientComponentConfiguration.java   | 3 ++-
 .../server/springboot/MiloServerComponentConfiguration.java   | 2 +-
 5 files changed, 12 insertions(+), 9 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/13d16f1d/components/camel-milo/src/main/java/org/apache/camel/component/milo/client/MiloClientEndpoint.java
----------------------------------------------------------------------
diff --git a/components/camel-milo/src/main/java/org/apache/camel/component/milo/client/MiloClientEndpoint.java b/components/camel-milo/src/main/java/org/apache/camel/component/milo/client/MiloClientEndpoint.java
index 371b6a6..ba07ea4 100644
--- a/components/camel-milo/src/main/java/org/apache/camel/component/milo/client/MiloClientEndpoint.java
+++ b/components/camel-milo/src/main/java/org/apache/camel/component/milo/client/MiloClientEndpoint.java
@@ -30,8 +30,11 @@ import org.apache.camel.spi.UriParam;
 import org.apache.camel.spi.UriPath;
 import org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId;
 
-@UriEndpoint(firstVersion  2.19.0, scheme  milo-client, syntax  milo-client:endpointUri, title  Milo based OPC UA Client,
-    consumerClass  MiloClientConsumer.class, label  iot)
+/**
+ * Connect to OPC UA servers using the binary protocol for acquiring telemetry
+ * data
+ */
+@UriEndpoint(firstVersion  2.19.0, scheme  milo-client, syntax  milo-client:endpointUri, title  Milo based OPC UA Client, consumerClass  MiloClientConsumer.class, label  iot)
 public class MiloClientEndpoint extends DefaultEndpoint implements MiloClientItemConfiguration {
 
     /**

http://git-wip-us.apache.org/repos/asf/camel/blob/13d16f1d/components/camel-milo/src/main/java/org/apache/camel/component/milo/server/MiloServerEndpoint.java
----------------------------------------------------------------------
diff --git a/components/camel-milo/src/main/java/org/apache/camel/component/milo/server/MiloServerEndpoint.java b/components/camel-milo/src/main/java/org/apache/camel/component/milo/server/MiloServerEndpoint.java
index 4beeb72..a07962d 100644
--- a/components/camel-milo/src/main/java/org/apache/camel/component/milo/server/MiloServerEndpoint.java
+++ b/components/camel-milo/src/main/java/org/apache/camel/component/milo/server/MiloServerEndpoint.java
@@ -28,10 +28,9 @@ import org.apache.camel.spi.UriEndpoint;
 import org.apache.camel.spi.UriPath;
 
 /**
- * OPC UA Server based endpoint
+ * Make telemetry data available as an OPC UA server
  */
-@UriEndpoint(firstVersion  2.19.0, scheme  milo-server, syntax  milo-server:itemId, title  OPC UA Server,
-    consumerClass  MiloServerConsumer.class, label  iot)
+@UriEndpoint(firstVersion  2.19.0, scheme  milo-server, syntax  milo-server:itemId, title  OPC UA Server, consumerClass  MiloServerConsumer.class, label  iot)
 public class MiloServerEndpoint extends DefaultEndpoint {
 
     @UriPath

http://git-wip-us.apache.org/repos/asf/camel/blob/13d16f1d/components/readme.adoc
----------------------------------------------------------------------
diff --git a/components/readme.adoc b/components/readme.adoc
index f5734d4..fbf16b9 100644
--- a/components/readme.adoc
+++ b/components/readme.adoc
@@ -393,7 +393,7 @@ Number of Components: 231 in 184 JAR artifacts (14 deprecated)
 `metrics:metricsType:metricsName` | 2.14 | To collect various metrics directly from Camel routes using the DropWizard metrics library.
 
 | link:camel-milo/src/main/docs/milo-client-component.adoc[Milo based OPC UA Client] (camel-milo) +
-`milo-client:endpointUri` | 2.19 | Camel OPC UA support
+`milo-client:endpointUri` | 2.19 | Connect to OPC UA servers using the binary protocol for acquiring telemetry data
 
 | link:camel-mina/src/main/docs/mina-component.adoc[Mina] (camel-mina) +
 `mina:protocol:host:port` | 1.0 | *deprecated* Socket level networking using TCP or UDP with the Apache Mina 1.x library.
@@ -456,7 +456,7 @@ Number of Components: 231 in 184 JAR artifacts (14 deprecated)
 `olingo4:apiName/methodName` | 2.19 | Communicates with OData 4.0 services using Apache Olingo OData API.
 
 | link:camel-milo/src/main/docs/milo-server-component.adoc[OPC UA Server] (camel-milo) +
-`milo-server:itemId` | 2.19 | OPC UA Server based endpoint
+`milo-server:itemId` | 2.19 | Make telemetry data available as an OPC UA server
 
 | link:camel-openshift/src/main/docs/openshift-component.adoc[OpenShift] (camel-openshift) +
 `openshift:clientId` | 2.14 | *deprecated* To manage your Openshift 2.x applications.

http://git-wip-us.apache.org/repos/asf/camel/blob/13d16f1d/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentConfiguration.java
index 7597469..ad0ebed 100644
--- a/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentConfiguration.java
@@ -19,7 +19,8 @@ package org.apache.camel.component.milo.client.springboot;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
- * Camel OPC UA support
+ * Connect to OPC UA servers using the binary protocol for acquiring telemetry
+ * data
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */

http://git-wip-us.apache.org/repos/asf/camel/blob/13d16f1d/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentConfiguration.java
index 0aee3db..14745d8 100644
--- a/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentConfiguration.java
@@ -29,7 +29,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
 
 /**
- * OPC UA Server based endpoint
+ * Make telemetry data available as an OPC UA server
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */


"
"138","1388","2017-04-18 12:40:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Closed] (CAMEL-11161) Service Call : allow to use
 properties to further customize the underlying camel component used to
 implement service-call concepts","Return-Path: <issues-return-41513-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id B453D18971
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 12:40:43 +0000 (UTC)
Received: (qmail 39180 invoked by uid 500); 18 Apr 2017 12:40:43 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 39139 invoked by uid 500); 18 Apr 2017 12:40:43 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 39130 invoked by uid 99); 18 Apr 2017 12:40:43 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 12:40:43 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 3FB411857B9
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:40:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id LcGVvQjE8gdN for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 12:40:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 4FFD160E2E
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:40:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id D2A72E081A
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:40:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 893E821B45
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 12:40:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 12:40:41 +0000 (UTC)
From: Luca Burgazzoli (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064660.1492510699000.305325.1492519241560@Atlassian.JIRA>
In-Reply-To: <JIRA.13064660.1492510699000@Atlassian.JIRA>
References: <JIRA.13064660.1492510699000@Atlassian.JIRA> <JIRA.13064660.1492510699869@jira-lw-us.apache.org>
Subject: [jira] [Closed] (CAMEL-11161) Service Call : allow to use
 properties to further customize the underlying camel component used to
 implement service-call concepts
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11161?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Luca Burgazzoli closed CAMEL-11161.
-----------------------------------
    Resolution: Invalid

Better have 1 to 1 mapping to options supported by the service call so you can have type-safe completion in ide and validation

> Service Call : allow to use properties to further customize the underlying camel component used to implement service-call concepts
> ----------------------------------------------------------------------------------------------------------------------------------
>
>                 Key: CAMEL-11161
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11161
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-core
>            Reporter: Luca Burgazzoli
>            Assignee: Luca Burgazzoli
>             Fix For: 2.19.0
>
>
> As today the configuration via dsl of service calls concpetts (i.e. service discovery) is limited to the options we have hard coded into the dsl but it would be nice to leverage the available properties to further customize the underlying components.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"139","1866","2017-04-18 05:53:34-07:00","ancil.hameed@gmail.com","['users@camel.apache.org']","Active MQ; Put Soap Request in Active MQ and get back SOAP response","Return-Path: <users-return-65349-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 90EDA18F28
	for <apmail-camel-users-archive@www.apache.org>; Tue, 18 Apr 2017 14:06:32 +0000 (UTC)
Received: (qmail 3720 invoked by uid 500); 18 Apr 2017 14:06:32 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 3678 invoked by uid 500); 18 Apr 2017 14:06:32 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Delivered-To: moderator for users@camel.apache.org
Received: (qmail 71963 invoked by uid 99); 18 Apr 2017 12:53:39 -0000
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 3.486
X-Spam-Level: ***
X-Spam-Status: No, score3.486 tagged_above-999 required6.31
	tests[DKIM_ADSP_CUSTOM_MED0.001, NML_ADSP_CUSTOM_MED1.2,
	RCVD_IN_DNSWL_NONE-0.0001, SPF_SOFTFAIL0.972, URI_HEX1.313]
	autolearndisabled
Date: Tue, 18 Apr 2017 05:53:34 -0700 (MST)
From: Ancil hameed <ancil.hameed@gmail.com>
To: users@camel.apache.org
Message-ID: <1492520014899-5797816.post@n5.nabble.com>
Subject: Active MQ; Put Soap Request in Active MQ and get back SOAP response
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

I working on JBoss Fuse, I want to put my SOAP request in Active MQ Queue.
After putting SOAP request in Queue I want a response sent back to my SOAP
request.

Sample Code snippet: Below is my camel context, i have replace < > with ( )

(cxf:cxfEndpoint    addresshttp://localhost:8181/cxf/hello
idSOAPInput serviceClasscom.ws.demo.HelloWorld/)
(bean classcom.ws.demo.SoapResProcessor idsoapResProcessor/) 
(camelContext idcamelContext 
xmlnshttp://camel.apache.org/schema/spring)
(route idroute1 streamCachetrue)
(from idsampleFrom uricxf:bean:SOAPInput?
dataFormatPAYLOAD&amp;exchangePatternInOut/)
(when idwhenBatch)
(xpath)starts-with(substring-after((/v1:processMessageRequest/name/text()), 
DEST_NAME), Sample)(/xpath)`enter code here`
(to idtoSampleQ uriactivemq:queue:SAMPLEQ?jmsMessageTypeText/)
(process idsoapResProcess refsoapResProcessor/)
(/when)




--
View this message in context: http://camel.465427.n5.nabble.com/Active-MQ-Put-Soap-Request-in-Active-MQ-and-get-back-SOAP-response-tp5797816.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"140","1389","2017-04-18 13:15:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11163) Add @Generated annotation in REST
 DSL Swagger generated code","Return-Path: <issues-return-41514-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id F370618B9D
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 13:15:44 +0000 (UTC)
Received: (qmail 45697 invoked by uid 500); 18 Apr 2017 13:15:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 45656 invoked by uid 500); 18 Apr 2017 13:15:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 45643 invoked by uid 99); 18 Apr 2017 13:15:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 13:15:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 6D070C0027
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 13:15:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id 4KMzXDJVSABw for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 13:15:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 2274A5FDFD
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 13:15:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 76BF1E0874
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 13:15:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id D9C5921B51
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 13:15:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 13:15:41 +0000 (UTC)
From: Zoran Regvart (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064693.1492521308000.305569.1492521341890@Atlassian.JIRA>
In-Reply-To: <JIRA.13064693.1492521308000@Atlassian.JIRA>
References: <JIRA.13064693.1492521308000@Atlassian.JIRA> <JIRA.13064693.1492521308634@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11163) Add @Generated annotation in REST
 DSL Swagger generated code
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Zoran Regvart created CAMEL-11163:
-------------------------------------

             Summary: Add @Generated annotation in REST DSL Swagger generated code
                 Key: CAMEL-11163
                 URL: https://issues.apache.org/jira/browse/CAMEL-11163
             Project: Camel
          Issue Type: Improvement
          Components: tooling
            Reporter: Zoran Regvart
            Assignee: Zoran Regvart
            Priority: Trivial


REST DSL Swagger code generation should add {{@Generated}} annotation to the source code this will help IDEs and code analysis tools to treat the generated code as generated.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"141","352","2017-04-18 13:17:12+00:00","zregvart@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-11163 Add @Generated annotation in REST D...","Return-Path: <commits-return-55725-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id DB17918BAB
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 13:17:12 +0000 (UTC)
Received: (qmail 47153 invoked by uid 500); 18 Apr 2017 13:17:12 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 47099 invoked by uid 500); 18 Apr 2017 13:17:12 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 47090 invoked by uid 99); 18 Apr 2017 13:17:12 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 13:17:12 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 53C7FDFBB7; Tue, 18 Apr 2017 13:17:12 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Message-Id: <694d96e31ace475a9426b02ad8bcbfff@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-11163 Add @Generated annotation in REST D...
Date: Tue, 18 Apr 2017 13:17:12 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 13d16f1db -> ff463456a


CAMEL-11163 Add @Generated annotation in REST D...

SL Swagger generated code

Adds the `@Generated` annotation to the generated source code of
`RouteBuilder` implementations. This way IDEs and source code analysis
tools know that the code was generated.


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/ff463456
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/ff463456
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/ff463456

Branch: refs/heads/master
Commit: ff463456afb5a66b9576806311deb9737a00c6c7
Parents: 13d16f1
Author: Zoran Regvart <zregvart@apache.org>
Authored: Tue Apr 18 15:08:08 2017 +0200
Committer: Zoran Regvart <zregvart@apache.org>
Committed: Tue Apr 18 15:17:02 2017 +0200

----------------------------------------------------------------------
 .../swagger/RestDslSourceCodeGenerator.java        | 17 +++++++++++++++++
 .../generator/swagger/RestDslGeneratorTest.java    | 10 +++++++---
 .../src/test/resources/MyRestRoute.txt             |  5 +++++
 .../src/test/resources/SwaggerPetstore.txt         |  5 +++++
 4 files changed, 34 insertions(+), 3 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/ff463456/tooling/swagger-rest-dsl-generator/src/main/java/org/apache/camel/generator/swagger/RestDslSourceCodeGenerator.java
----------------------------------------------------------------------
diff --git a/tooling/swagger-rest-dsl-generator/src/main/java/org/apache/camel/generator/swagger/RestDslSourceCodeGenerator.java b/tooling/swagger-rest-dsl-generator/src/main/java/org/apache/camel/generator/swagger/RestDslSourceCodeGenerator.java
index cd27c3b..bbc4b22 100644
--- a/tooling/swagger-rest-dsl-generator/src/main/java/org/apache/camel/generator/swagger/RestDslSourceCodeGenerator.java
+++ b/tooling/swagger-rest-dsl-generator/src/main/java/org/apache/camel/generator/swagger/RestDslSourceCodeGenerator.java
@@ -17,11 +17,14 @@
 package org.apache.camel.generator.swagger;
 
 import java.io.IOException;
+import java.time.Instant;
 import java.util.function.Function;
 import java.util.stream.Collector;
 
+import javax.annotation.Generated;
 import javax.lang.model.element.Modifier;
 
+import com.squareup.javapoet.AnnotationSpec;
 import com.squareup.javapoet.JavaFile;
 import com.squareup.javapoet.MethodSpec;
 import com.squareup.javapoet.TypeSpec;
@@ -43,6 +46,8 @@ public abstract class RestDslSourceCodeGenerator<T> extends RestDslGenerator<Res
 
     private Function<Swagger, String> classNameGenerator  RestDslSourceCodeGenerator::generateClassName;
 
+    private Instant generated  Instant.now();
+
     private String indent  DEFAULT_INDENT;
 
     private Function<Swagger, String> packageNameGenerator  RestDslSourceCodeGenerator::generatePackageName;
@@ -85,6 +90,10 @@ public abstract class RestDslSourceCodeGenerator<T> extends RestDslGenerator<Res
         return emitter.result();
     }
 
+    Instant generated() {
+        return generated;
+    }
+
     JavaFile generateSourceCode() {
         final MethodSpec methodSpec  generateConfigureMethod(swagger);
 
@@ -92,6 +101,8 @@ public abstract class RestDslSourceCodeGenerator<T> extends RestDslGenerator<Res
 
         final TypeSpec generatedRouteBulder  TypeSpec.classBuilder(classNameToUse).superclass(RouteBuilder.class)
             .addModifiers(Modifier.PUBLIC, Modifier.FINAL).addMethod(methodSpec)
+            .addAnnotation(AnnotationSpec.builder(Generated.class).addMember(value, $S, getClass().getName())
+                .addMember(date, $S, generated()).build())
             .addJavadoc(Generated from Swagger specification by Camel REST DSL generator.\n).build();
 
         final String packageNameToUse  packageNameGenerator.apply(swagger);
@@ -99,6 +110,12 @@ public abstract class RestDslSourceCodeGenerator<T> extends RestDslGenerator<Res
         return JavaFile.builder(packageNameToUse, generatedRouteBulder).indent(indent).build();
     }
 
+    RestDslSourceCodeGenerator<T> withGeneratedTime(final Instant generated) {
+        this.generated  generated;
+
+        return this;
+    }
+
     static String generateClassName(final Swagger swagger) {
         final Info info  swagger.getInfo();
         if (info  null) {

http://git-wip-us.apache.org/repos/asf/camel/blob/ff463456/tooling/swagger-rest-dsl-generator/src/test/java/org/apache/camel/generator/swagger/RestDslGeneratorTest.java
----------------------------------------------------------------------
diff --git a/tooling/swagger-rest-dsl-generator/src/test/java/org/apache/camel/generator/swagger/RestDslGeneratorTest.java b/tooling/swagger-rest-dsl-generator/src/test/java/org/apache/camel/generator/swagger/RestDslGeneratorTest.java
index 3602654..69aee57 100644
--- a/tooling/swagger-rest-dsl-generator/src/test/java/org/apache/camel/generator/swagger/RestDslGeneratorTest.java
+++ b/tooling/swagger-rest-dsl-generator/src/test/java/org/apache/camel/generator/swagger/RestDslGeneratorTest.java
@@ -22,6 +22,7 @@ import java.net.URISyntaxException;
 import java.nio.charset.StandardCharsets;
 import java.nio.file.Files;
 import java.nio.file.Paths;
+import java.time.Instant;
 
 import io.swagger.models.Swagger;
 import io.swagger.parser.SwaggerParser;
@@ -35,6 +36,8 @@ import static org.assertj.core.api.Assertions.assertThat;
 
 public class RestDslGeneratorTest {
 
+    final Instant generated  Instant.parse(2017-10-17T00:00:00.000Z);
+
     final Swagger swagger  new SwaggerParser().read(petstore.json);
 
     @Test
@@ -50,7 +53,7 @@ public class RestDslGeneratorTest {
     public void shouldGenerateSourceCodeWithDefaults() throws IOException, URISyntaxException {
         final StringBuilder code  new StringBuilder();
 
-        RestDslGenerator.toAppendable(swagger).generate(code);
+        RestDslGenerator.toAppendable(swagger).withGeneratedTime(generated).generate(code);
 
         final URI file  RestDslGeneratorTest.class.getResource(/SwaggerPetstore.txt).toURI();
         final String expectedContent  new String(Files.readAllBytes(Paths.get(file)), StandardCharsets.UTF_8);
@@ -62,8 +65,9 @@ public class RestDslGeneratorTest {
     public void shouldGenerateSourceCodeWithOptions() throws IOException, URISyntaxException {
         final StringBuilder code  new StringBuilder();
 
-        RestDslGenerator.toAppendable(swagger).withClassName(MyRestRoute).withPackageName(com.example)
-            .withIndent(\t).withDestinationGenerator(o -> direct:rest- + o.getOperationId()).generate(code);
+        RestDslGenerator.toAppendable(swagger).withGeneratedTime(generated).withClassName(MyRestRoute)
+            .withPackageName(com.example).withIndent(\t)
+            .withDestinationGenerator(o -> direct:rest- + o.getOperationId()).generate(code);
 
         final URI file  RestDslGeneratorTest.class.getResource(/MyRestRoute.txt).toURI();
         final String expectedContent  new String(Files.readAllBytes(Paths.get(file)), StandardCharsets.UTF_8);

http://git-wip-us.apache.org/repos/asf/camel/blob/ff463456/tooling/swagger-rest-dsl-generator/src/test/resources/MyRestRoute.txt
----------------------------------------------------------------------
diff --git a/tooling/swagger-rest-dsl-generator/src/test/resources/MyRestRoute.txt b/tooling/swagger-rest-dsl-generator/src/test/resources/MyRestRoute.txt
index 4b19f69..d782300 100644
--- a/tooling/swagger-rest-dsl-generator/src/test/resources/MyRestRoute.txt
+++ b/tooling/swagger-rest-dsl-generator/src/test/resources/MyRestRoute.txt
@@ -1,5 +1,6 @@
 package com.example;
 
+import javax.annotation.Generated;
 import org.apache.camel.builder.RouteBuilder;
 import org.apache.camel.model.rest.CollectionFormat;
 import org.apache.camel.model.rest.RestParamType;
@@ -7,6 +8,10 @@ import org.apache.camel.model.rest.RestParamType;
 /**
  * Generated from Swagger specification by Camel REST DSL generator.
  */
+@Generated(
+		value  org.apache.camel.generator.swagger.AppendableGenerator,
+		date  2017-10-17T00:00:00Z
+)
 public final class MyRestRoute extends RouteBuilder {
 	/**
 	 * Defines Apache Camel routes using REST DSL fluent API.

http://git-wip-us.apache.org/repos/asf/camel/blob/ff463456/tooling/swagger-rest-dsl-generator/src/test/resources/SwaggerPetstore.txt
----------------------------------------------------------------------
diff --git a/tooling/swagger-rest-dsl-generator/src/test/resources/SwaggerPetstore.txt b/tooling/swagger-rest-dsl-generator/src/test/resources/SwaggerPetstore.txt
index 21d259c..6a4cb0f 100644
--- a/tooling/swagger-rest-dsl-generator/src/test/resources/SwaggerPetstore.txt
+++ b/tooling/swagger-rest-dsl-generator/src/test/resources/SwaggerPetstore.txt
@@ -1,5 +1,6 @@
 package io.swagger.petstore;
 
+import javax.annotation.Generated;
 import org.apache.camel.builder.RouteBuilder;
 import org.apache.camel.model.rest.CollectionFormat;
 import org.apache.camel.model.rest.RestParamType;
@@ -7,6 +8,10 @@ import org.apache.camel.model.rest.RestParamType;
 /**
  * Generated from Swagger specification by Camel REST DSL generator.
  */
+@Generated(
+        value  org.apache.camel.generator.swagger.AppendableGenerator,
+        date  2017-10-17T00:00:00Z
+)
 public final class SwaggerPetstore extends RouteBuilder {
     /**
      * Defines Apache Camel routes using REST DSL fluent API.


"
"142","1390","2017-04-18 13:17:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Resolved] (CAMEL-11163) Add @Generated annotation in REST
 DSL Swagger generated code","Return-Path: <issues-return-41515-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id BAA4918BAD
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 13:17:45 +0000 (UTC)
Received: (qmail 47435 invoked by uid 500); 18 Apr 2017 13:17:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 47395 invoked by uid 500); 18 Apr 2017 13:17:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 47385 invoked by uid 99); 18 Apr 2017 13:17:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 13:17:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 3F3CE1A0145
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 13:17:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id JzKJUP2eJioh for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 13:17:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id B83BF60E22
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 13:17:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 4272CE0874
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 13:17:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 9A8EA21B49
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 13:17:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 13:17:41 +0000 (UTC)
From: Zoran Regvart (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064693.1492521308000.305582.1492521461631@Atlassian.JIRA>
In-Reply-To: <JIRA.13064693.1492521308000@Atlassian.JIRA>
References: <JIRA.13064693.1492521308000@Atlassian.JIRA> <JIRA.13064693.1492521308634@jira-lw-us.apache.org>
Subject: [jira] [Resolved] (CAMEL-11163) Add @Generated annotation in REST
 DSL Swagger generated code
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11163?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Zoran Regvart resolved CAMEL-11163.
-----------------------------------
       Resolution: Implemented
    Fix Version/s: 2.19.0

> Add @Generated annotation in REST DSL Swagger generated code
> ------------------------------------------------------------
>
>                 Key: CAMEL-11163
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11163
>             Project: Camel
>          Issue Type: Improvement
>          Components: tooling
>            Reporter: Zoran Regvart
>            Assignee: Zoran Regvart
>            Priority: Trivial
>             Fix For: 2.19.0
>
>
> REST DSL Swagger code generation should add {{@Generated}} annotation to the source code this will help IDEs and code analysis tools to treat the generated code as generated.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"143","1864","2017-04-18 06:47:39-07:00","srinivas@live.com","['users@camel.apache.org']","Camel-SQL more than one IN clauses in SQL throws Exception","Return-Path: <users-return-65347-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9BFBE18DE6
	for <apmail-camel-users-archive@www.apache.org>; Tue, 18 Apr 2017 13:47:48 +0000 (UTC)
Received: (qmail 50785 invoked by uid 500); 18 Apr 2017 13:47:47 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 50726 invoked by uid 500); 18 Apr 2017 13:47:47 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 49949 invoked by uid 99); 18 Apr 2017 13:47:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 13:47:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 8D9D418969B
	for <users@camel.apache.org>; Tue, 18 Apr 2017 13:47:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 2.285
X-Spam-Level: **
X-Spam-Status: No, score2.285 tagged_above-999 required6.31
	tests[RCVD_IN_DNSWL_NONE-0.0001, SPF_SOFTFAIL0.972, URI_HEX1.313]
	autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id kQrIIVVBCBL6 for <users@camel.apache.org>;
	Tue, 18 Apr 2017 13:47:44 +0000 (UTC)
Received: from mbob.nabble.com (mbob.nabble.com [162.253.133.15])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id CD74D5FDC4
	for <users@camel.apache.org>; Tue, 18 Apr 2017 13:47:39 +0000 (UTC)
Received: from static.162.255.23.22.macminivault.com (unknown [162.255.23.22])
	by mbob.nabble.com (Postfix) with ESMTP id 558454156CB8
	for <users@camel.apache.org>; Tue, 18 Apr 2017 06:46:14 -0700 (PDT)
Date: Tue, 18 Apr 2017 06:47:39 -0700 (MST)
From: akpcnu <srinivas@live.com>
To: users@camel.apache.org
Message-ID: <1492523259121-5797818.post@n5.nabble.com>
Subject: Camel-SQL more than one IN clauses in SQL throws Exception
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

I am using CAMEL 2.17.3 and having two IN clauses in SQL query causes below
exception:

org.springframework.jdbc.UncategorizedSQLException:
PreparedStatementCallback; uncategorized SQLException for SQL []; SQL state
[null]; error code [0]; Number of parameters mismatch. Expected: 4, was: 8;
nested exception is java.sql.SQLException: Number of parameters mismatch.
Expected: 4, was: 8

If I have one IN clause query is working fine. Is this known bug or
behavior? if yes, any alternative? 

ex:

SELECT column1, column2... 
FROM <
>
WHERE column1 IN (:#in:<<dynamically build>>)
column2 IN (:#in:<<dynamically build>>)



--
View this message in context: http://camel.465427.n5.nabble.com/Camel-SQL-more-than-one-IN-clauses-in-SQL-throws-Exception-tp5797818.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"144","354","2017-04-18 14:04:53+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[1/2] camel git commit: CAMEL-11144: Add components to component
 table, add description","Return-Path: <commits-return-55726-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 1ADA418F1B
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 14:04:55 +0000 (UTC)
Received: (qmail 793 invoked by uid 500); 18 Apr 2017 14:04:55 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 728 invoked by uid 500); 18 Apr 2017 14:04:54 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 710 invoked by uid 99); 18 Apr 2017 14:04:53 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 14:04:53 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id B41DFDFBDA; Tue, 18 Apr 2017 14:04:53 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Tue, 18 Apr 2017 14:04:53 -0000
Message-Id: <b0d782fc27d5476ea7adeff0c0c190b4@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [1/2] camel git commit: CAMEL-11144: Add components to component
 table, add description

Repository: camel
Updated Branches:
  refs/heads/master ff463456a -> b3ac9932f


CAMEL-11144: Add components to component table, add description

Signed-off-by: Jens Reimann <jreimann@redhat.com>

Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/8b277e6d
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/8b277e6d
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/8b277e6d

Branch: refs/heads/master
Commit: 8b277e6db5ff7fc796e32cfa33f043a2d5ee6584
Parents: ff46345
Author: Jens Reimann <jreimann@redhat.com>
Authored: Fri Apr 14 10:42:43 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Tue Apr 18 16:01:37 2017 +0200

----------------------------------------------------------------------
 .../org/apache/camel/component/milo/client/MiloClientEndpoint.java | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/8b277e6d/components/camel-milo/src/main/java/org/apache/camel/component/milo/client/MiloClientEndpoint.java
----------------------------------------------------------------------
diff --git a/components/camel-milo/src/main/java/org/apache/camel/component/milo/client/MiloClientEndpoint.java b/components/camel-milo/src/main/java/org/apache/camel/component/milo/client/MiloClientEndpoint.java
index ba07ea4..56041ff 100644
--- a/components/camel-milo/src/main/java/org/apache/camel/component/milo/client/MiloClientEndpoint.java
+++ b/components/camel-milo/src/main/java/org/apache/camel/component/milo/client/MiloClientEndpoint.java
@@ -34,7 +34,7 @@ import org.eclipse.milo.opcua.stack.core.types.builtin.ExpandedNodeId;
  * Connect to OPC UA servers using the binary protocol for acquiring telemetry
  * data
  */
-@UriEndpoint(firstVersion  2.19.0, scheme  milo-client, syntax  milo-client:endpointUri, title  Milo based OPC UA Client, consumerClass  MiloClientConsumer.class, label  iot)
+@UriEndpoint(firstVersion  2.19.0, scheme  milo-client, syntax  milo-client:endpointUri, title  OPC UA Client, consumerClass  MiloClientConsumer.class, label  iot)
 public class MiloClientEndpoint extends DefaultEndpoint implements MiloClientItemConfiguration {
 
     /**


"
"145","353","2017-04-18 14:04:54+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[2/2] camel git commit: Regen","Return-Path: <commits-return-55727-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 1260618F18
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 14:04:55 +0000 (UTC)
Received: (qmail 837 invoked by uid 500); 18 Apr 2017 14:04:55 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 730 invoked by uid 500); 18 Apr 2017 14:04:54 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 711 invoked by uid 99); 18 Apr 2017 14:04:53 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 14:04:53 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id B6DECDFDAC; Tue, 18 Apr 2017 14:04:53 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Tue, 18 Apr 2017 14:04:54 -0000
Message-Id: <3e213d571ef24fc5bbb47a5e324142b1@git.apache.org>
In-Reply-To: <b0d782fc27d5476ea7adeff0c0c190b4@git.apache.org>
References: <b0d782fc27d5476ea7adeff0c0c190b4@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [2/2] camel git commit: Regen

Regen


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/b3ac9932
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/b3ac9932
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/b3ac9932

Branch: refs/heads/master
Commit: b3ac9932f100660755818028260338c02d780881
Parents: 8b277e6
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Tue Apr 18 16:04:44 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Tue Apr 18 16:04:44 2017 +0200

----------------------------------------------------------------------
 .../camel-milo/src/main/docs/milo-client-component.adoc     | 6 +++---
 components/readme.adoc                                      | 9 +++------
 docs/user-manual/en/SUMMARY.md                              | 3 +--
 3 files changed, 7 insertions(+), 11 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/b3ac9932/components/camel-milo/src/main/docs/milo-client-component.adoc
----------------------------------------------------------------------
diff --git a/components/camel-milo/src/main/docs/milo-client-component.adoc b/components/camel-milo/src/main/docs/milo-client-component.adoc
index 1be664f..a6dd6e0 100644
--- a/components/camel-milo/src/main/docs/milo-client-component.adoc
+++ b/components/camel-milo/src/main/docs/milo-client-component.adoc
@@ -1,4 +1,4 @@
-## Milo based OPC UA Client Component
+## OPC UA Client Component
 
 *Available as of Camel version 2.19*
 
@@ -26,7 +26,7 @@ for this component:
 
 
 // component options: START
-The Milo based OPC UA Client component supports 6 options which are listed below.
+The OPC UA Client component supports 6 options which are listed below.
 
 
 
@@ -83,7 +83,7 @@ In other words, shared connections located by the combination of endpoint URI an
 
 
 // endpoint options: START
-The Milo based OPC UA Client endpoint is configured using URI syntax:
+The OPC UA Client endpoint is configured using URI syntax:
 
     milo-client:endpointUri
 

http://git-wip-us.apache.org/repos/asf/camel/blob/b3ac9932/components/readme.adoc
----------------------------------------------------------------------
diff --git a/components/readme.adoc b/components/readme.adoc
index fbf16b9..09c9bf1 100644
--- a/components/readme.adoc
+++ b/components/readme.adoc
@@ -293,9 +293,6 @@ Number of Components: 231 in 184 JAR artifacts (14 deprecated)
 | link:camel-ibatis/src/main/docs/ibatis-component.adoc[iBatis] (camel-ibatis) +
 `ibatis:statement` | 1.2 | *deprecated* Performs a query poll insert update or delete in a relational database using Apache iBATIS.
 
-| link:camel-ignite/src/main/docs/ignite-component.adoc[Ignite] (camel-ignite) +
-`ignite:endpointName` | 1.17 | The Ignite Component integrates Apache Camel with Apache Ignite
-
 | link:camel-infinispan/src/main/docs/infinispan-component.adoc[Infinispan] (camel-infinispan) +
 `infinispan:cacheName` | 2.13 | For reading/writing from/to Infinispan distributed key/value store and data grid.
 
@@ -392,9 +389,6 @@ Number of Components: 231 in 184 JAR artifacts (14 deprecated)
 | link:camel-metrics/src/main/docs/metrics-component.adoc[Metrics] (camel-metrics) +
 `metrics:metricsType:metricsName` | 2.14 | To collect various metrics directly from Camel routes using the DropWizard metrics library.
 
-| link:camel-milo/src/main/docs/milo-client-component.adoc[Milo based OPC UA Client] (camel-milo) +
-`milo-client:endpointUri` | 2.19 | Connect to OPC UA servers using the binary protocol for acquiring telemetry data
-
 | link:camel-mina/src/main/docs/mina-component.adoc[Mina] (camel-mina) +
 `mina:protocol:host:port` | 1.0 | *deprecated* Socket level networking using TCP or UDP with the Apache Mina 1.x library.
 
@@ -455,6 +449,9 @@ Number of Components: 231 in 184 JAR artifacts (14 deprecated)
 | link:camel-olingo4/camel-olingo4-component/src/main/docs/olingo4-component.adoc[Olingo4] (camel-olingo4) +
 `olingo4:apiName/methodName` | 2.19 | Communicates with OData 4.0 services using Apache Olingo OData API.
 
+| link:camel-milo/src/main/docs/milo-client-component.adoc[OPC UA Client] (camel-milo) +
+`milo-client:endpointUri` | 2.19 | Connect to OPC UA servers using the binary protocol for acquiring telemetry data
+
 | link:camel-milo/src/main/docs/milo-server-component.adoc[OPC UA Server] (camel-milo) +
 `milo-server:itemId` | 2.19 | Make telemetry data available as an OPC UA server
 

http://git-wip-us.apache.org/repos/asf/camel/blob/b3ac9932/docs/user-manual/en/SUMMARY.md
----------------------------------------------------------------------
diff --git a/docs/user-manual/en/SUMMARY.md b/docs/user-manual/en/SUMMARY.md
index a1bbc02..25968df 100644
--- a/docs/user-manual/en/SUMMARY.md
+++ b/docs/user-manual/en/SUMMARY.md
@@ -209,7 +209,6 @@
 	* [HTTP](http-component.adoc)
 	* [HTTP4](http4-component.adoc)
 	* [iBatis](ibatis-component.adoc)
-	* [Ignite](ignite-component.adoc)
 	* [IMAP](imap-component.adoc)
 	* [Infinispan](infinispan-component.adoc)
 	* [InfluxDB](influxdb-component.adoc)
@@ -240,7 +239,6 @@
 	* [Lucene](lucene-component.adoc)
 	* [Lumberjack](lumberjack-component.adoc)
 	* [Metrics](metrics-component.adoc)
-	* [Milo based OPC UA Client](milo-client-component.adoc)
 	* [Mina](mina-component.adoc)
 	* [Mina2](mina2-component.adoc)
 	* [MLLP](mllp-component.adoc)
@@ -260,6 +258,7 @@
 	* [Netty4 HTTP](netty4-http-component.adoc)
 	* [Olingo2](olingo2-component.adoc)
 	* [Olingo4](olingo4-component.adoc)
+	* [OPC UA Client](milo-client-component.adoc)
 	* [OPC UA Server](milo-server-component.adoc)
 	* [OpenShift](openshift-component.adoc)
 	* [OpenStack Cinder](openstack-cinder-component.adoc)


"
"146","1865","2017-04-18 16:05:59+02:00","claus.ibsen@gmail.com","['users@camel.apache.org']","Re: Camel-SQL more than one IN clauses in SQL throws Exception","Return-Path: <users-return-65348-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id D753C18F27
	for <apmail-camel-users-archive@www.apache.org>; Tue, 18 Apr 2017 14:06:25 +0000 (UTC)
Received: (qmail 2623 invoked by uid 500); 18 Apr 2017 14:06:25 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 2576 invoked by uid 500); 18 Apr 2017 14:06:25 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 2563 invoked by uid 99); 18 Apr 2017 14:06:24 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 14:06:24 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 5AB43CA7A5
	for <users@camel.apache.org>; Tue, 18 Apr 2017 14:06:24 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 1.692
X-Spam-Level: *
X-Spam-Status: No, score1.692 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RCVD_IN_SORBS_SPAM0.5, SPF_PASS-0.001,
	URI_HEX1.313] autolearndisabled
Authentication-Results: spamd1-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id pEWshd-s8W4c for <users@camel.apache.org>;
	Tue, 18 Apr 2017 14:06:21 +0000 (UTC)
Received: from mail-qt0-f175.google.com (mail-qt0-f175.google.com [209.85.216.175])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id 337235FDC4
	for <users@camel.apache.org>; Tue, 18 Apr 2017 14:06:21 +0000 (UTC)
Received: by mail-qt0-f175.google.com with SMTP id y33so42826035qta.2
        for <users@camel.apache.org>; Tue, 18 Apr 2017 07:06:21 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh0zbM/JzpYPkhKt6OeSrGHRV/HzosC3VPRd6Tm67/ZQY;
        bo/RsujsKSfwUTPK5EmcgyWaYqAdYM3AM8Io4iNFza+NFXTjz/kQWKw/07qzoRdaXuy
         znkI/jGJ4MfRsJ+IN6RXeVn8RMbFPKB4HbpoUejZSW1lRMIWY9A5eQjOnAbMq/Gx5p9M
         FhWtK8hP0P79viFK48QPMzQTcY1VnMjzYI53ZYZ6NamZ1JPLdaVV8StWYT+38Hc8zmT8
         FlDsJzbZeFowT9m/lbu3qKEQOksl6y4J7/zlVdYwqkYoxYFiEOmFYblpylw3mlPb0pBk
         /OLC3ot+I5H+3a7W7/Ui6hCOpVYr15vE47XvQaf6ezLOsbI+BkIjPqO/AJt6yg2g46cS
         b28Q
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bh0zbM/JzpYPkhKt6OeSrGHRV/HzosC3VPRd6Tm67/ZQY;
        bmkWYdHoC4J7NqiPvMZsJyBZ94IZSeAE8G8p3lOfjz+d+WhCjAAHUnbxscLr7RuEUuF
         ZlXcvLw0vKHSm46xDebLpRsbr+/uHIxuXgUvzkDoX7OPWu9r6DBi0KRNLJy7/DLwU9a4
         fZ26kfOE8H6jZtW2YIZv/WdXuhLgulYT+luGrmG/JcYXioHhrvVK6+pan1SAxaVX0rfj
         I+F6Vv9vpZDjtOFj70F2Q/PK+XH8E1DIWJdIXUKCKP9BT8HCoh8o3pIvirt1WF2dCTHn
         hSDJ7Ic60vtOVfaQosU8B33uljrSV+/kYa33aMKMxIA+b7otV9EM6b/sh8E6oeI1xfJs
         26zA
X-Gm-Message-State: AN3rC/5H41QWcwG0Fnh0d7XCT0tjbMWuYWcKwgTnREtH34OveTyRm8/O
	UQeYIxmdOSWvHUbveFALFP+g0vMBIYc3
X-Received: by 10.237.53.124 with SMTP id b57mr13396519qte.240.1492524380098;
 Tue, 18 Apr 2017 07:06:20 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.200.50.39 with HTTP; Tue, 18 Apr 2017 07:05:59 -0700 (PDT)
In-Reply-To: <1492523259121-5797818.post@n5.nabble.com>
References: <1492523259121-5797818.post@n5.nabble.com>
From: Claus Ibsen <claus.ibsen@gmail.com>
Date: Tue, 18 Apr 2017 16:05:59 +0200
Message-ID: <CAGB5yNm54tvOqwQ+mHihvU1kwQYmheFB12Z7rwLGHiEd5yfAdQ@mail.gmail.com>
Subject: Re: Camel-SQL more than one IN clauses in SQL throws Exception
To: users@camel.apache.org <users@camel.apache.org>
Content-Type: text/plain; charsetUTF-8

Try newer Camel version

On Tue, Apr 18, 2017 at 3:47 PM, akpcnu <srinivas@live.com> wrote:
> I am using CAMEL 2.17.3 and having two IN clauses in SQL query causes below
> exception:
>
> org.springframework.jdbc.UncategorizedSQLException:
> PreparedStatementCallback; uncategorized SQLException for SQL []; SQL state
> [null]; error code [0]; Number of parameters mismatch. Expected: 4, was: 8;
> nested exception is java.sql.SQLException: Number of parameters mismatch.
> Expected: 4, was: 8
>
> If I have one IN clause query is working fine. Is this known bug or
> behavior? if yes, any alternative?
>
> ex:
>
> SELECT column1, column2...
> FROM <
>>
> WHERE column1 IN (:#in:<<dynamically build>>)
> column2 IN (:#in:<<dynamically build>>)
>
>
>
> --
> View this message in context: http://camel.465427.n5.nabble.com/Camel-SQL-more-than-one-IN-clauses-in-SQL-throws-Exception-tp5797818.html
> Sent from the Camel - Users mailing list archive at Nabble.com.



-- 
Claus Ibsen
-----------------
http://davsclaus.com @davsclaus
Camel in Action 2: https://www.manning.com/ibsen2

"
"147","1391","2017-04-18 14:19:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11164) Add @Generated annotation Salesforce
 generated code","Return-Path: <issues-return-41516-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 12E2318FB6
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 14:19:44 +0000 (UTC)
Received: (qmail 30336 invoked by uid 500); 18 Apr 2017 14:19:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 30298 invoked by uid 500); 18 Apr 2017 14:19:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 30289 invoked by uid 99); 18 Apr 2017 14:19:43 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 14:19:43 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 94B151A0081
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 14:19:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id dXOg7AIygUh7 for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 14:19:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id C07FD5FCAE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 14:19:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 4502CE0874
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 14:19:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 9B56F21B4F
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 14:19:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 14:19:41 +0000 (UTC)
From: Zoran Regvart (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064723.1492525172000.306176.1492525181634@Atlassian.JIRA>
In-Reply-To: <JIRA.13064723.1492525172000@Atlassian.JIRA>
References: <JIRA.13064723.1492525172000@Atlassian.JIRA> <JIRA.13064723.1492525172438@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11164) Add @Generated annotation Salesforce
 generated code
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Zoran Regvart created CAMEL-11164:
-------------------------------------

             Summary: Add @Generated annotation Salesforce generated code
                 Key: CAMEL-11164
                 URL: https://issues.apache.org/jira/browse/CAMEL-11164
             Project: Camel
          Issue Type: Improvement
            Reporter: Zoran Regvart
            Assignee: Zoran Regvart
            Priority: Trivial


The Salesforce Maven plugin generates source code for data transfer objects (DTOs) that can be used to exchange data with the Salesforce API. To help IDEs and code analysis tools they should be annotated with {{@Generated}}.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"148","1392","2017-04-18 14:22:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11165) Add @Generated annotation to code
 generated by SpringBootAutoConfigurationMojo","Return-Path: <issues-return-41517-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 8A34418FD2
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 14:22:45 +0000 (UTC)
Received: (qmail 35408 invoked by uid 500); 18 Apr 2017 14:22:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 35372 invoked by uid 500); 18 Apr 2017 14:22:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 35355 invoked by uid 99); 18 Apr 2017 14:22:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 14:22:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 090F6C3488
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 14:22:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id Wqwq_5ObmECF for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 14:22:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 9CFE35F5FD
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 14:22:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id EA323E0250
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 14:22:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id A4EF620D54
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 14:22:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 14:22:41 +0000 (UTC)
From: Zoran Regvart (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064724.1492525323000.306194.1492525361672@Atlassian.JIRA>
In-Reply-To: <JIRA.13064724.1492525323000@Atlassian.JIRA>
References: <JIRA.13064724.1492525323000@Atlassian.JIRA> <JIRA.13064724.1492525323590@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11165) Add @Generated annotation to code
 generated by SpringBootAutoConfigurationMojo
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Zoran Regvart created CAMEL-11165:
-------------------------------------

             Summary: Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo
                 Key: CAMEL-11165
                 URL: https://issues.apache.org/jira/browse/CAMEL-11165
             Project: Camel
          Issue Type: Improvement
          Components: tooling
            Reporter: Zoran Regvart
            Assignee: Zoran Regvart
            Priority: Trivial


To help IDEs and code analysis tools classes generated by the Camel Maven plugin for Spring Boot configuration support should be annotated with {{@Generated}}.




--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"149","355","2017-04-18 14:40:02+00:00","zregvart@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-11165 Add @Generated annotation to code g...","Return-Path: <commits-return-55728-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 8A45A1912C
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 14:40:02 +0000 (UTC)
Received: (qmail 79898 invoked by uid 500); 18 Apr 2017 14:40:02 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 79844 invoked by uid 500); 18 Apr 2017 14:40:02 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 79835 invoked by uid 99); 18 Apr 2017 14:40:02 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 14:40:02 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 5586FDFBB7; Tue, 18 Apr 2017 14:40:02 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Message-Id: <48cac69905244aeba244c92c38de6780@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-11165 Add @Generated annotation to code g...
Date: Tue, 18 Apr 2017 14:40:02 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master b3ac9932f -> 110d1c9d6


CAMEL-11165 Add @Generated annotation to code g...

...enerated by SpringBootAutoConfigurationMojo

Adds `@Generated` annotation to Spring Boot auto-configuration generated
source files.


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/110d1c9d
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/110d1c9d
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/110d1c9d

Branch: refs/heads/master
Commit: 110d1c9d6acf386bceed3e6b2f5f6e2046607236
Parents: b3ac993
Author: Zoran Regvart <zregvart@apache.org>
Authored: Tue Apr 18 16:31:08 2017 +0200
Committer: Zoran Regvart <zregvart@apache.org>
Committed: Tue Apr 18 16:35:27 2017 +0200

----------------------------------------------------------------------
 .../SpringBootAutoConfigurationMojo.java        | 26 ++++++++++++++++++++
 1 file changed, 26 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/110d1c9d/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java
----------------------------------------------------------------------
diff --git a/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java b/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java
index d7eac27..a2f5fcd 100644
--- a/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java
+++ b/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java
@@ -27,6 +27,7 @@ import java.lang.reflect.Modifier;
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.net.URLClassLoader;
+import java.time.Instant;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
@@ -42,6 +43,8 @@ import java.util.TreeSet;
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
 
+import javax.annotation.Generated;
+
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import org.apache.camel.maven.packaging.model.ComponentModel;
@@ -289,6 +292,8 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
             doc  model.getDescription() + \n\n + doc;
         }
         commonClass.getJavaDoc().setFullText(doc);
+        commonClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
+        .setStringValue(date, Instant.now().toString());
 
         for (OtherOptionModel option : model.getOptions()) {
             String type  option.getJavaType();
@@ -334,6 +339,8 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
             configClass.setPackage(packageName);
             configClass.setName(configName);
             configClass.extendSuperType(commonClass);
+            configClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
+            .setStringValue(date, Instant.now().toString());
             configClass.addAnnotation(org.springframework.boot.context.properties.ConfigurationProperties).setStringValue(prefix, propertiesPrefix);
             configClass.addImport(Map.class);
             configClass.addImport(HashMap.class);
@@ -383,6 +390,8 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         JavaClassSource javaClass  Roaster.create(JavaClassSource.class);
         javaClass.setPackage(packageName);
         javaClass.setName(className);
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
+        .setStringValue(date, Instant.now().toString());
         javaClass.addAnnotation(org.springframework.boot.context.properties.ConfigurationProperties).setStringValue(prefix, propertiesPrefix);
 
         String doc  Generated by camel-package-maven-plugin - do not edit this file!;
@@ -446,6 +455,8 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         String doc  Generated by camel-package-maven-plugin - do not edit this file!;
         javaClass.getJavaDoc().setFullText(doc);
 
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
+        .setStringValue(date, Instant.now().toString());
         javaClass.addAnnotation(Configuration.class);
         javaClass.addAnnotation(ConditionalOnBean.class).setStringValue(type, org.apache.camel.spring.boot.CamelAutoConfiguration);
         javaClass.addAnnotation(ConditionalOnProperty.class).setStringValue(name, camel.rest.enabled).setLiteralValue(matchIfMissing, true);
@@ -670,6 +681,8 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         String prefix  camel.component. + (overrideComponentName ! null ? overrideComponentName : model.getScheme());
         // make sure prefix is in lower case
         prefix  prefix.toLowerCase(Locale.US);
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
+        .setStringValue(date, Instant.now().toString());
         javaClass.addAnnotation(org.springframework.boot.context.properties.ConfigurationProperties).setStringValue(prefix, prefix);
 
         Set<JavaClassSource> nestedTypes  new HashSet<>();
@@ -1021,6 +1034,8 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         String prefix  camel.dataformat. + (overrideDataFormatName ! null ? overrideDataFormatName : model.getName());
         // make sure prefix is in lower case
         prefix  prefix.toLowerCase(Locale.US);
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
+        .setStringValue(date, Instant.now().toString());
         javaClass.addAnnotation(org.springframework.boot.context.properties.ConfigurationProperties).setStringValue(prefix, prefix);
 
         for (DataFormatOptionModel option : model.getDataFormatOptions()) {
@@ -1083,6 +1098,8 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         String prefix  camel.language. + (overrideLanguageName ! null ? overrideLanguageName : model.getName());
         // make sure prefix is in lower case
         prefix  prefix.toLowerCase(Locale.US);
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
+        .setStringValue(date, Instant.now().toString());
         javaClass.addAnnotation(org.springframework.boot.context.properties.ConfigurationProperties).setStringValue(prefix, prefix);
 
         for (LanguageOptionModel option : model.getLanguageOptions()) {
@@ -1172,6 +1189,8 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         String doc  Generated by camel-package-maven-plugin - do not edit this file!;
         javaClass.getJavaDoc().setFullText(doc);
 
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
+            .setStringValue(date, Instant.now().toString());
         javaClass.addAnnotation(Configuration.class);
         javaClass.addAnnotation(ConditionalOnBean.class).setStringValue(type, org.apache.camel.spring.boot.CamelAutoConfiguration);
         javaClass.addAnnotation(Conditional.class).setLiteralValue(name + .Condition.class);
@@ -1246,6 +1265,8 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         String doc  Generated by camel-package-maven-plugin - do not edit this file!;
         javaClass.getJavaDoc().setFullText(doc);
 
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
+        .setStringValue(date, Instant.now().toString());
         javaClass.addAnnotation(Configuration.class);
         javaClass.addAnnotation(ConditionalOnBean.class).setStringValue(type, org.apache.camel.spring.boot.CamelAutoConfiguration);
         javaClass.addAnnotation(Conditional.class).setLiteralValue(name + .Condition.class);
@@ -1322,6 +1343,8 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         String doc  Generated by camel-package-maven-plugin - do not edit this file!;
         javaClass.getJavaDoc().setFullText(doc);
 
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
+        .setStringValue(date, Instant.now().toString());
         javaClass.addAnnotation(Configuration.class);
         javaClass.addAnnotation(ConditionalOnBean.class).setStringValue(type, org.apache.camel.spring.boot.CamelAutoConfiguration);
         javaClass.addAnnotation(Conditional.class).setLiteralValue(name + .Condition.class);
@@ -2023,6 +2046,9 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         condition.extendSuperType(SpringBootCondition.class);
         condition.setPublic();
         condition.setStatic(true);
+        
+        condition.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
+        .setStringValue(date, Instant.now().toString());
 
         String fullQualifiedType  prefix.endsWith(.) ? prefix +  type : prefix + . + type;
 


"
"150","1393","2017-04-18 14:40:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Resolved] (CAMEL-11165) Add @Generated annotation to code
 generated by SpringBootAutoConfigurationMojo","Return-Path: <issues-return-41518-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id A8D981912D
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 14:40:43 +0000 (UTC)
Received: (qmail 80132 invoked by uid 500); 18 Apr 2017 14:40:43 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 80096 invoked by uid 500); 18 Apr 2017 14:40:43 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 80087 invoked by uid 99); 18 Apr 2017 14:40:43 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 14:40:43 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 39ADB1A02FC
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 14:40:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id TUTa5qboWy5I for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 14:40:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 492585F1E7
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 14:40:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id CEFABE0250
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 14:40:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 8418F20D54
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 14:40:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 14:40:41 +0000 (UTC)
From: Zoran Regvart (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064724.1492525323000.306505.1492526441536@Atlassian.JIRA>
In-Reply-To: <JIRA.13064724.1492525323000@Atlassian.JIRA>
References: <JIRA.13064724.1492525323000@Atlassian.JIRA> <JIRA.13064724.1492525323590@jira-lw-us.apache.org>
Subject: [jira] [Resolved] (CAMEL-11165) Add @Generated annotation to code
 generated by SpringBootAutoConfigurationMojo
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11165?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Zoran Regvart resolved CAMEL-11165.
-----------------------------------
       Resolution: Implemented
    Fix Version/s: 2.19.0

> Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo
> ------------------------------------------------------------------------------
>
>                 Key: CAMEL-11165
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11165
>             Project: Camel
>          Issue Type: Improvement
>          Components: tooling
>            Reporter: Zoran Regvart
>            Assignee: Zoran Regvart
>            Priority: Trivial
>             Fix For: 2.19.0
>
>
> To help IDEs and code analysis tools classes generated by the Camel Maven plugin for Spring Boot configuration support should be annotated with {{@Generated}}.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"151","356","2017-04-18 14:53:26+00:00","lburgazzoli@apache.org","['commits@camel.apache.org']","camel git commit: Service Call : Allow to confgire ribbon load
 balancer using ribbon specific properties","Return-Path: <commits-return-55729-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0026119268
	for <apmail-camel-commits-archive@www.apache.org>; Tue, 18 Apr 2017 14:53:27 +0000 (UTC)
Received: (qmail 23181 invoked by uid 500); 18 Apr 2017 14:53:26 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 23131 invoked by uid 500); 18 Apr 2017 14:53:26 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 23122 invoked by uid 99); 18 Apr 2017 14:53:26 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 14:53:26 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id BC711DFBB7; Tue, 18 Apr 2017 14:53:26 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: lburgazzoli@apache.org
To: commits@camel.apache.org
Message-Id: <c8d0fd8998ec4abe846a29d9d1d99a06@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Service Call : Allow to confgire ribbon load
 balancer using ribbon specific properties
Date: Tue, 18 Apr 2017 14:53:26 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 110d1c9d6 -> 567dff400


Service Call : Allow to confgire ribbon load balancer using ribbon specific properties


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/567dff40
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/567dff40
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/567dff40

Branch: refs/heads/master
Commit: 567dff4003e146ae1b0364dca4fbc2d126ca219b
Parents: 110d1c9
Author: lburgazzoli <lburgazzoli@gmail.com>
Authored: Tue Apr 18 16:52:53 2017 +0200
Committer: lburgazzoli <lburgazzoli@gmail.com>
Committed: Tue Apr 18 16:53:02 2017 +0200

----------------------------------------------------------------------
 .../camel-ribbon/src/main/docs/ribbon.adoc      |  4 +-
 .../component/ribbon/RibbonConfiguration.java   | 19 +++--
 .../ribbon/cloud/RibbonLoadBalancer.java        | 71 +++++++++++-----
 .../ribbon/cloud/RibbonLoadBalancerFactory.java |  8 +-
 .../cloud/RibbonServiceCallUpdateRouteTest.java |  4 +-
 ...DslRibbonPropertiesServiceCallRouteTest.java | 31 +++++++
 ...gDslRibbonPropertiesServiceCallRouteTest.xml | 55 ++++++++++++
 ...viceCallLoadBalancerConfigurationCommon.java | 89 ++++++++++++++++++++
 ...CallLoadBalancerConfigurationProperties.java | 48 +++++++++++
 .../cloud/EtcdServiceDiscoveryDisabledTest.java |  2 +-
 .../cloud/RibbonCloudAutoConfiguration.java     | 53 ++++++++++--
 .../cloud/RibbonCloudConfiguration.java         | 45 ----------
 .../src/main/resources/application.properties   |  1 -
 .../cloud/RibbonLoadBalancerDisabledTest.java   | 64 ++++++++++++++
 .../cloud/RibbonLoadBalancerEnabledTest.java    | 65 ++++++++++++++
 .../src/test/resources/logback.xml              | 39 +++++++++
 .../SpringBootAutoConfigurationMojo.java        | 12 +++
 17 files changed, 523 insertions(+), 87 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/components/camel-ribbon/src/main/docs/ribbon.adoc
----------------------------------------------------------------------
diff --git a/components/camel-ribbon/src/main/docs/ribbon.adoc b/components/camel-ribbon/src/main/docs/ribbon.adoc
index ceb2e0e..b4dc6c9 100644
--- a/components/camel-ribbon/src/main/docs/ribbon.adoc
+++ b/components/camel-ribbon/src/main/docs/ribbon.adoc
@@ -26,7 +26,7 @@ This component helps applying load balancing feature at the client side when usi
 [source,java]
 ----
 RibbonConfiguration configuration  new RibbonConfiguration();
-configuration.setClientConfig(Collections.singletonMap(ServerListRefreshInterval, 250));
+configuration.addProperties(ServerListRefreshInterval, 250);
 
 RibbonLoadBalancer loadBalancer  new RibbonLoadBalancer(configuration);
 
@@ -44,7 +44,7 @@ from(direct:start)
 [source,properties]
 .application.properties
 ----
-camel.cloud.ribbon.client-config[ServerListRefreshInterval]  250
+camel.cloud.ribbon.properties[ServerListRefreshInterval]  250
 ----
 +
 [source,java]

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/RibbonConfiguration.java
----------------------------------------------------------------------
diff --git a/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/RibbonConfiguration.java b/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/RibbonConfiguration.java
index 40bcb31..41ac473 100644
--- a/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/RibbonConfiguration.java
+++ b/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/RibbonConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.ribbon;
 
+import java.util.HashMap;
 import java.util.Map;
 import java.util.function.Supplier;
 
@@ -29,7 +30,7 @@ public class RibbonConfiguration {
     private IRule rule;
     private IPing ping;
     private String clientName;
-    private Map<String, String> clientConfig;
+    private Map<String, String> properties;
 
     public String getNamespace() {
         return namespace;
@@ -87,11 +88,19 @@ public class RibbonConfiguration {
         this.clientName  clientName;
     }
 
-    public Map<String, String> getClientConfig() {
-        return clientConfig;
+    public Map<String, String> getProperties() {
+        return properties;
     }
 
-    public void setClientConfig(Map<String, String> clientConfig) {
-        this.clientConfig  clientConfig;
+    public void setProperties(Map<String, String> clientConfig) {
+        this.properties  clientConfig;
+    }
+
+    public void addProperty(String key, String value) {
+        if (this.properties  null) {
+            this.properties  new HashMap<>();
+        }
+
+        this.properties.put(key, value);
     }
 }

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/cloud/RibbonLoadBalancer.java
----------------------------------------------------------------------
diff --git a/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/cloud/RibbonLoadBalancer.java b/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/cloud/RibbonLoadBalancer.java
index b867eea..759a602 100644
--- a/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/cloud/RibbonLoadBalancer.java
+++ b/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/cloud/RibbonLoadBalancer.java
@@ -30,6 +30,7 @@ import com.netflix.loadbalancer.DummyPing;
 import com.netflix.loadbalancer.ILoadBalancer;
 import com.netflix.loadbalancer.PollingServerListUpdater;
 import com.netflix.loadbalancer.RoundRobinRule;
+import com.netflix.loadbalancer.Server;
 import com.netflix.loadbalancer.ServerList;
 import com.netflix.loadbalancer.ZoneAwareLoadBalancer;
 import org.apache.camel.CamelContext;
@@ -103,12 +104,14 @@ public class RibbonLoadBalancer
     protected void doStart() throws Exception {
         ObjectHelper.notNull(configuration, configuration);
         ObjectHelper.notNull(camelContext, camel context);
-        ObjectHelper.notNull(serviceDiscovery, service discovery);
-        ObjectHelper.notNull(serviceFilter, service filter);
 
-        LOGGER.info(ServiceCall is using ribbon load balancer with service discovery type: {} and service filter type: {},
-            serviceDiscovery.getClass(),
-            serviceFilter.getClass());
+        if (serviceDiscovery ! null) {
+            LOGGER.info(ServiceCall is using ribbon load balancer with service discovery type: {} and service filter: {},
+                serviceDiscovery.getClass(),
+                serviceDiscovery ! null ? serviceFilter.getClass() : none);
+        } else {
+            LOGGER.info(ServiceCall is using ribbon load balancer);
+        }
 
         ServiceHelper.startService(serviceDiscovery);
     }
@@ -127,28 +130,50 @@ public class RibbonLoadBalancer
 
     @Override
     public <T> T process(String serviceName, LoadBalancerFunction<T> request) throws Exception {
-        ILoadBalancer loadBalancer  loadBalancers.computeIfAbsent(serviceName, key -> createLoadBalancer(key, serviceDiscovery));
-        RibbonServiceDefinition service  (RibbonServiceDefinition)loadBalancer.chooseServer(serviceName);
+        ILoadBalancer loadBalancer  loadBalancers.computeIfAbsent(serviceName, key -> createLoadBalancer(key));
+        Server server  loadBalancer.chooseServer(serviceName);
 
-        if (service  null) {
+        if (server  null) {
             throw new RejectedExecutionException(No active services with name  + serviceName);
         }
 
-        return request.apply(service);
+        ServiceDefinition definition;
+
+        if (server instanceof ServiceDefinition) {
+            // If the service discovery is one of camel provides, the definition
+            // is already of the expected type.
+            definition  (ServiceDefinition)server;
+        } else {
+            // If ribbon server list is configured through client config properties
+            // i.e. with listOfServers property the instance provided by the load
+            // balancer is of type Server so a conversion is needed
+            definition  new RibbonServiceDefinition(
+                serviceName,
+                server.getHost(),
+                server.getPort()
+            );
+
+            String zone  server.getZone();
+            if (zone ! null) {
+                server.setZone(zone);
+            }
+        }
+
+        return request.apply(definition);
     }
 
     // ************************
     // Helpers
     // ************************
 
-    private ZoneAwareLoadBalancer<RibbonServiceDefinition> createLoadBalancer(String serviceName, ServiceDiscovery serviceDiscovery) {
+    private ZoneAwareLoadBalancer<RibbonServiceDefinition> createLoadBalancer(String serviceName) {
         // setup client config
         IClientConfig config  configuration.getClientName() ! null
             ? IClientConfig.Builder.newBuilder(configuration.getClientName()).build()
             : IClientConfig.Builder.newBuilder().build();
 
-        if (configuration.getClientConfig() ! null) {
-            for (Map.Entry<String, String> entry : configuration.getClientConfig().entrySet()) {
+        if (configuration.getProperties() ! null) {
+            for (Map.Entry<String, String> entry : configuration.getProperties().entrySet()) {
                 IClientConfigKey key  IClientConfigKey.Keys.valueOf(entry.getKey());
                 String value  entry.getValue();
 
@@ -157,13 +182,21 @@ public class RibbonLoadBalancer
             }
         }
 
-        return new ZoneAwareLoadBalancer<>(
-            config,
-            configuration.getRuleOrDefault(RoundRobinRule::new),
-            configuration.getPingOrDefault(DummyPing::new),
-            new RibbonServerList(serviceName, serviceDiscovery, serviceFilter),
-            null,
-            new PollingServerListUpdater(config));
+        ZoneAwareLoadBalancer<RibbonServiceDefinition> loadBalancer;
+
+        if (serviceDiscovery ! null) {
+            loadBalancer  new ZoneAwareLoadBalancer<>(
+                config,
+                configuration.getRuleOrDefault(RoundRobinRule::new),
+                configuration.getPingOrDefault(DummyPing::new),
+                new RibbonServerList(serviceName, serviceDiscovery, serviceFilter),
+                null,
+                new PollingServerListUpdater(config));
+        } else {
+            loadBalancer  new ZoneAwareLoadBalancer<>(config);
+        }
+
+        return loadBalancer;
     }
 
     static final class RibbonServerList implements ServerList<RibbonServiceDefinition>  {

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/cloud/RibbonLoadBalancerFactory.java
----------------------------------------------------------------------
diff --git a/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/cloud/RibbonLoadBalancerFactory.java b/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/cloud/RibbonLoadBalancerFactory.java
index 5a211fc..f166011 100644
--- a/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/cloud/RibbonLoadBalancerFactory.java
+++ b/components/camel-ribbon/src/main/java/org/apache/camel/component/ribbon/cloud/RibbonLoadBalancerFactory.java
@@ -70,12 +70,12 @@ public class RibbonLoadBalancerFactory implements LoadBalancerFactory {
         configuration.setClientName(clientName);
     }
 
-    public Map<String, String> getClientConfig() {
-        return configuration.getClientConfig();
+    public Map<String, String> getProperties() {
+        return configuration.getProperties();
     }
 
-    public void setClientConfig(Map<String, String> clientConfig) {
-        configuration.setClientConfig(clientConfig);
+    public void setProperties(Map<String, String> clientConfig) {
+        configuration.setProperties(clientConfig);
     }
 
     // *************************************************************************

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/components/camel-ribbon/src/test/java/org/apache/camel/component/ribbon/cloud/RibbonServiceCallUpdateRouteTest.java
----------------------------------------------------------------------
diff --git a/components/camel-ribbon/src/test/java/org/apache/camel/component/ribbon/cloud/RibbonServiceCallUpdateRouteTest.java b/components/camel-ribbon/src/test/java/org/apache/camel/component/ribbon/cloud/RibbonServiceCallUpdateRouteTest.java
index c00f1c7..27aba3e 100644
--- a/components/camel-ribbon/src/test/java/org/apache/camel/component/ribbon/cloud/RibbonServiceCallUpdateRouteTest.java
+++ b/components/camel-ribbon/src/test/java/org/apache/camel/component/ribbon/cloud/RibbonServiceCallUpdateRouteTest.java
@@ -17,8 +17,6 @@
 
 package org.apache.camel.component.ribbon.cloud;
 
-import java.util.Collections;
-
 import org.apache.camel.RoutesBuilder;
 import org.apache.camel.builder.RouteBuilder;
 import org.apache.camel.component.ribbon.RibbonConfiguration;
@@ -76,7 +74,7 @@ public class RibbonServiceCallUpdateRouteTest extends CamelTestSupport {
             public void configure() throws Exception {
                 RibbonConfiguration configuration  new RibbonConfiguration();
                 // lets update quick so we do not have to sleep so much in the tests
-                configuration.setClientConfig(Collections.singletonMap(ServerListRefreshInterval, 250));
+                configuration.addProperty(ServerListRefreshInterval, 250);
                 RibbonLoadBalancer loadBalancer  new RibbonLoadBalancer(configuration);
 
                 from(direct:start)

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/components/camel-ribbon/src/test/java/org/apache/camel/component/ribbon/cloud/SpringDslRibbonPropertiesServiceCallRouteTest.java
----------------------------------------------------------------------
diff --git a/components/camel-ribbon/src/test/java/org/apache/camel/component/ribbon/cloud/SpringDslRibbonPropertiesServiceCallRouteTest.java b/components/camel-ribbon/src/test/java/org/apache/camel/component/ribbon/cloud/SpringDslRibbonPropertiesServiceCallRouteTest.java
new file mode 100644
index 0000000..9456b7a
--- /dev/null
+++ b/components/camel-ribbon/src/test/java/org/apache/camel/component/ribbon/cloud/SpringDslRibbonPropertiesServiceCallRouteTest.java
@@ -0,0 +1,31 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.camel.component.ribbon.cloud;
+
+import org.springframework.context.support.AbstractApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+import org.springframework.test.annotation.DirtiesContext;
+
+@DirtiesContext
+public class SpringDslRibbonPropertiesServiceCallRouteTest extends SpringRibbonServiceCallRouteTest {
+    @Override
+    protected AbstractApplicationContext createApplicationContext() {
+        return new ClassPathXmlApplicationContext(org/apache/camel/component/ribbon/cloud/SpringDslRibbonPropertiesServiceCallRouteTest.xml);
+    }
+}
+

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/components/camel-ribbon/src/test/resources/org/apache/camel/component/ribbon/cloud/SpringDslRibbonPropertiesServiceCallRouteTest.xml
----------------------------------------------------------------------
diff --git a/components/camel-ribbon/src/test/resources/org/apache/camel/component/ribbon/cloud/SpringDslRibbonPropertiesServiceCallRouteTest.xml b/components/camel-ribbon/src/test/resources/org/apache/camel/component/ribbon/cloud/SpringDslRibbonPropertiesServiceCallRouteTest.xml
new file mode 100644
index 0000000..b182bc2
--- /dev/null
+++ b/components/camel-ribbon/src/test/resources/org/apache/camel/component/ribbon/cloud/SpringDslRibbonPropertiesServiceCallRouteTest.xml
@@ -0,0 +1,55 @@
+<?xml version1.0 encodingUTF-8?>
+<!--
+  ~ Licensed to the Apache Software Foundation (ASF) under one or more
+  ~ contributor license agreements.  See the NOTICE file distributed with
+  ~ this work for additional information regarding copyright ownership.
+  ~ The ASF licenses this file to You under the Apache License, Version 2.0
+  ~ (the License); you may not use this file except in compliance with
+  ~ the License.  You may obtain a copy of the License at
+  ~
+  ~      http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an AS IS BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License.
+  -->
+<beans xmlnshttp://www.springframework.org/schema/beans
+       xmlns:xsihttp://www.w3.org/2001/XMLSchema-instance
+       xsi:schemaLocation
+         http://www.springframework.org/schema/beans
+         http://www.springframework.org/schema/beans/spring-beans.xsd
+         http://camel.apache.org/schema/spring
+         http://camel.apache.org/schema/spring/camel-spring.xsd>
+
+  <camelContext xmlnshttp://camel.apache.org/schema/spring>
+    <route>
+      <from uridirect:start/>
+      <serviceCall namemyService>
+        <!-- enable ribbon load balancer -->
+        <ribbonLoadBalancer clientNamemyClient>
+          <properties keylistOfServers valuelocalhost:9090,localhost:9091/>
+        </ribbonLoadBalancer>
+      </serviceCall>
+      <to urimock:result/>
+    </route>
+
+    <route>
+      <from urijetty:http://localhost:9090/>
+      <to urimock:9090/>
+      <transform>
+        <constant>9090</constant>
+      </transform>
+    </route>
+
+    <route>
+      <from urijetty:http://localhost:9091/>
+      <to urimock:9091/>
+      <transform>
+        <constant>9091</constant>
+      </transform>
+    </route>
+  </camelContext>
+
+</beans>

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationCommon.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationCommon.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationCommon.java
new file mode 100644
index 0000000..d45c3cc
--- /dev/null
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationCommon.java
@@ -0,0 +1,89 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.model.cloud.springboot;
+
+import java.util.Map;
+
+/**
+ * Generated by camel-package-maven-plugin - do not edit this file!
+ */
+public class RibbonServiceCallLoadBalancerConfigurationCommon {
+
+    /**
+     * The namespace
+     */
+    private String namespace;
+    /**
+     * The username
+     */
+    private String username;
+    /**
+     * The password
+     */
+    private String password;
+    /**
+     * Sets the Ribbon client name
+     */
+    private String clientName;
+    /**
+     * Set client properties to use. These properties are specific to what
+     * service call implementation are in use. For example if using ribbon then
+     * the client properties are define in
+     * com.netflix.client.config.CommonClientConfigKey.
+     */
+    private Map<String, String> properties;
+
+    public String getNamespace() {
+        return namespace;
+    }
+
+    public void setNamespace(String namespace) {
+        this.namespace  namespace;
+    }
+
+    public String getUsername() {
+        return username;
+    }
+
+    public void setUsername(String username) {
+        this.username  username;
+    }
+
+    public String getPassword() {
+        return password;
+    }
+
+    public void setPassword(String password) {
+        this.password  password;
+    }
+
+    public String getClientName() {
+        return clientName;
+    }
+
+    public void setClientName(String clientName) {
+        this.clientName  clientName;
+    }
+
+    public Map<String, String> getProperties() {
+        return properties;
+    }
+
+    public void setProperties(Map<String, String> properties) {
+        this.properties  properties;
+    }
+}
\ No newline at end of file

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationProperties.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationProperties.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationProperties.java
new file mode 100644
index 0000000..a826984
--- /dev/null
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationProperties.java
@@ -0,0 +1,48 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.model.cloud.springboot;
+
+import java.util.HashMap;
+import java.util.Map;
+import org.springframework.boot.context.properties.ConfigurationProperties;
+
+@ConfigurationProperties(prefix  camel.cloud.ribbon.load-balancer)
+public class RibbonServiceCallLoadBalancerConfigurationProperties
+        extends
+            RibbonServiceCallLoadBalancerConfigurationCommon {
+
+    /**
+     * Enable the component
+     */
+    private boolean enabled  true;
+    /**
+     * Define additional configuration definitions
+     */
+    private Map<String, RibbonServiceCallLoadBalancerConfigurationCommon> configurations  new HashMap<>();
+
+    public Map<String, RibbonServiceCallLoadBalancerConfigurationCommon> getConfigurations() {
+        return configurations;
+    }
+
+    public boolean isEnabled() {
+        return enabled;
+    }
+
+    public void setEnabled(boolean enabled) {
+        this.enabled  enabled;
+    }
+}
\ No newline at end of file

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/platforms/spring-boot/components-starter/camel-etcd-starter/src/test/java/org/apache/camel/component/etcd/springboot/cloud/EtcdServiceDiscoveryDisabledTest.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-etcd-starter/src/test/java/org/apache/camel/component/etcd/springboot/cloud/EtcdServiceDiscoveryDisabledTest.java b/platforms/spring-boot/components-starter/camel-etcd-starter/src/test/java/org/apache/camel/component/etcd/springboot/cloud/EtcdServiceDiscoveryDisabledTest.java
index 5ca84bf..3d3548a 100644
--- a/platforms/spring-boot/components-starter/camel-etcd-starter/src/test/java/org/apache/camel/component/etcd/springboot/cloud/EtcdServiceDiscoveryDisabledTest.java
+++ b/platforms/spring-boot/components-starter/camel-etcd-starter/src/test/java/org/apache/camel/component/etcd/springboot/cloud/EtcdServiceDiscoveryDisabledTest.java
@@ -36,7 +36,7 @@ import org.springframework.test.context.junit4.SpringRunner;
 @SpringBootApplication
 @SpringBootTest(
     classes  {
-        EtcdServiceDiscoveryEnabledTest.TestConfiguration.class
+        EtcdServiceDiscoveryDisabledTest.TestConfiguration.class
     },
     properties  {
         debugfalse,

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/platforms/spring-boot/components-starter/camel-ribbon-starter/src/main/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonCloudAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ribbon-starter/src/main/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonCloudAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-ribbon-starter/src/main/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonCloudAutoConfiguration.java
index fc6a4fd..8a58108 100644
--- a/platforms/spring-boot/components-starter/camel-ribbon-starter/src/main/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonCloudAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ribbon-starter/src/main/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonCloudAutoConfiguration.java
@@ -18,13 +18,19 @@ package org.apache.camel.component.ribbon.springboot.cloud;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.PostConstruct;
 
 import org.apache.camel.CamelContext;
 import org.apache.camel.cloud.LoadBalancer;
 import org.apache.camel.component.ribbon.cloud.RibbonLoadBalancerFactory;
+import org.apache.camel.model.cloud.springboot.RibbonServiceCallLoadBalancerConfigurationCommon;
+import org.apache.camel.model.cloud.springboot.RibbonServiceCallLoadBalancerConfigurationProperties;
 import org.apache.camel.spring.boot.CamelAutoConfiguration;
 import org.apache.camel.spring.boot.util.GroupCondition;
 import org.apache.camel.util.IntrospectionSupport;
+import org.springframework.beans.factory.BeanCreationException;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.beans.factory.config.ConfigurableBeanFactory;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
@@ -38,21 +44,54 @@ import org.springframework.context.annotation.Lazy;
 @ConditionalOnBean(CamelAutoConfiguration.class)
 @Conditional(RibbonCloudAutoConfiguration.Condition.class)
 @AutoConfigureAfter(CamelAutoConfiguration.class)
-@EnableConfigurationProperties(RibbonCloudConfiguration.class)
+@EnableConfigurationProperties(RibbonServiceCallLoadBalancerConfigurationProperties.class)
 public class RibbonCloudAutoConfiguration {
+    @Autowired
+    private CamelContext camelContext;
+    @Autowired
+    private RibbonServiceCallLoadBalancerConfigurationProperties configuration;
+    @Autowired
+    private ConfigurableBeanFactory beanFactory;
+
     @Lazy
     @Bean(name  ribbon-load-balancer)
     @ConditionalOnClass(CamelContext.class)
-    public LoadBalancer configureServiceDiscoveryFactory(CamelContext camelContext, RibbonCloudConfiguration configuration) throws Exception {
+    public LoadBalancer configureLoadBalancerFactory() throws Exception {
         RibbonLoadBalancerFactory factory  new RibbonLoadBalancerFactory();
 
-        Map<String, Object> parameters  new HashMap<>();
-        IntrospectionSupport.getProperties(configuration, parameters, null, false);
-        IntrospectionSupport.setProperties(camelContext, camelContext.getTypeConverter(), factory, parameters);
+        IntrospectionSupport.setProperties(
+            camelContext,
+            camelContext.getTypeConverter(),
+            factory,
+            IntrospectionSupport.getNonNullProperties(configuration));
 
         return factory.newInstance(camelContext);
     }
 
+    @PostConstruct
+    public void postConstruct() {
+        if (beanFactory ! null) {
+            Map<String, Object> parameters  new HashMap<>();
+
+            for (Map.Entry<String, RibbonServiceCallLoadBalancerConfigurationCommon> entry : configuration.getConfigurations().entrySet()) {
+                // clean up params
+                parameters.clear();
+
+                // The instance factory
+                RibbonLoadBalancerFactory factory  new RibbonLoadBalancerFactory();
+
+                try {
+                    IntrospectionSupport.getProperties(entry.getValue(), parameters, null, false);
+                    IntrospectionSupport.setProperties(camelContext, camelContext.getTypeConverter(), factory, parameters);
+
+                    beanFactory.registerSingleton(entry.getKey(), factory.newInstance(camelContext));
+                } catch (Exception e) {
+                    throw new BeanCreationException(entry.getKey(), e.getMessage(), e);
+                }
+            }
+        }
+    }
+
     // *******************************
     // Condition
     // *******************************
@@ -60,8 +99,8 @@ public class RibbonCloudAutoConfiguration {
     public static class Condition extends GroupCondition {
         public Condition() {
             super(
-                camel.cloud,
-                camel.cloud.ribbon
+                camel.cloud.ribbon,
+                camel.cloud.ribbon.load-balancer
             );
         }
     }

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/platforms/spring-boot/components-starter/camel-ribbon-starter/src/main/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonCloudConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ribbon-starter/src/main/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonCloudConfiguration.java b/platforms/spring-boot/components-starter/camel-ribbon-starter/src/main/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonCloudConfiguration.java
deleted file mode 100644
index dd31bea..0000000
--- a/platforms/spring-boot/components-starter/camel-ribbon-starter/src/main/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonCloudConfiguration.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.component.ribbon.springboot.cloud;
-
-import org.apache.camel.component.ribbon.RibbonConfiguration;
-import org.springframework.boot.context.properties.ConfigurationProperties;
-
-@ConfigurationProperties(prefix  camel.cloud.ribbon)
-public class RibbonCloudConfiguration {
-    private boolean enabled  true;
-    private LoadBalancerConfiguration loadBalancer  new LoadBalancerConfiguration();
-
-    public boolean isEnabled() {
-        return enabled;
-    }
-
-    public void setEnabled(boolean enabled) {
-        this.enabled  enabled;
-    }
-
-    public LoadBalancerConfiguration getLoadBalancer() {
-        return loadBalancer;
-    }
-
-    // *************************************************************************
-    //
-    // *************************************************************************
-
-    public class LoadBalancerConfiguration extends RibbonConfiguration {
-    }
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/platforms/spring-boot/components-starter/camel-ribbon-starter/src/main/resources/application.properties
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ribbon-starter/src/main/resources/application.properties b/platforms/spring-boot/components-starter/camel-ribbon-starter/src/main/resources/application.properties
deleted file mode 100644
index 024710e..0000000
--- a/platforms/spring-boot/components-starter/camel-ribbon-starter/src/main/resources/application.properties
+++ /dev/null
@@ -1 +0,0 @@
-camel.cloud.ribbon.load-balancer.
\ No newline at end of file

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/platforms/spring-boot/components-starter/camel-ribbon-starter/src/test/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonLoadBalancerDisabledTest.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ribbon-starter/src/test/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonLoadBalancerDisabledTest.java b/platforms/spring-boot/components-starter/camel-ribbon-starter/src/test/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonLoadBalancerDisabledTest.java
new file mode 100644
index 0000000..e2e322f
--- /dev/null
+++ b/platforms/spring-boot/components-starter/camel-ribbon-starter/src/test/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonLoadBalancerDisabledTest.java
@@ -0,0 +1,64 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.component.ribbon.springboot.cloud;
+
+import java.util.Map;
+
+import org.apache.camel.cloud.LoadBalancer;
+import org.apache.camel.model.cloud.springboot.RibbonServiceCallLoadBalancerConfigurationProperties;
+import org.junit.Assert;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.test.annotation.DirtiesContext;
+import org.springframework.test.context.junit4.SpringRunner;
+
+@RunWith(SpringRunner.class)
+@DirtiesContext
+@SpringBootApplication
+@SpringBootTest(
+    classes  {
+        RibbonLoadBalancerDisabledTest.TestConfiguration.class
+    },
+    properties  {
+        debugfalse,
+        camel.cloud.ribbon.load-balancer.enabledfalse
+})
+public class RibbonLoadBalancerDisabledTest {
+    @Autowired
+    ApplicationContext context;
+
+    @Test
+    public void testConfiguration() throws Exception {
+        Map<String, ?> beans;
+
+        beans  context.getBeansOfType(RibbonServiceCallLoadBalancerConfigurationProperties.class);
+        Assert.assertTrue(beans.isEmpty());
+
+        beans  context.getBeansOfType(LoadBalancer.class);
+        Assert.assertTrue(beans.isEmpty());
+        Assert.assertFalse(beans.containsKey(ribbon-load-balancer));
+    }
+
+    @Configuration
+    public static class TestConfiguration {
+    }
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/platforms/spring-boot/components-starter/camel-ribbon-starter/src/test/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonLoadBalancerEnabledTest.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ribbon-starter/src/test/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonLoadBalancerEnabledTest.java b/platforms/spring-boot/components-starter/camel-ribbon-starter/src/test/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonLoadBalancerEnabledTest.java
new file mode 100644
index 0000000..b7e2780
--- /dev/null
+++ b/platforms/spring-boot/components-starter/camel-ribbon-starter/src/test/java/org/apache/camel/component/ribbon/springboot/cloud/RibbonLoadBalancerEnabledTest.java
@@ -0,0 +1,65 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.component.ribbon.springboot.cloud;
+
+import java.util.Map;
+
+import org.apache.camel.cloud.LoadBalancer;
+import org.apache.camel.model.cloud.springboot.RibbonServiceCallLoadBalancerConfigurationProperties;
+import org.junit.Assert;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.context.ApplicationContext;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.test.annotation.DirtiesContext;
+import org.springframework.test.context.junit4.SpringRunner;
+
+@RunWith(SpringRunner.class)
+@DirtiesContext
+@SpringBootApplication
+@SpringBootTest(
+    classes  {
+        RibbonLoadBalancerEnabledTest.TestConfiguration.class
+    },
+    properties  {
+        debugfalse,
+        camel.cloud.ribbon.load-balancer.enabledtrue
+})
+public class RibbonLoadBalancerEnabledTest {
+    @Autowired
+    ApplicationContext context;
+
+    @Test
+    public void testConfiguration() throws Exception {
+        Map<String, ?> beans;
+
+        beans  context.getBeansOfType(RibbonServiceCallLoadBalancerConfigurationProperties.class);
+        Assert.assertFalse(beans.isEmpty());
+        Assert.assertEquals(1, beans.size());
+
+        beans  context.getBeansOfType(LoadBalancer.class);
+        Assert.assertFalse(beans.isEmpty());
+        Assert.assertTrue(beans.containsKey(ribbon-load-balancer));
+    }
+
+    @Configuration
+    public static class TestConfiguration {
+    }
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/platforms/spring-boot/components-starter/camel-ribbon-starter/src/test/resources/logback.xml
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ribbon-starter/src/test/resources/logback.xml b/platforms/spring-boot/components-starter/camel-ribbon-starter/src/test/resources/logback.xml
new file mode 100644
index 0000000..6fb40a6
--- /dev/null
+++ b/platforms/spring-boot/components-starter/camel-ribbon-starter/src/test/resources/logback.xml
@@ -0,0 +1,39 @@
+<?xml version1.0 encodingUTF-8?>
+<!--
+  ~ Licensed to the Apache Software Foundation (ASF) under one or more
+  ~ contributor license agreements.  See the NOTICE file distributed with
+  ~ this work for additional information regarding copyright ownership.
+  ~ The ASF licenses this file to You under the Apache License, Version 2.0
+  ~ (the License); you may not use this file except in compliance with
+  ~ the License.  You may obtain a copy of the License at
+  ~
+  ~      http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an AS IS BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License.
+  -->
+<configuration>
+
+  <appender nameSTDOUT classch.qos.logback.core.ConsoleAppender>
+    <!-- encoders are assigned the type
+         ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
+    <encoder>
+      <pattern>%d{HH:mm:ss.SSS} [%-15.15thread] %-5level %-30.30logger - %msg%n</pattern>
+    </encoder>
+  </appender>
+
+  <appender nameFILE classch.qos.logback.core.FileAppender>
+    <encoder>
+      <pattern>%d{HH:mm:ss.SSS} [%-15.15thread] %-5level %-30.30logger - %msg%n</pattern>
+    </encoder>
+    <file>target/camel-ribbon-starter-test.log</file>
+  </appender>
+
+  <root levelINFO>
+    <appender-ref refFILE/>
+  </root>
+
+</configuration>
\ No newline at end of file

http://git-wip-us.apache.org/repos/asf/camel/blob/567dff40/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java
----------------------------------------------------------------------
diff --git a/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java b/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java
index a2f5fcd..bba8ecf 100644
--- a/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java
+++ b/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java
@@ -263,6 +263,18 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
             createOtherModelConfigurationSource(pkg, model, camel.cloud.kubernetes.service-discovery, true);
         }
 
+        // Ribbon
+        json  loadModelJson(files, ribbonLoadBalancer);
+        if (json ! null) {
+            OtherModel model  generateOtherModel(json);
+
+            int pos  model.getJavaType().lastIndexOf(.);
+            String pkg  model.getJavaType().substring(0, pos) + .springboot;
+
+            // Generate properties, auto-configuration happens in camel-kubernetes-starter
+            createOtherModelConfigurationSource(pkg, model, camel.cloud.ribbon.load-balancer, true);
+        }
+
         // Rest
         json  loadModelJson(files, restConfiguration);
         if (json ! null) {


"
"152","762","2017-04-18 15:05:28+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1632: CAMEL-11144: Add components to component table, ad...","Return-Path: <dev-return-47400-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 88F9F194F3
	for <apmail-camel-dev-archive@www.apache.org>; Tue, 18 Apr 2017 15:05:34 +0000 (UTC)
Received: (qmail 99064 invoked by uid 500); 18 Apr 2017 15:05:29 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 99020 invoked by uid 500); 18 Apr 2017 15:05:28 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 99009 invoked by uid 99); 18 Apr 2017 15:05:28 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 15:05:28 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 3EF8ADFBDA; Tue, 18 Apr 2017 15:05:28 +0000 (UTC)
From: ctron <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
References: <git-pr-1632-camel@git.apache.org>
In-Reply-To: <git-pr-1632-camel@git.apache.org>
Subject: [GitHub] camel pull request #1632: CAMEL-11144: Add components to component table, ad...
Content-Type: text/plain
Message-Id: <20170418150528.3EF8ADFBDA@git1-us-west.apache.org>
Date: Tue, 18 Apr 2017 15:05:28 +0000 (UTC)

Github user ctron closed the pull request at:

    https://github.com/apache/camel/pull/1632


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"153","1394","2017-04-18 15:05:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11144) camel-milo - Use dynamic port in
 test","Return-Path: <issues-return-41519-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 4F221194FF
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 15:05:48 +0000 (UTC)
Received: (qmail 2458 invoked by uid 500); 18 Apr 2017 15:05:48 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 2422 invoked by uid 500); 18 Apr 2017 15:05:47 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 2413 invoked by uid 99); 18 Apr 2017 15:05:47 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 15:05:47 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 7E9761A071D
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 15:05:47 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id RZsChB3T2a0J for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 15:05:44 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 7DDB35FDFC
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 15:05:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 853D3E08C5
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 15:05:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id E513D21B54
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 15:05:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 15:05:41 +0000 (UTC)
From: ASF GitHub Bot (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13063723.1492072154000.306756.1492527941936@Atlassian.JIRA>
In-Reply-To: <JIRA.13063723.1492072154000@Atlassian.JIRA>
References: <JIRA.13063723.1492072154000@Atlassian.JIRA> <JIRA.13063723.1492072154247@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11144) camel-milo - Use dynamic port in
 test
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11144?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15972873#comment-15972873 ] 

ASF GitHub Bot commented on CAMEL-11144:
----------------------------------------

Github user ctron closed the pull request at:

    https://github.com/apache/camel/pull/1632


> camel-milo - Use dynamic port in test
> -------------------------------------
>
>                 Key: CAMEL-11144
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11144
>             Project: Camel
>          Issue Type: Test
>            Reporter: Claus Ibsen
>            Assignee: Jens Reimann
>             Fix For: 2.20.0
>
>
> This component uses hard coded port numbers which should be dynamic assigned so it tests better on CI servers etc.
> Also the tests must be improved as they tend to hang etc.
> And the test code should be polished and updated as it has a bunch of commented out stuff and seems personal hostnames etc.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"154","1867","2017-04-18 15:20:06+00:00","aandatho@visa.com","['users@camel.apache.org']","Re: How to use request reply in JMS","Return-Path: <users-return-65350-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 1D382196A2
	for <apmail-camel-users-archive@www.apache.org>; Tue, 18 Apr 2017 15:26:24 +0000 (UTC)
Received: (qmail 97768 invoked by uid 500); 18 Apr 2017 15:26:19 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 95947 invoked by uid 500); 18 Apr 2017 15:26:18 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Delivered-To: moderator for users@camel.apache.org
Received: (qmail 76989 invoked by uid 99); 18 Apr 2017 15:21:42 -0000
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 1.878
X-Spam-Level: *
X-Spam-Status: No, score1.878 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	HTML_MESSAGE2, RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RP_MATCHES_RCVD-0.001, SPF_PASS-0.001]
	autolearndisabled
Authentication-Results: spamd4-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dvisa.com
X-NAI-Header: Modified by McAfee Email Gateway (5500)
DKIM-Signature: v1; arsa-sha256; csimple/simple;
	dvisa.com; sportalo; t1492528891; hFrom:
	 To:Subject:Thread-Topic:Thread-Index:Date:
	 Message-ID:Accept-Language:Content-Language:
	 X-MS-Has-Attach:X-MS-TNEF-Correlator:x-ms-exchange-transport-fromentityheader:
	 Content-Type:MIME-Version; bhpOKzy+BKYhY
	ale09My2AXIDWiCqVhsTikjfSDq9M1KA; bEQgIK8fptz4Q5
	BOrgH4JekvepGnbLoH9RTpDKwBSkwKWS4japxzQIva8VINMwf/
	rUZzQ36LvepbuH8lF6NYSOjnGWLf50YaAVf4PVW7aiGOx4r274
	2+Ht3LDEde8k5+/nUn80sCk2P270tTOaLH5ORuRL54RUMGiJue
	jyjxrEGfqtc+c5w2cmL0rRd7DWB0W+poaslLGWt0ix79OJPyPU
	klBg867tCoK8iDuKKeDumglLwBsUzXnHHq9XodZTjqrt2pSb+2
	qjWoPOhJ9A2adAgIeN7/w+VSRH44wfuSIfkchViwVTJjTQRHx/
	akeE4E9H7XkLMtN7CxEiw4JFjyGYg
From: Andathodan Tiringoli, Ancil Hameed <aandatho@visa.com>
To: users@camel.apache.org <users@camel.apache.org>
Subject: Re: How to use request reply in JMS
Thread-Topic: Re: How to use request reply in JMS
Thread-Index: AdK4Vy7tHpwgEq3+TJ+k9fhZlD/3Ug
Date: Tue, 18 Apr 2017 15:20:06 +0000
Message-ID: <88aeb3caabab4192b8106b90b04fc672@SW933EXP001.visa.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-ms-exchange-transport-fromentityheader: Hosted
Content-Type: multipart/alternative;
	boundary_000_88aeb3caabab4192b8106b90b04fc672SW933EXP001visacom_
MIME-Version: 1.0

--_000_88aeb3caabab4192b8106b90b04fc672SW933EXP001visacom_
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: quoted-printable

Hi Claus Ibsen, can you please help on below
I working on JBoss Fuse, I want to put my SOAP request in Active MQ Queue. 
After putting SOAP request in Queue I want a response sent back to my SOAP 
request.
Sample Code snippet: Below is my camel context
<cxf:cxfEndpoint    address3Dhttp://localhost:8181/cxf/hello
id3DSOAPInput serviceClass3Dcom.ws.demo.HelloWorld/>
<bean class3Dcom.ws.demo.SoapResProcessor id3DsoapResProcessor/>
<camelContext id3DcamelContext
xmlns3Dhttp://camel.apache.org/schema/spring>
<route id3Droute1 streamCache3Dtrue>
<from id3DsampleFrom uri3Dcxf:bean:SOAPInput?
dataFormat3DPAYLOAD&amp;exchangePattern3DInOut/>
<when id3DwhenBatch>
<xpath>starts-with(substring-after((/v1:processMessageRequest/name/text()),
DEST_NAME3D), Sample)</xpath>`enter code here`
<to id3DtoSampleQ uri3Dactivemq:queue:SAMPLEQ?jmsMessageType3DText/>
<process id3DsoapResProcess ref3DsoapResProcessor/>
</when>


--_000_88aeb3caabab4192b8106b90b04fc672SW933EXP001visacom_--

"
"155","1868","2017-04-18 08:37:49-07:00","srinivas@live.com","['users@camel.apache.org']","Re: Camel-SQL more than one IN clauses in SQL throws Exception","Return-Path: <users-return-65351-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 5A551197BB
	for <apmail-camel-users-archive@www.apache.org>; Tue, 18 Apr 2017 15:37:55 +0000 (UTC)
Received: (qmail 44795 invoked by uid 500); 18 Apr 2017 15:37:54 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 44743 invoked by uid 500); 18 Apr 2017 15:37:53 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 44732 invoked by uid 99); 18 Apr 2017 15:37:53 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 15:37:53 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id EDE2DC0027
	for <users@camel.apache.org>; Tue, 18 Apr 2017 15:37:52 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 2.285
X-Spam-Level: **
X-Spam-Status: No, score2.285 tagged_above-999 required6.31
	tests[RCVD_IN_DNSWL_NONE-0.0001, SPF_SOFTFAIL0.972, URI_HEX1.313]
	autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id 9MFvgYGG8aDI for <users@camel.apache.org>;
	Tue, 18 Apr 2017 15:37:50 +0000 (UTC)
Received: from mbob.nabble.com (mbob.nabble.com [162.253.133.15])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 80BC860DB8
	for <users@camel.apache.org>; Tue, 18 Apr 2017 15:37:50 +0000 (UTC)
Received: from static.162.255.23.22.macminivault.com (unknown [162.255.23.22])
	by mbob.nabble.com (Postfix) with ESMTP id 93E394158AF5
	for <users@camel.apache.org>; Tue, 18 Apr 2017 08:36:24 -0700 (PDT)
Date: Tue, 18 Apr 2017 08:37:49 -0700 (MST)
From: akpcnu <srinivas@live.com>
To: users@camel.apache.org
Message-ID: <1492529869830-5797826.post@n5.nabble.com>
In-Reply-To: <CAGB5yNm54tvOqwQ+mHihvU1kwQYmheFB12Z7rwLGHiEd5yfAdQ@mail.gmail.com>
References: <1492523259121-5797818.post@n5.nabble.com> <CAGB5yNm54tvOqwQ+mHihvU1kwQYmheFB12Z7rwLGHiEd5yfAdQ@mail.gmail.com>
Subject: Re: Camel-SQL more than one IN clauses in SQL throws Exception
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Thanks Clause, It worked on 2.18.3



--
View this message in context: http://camel.465427.n5.nabble.com/Camel-SQL-more-than-one-IN-clauses-in-SQL-throws-Exception-tp5797818p5797826.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"156","763","2017-04-18 16:56:04+00:00","jenkins@builds.apache.org","['davsclaus@apache.org', 'lburgazzoli@gmail.com', 'dev@camel.apache.org']","Camel.trunk.notest - Build # 3144 - Fixed","Return-Path: <dev-return-47401-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 1272219C45
	for <apmail-camel-dev-archive@www.apache.org>; Tue, 18 Apr 2017 16:56:07 +0000 (UTC)
Received: (qmail 56086 invoked by uid 500); 18 Apr 2017 16:56:06 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 56033 invoked by uid 500); 18 Apr 2017 16:56:06 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 56017 invoked by uid 99); 18 Apr 2017 16:56:06 -0000
Received: from crius.apache.org (HELO crius.apache.org) (140.211.11.14)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 16:56:06 +0000
Received: from crius.apache.org (localhost [127.0.0.1])
	by crius.apache.org (ASF Mail Server at crius.apache.org) with ESMTP id 690809C00A6;
	Tue, 18 Apr 2017 16:56:06 +0000 (UTC)
Date: Tue, 18 Apr 2017 16:56:04 +0000 (UTC)
From: Apache Jenkins Server <jenkins@builds.apache.org>
To: davsclaus@apache.org, lburgazzoli@gmail.com, dev@camel.apache.org
Message-ID: <1711132809.1122.1492534566432.JavaMail.jenkins@crius>
In-Reply-To: <1640579252.977.1492512680081.JavaMail.jenkins@crius>
References: <1640579252.977.1492512680081.JavaMail.jenkins@crius>
Subject: Camel.trunk.notest - Build # 3144 - Fixed
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary----_Part_1121_356440499.1492534564935
X-Jenkins-Job: Camel.trunk.notest
X-Jenkins-Result: SUCCESS

------_Part_1121_356440499.1492534564935
Content-Type: text/plain; charsetUTF-8
Content-Transfer-Encoding: 7bit

The Apache Jenkins build system has built Camel.trunk.notest (build #3144)

Status: Fixed

Check console output at https://builds.apache.org/job/Camel.trunk.notest/3144/ to view the results.
------_Part_1121_356440499.1492534564935--

"
"157","1395","2017-04-18 21:13:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-10948) Camel-hdfs2: initialDelay option
 is overwritten with default value","Return-Path: <issues-return-41520-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 4454D18C95
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 21:13:45 +0000 (UTC)
Received: (qmail 46994 invoked by uid 500); 18 Apr 2017 21:13:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 46960 invoked by uid 500); 18 Apr 2017 21:13:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 46951 invoked by uid 99); 18 Apr 2017 21:13:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 21:13:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id CA6401857B9
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 21:13:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id uUV4_3G_8Lbb for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 21:13:44 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 6E6305FDF6
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 21:13:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 682B1E0875
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 21:13:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id B4E5A21B4F
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 21:13:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 21:13:41 +0000 (UTC)
From: Lyuben Milev (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13048508.1488802579000.311106.1492550021739@Atlassian.JIRA>
In-Reply-To: <JIRA.13048508.1488802579000@Atlassian.JIRA>
References: <JIRA.13048508.1488802579000@Atlassian.JIRA> <JIRA.13048508.1488802579983@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-10948) Camel-hdfs2: initialDelay option
 is overwritten with default value
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-10948?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15973525#comment-15973525 ] 

Lyuben Milev commented on CAMEL-10948:
--------------------------------------

Hello, we had an issue running hdfs test.
Reportedly it also fails in CI, although sure-fire doesnt treat it as error.

This is an irc log:

zregvart> OneOneOneOne: I think this line should be removed
           https://github.com/apache/camel/blob/master/components/camel-hdfs2/s
           rc/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java#L44

> Camel-hdfs2: initialDelay option is overwritten with default value
> ------------------------------------------------------------------
>
>                 Key: CAMEL-10948
>                 URL: https://issues.apache.org/jira/browse/CAMEL-10948
>             Project: Camel
>          Issue Type: Bug
>          Components: camel-hdfs2
>            Reporter: Andrea Cosentino
>            Assignee: Andrea Cosentino
>            Priority: Minor
>             Fix For: 2.17.7, 2.18.4, 2.19.0
>
>
> We need to use the same trick as the mail component in the consumer side.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"158","1396","2017-04-18 21:15:42+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-10948) Camel-hdfs2: initialDelay option
 is overwritten with default value","Return-Path: <issues-return-41521-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id F1BE018CC0
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 21:15:44 +0000 (UTC)
Received: (qmail 52749 invoked by uid 500); 18 Apr 2017 21:15:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 52713 invoked by uid 500); 18 Apr 2017 21:15:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 52704 invoked by uid 99); 18 Apr 2017 21:15:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 21:15:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 8255F1857B9
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 21:15:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id yiP-IzYIvuXi for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 21:15:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 713165F5FD
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 21:15:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id BB83DE08C5
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 21:15:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 2EA1A21B56
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 21:15:42 +0000 (UTC)
Date: Tue, 18 Apr 2017 21:15:42 +0000 (UTC)
From: Zoran Regvart (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13048508.1488802579000.311151.1492550142188@Atlassian.JIRA>
In-Reply-To: <JIRA.13048508.1488802579000@Atlassian.JIRA>
References: <JIRA.13048508.1488802579000@Atlassian.JIRA> <JIRA.13048508.1488802579983@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-10948) Camel-hdfs2: initialDelay option
 is overwritten with default value
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-10948?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15973531#comment-15973531 ] 

Zoran Regvart commented on CAMEL-10948:
---------------------------------------

[~ancosen] This seems to overwrite the URI parameter value given with default value, I think this [HdfsEndpoint.java#L44|https://github.com/apache/camel/blob/master/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java#L44] line needs to be removed as the {{initialDelay}} is already set to {{HdfsConsumer.DEFAULT_CONSUMER_INITIAL_DELAY}} in field initialization at [HdfsConfiguration.java#L74|https://github.com/apache/camel/blob/master/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsConfiguration.java#L74].
The tests actually fail on CI (see [Build #1288 Console output|https://builds.apache.org/view/A-D/view/Camel/job/Camel.trunk.fulltest.java8/1288/org.apache.camel$camel-hdfs2/console]) but are not reported as failed, which is strange.
It fails with:  {{\[ERROR\] There was a timeout or other error in the fork}}

> Camel-hdfs2: initialDelay option is overwritten with default value
> ------------------------------------------------------------------
>
>                 Key: CAMEL-10948
>                 URL: https://issues.apache.org/jira/browse/CAMEL-10948
>             Project: Camel
>          Issue Type: Bug
>          Components: camel-hdfs2
>            Reporter: Andrea Cosentino
>            Assignee: Andrea Cosentino
>            Priority: Minor
>             Fix For: 2.17.7, 2.18.4, 2.19.0
>
>
> We need to use the same trick as the mail component in the consumer side.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"159","1397","2017-04-18 21:18:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-10948) Camel-hdfs2: initialDelay option
 is overwritten with default value","Return-Path: <issues-return-41522-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 4B2C918CD5
	for <apmail-camel-issues-archive@minotaur.apache.org>; Tue, 18 Apr 2017 21:18:44 +0000 (UTC)
Received: (qmail 59294 invoked by uid 500); 18 Apr 2017 21:18:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 59254 invoked by uid 500); 18 Apr 2017 21:18:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 59244 invoked by uid 99); 18 Apr 2017 21:18:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 18 Apr 2017 21:18:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id CF688C147E
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 21:18:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id 5YIufq5_KEiv for <issues@camel.apache.org>;
	Tue, 18 Apr 2017 21:18:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 962015F39D
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 21:18:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id E7163E04FE
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 21:18:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id A1AFF21B48
	for <issues@camel.apache.org>; Tue, 18 Apr 2017 21:18:41 +0000 (UTC)
Date: Tue, 18 Apr 2017 21:18:41 +0000 (UTC)
From: Andrea Cosentino (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13048508.1488802579000.311168.1492550321660@Atlassian.JIRA>
In-Reply-To: <JIRA.13048508.1488802579000@Atlassian.JIRA>
References: <JIRA.13048508.1488802579000@Atlassian.JIRA> <JIRA.13048508.1488802579983@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-10948) Camel-hdfs2: initialDelay option
 is overwritten with default value
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-10948?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15973536#comment-15973536 ] 

Andrea Cosentino commented on CAMEL-10948:
------------------------------------------

Thanks for spotting this. I will fix it tomorrow :-)

> Camel-hdfs2: initialDelay option is overwritten with default value
> ------------------------------------------------------------------
>
>                 Key: CAMEL-10948
>                 URL: https://issues.apache.org/jira/browse/CAMEL-10948
>             Project: Camel
>          Issue Type: Bug
>          Components: camel-hdfs2
>            Reporter: Andrea Cosentino
>            Assignee: Andrea Cosentino
>            Priority: Minor
>             Fix For: 2.17.7, 2.18.4, 2.19.0
>
>
> We need to use the same trick as the mail component in the consumer side.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"160","1869","2017-04-18 20:40:13-07:00","priyanka@karnam.net","['users@camel.apache.org']","Re: How to dynamically inject hystrix properties?","Return-Path: <users-return-65352-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id CF38219D06
	for <apmail-camel-users-archive@www.apache.org>; Wed, 19 Apr 2017 03:40:26 +0000 (UTC)
Received: (qmail 79624 invoked by uid 500); 19 Apr 2017 03:40:26 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 79176 invoked by uid 500); 19 Apr 2017 03:40:25 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 79164 invoked by uid 99); 19 Apr 2017 03:40:24 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 03:40:24 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 767A2CD412
	for <users@camel.apache.org>; Wed, 19 Apr 2017 03:40:24 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -0.795
X-Spam-Level: 
X-Spam-Status: No, score-0.795 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, HTML_MESSAGE2,
	RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H2-2.796,
	URIBL_BLOCKED0.001] autolearndisabled
Authentication-Results: spamd1-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dkarnam-net.20150623.gappssmtp.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id sbOUMGQAi3aM for <users@camel.apache.org>;
	Wed, 19 Apr 2017 03:40:22 +0000 (UTC)
Received: from mail-pf0-f181.google.com (mail-pf0-f181.google.com [209.85.192.181])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id 4BC4F5F405
	for <users@camel.apache.org>; Wed, 19 Apr 2017 03:40:21 +0000 (UTC)
Received: by mail-pf0-f181.google.com with SMTP id 194so5835992pfv.3
        for <users@camel.apache.org>; Tue, 18 Apr 2017 20:40:21 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dkarnam-net.20150623.gappssmtp.com; s20150623;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bhdwAUb1gss2AQPaP0ScTkWuvgKtfUPEIrrtrK9voDtYU;
        bhsom4iTa/1AZ8QFA4B8sxW8ZLY/WHicwDcIjWtG0lMypudw35PNfZw6BTihDzs8dcw
         4E9AZ8tt61llOpjumtOmiIP9Quo98kubT/YfZfDadAFXb1vPo8qd3vRBA359B9vT5Thx
         ulRu5+PtlDsDVL1+azpu/Pod/wlcsA/uxNY1M0q9B6XnwnDG5jDey11OK9+lnedOAJQD
         GVYGEDEujinA0eiiFzufW7ByDm2KvheQUsaasXDYsgH1L0sP9AmHrZrdQiwJM8sK3dR8
         SloiO/fe5SuV+665HgV1U3l15gyqtNYiZcApBaC8kgXPNnJAAPJhpsuai8155h0cYApR
         /kjg
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bhdwAUb1gss2AQPaP0ScTkWuvgKtfUPEIrrtrK9voDtYU;
        bLpvz8CeNP196QLHKeeJ8WKUpvaqwNBABxK1i9JS5P7IrKpw5TRsP+GCvmhlLn+TdwA
         okE8IvSmScQjzCh/eyAWpnyj2quInE6VNnG6HZTiZw8oQr0VMez4W/1RWUg6/US1bCxT
         HMMBN7BJvDVj7WlshE8lgo11n23ShSHS9xkhueAOKor/MzxYY2QLDZv/3Om6nVBeevPC
         IticaFmcPV8sfhDKaaa3L7GqRm6uTdrT6XE7ZXsPLv8ItL0SORl6P1uuESZ2zULQ/wgj
         YGbxMt/hmcZqPehlwDi6VfyooIXsTkQtuWg2No88V1B/G1vxsyovDFhVlwQ5+hb5s545
         dOSw
X-Gm-Message-State: AN3rC/6sw2rd6GCQmHZ+sz1+urPUKUuVcJdbK50HEgZHJAT3SFU1kIvK
	Kv7opAKvLLHovN2JnkTha4Mp8Lus2Q
X-Received: by 10.84.229.15 with SMTP id b15mr1066061plk.41.1492573213829;
 Tue, 18 Apr 2017 20:40:13 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.100.142.66 with HTTP; Tue, 18 Apr 2017 20:40:13 -0700 (PDT)
X-Originating-IP: [2601:600:8c01:43c0:d94a:3c5a:14a4:50e6]
In-Reply-To: <CAGB5yNnAjdPk+htrYF3zGJqVy9NqT+ZcZBEhfMm6mG3uhZGMdQ@mail.gmail.com>
References: <CAOFZOdXeJgWtpDdNrU+X0-w3kt-GQOXAOdY-5q8MQ3A47jNJkA@mail.gmail.com>
 <CAGB5yNnAjdPk+htrYF3zGJqVy9NqT+ZcZBEhfMm6mG3uhZGMdQ@mail.gmail.com>
From: Priyanka Gopinath <priyanka@karnam.net>
Date: Tue, 18 Apr 2017 20:40:13 -0700
Message-ID: <CAOFZOdX95ZDiMMqDtR5cKE6WPKWYXzsNbLmupJCKRMFwZvp3gg@mail.gmail.com>
Subject: Re: How to dynamically inject hystrix properties?
To: users@camel.apache.org
Content-Type: multipart/alternative; boundaryeb2c0befec363d30054d7cc8f2

--94eb2c0befec363d30054d7cc8f2
Content-Type: text/plain; charsetUTF-8

Thank you for the response. I was able to inject values dynamically after
creating a new hystrix route per endpoint.

On Tue, Apr 18, 2017 at 3:44 AM, Claus Ibsen <claus.ibsen@gmail.com> wrote:

> Maybe create 3 different routes where each hystrix is using A, B or C
> keys and then call the appropiate route.
>
> On Mon, Apr 17, 2017 at 12:46 AM, Priyanka Gopinath <priyanka@karnam.net>
> wrote:
> > I have this special usecase where I want to change the threadpool size
> and
> > thread pool key based upon the endpoint that is getting called. All of
> > these values are available in the configuration on the exchange.
> >
> > For eg :
> >
> > Endpoint A > Threadpool(5) > Threadpool key(A)
> > Endpoint B > Threadpool(10) > Threadpool key(Z)
> > Endpoint C > Threadpool(5) > Threadpool Key(A)
> >
> > However, in my hystrix route, all of the params for Hystrix EIP are
> strings
> > and I avent been able to figure the a way to evaluate the same.
> >
> > from(direct:something)
> > .hystrix()
> > .threadPoolkey(hystrix.???? How to inject this value)
> > .end()
> > .to(direct:http-endpoint);
> >
> > I also tried creating a HystrixThreadpoolDefinition and tried setting it
> > as .hystrix().hystrixConfiguration(configuration). But it comes back to
> the
> > same question of how to pass in this configuration. Method calls return
> > ValueBuilders and I could not cast them to the strings/configDefinitions.
> >
> > Please suggest the correct way of doing it.
>
>
>
> --
> Claus Ibsen
> -----------------
> http://davsclaus.com @davsclaus
> Camel in Action 2: https://www.manning.com/ibsen2
>

--94eb2c0befec363d30054d7cc8f2--

"
"161","1870","2017-04-18 22:10:16-07:00","sadiq.manji@sap.com","['users@camel.apache.org']","Parsing issue with unmarshal and bindy.csv with double quotes and
 commas in a single field","Return-Path: <users-return-65353-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0775319F3D
	for <apmail-camel-users-archive@www.apache.org>; Wed, 19 Apr 2017 05:10:31 +0000 (UTC)
Received: (qmail 86144 invoked by uid 500); 19 Apr 2017 05:10:30 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 86009 invoked by uid 500); 19 Apr 2017 05:10:30 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 85996 invoked by uid 99); 19 Apr 2017 05:10:29 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 05:10:29 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 41C1C185E70
	for <users@camel.apache.org>; Wed, 19 Apr 2017 05:10:29 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 1.513
X-Spam-Level: *
X-Spam-Status: No, score1.513 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, RCVD_IN_DNSWL_LOW-0.7,
	RCVD_IN_MSPIKE_H3-0.01, RCVD_IN_MSPIKE_WL-0.01, SPF_FAIL0.919,
	URIBL_BLOCKED0.001, URI_HEX1.313] autolearndisabled
Authentication-Results: spamd3-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dmessagingengine.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id r16746lkVM7V for <users@camel.apache.org>;
	Wed, 19 Apr 2017 05:10:25 +0000 (UTC)
Received: from new1-smtp.messagingengine.com (new1-smtp.messagingengine.com [66.111.4.221])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id C361C5FDF3
	for <users@camel.apache.org>; Wed, 19 Apr 2017 05:10:24 +0000 (UTC)
Received: from compute7.internal (compute7.nyi.internal [10.202.2.47])
	by mailnew.nyi.internal (Postfix) with ESMTP id 0EA431DE6
	for <users@camel.apache.org>; Wed, 19 Apr 2017 01:10:18 -0400 (EDT)
Received: from frontend1 ([10.202.2.160])
  by compute7.internal (MEProxy); Wed, 19 Apr 2017 01:10:18 -0400
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed; d
	messagingengine.com; hcontent-transfer-encoding:content-type
	:date:from:message-id:mime-version:subject:to:x-me-sender
	:x-me-sender:x-sasl-enc:x-sasl-enc; sfm1; bhPw/z8rFrL4FZEfUjHV
	NILShANs1nAFyC/SAGhtbEVAA; bY1pf8Lb57/gNm+CBw6sbhEUAhsgFbUk8tB
	/TLOmYZEtwPJ3twLN4qoeZ5QW4jORR62eiJl3eEGneQvQR+u/GY/yGPtAxRgZQ0o
	LN6hR/R+guoDlURGhR3m8C30xyDesHU6xOqdNukeypaqY7huvkgUzHElTfyF+jeV
	2mQcz5Rdl/82nL3HMiMUDxzMZ/QV9NSIwNLzyRxi0oLvbqNQAsQ05MpNLCoKFwcT
	Lx7XqmwouZmthHcwbtQMhzoy+4hnVoC+UMlkBVKzygHchHRJ68RFN+zdDJiKWeFc
	rM7E9MI7v+j3AqAon7vkCBxJ5QRpNX/ej9T9w/ZrsEGK+b7HmVMw
X-ME-Sender: <xms:OfH2WPIEY2gaZjO85R_hsuZwAv-vM0zjmHaATM-zFGh00KEwqE5AiQ>
X-Sasl-enc: sPP5Ad7LwnB/xR1sljalPSZ0v7urMSDPW/6DLhSjiER7 1492578617
Received: from static.162.255.23.22.macminivault.com (unknown [162.255.23.22])
	by mail.messagingengine.com (Postfix) with ESMTPA id 861F27E6F6
	for <users@camel.apache.org>; Wed, 19 Apr 2017 01:10:17 -0400 (EDT)
Date: Tue, 18 Apr 2017 22:10:16 -0700 (MST)
From: sadiq <sadiq.manji@sap.com>
To: users@camel.apache.org
Message-ID: <1492578616894-5797871.post@n5.nabble.com>
Subject: Parsing issue with unmarshal and bindy.csv with double quotes and
 commas in a single field
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Im experiencing a parsing issue using Bindy to unmarshal a CSV file into a
List of POJOs (my POJO class is annotated with @CsvRecord).

The CSV file contains the following:

partNumber,longDescription,status
123,1970-84 Windshield Washer Jar, Multi Application,Available
234,1967-75 6 Cyl/ Small Block 9 Clutch Bellcrank Assembly,Available
345,1971-79 Fan Blade 19-1/2, 7 Blade,Available

Its the fourth line that is causing an issue:
java.lang.IllegalArgumentException: No position 4 defined for the field:
Available, line: 3 must be specified (it says line 3, but I believe thats
because my CsvRecord class has the skipFirstLinetrue)

The CSV parsing seems to be handling commas within a field surrounded by
double quotes since the 2nd line is okay. Its also handling escaping double
quotes correctly within fields since the 3rd line is fine too.

But the issue is when commas are present after an escaped double quote
within a field that is surrounded by double quotes -- it seems to want to
separate each comma into a new field when it should just be treating it as a
single field.

Im using the latest version of Camel 2.18.3 and still observing this issue.

My route is:

from(sftp://me@myhost.com?sortByfile:modified&antInclude*.csv&passwordxxxx)
	.unmarshal()
	.bindy(BindyType.Csv, ProductDeltaCsvDataModel.class) //throwing exception
here
	.to(direct:processCsv);

This is my CsvRecord POJO class:

@CsvRecord(separator  ,, skipFirstLine  true, quote  \, quoting 
true)
public class ProductDeltaCsvDataModel {

	@DataField(pos  1, required  true)
	private String partNumber;
	
	@DataField(pos  2)
	private String longDescription;
	
	@DataField(pos  3)
	private String status;

	//setters and getters
	...
}

I believe this to be a bug unless there is some configuration I need to set?

Can someone confirm that this is a bug and how I go about logging this bug?

Thanks!
Sadiq



--
View this message in context: http://camel.465427.n5.nabble.com/Parsing-issue-with-unmarshal-and-bindy-csv-with-double-quotes-and-commas-in-a-single-field-tp5797871.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"162","1398","2017-04-19 06:14:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed
 from readme on each full build","Return-Path: <issues-return-41523-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id AB87318190
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 06:14:44 +0000 (UTC)
Received: (qmail 83296 invoked by uid 500); 19 Apr 2017 06:14:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 83255 invoked by uid 500); 19 Apr 2017 06:14:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 83246 invoked by uid 99); 19 Apr 2017 06:14:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 06:14:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id BA4FB189AD4
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 06:14:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.201
X-Spam-Level: 
X-Spam-Status: No, score-99.201 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, URIBL_BLOCKED0.001, USER_IN_WHITELIST-100]
	autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id dvFGCdvk_mcd for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 06:14:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 750125F5FD
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 06:14:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id C83AFE0559
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 06:14:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 8580321B45
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 06:14:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 06:14:41 +0000 (UTC)
From: Tomohisa Igarashi (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064021.1492157502000.314819.1492582481545@Atlassian.JIRA>
In-Reply-To: <JIRA.13064021.1492157502000@Atlassian.JIRA>
References: <JIRA.13064021.1492157502000@Atlassian.JIRA> <JIRA.13064021.1492157502203@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed
 from readme on each full build
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11150?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15974140#comment-15974140 ] 

Tomohisa Igarashi commented on CAMEL-11150:
-------------------------------------------

hmm confusing, that removal from readme doesnt happen today. Still no json file is generated for camel-solr and camel-ignite.

> camel-solr/camel-ignite is removed from readme on each full build
> -----------------------------------------------------------------
>
>                 Key: CAMEL-11150
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11150
>             Project: Camel
>          Issue Type: Task
>          Components: documentation
>            Reporter: Tomohisa Igarashi
>            Assignee: Tomohisa Igarashi
>            Priority: Minor
>
> On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md which shouldnt happen.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"163","1399","2017-04-19 07:05:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11165) Add @Generated annotation to code
 generated by SpringBootAutoConfigurationMojo","Return-Path: <issues-return-41524-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 453A7183A5
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 07:05:50 +0000 (UTC)
Received: (qmail 88976 invoked by uid 500); 19 Apr 2017 07:05:50 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 88935 invoked by uid 500); 19 Apr 2017 07:05:50 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 88926 invoked by uid 99); 19 Apr 2017 07:05:50 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 07:05:50 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id A2FF6185E94
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:05:49 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id vrNwldNFQNBK for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 07:05:48 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 8AA545F664
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:05:47 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id D27BAE0641
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:05:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 8F09C21B46
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:05:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 07:05:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064724.1492525323000.315126.1492585541584@Atlassian.JIRA>
In-Reply-To: <JIRA.13064724.1492525323000@Atlassian.JIRA>
References: <JIRA.13064724.1492525323000@Atlassian.JIRA> <JIRA.13064724.1492525323590@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11165) Add @Generated annotation to code
 generated by SpringBootAutoConfigurationMojo
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11165?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15974201#comment-15974201 ] 

Claus Ibsen commented on CAMEL-11165:
-------------------------------------

I dont think we should include timestamp as it causes the source files to change on each build, eg

+    @Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T07:04:18.056Z)

should just be

+    @Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)

> Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo
> ------------------------------------------------------------------------------
>
>                 Key: CAMEL-11165
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11165
>             Project: Camel
>          Issue Type: Improvement
>          Components: tooling
>            Reporter: Zoran Regvart
>            Assignee: Zoran Regvart
>            Priority: Trivial
>             Fix For: 2.19.0
>
>
> To help IDEs and code analysis tools classes generated by the Camel Maven plugin for Spring Boot configuration support should be annotated with {{@Generated}}.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"165","1400","2017-04-19 07:06:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11165) Add @Generated annotation to code
 generated by SpringBootAutoConfigurationMojo","Return-Path: <issues-return-41525-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 78A86183AC
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 07:06:54 +0000 (UTC)
Received: (qmail 89784 invoked by uid 500); 19 Apr 2017 07:06:54 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 89742 invoked by uid 500); 19 Apr 2017 07:06:54 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 89733 invoked by uid 99); 19 Apr 2017 07:06:54 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 07:06:54 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id EB350D2C0B
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:06:53 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id CRwZhsIQ2RVc for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 07:06:53 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 9ADC25F4EE
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:06:52 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id DC36EE06C5
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:06:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 98C5521B46
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:06:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 07:06:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064724.1492525323000.315130.1492585601624@Atlassian.JIRA>
In-Reply-To: <JIRA.13064724.1492525323000@Atlassian.JIRA>
References: <JIRA.13064724.1492525323000@Atlassian.JIRA> <JIRA.13064724.1492525323590@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11165) Add @Generated annotation to code
 generated by SpringBootAutoConfigurationMojo
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11165?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15974202#comment-15974202 ] 

Claus Ibsen commented on CAMEL-11165:
-------------------------------------

The same for the other places it has been added.

> Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo
> ------------------------------------------------------------------------------
>
>                 Key: CAMEL-11165
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11165
>             Project: Camel
>          Issue Type: Improvement
>          Components: tooling
>            Reporter: Zoran Regvart
>            Assignee: Zoran Regvart
>            Priority: Trivial
>             Fix For: 2.19.0
>
>
> To help IDEs and code analysis tools classes generated by the Camel Maven plugin for Spring Boot configuration support should be annotated with {{@Generated}}.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"164","1401","2017-04-19 07:06:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Reopened] (CAMEL-11165) Add @Generated annotation to code
 generated by SpringBootAutoConfigurationMojo","Return-Path: <issues-return-41526-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id B1743183AE
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 07:06:54 +0000 (UTC)
Received: (qmail 89894 invoked by uid 500); 19 Apr 2017 07:06:54 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 89854 invoked by uid 500); 19 Apr 2017 07:06:54 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 89845 invoked by uid 99); 19 Apr 2017 07:06:54 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 07:06:54 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 32BA61B05E1
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:06:54 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id N-2ZrBdNEi40 for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 07:06:50 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 57B7D5F39D
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:06:49 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id DAD4FE06BB
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:06:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 9705021B45
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:06:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 07:06:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064724.1492525323000.315129.1492585601616@Atlassian.JIRA>
In-Reply-To: <JIRA.13064724.1492525323000@Atlassian.JIRA>
References: <JIRA.13064724.1492525323000@Atlassian.JIRA> <JIRA.13064724.1492525323590@jira-lw-us.apache.org>
Subject: [jira] [Reopened] (CAMEL-11165) Add @Generated annotation to code
 generated by SpringBootAutoConfigurationMojo
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11165?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Claus Ibsen reopened CAMEL-11165:
---------------------------------

> Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo
> ------------------------------------------------------------------------------
>
>                 Key: CAMEL-11165
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11165
>             Project: Camel
>          Issue Type: Improvement
>          Components: tooling
>            Reporter: Zoran Regvart
>            Assignee: Zoran Regvart
>            Priority: Trivial
>             Fix For: 2.19.0
>
>
> To help IDEs and code analysis tools classes generated by the Camel Maven plugin for Spring Boot configuration support should be annotated with {{@Generated}}.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"166","1871","2017-04-19 09:07:12+02:00","claus.ibsen@gmail.com","['users@camel.apache.org']","Re: Camel-SQL more than one IN clauses in SQL throws Exception","Return-Path: <users-return-65354-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 5396F183B4
	for <apmail-camel-users-archive@www.apache.org>; Wed, 19 Apr 2017 07:07:38 +0000 (UTC)
Received: (qmail 90943 invoked by uid 500); 19 Apr 2017 07:07:37 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 90555 invoked by uid 500); 19 Apr 2017 07:07:37 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 90176 invoked by uid 99); 19 Apr 2017 07:07:37 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 07:07:37 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 723D6C0040
	for <users@camel.apache.org>; Wed, 19 Apr 2017 07:07:36 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 1.693
X-Spam-Level: *
X-Spam-Status: No, score1.693 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RCVD_IN_SORBS_SPAM0.5, SPF_PASS-0.001,
	URIBL_BLOCKED0.001, URI_HEX1.313] autolearndisabled
Authentication-Results: spamd4-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id MUqZxKwVr8qM for <users@camel.apache.org>;
	Wed, 19 Apr 2017 07:07:33 +0000 (UTC)
Received: from mail-qt0-f176.google.com (mail-qt0-f176.google.com [209.85.216.176])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTPS id D43DE5FB2C
	for <users@camel.apache.org>; Wed, 19 Apr 2017 07:07:32 +0000 (UTC)
Received: by mail-qt0-f176.google.com with SMTP id m36so12171944qtb.0
        for <users@camel.apache.org>; Wed, 19 Apr 2017 00:07:32 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bhlpLfcxhrVWDhe2/ND9N6T2qQj4VCjufSxSYTu6ERfVs;
        bFpGy5rjv8UM4pLZipOkUajbzdOVKzxU5jJvE8JeNiay53NGf4haWAO+3PP7SxZmaV1
         BgocZLvUDbc3/erfJnr+JIvjTYcC404ySqRLtW6HwOX4NnsE63+dU890UZ5FNx5F7QQT
         uG9ak5GvcBzBUUCrIw+Tzzt5gnIFvSq5lXEcPFe2mJz0PjSfs0ljlhhj1bF+OPm5iFeq
         +lSH/z3CJCh2aIFnS/AKQcwK3HTNT5BEOWyRrNEylx2bUBk0Ivk3nUkH3kTbvsTD6D/K
         jVbiNeKwFWSFqPJvupqQi3Iuvz3hZibLpYjhtA3VOcPPlOO8Mq6XSoo9qABvJetBSK0w
         8gwA
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bhlpLfcxhrVWDhe2/ND9N6T2qQj4VCjufSxSYTu6ERfVs;
        bG1tqpVB5fP1s7B3xo/jvddmD8fDVXFFEO1oMil0RLBLfknVZZG6ht8qBFKn/85vrIv
         2L4R3vLUbtR9cZbYJRBByjNjH0IM/R2ohvSJpLhP/1jJ/XTzIYdvRAa7fRsVQE3jTtWP
         PrPpZJ43L+L6WAXG95RYQW+LRMLqstqc3AhBYmGCA1meTR+KxFRQixmp9lMia/97Vc1Q
         r6nD4hhg9G/MelKazOCkfw+oPLB0nbmpRsLrLsl+dFtHNfn/QRvPrpY5LE1ILAogCYRs
         e1aL2NbpStcBs0is4UMjvgoQUgVCzcYqRRqs2BgaWROa6OGlNlY1C0aAdJTr3P06Crjs
         4z1A
X-Gm-Message-State: AN3rC/44H1bp91mG6njbKMdq4Hrj9UzHQpl8YlAOv5RgaL75DXuBDrB/
	eRmx6hKmeLlFX1ftp5IW+4DrqbCCN7jf
X-Received: by 10.237.41.199 with SMTP id o65mr1218920qtd.239.1492585652497;
 Wed, 19 Apr 2017 00:07:32 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.200.50.39 with HTTP; Wed, 19 Apr 2017 00:07:12 -0700 (PDT)
In-Reply-To: <1492529869830-5797826.post@n5.nabble.com>
References: <1492523259121-5797818.post@n5.nabble.com> <CAGB5yNm54tvOqwQ+mHihvU1kwQYmheFB12Z7rwLGHiEd5yfAdQ@mail.gmail.com>
 <1492529869830-5797826.post@n5.nabble.com>
From: Claus Ibsen <claus.ibsen@gmail.com>
Date: Wed, 19 Apr 2017 09:07:12 +0200
Message-ID: <CAGB5yNn7DCpuvFgG-CeEZd7V63QiRNRi2AJiOHFbU6SAnWN4kg@mail.gmail.com>
Subject: Re: Camel-SQL more than one IN clauses in SQL throws Exception
To: users@camel.apache.org <users@camel.apache.org>
Content-Type: text/plain; charsetUTF-8

It might also work on the latest 2.17.x release in case you want to
stay on that release branch.

On Tue, Apr 18, 2017 at 5:37 PM, akpcnu <srinivas@live.com> wrote:
> Thanks Clause, It worked on 2.18.3
>
>
>
> --
> View this message in context: http://camel.465427.n5.nabble.com/Camel-SQL-more-than-one-IN-clauses-in-SQL-throws-Exception-tp5797818p5797826.html
> Sent from the Camel - Users mailing list archive at Nabble.com.



-- 
Claus Ibsen
-----------------
http://davsclaus.com @davsclaus
Camel in Action 2: https://www.manning.com/ibsen2

"
"167","1402","2017-04-19 07:08:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed
 from readme on each full build","Return-Path: <issues-return-41527-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id D508F183BC
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 07:08:58 +0000 (UTC)
Received: (qmail 92707 invoked by uid 500); 19 Apr 2017 07:08:58 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 92664 invoked by uid 500); 19 Apr 2017 07:08:58 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 92655 invoked by uid 99); 19 Apr 2017 07:08:58 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 07:08:58 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 4C9E5189AAF
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:08:58 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.201
X-Spam-Level: 
X-Spam-Status: No, score-99.201 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, URIBL_BLOCKED0.001, USER_IN_WHITELIST-100]
	autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id TzZTg4ptHhuj for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 07:08:57 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 609265F2FD
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:08:57 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id E045EE06C5
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:08:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 95AA021B46
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:08:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 07:08:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064021.1492157502000.315138.1492585721611@Atlassian.JIRA>
In-Reply-To: <JIRA.13064021.1492157502000@Atlassian.JIRA>
References: <JIRA.13064021.1492157502000@Atlassian.JIRA> <JIRA.13064021.1492157502203@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed
 from readme on each full build
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11150?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15974205#comment-15974205 ] 

Claus Ibsen commented on CAMEL-11150:
-------------------------------------

camel-ignite is a known issue, there is a ticket about that. however camel-solr ought to generate a json file

> camel-solr/camel-ignite is removed from readme on each full build
> -----------------------------------------------------------------
>
>                 Key: CAMEL-11150
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11150
>             Project: Camel
>          Issue Type: Task
>          Components: documentation
>            Reporter: Tomohisa Igarashi
>            Assignee: Tomohisa Igarashi
>            Priority: Minor
>
> On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md which shouldnt happen.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"170","1403","2017-04-19 07:32:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Assigned] (CAMEL-11154) itest - spring-boot fails for
 camel-hbase","Return-Path: <issues-return-41528-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id DECFA18478
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 07:32:48 +0000 (UTC)
Received: (qmail 25619 invoked by uid 500); 19 Apr 2017 07:32:48 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 25584 invoked by uid 500); 19 Apr 2017 07:32:48 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 25575 invoked by uid 99); 19 Apr 2017 07:32:48 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 07:32:48 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 52C451A0920
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:32:48 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id hDpgP4rXvVh9 for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 07:32:47 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 6A1575F2FD
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:32:47 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id F268AE06BB
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:32:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id AE00221B47
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:32:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 07:32:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064597.1492499068000.315262.1492587161711@Atlassian.JIRA>
In-Reply-To: <JIRA.13064597.1492499068000@Atlassian.JIRA>
References: <JIRA.13064597.1492499068000@Atlassian.JIRA> <JIRA.13064597.1492499068132@jira-lw-us.apache.org>
Subject: [jira] [Assigned] (CAMEL-11154) itest - spring-boot fails for
 camel-hbase
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11154?page3Dcom.atlassi
an.jira.plugin.system.issuetabpanels:all-tabpanel ]

Claus Ibsen reassigned CAMEL-11154:
-----------------------------------

    Assignee: Nicola Ferraro

> itest - spring-boot fails for camel-hbase
> -----------------------------------------
>
>                 Key: CAMEL-11154
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11154
>             Project: Camel
>          Issue Type: Test
>          Components: tests
>    Affects Versions: 2.19.0
>            Reporter: Claus Ibsen
>            Assignee: Nicola Ferraro
>             Fix For: 2.19.0
>
>
> Tests in error:> org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apach
e.camel.itest.springboot.CamelHbaseTest)
>   Run 1: CamelHbaseTest>AbstractSpringBootTestSupport.startSpringBoot:44 
C2BB InvocationTarget
>   Run 2: CamelHbaseTest>AbstractSpringBootTestSupport.startSpringBoot:44 
C2BB InvocationTarget
> Tests run: 217, Failures: 0, Errors: 1, Skipped: 0
> [ERROR] There are test failures.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"169","1405","2017-04-19 07:32:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Resolved] (CAMEL-11154) itest - spring-boot fails for
 camel-hbase","Return-Path: <issues-return-41530-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0D82118482
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 07:33:05 +0000 (UTC)
Received: (qmail 26344 invoked by uid 500); 19 Apr 2017 07:33:04 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 26305 invoked by uid 500); 19 Apr 2017 07:33:04 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 26295 invoked by uid 99); 19 Apr 2017 07:33:04 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 07:33:04 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 4217DC062B
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:33:04 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id dHF8NYCzfjO2 for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 07:33:03 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 5DEB05F2FD
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:33:03 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 59178E0CBE
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:32:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id B4EF421B51
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:32:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 07:32:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064597.1492499068000.315266.1492587161739@Atlassian.JIRA>
In-Reply-To: <JIRA.13064597.1492499068000@Atlassian.JIRA>
References: <JIRA.13064597.1492499068000@Atlassian.JIRA> <JIRA.13064597.1492499068132@jira-lw-us.apache.org>
Subject: [jira] [Resolved] (CAMEL-11154) itest - spring-boot fails for
 camel-hbase
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11154?page3Dcom.atlassi
an.jira.plugin.system.issuetabpanels:all-tabpanel ]

Claus Ibsen resolved CAMEL-11154.
---------------------------------
    Resolution: Fixed

> itest - spring-boot fails for camel-hbase
> -----------------------------------------
>
>                 Key: CAMEL-11154
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11154
>             Project: Camel
>          Issue Type: Test
>          Components: tests
>    Affects Versions: 2.19.0
>            Reporter: Claus Ibsen
>            Assignee: Nicola Ferraro
>             Fix For: 2.19.0
>
>
> Tests in error:> org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apach
e.camel.itest.springboot.CamelHbaseTest)
>   Run 1: CamelHbaseTest>AbstractSpringBootTestSupport.startSpringBoot:44 
C2BB InvocationTarget
>   Run 2: CamelHbaseTest>AbstractSpringBootTestSupport.startSpringBoot:44 
C2BB InvocationTarget
> Tests run: 217, Failures: 0, Errors: 1, Skipped: 0
> [ERROR] There are test failures.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"168","1404","2017-04-19 07:32:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-11154) itest - spring-boot fails for
 camel-hbase","Return-Path: <issues-return-41529-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id DCF9A18480
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 07:32:54 +0000 (UTC)
Received: (qmail 26180 invoked by uid 500); 19 Apr 2017 07:32:54 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 26138 invoked by uid 500); 19 Apr 2017 07:32:54 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 26129 invoked by uid 99); 19 Apr 2017 07:32:54 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 07:32:54 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 51321C3B6B
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:32:54 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id xkabOh2htXbU for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 07:32:53 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 759335F1D5
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:32:53 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 5A28AE0436
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:32:47 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id B1B3521B49
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:32:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 07:32:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064597.1492499068000.315264.1492587161726@Atlassian.JIRA>
In-Reply-To: <JIRA.13064597.1492499068000@Atlassian.JIRA>
References: <JIRA.13064597.1492499068000@Atlassian.JIRA> <JIRA.13064597.1492499068132@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-11154) itest - spring-boot fails for
 camel-hbase
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11154?page3Dcom.atlassi
an.jira.plugin.system.issuetabpanels:all-tabpanel ]

Claus Ibsen updated CAMEL-11154:
--------------------------------
    Component/s: tests

> itest - spring-boot fails for camel-hbase
> -----------------------------------------
>
>                 Key: CAMEL-11154
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11154
>             Project: Camel
>          Issue Type: Test
>          Components: tests
>    Affects Versions: 2.19.0
>            Reporter: Claus Ibsen
>            Assignee: Nicola Ferraro
>             Fix For: 2.19.0
>
>
> Tests in error:> org.apache.camel.itest.springboot.CamelHbaseTest.componentTests(org.apach
e.camel.itest.springboot.CamelHbaseTest)
>   Run 1: CamelHbaseTest>AbstractSpringBootTestSupport.startSpringBoot:44 
C2BB InvocationTarget
>   Run 2: CamelHbaseTest>AbstractSpringBootTestSupport.startSpringBoot:44 
C2BB InvocationTarget
> Tests run: 217, Failures: 0, Errors: 1, Skipped: 0
> [ERROR] There are test failures.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"171","1407","2017-04-19 07:46:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-11150) camel-ignite is removed from readme
 on each full build","Return-Path: <issues-return-41532-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id E0A03184FB
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 07:46:44 +0000 (UTC)
Received: (qmail 51313 invoked by uid 500); 19 Apr 2017 07:46:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 51272 invoked by uid 500); 19 Apr 2017 07:46:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 51263 invoked by uid 99); 19 Apr 2017 07:46:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 07:46:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 5E0AAC8CED
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:46:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.001
X-Spam-Level: 
X-Spam-Status: No, score-100.001 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001, URIBL_BLOCKED0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id DJW9Ywxxlv4R for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 07:46:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 22C515FB6A
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:46:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 60869E0D55
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:46:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id BD6F521B54
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:46:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 07:46:41 +0000 (UTC)
From: Tomohisa Igarashi (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064021.1492157502000.315404.1492588001774@Atlassian.JIRA>
In-Reply-To: <JIRA.13064021.1492157502000@Atlassian.JIRA>
References: <JIRA.13064021.1492157502000@Atlassian.JIRA> <JIRA.13064021.1492157502203@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-11150) camel-ignite is removed from readme
 on each full build
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11150?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Tomohisa Igarashi updated CAMEL-11150:
--------------------------------------
    Summary: camel-ignite is removed from readme on each full build  (was: camel-solr/camel-ignite is removed from readme on each full build)

> camel-ignite is removed from readme on each full build
> ------------------------------------------------------
>
>                 Key: CAMEL-11150
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11150
>             Project: Camel
>          Issue Type: Task
>          Components: documentation
>            Reporter: Tomohisa Igarashi
>            Assignee: Tomohisa Igarashi
>            Priority: Minor
>
> On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md which shouldnt happen.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"172","1406","2017-04-19 07:46:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed
 from readme on each full build","Return-Path: <issues-return-41531-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 8E488184FA
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 07:46:44 +0000 (UTC)
Received: (qmail 51177 invoked by uid 500); 19 Apr 2017 07:46:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 50996 invoked by uid 500); 19 Apr 2017 07:46:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 50876 invoked by uid 99); 19 Apr 2017 07:46:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 07:46:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id C12381A79F3
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:46:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.201
X-Spam-Level: 
X-Spam-Status: No, score-99.201 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, URIBL_BLOCKED0.001, USER_IN_WHITELIST-100]
	autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id oG2TSTbmOS7X for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 07:46:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id D695B5FCAE
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:46:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 5CF25E0D53
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:46:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id B7EE021B51
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:46:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 07:46:41 +0000 (UTC)
From: Tomohisa Igarashi (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064021.1492157502000.315401.1492588001751@Atlassian.JIRA>
In-Reply-To: <JIRA.13064021.1492157502000@Atlassian.JIRA>
References: <JIRA.13064021.1492157502000@Atlassian.JIRA> <JIRA.13064021.1492157502203@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11150) camel-solr/camel-ignite is removed
 from readme on each full build
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11150?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15974250#comment-15974250 ] 

Tomohisa Igarashi commented on CAMEL-11150:
-------------------------------------------

ah I found that mvn clean doesnt really remove target/*, so the component.properties file was not updated. Once I removed whole target dir and run mvn install again then json file for all 3 solr components were created.

> camel-solr/camel-ignite is removed from readme on each full build
> -----------------------------------------------------------------
>
>                 Key: CAMEL-11150
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11150
>             Project: Camel
>          Issue Type: Task
>          Components: documentation
>            Reporter: Tomohisa Igarashi
>            Assignee: Tomohisa Igarashi
>            Priority: Minor
>
> On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md which shouldnt happen.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"173","1408","2017-04-19 07:47:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11166) @Generated annotation and java 9
 problem","Return-Path: <issues-return-41533-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 01AFD18511
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 07:47:45 +0000 (UTC)
Received: (qmail 54298 invoked by uid 500); 19 Apr 2017 07:47:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 54261 invoked by uid 500); 19 Apr 2017 07:47:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 54252 invoked by uid 99); 19 Apr 2017 07:47:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 07:47:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 76E9E185E94
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:47:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id Ayequff-tzU6 for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 07:47:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 2BD6C5FDCF
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:47:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 7965BE0D57
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:47:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id DC47621B56
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:47:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 07:47:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13065011.1492588059000.315416.1492588061900@Atlassian.JIRA>
In-Reply-To: <JIRA.13065011.1492588059000@Atlassian.JIRA>
References: <JIRA.13065011.1492588059000@Atlassian.JIRA> <JIRA.13065011.1492588059705@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11166) @Generated annotation and java 9
 problem
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Claus Ibsen created CAMEL-11166:
-----------------------------------

             Summary: @Generated annotation and java 9 problem
                 Key: CAMEL-11166
                 URL: https://issues.apache.org/jira/browse/CAMEL-11166
             Project: Camel
          Issue Type: Task
            Reporter: Claus Ibsen


Just noticed this on the JDK9 build

[ERROR] -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration (validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration: javax/annotation/Generated

[~jpoth] do you have time to help look into this?

It fails when building camel-core due a recent addition of adding `@generated` annotation to the generated source code for spring-boot starters and whatnot.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"174","764","2017-04-19 09:54:25+02:00","claus.ibsen@gmail.com","['dev@camel.apache.org']","Re: Camel 2.19 Roadmap","Return-Path: <dev-return-47402-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 58F3318559
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 07:54:55 +0000 (UTC)
Received: (qmail 66235 invoked by uid 500); 19 Apr 2017 07:54:50 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 66180 invoked by uid 500); 19 Apr 2017 07:54:50 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 66166 invoked by uid 99); 19 Apr 2017 07:54:49 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 07:54:49 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 52B11C062B
	for <dev@camel.apache.org>; Wed, 19 Apr 2017 07:54:49 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -0.32
X-Spam-Level: 
X-Spam-Status: No, score-0.32 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_LOW-0.7, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RCVD_IN_SORBS_SPAM0.5, SPF_PASS-0.001,
	URIBL_BLOCKED0.001] autolearndisabled
Authentication-Results: spamd4-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id tAQjeKJ14H1B for <dev@camel.apache.org>;
	Wed, 19 Apr 2017 07:54:47 +0000 (UTC)
Received: from mail-qt0-f182.google.com (mail-qt0-f182.google.com [209.85.216.182])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTPS id AD6F75FB64
	for <dev@camel.apache.org>; Wed, 19 Apr 2017 07:54:46 +0000 (UTC)
Received: by mail-qt0-f182.google.com with SMTP id c45so12816407qtb.1
        for <dev@camel.apache.org>; Wed, 19 Apr 2017 00:54:46 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bhgxYxykkYMnfHT+8A0fw5S8SR7rKx+adByMtPSNZl5DE;
        bJ4BUg2hcFTdUi690vCkDcqgwvG0LFSzWZPoRzmF3iDqEP6oyyFgTssLrjA0tQwgJB7
         JvzSC3Z2rKd1O/ADHjShJG6owKd9dlrI8yk+J5CR4fQ58wSz3XY5YLp35lGvvRXWm3rJ
         AAttetlTluuKBrwiiBRaohbh8U3qnQTYJk9kunItv7uY6hZNrAIJi7JTsvADcsLrYmHw
         rFTuq9/akWpD4EuOp6dKUzMe28LnNVZjvdEXHzVsYQ6OzihAApE1SmZt9uCHW/mXddpE
         ZGP7KBRsLanZbS/pSJTWSKrEvLK1LPD5LBZGiL+FUU83JS+8yMSCkQeb39Pqtl1oo5fv
         cepQ
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bhgxYxykkYMnfHT+8A0fw5S8SR7rKx+adByMtPSNZl5DE;
        bm8B9fSZnQJDEYZDI0LxjVjQ5VAphnhGY5XXm7rAcWXpsrqJEwTdIYd6xiYPAAy4DIK
         PBuZL//t4/Kdu4rfDFuL5dTmS292KHBcKVM1AxECuzICCwx8unF/NUFTl5vrDBXR6LbB
         M/e6vIFz95WziGUa8IsFgc7HWPYJ27lyaMW1ff+zYJBJEuyHjqMvnjVX0b3SN8IyiUks
         KXkBiCYjcYsDzvnFXmMpzAgT4aeDpjz8l+yQKq3hS52BqDT7hIrefoi+BP/hgsvH04YL
         hqMM3N8hSByXdCQb6EoQlxm+wcThzhpyYaIVO0ByamM7g3evaoSxVD3PNYrzv8frGaRU
         bS/w
X-Gm-Message-State: AN3rC/7icecAV8C0SXMi+OqxGHFsnMXmbUZwjlS8D/pTx1dtWfNJ9BD6
	koKEJ4+z7hmm4Av4f2KpeSX9bpih9jeb4xQ
X-Received: by 10.200.4.140 with SMTP id s12mr1333900qtg.35.1492588485715;
 Wed, 19 Apr 2017 00:54:45 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.200.50.39 with HTTP; Wed, 19 Apr 2017 00:54:25 -0700 (PDT)
In-Reply-To: <CAGB5yNwYjV89vqRtAzS_VjdyQcByUgZBJML3iCrbZLCY4SU7A@mail.gmail.com>
References: <CAGB5yNnndh24TLPL-rs4Vb1-foxXmXHdkRa3CKHW_r9kPdNEw@mail.gmail.com>
 <CAGB5yNkt-+7cTfSRW3wrhgJRJw+BPKRmRjL0vsjsprQpntRgw@mail.gmail.com>
 <CADL1oArZDm8_8Gyy-e15NeUQajdota+iUcsRSiiOTV65oi_VLg@mail.gmail.com>
 <CAGB5yN2bgLei+g6uQEMBp9UpmrNyR1CmT-GO7e-Vamrc+4bRg@mail.gmail.com>
 <CADL1oAq3UFMbOZkofhgrqd6B8rhxpr3UUz_dks5+Btm_S2A6zw@mail.gmail.com>
 <CAGB5yNz-4vjO04NDfCCubi8+wgZeRVFJJhQVsfe9f5ZQovhw@mail.gmail.com>
 <054035E8-B6D6-4636-B52D-D85A7B9F9C85@stefanutti.fr> <CAGB5yNdaGpZRFdJ9raeKTPgnt9AYMFxp5r28M7NBg7C+32pBg@mail.gmail.com>
 <CAGB5yNwYjV89vqRtAzS_VjdyQcByUgZBJML3iCrbZLCY4SU7A@mail.gmail.com>
From: Claus Ibsen <claus.ibsen@gmail.com>
Date: Wed, 19 Apr 2017 09:54:25 +0200
Message-ID: <CAGB5yNkkfcc0Qy7Of_+h1BrhFRax93+hsd+7qOAzuF63tbxKw@mail.gmail.com>
Subject: Re: Camel 2.19 Roadmap
To: dev <dev@camel.apache.org>
Content-Type: text/plain; charsetUTF-8

Hi

Okay so there is some last minute issues with the @Generated
annotations we need to look into
https://issues.apache.org/jira/browse/CAMEL-11165

And an unforseen effect on java 9 builds
https://issues.apache.org/jira/browse/CAMEL-11166

The full test is passing now. And the Spring Boot and Karaf tests has
also passed but failed recently due some maven download error or some
other weird error. So lets kick new builds when we get the 2 tickets
resolved above.




On Tue, Apr 18, 2017 at 9:45 AM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
> Hi
>
> Things start to look good. There is a itest that fails with spring
> boot which we need to look at and get fixed
> https://issues.apache.org/jira/browse/CAMEL-11154
>
> The other tests was all passing recently and they ought to become blue
> again. But lets keep an eye on them:
> https://builds.apache.org/view/A-D/view/Camel/
>
>
> On Thu, Apr 13, 2017 at 1:50 PM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>> Hi
>>
>> Thanks Antonin that sounds great.
>>
>> The JIRA tickets are down to 3
>> https://issues.apache.org/jira/issues/?jqlproject%20%3D%20CAMEL%20AND%20fixVersion%20%3D%202.19.0%20AND%20resolution%20%3D%20Unresolved
>>
>> We have recently fixed up the missing component docs and fixed broken
>> links from browsing on github.
>>
>> We should keep an eye on the CI servers and output from the
>> camel-catalog report, to see if it reports more missing stuff.
>> It currently has a false positive on some missing docs for some of the
>> test components. I will try to fix this later today.
>>
>> However thats not all. At all time feel free to have fun and work on
>> anything you like on Camel. There is still time for small improvements
>> etc. But bigger stuff we should really defer to the next release.
>>
>>
>> On Wed, Apr 12, 2017 at 3:35 PM, Antonin Stefanutti
>> <antonin@stefanutti.fr> wrote:
>>>
>>>> On 12 Apr 2017, at 15:22, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>
>>>> Hi
>>>>
>>>> Just a heads up that we plan to cut the RC for Camel 2.19 next week.
>>>>
>>>> So we are closing down on the last tickets, bugs, features etc to get
>>>> the code base in shape.
>>>>
>>>> The JIRA has 9 tickets
>>>> https://issues.apache.org/jira/issues/?jqlproject%20%3D%20CAMEL%20AND%20fixVersion%20%3D%202.19.0%20AND%20resolution%20%3D%20Unresolved
>>>>
>>>> But you are of course welcome to work on other tickets etc but just
>>>> mind any big functionality is likely better to wait for next release.
>>>>
>>>> There is however the expected transaction stuff for CDI as a PR in the
>>>> works, and also a new iot component
>>>> https://github.com/apache/camel/pulls
>>>
>>> The CDI transaction support PR should be merged by end of week.
>>>
>>> https://github.com/apache/camel/pull/1390
>>>
>>>> We should keep an eye on the CI servers to see how they are and fix
>>>> any test failures etc. Recently we got them to build and test the OSGi
>>>> and spring-boot specific tests so we should be able to better keep an
>>>> eye on this now and in the future.
>>>> https://builds.apache.org/view/A-D/view/Camel/
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> On Fri, Apr 7, 2017 at 8:45 AM, Gregor Zurowski
>>>> <gregor@list.zurowski.org> wrote:
>>>>> Hi Claus,
>>>>>
>>>>> Week 16 works for me.  I will send out another email shortly before
>>>>> starting to build the RC.
>>>>>
>>>>> Thanks,
>>>>> Gregor
>>>>>
>>>>>
>>>>> On Wed, Apr 5, 2017 at 3:08 PM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>>> Hi Gregor
>>>>>>
>>>>>> Yeah its April so we should get the 2.19.0 release out the door.
>>>>>>
>>>>>> We have just setup a 2.20.0 version in JIRA and folks should start
>>>>>> moving their tickets to that version if its something that they cannot
>>>>>> finish in time. Also we should refrain from doing bigger work at this
>>>>>> time as we should close down on last tickets, bug fixes, and get the
>>>>>> CI tests in good order, etc.
>>>>>>
>>>>>> I will look at the JIRAs later this week and cleanup a bit so we have
>>>>>> a better overview of what work is yet to be done.
>>>>>>
>>>>>> As April has the easter holidays. I wonder what you time schedule looks like?
>>>>>>
>>>>>> Maybe if you have time to help with the release after the holidays?
>>>>>>
>>>>>> Week 16 and 17 are the last 2 weeks in April after the holidays.
>>>>>> If we could maybe cut the RC in week 16 then that would be good.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> On Mon, Apr 3, 2017 at 2:14 PM, Gregor Zurowski
>>>>>> <gregor@list.zurowski.org> wrote:
>>>>>>> Hi,
>>>>>>>
>>>>>>> Are we getting closer to build a 2.19.0 release?  I would volunteer
>>>>>>> for creating the release, just wanted to check when would be a good
>>>>>>> time to do so.
>>>>>>>
>>>>>>> Thanks,
>>>>>>> Gregor
>>>>>>>
>>>>>>>
>>>>>>> On Wed, Mar 15, 2017 at 9:29 AM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>>>>> Hi
>>>>>>>>
>>>>>>>> Just wanted to bring up that we are closing in on a good time for
>>>>>>>> doing a new release.
>>>>>>>>
>>>>>>>> For example in mid April it would be around 6 months since the last
>>>>>>>> 2.18.0 release.
>>>>>>>>
>>>>>>>> Therefore we should start closing down and fixing bugs, and make sure
>>>>>>>> the CI servers and tests are in good shape.
>>>>>>>> This morning we have fixed a number of recent test failures and are
>>>>>>>> down to only 1 test failure now.
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> On Mon, Jan 16, 2017 at 10:28 AM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>>>>>> Hi
>>>>>>>>>
>>>>>>>>> There is a bunch of stuff which we can/should have on the roadmap to
>>>>>>>>> complete for the Camel 2.19 release.
>>>>>>>>>
>>>>>>>>> Here is on top of my head
>>>>>>>>>
>>>>>>>>> 1)
>>>>>>>>> Finish migrating the wiki documentation to adoc files. I think its
>>>>>>>>> most of the EIP patterns that are missing. There is a basic list of
>>>>>>>>> EIPs here: https://github.com/apache/camel/blob/master/camel-core/readme-eip.adoc
>>>>>>>>>
>>>>>>>>> 2)
>>>>>>>>> Generate documentation and website. Maybe documentation first and then
>>>>>>>>> we come up with a modern website later - when we have a new logo as
>>>>>>>>> well.
>>>>>>>>>
>>>>>>>>> 3)
>>>>>>>>> Mark more stuff to @deprecate so we dont drag them into Camel 3.0.
>>>>>>>>> This is both components / and other artifacts.
>>>>>>>>> And as well the camel-core APIs where there is maybe more we can deprecate.
>>>>>>>>> For example the old stuff that was created prior to the component docs
>>>>>>>>> we do now with the apt plugin at build time instead of this old code
>>>>>>>>> with runtime that dont really pan out anyway.
>>>>>>>>>
>>>>>>>>> 4)
>>>>>>>>> Move spring-boot starters into the platforms folder. There is a ticket
>>>>>>>>> about this.
>>>>>>>>>
>>>>>>>>> 5)
>>>>>>>>> More improvements to spring boot auto configuration. We have a bunch
>>>>>>>>> of tickets on that.
>>>>>>>>>
>>>>>>>>> 6)
>>>>>>>>> Look at the health check API and see if there is something we can get
>>>>>>>>> started on.
>>>>>>>>> Possible some API to integrate with spring boot actuators (when using
>>>>>>>>> SB) and allow each component to provide their own checks so they can
>>>>>>>>> be implemented ad-hoc. There is a ticket about this.
>>>>>>>>>
>>>>>>>>> 7)
>>>>>>>>> Possible some more teaks to camel-catalog based on feedback from IDEA
>>>>>>>>> plugin and the maven validate goal.
>>>>>>>>>
>>>>>>>>> 8)
>>>>>>>>> That CDI JEE transaction PR on github.
>>>>>>>>> Ideally we would have had a transaction API in camel-core and then one
>>>>>>>>> impl for camel-spring, and then another for camel-cdi-jee. But that
>>>>>>>>> may require too much work.
>>>>>>>>>
>>>>>>>>> 9)
>>>>>>>>> Work on the Java 8 DSL such as get more community feedback, and then
>>>>>>>>> resolve the TODOs with the documentation updates and look into other
>>>>>>>>> areas where the API can benefit from Java 8 lambdas and whatnot. I
>>>>>>>>> dont think we have a ticket about this.
>>>>>>>>>
>>>>>>>>> 10)
>>>>>>>>> Karaf users may want to improve/finish up the camel-test-karaf module
>>>>>>>>> so its more usable and end users can use it to test integration tests
>>>>>>>>> with Camel and Karaf.
>>>>>>>>>
>>>>>>>>> 11)
>>>>>>>>> Introduce Camel Connectors (more about this later)
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> Anything else?
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> --
>>>>>>>>> Claus Ibsen
>>>>>>>>> -----------------
>>>>>>>>> http://davsclaus.com @davsclaus
>>>>>>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> --
>>>>>>>> Claus Ibsen
>>>>>>>> -----------------
>>>>>>>> http://davsclaus.com @davsclaus
>>>>>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>>>>
>>>>>>
>>>>>>
>>>>>> --
>>>>>> Claus Ibsen
>>>>>> -----------------
>>>>>> http://davsclaus.com @davsclaus
>>>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>>
>>>>
>>>>
>>>> --
>>>> Claus Ibsen
>>>> -----------------
>>>> http://davsclaus.com @davsclaus
>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>
>>
>>
>>
>> --
>> Claus Ibsen
>> -----------------
>> http://davsclaus.com @davsclaus
>> Camel in Action 2: https://www.manning.com/ibsen2
>
>
>
> --
> Claus Ibsen
> -----------------
> http://davsclaus.com @davsclaus
> Camel in Action 2: https://www.manning.com/ibsen2



-- 
Claus Ibsen
-----------------
http://davsclaus.com @davsclaus
Camel in Action 2: https://www.manning.com/ibsen2

"
"175","1409","2017-04-19 07:56:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Assigned] (CAMEL-11166) @Generated annotation and java 9
 problem","Return-Path: <issues-return-41534-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id AFCD818566
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 07:56:44 +0000 (UTC)
Received: (qmail 68343 invoked by uid 500); 19 Apr 2017 07:56:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 68305 invoked by uid 500); 19 Apr 2017 07:56:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 68296 invoked by uid 99); 19 Apr 2017 07:56:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 07:56:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id D1B2BC062B
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:56:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id mXSHvccL7tpt for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 07:56:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 825045F1D5
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:56:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id D039DE06BB
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:56:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 8675C21B45
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 07:56:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 07:56:41 +0000 (UTC)
From: Zoran Regvart (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13065011.1492588059000.315466.1492588601548@Atlassian.JIRA>
In-Reply-To: <JIRA.13065011.1492588059000@Atlassian.JIRA>
References: <JIRA.13065011.1492588059000@Atlassian.JIRA> <JIRA.13065011.1492588059705@jira-lw-us.apache.org>
Subject: [jira] [Assigned] (CAMEL-11166) @Generated annotation and java 9
 problem
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11166?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Zoran Regvart reassigned CAMEL-11166:
-------------------------------------

    Assignee: Zoran Regvart

> @Generated annotation and java 9 problem
> ----------------------------------------
>
>                 Key: CAMEL-11166
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11166
>             Project: Camel
>          Issue Type: Task
>            Reporter: Claus Ibsen
>            Assignee: Zoran Regvart
>
> Just noticed this on the JDK9 build
> [ERROR] -> [Help 1]
> org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration (validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration: javax/annotation/Generated
> [~jpoth] do you have time to help look into this?
> It fails when building camel-core due a recent addition of adding `@generated` annotation to the generated source code for spring-boot starters and whatnot.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"176","1872","2017-04-19 00:57:38-07:00","khaja.nawas@me.com","['users@camel.apache.org']","RE: Camel Route - File name","Return-Path: <users-return-65355-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 1A9171856C
	for <apmail-camel-users-archive@www.apache.org>; Wed, 19 Apr 2017 07:57:43 +0000 (UTC)
Received: (qmail 69743 invoked by uid 500); 19 Apr 2017 07:57:42 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 69698 invoked by uid 500); 19 Apr 2017 07:57:42 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 69686 invoked by uid 99); 19 Apr 2017 07:57:41 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 07:57:41 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 8D5E21AA984
	for <users@camel.apache.org>; Wed, 19 Apr 2017 07:57:41 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 1.566
X-Spam-Level: *
X-Spam-Status: No, score1.566 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, RCVD_IN_DNSWL_LOW-0.7,
	RCVD_IN_MSPIKE_H3-0.01, RCVD_IN_MSPIKE_WL-0.01, SPF_SOFTFAIL0.972,
	URIBL_BLOCKED0.001, URI_HEX1.313] autolearndisabled
Authentication-Results: spamd2-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dmessagingengine.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id LhstlqFQeNBZ for <users@camel.apache.org>;
	Wed, 19 Apr 2017 07:57:40 +0000 (UTC)
Received: from new1-smtp.messagingengine.com (new1-smtp.messagingengine.com [66.111.4.221])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id 548055F4EE
	for <users@camel.apache.org>; Wed, 19 Apr 2017 07:57:40 +0000 (UTC)
Received: from compute6.internal (compute6.nyi.internal [10.202.2.46])
	by mailnew.nyi.internal (Postfix) with ESMTP id 9A68DACC
	for <users@camel.apache.org>; Wed, 19 Apr 2017 03:57:39 -0400 (EDT)
Received: from frontend2 ([10.202.2.161])
  by compute6.internal (MEProxy); Wed, 19 Apr 2017 03:57:39 -0400
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed; d
	messagingengine.com; hcontent-transfer-encoding:content-type
	:date:from:in-reply-to:message-id:mime-version:references
	:subject:to:x-me-sender:x-me-sender:x-sasl-enc:x-sasl-enc; s
	fm1; bhMCuH56BuoQf3WOREKg2/v3t+gH6WZnMxjL0K+hf8FQs; bF9n2ywpb
	Vc6hUR3bVkssfmc5lS4qMqk6TNEehyKVwQbSOhJDvp/7plsdPXDLEKk4VQFc9gdh
	Cw+/T59K5COSCL8/NchV4uYZzyxMrG+z3w3CDpvah57dXmEE/P2tIU8ad4fUJwQd
	1+p+hZYHHO9V1kYTuAJVGoY6WGQqzpu8ZtnvnGhL+bWCmWKDlu96PiuQZQuL2fxX
	ozJGESSd1rEON+ssorv7HanXYw9CSwHwI+JyoLMOoV/LSmVehUT++St/IXEBStYA
	PQTBBwmQyWpa1oTzFkZhHjPaA+OFeWFFwhYgLAroEtcZxkut8EvTuV8OEP17cCov
	IVCb2Q6/8zjfsw
X-ME-Sender: <xms:cxj3WN4-u66HEMsr7i6IdGCnPk5n7ZEtHZX-T0FP2fgSEaM9kmjY-g>
X-Sasl-enc: oGblN1SZa2jvUPjACSCLqaFSS8ALnjo4GGgLK3raLk/U 1492588659
Received: from static.162.255.23.22.macminivault.com (unknown [162.255.23.22])
	by mail.messagingengine.com (Postfix) with ESMTPA id 2599B244D9
	for <users@camel.apache.org>; Wed, 19 Apr 2017 03:57:39 -0400 (EDT)
Date: Wed, 19 Apr 2017 00:57:38 -0700 (MST)
From: KhajaNawas14 <khaja.nawas@me.com>
To: users@camel.apache.org
Message-ID: <1492588658550-5797874.post@n5.nabble.com>
In-Reply-To: <a386bde03ab947529067523c0d2bc4c6@sap.com>
References: <1492488688966-5797776.post@n5.nabble.com> <1492488836335-5797777.post@n5.nabble.com> <a386bde03ab947529067523c0d2bc4c6@sap.com>
Subject: RE: Camel Route - File name
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Thanks, I tried to do it based on the suggested link however I am
encountering the below issue

Tried with the below
${file:name.noext}.org? 

Error

Dynamic expressions with ${ } placeholders is not allowed. Use the fileName
option to set the dynamic expression.



--
View this message in context: http://camel.465427.n5.nabble.com/Camel-Route-File-name-tp5797776p5797874.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"177","1873","2017-04-19 10:00:23+02:00","claus.ibsen@gmail.com","['users@camel.apache.org']","Re: Camel Route - File name","Return-Path: <users-return-65356-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 943B01859F
	for <apmail-camel-users-archive@www.apache.org>; Wed, 19 Apr 2017 08:00:50 +0000 (UTC)
Received: (qmail 77190 invoked by uid 500); 19 Apr 2017 08:00:50 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 77133 invoked by uid 500); 19 Apr 2017 08:00:50 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 77121 invoked by uid 99); 19 Apr 2017 08:00:49 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:00:49 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 371041AF8AA
	for <users@camel.apache.org>; Wed, 19 Apr 2017 08:00:49 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 1.693
X-Spam-Level: *
X-Spam-Status: No, score1.693 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RCVD_IN_SORBS_SPAM0.5, SPF_PASS-0.001,
	URIBL_BLOCKED0.001, URI_HEX1.313] autolearndisabled
Authentication-Results: spamd2-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id TmKf0uyzL1Cf for <users@camel.apache.org>;
	Wed, 19 Apr 2017 08:00:44 +0000 (UTC)
Received: from mail-qk0-f169.google.com (mail-qk0-f169.google.com [209.85.220.169])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTPS id 6BA305FBBB
	for <users@camel.apache.org>; Wed, 19 Apr 2017 08:00:44 +0000 (UTC)
Received: by mail-qk0-f169.google.com with SMTP id d131so13545256qkc.3
        for <users@camel.apache.org>; Wed, 19 Apr 2017 01:00:44 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bhu0Faw4PdKtfepzTygt+PUpgjszIWfpFsGSn5QHJwr/U;
        bn+mkT2KXa4YT0wfDWx2CY3bsqirP0RIXxLd5/o+utjH0c+QqEthNH1Zub7+fao59u7
         ENWsFE2Z8ddyq1//RNw0BJiwdIbYCpSb2HTFKBaR/96SrSEG7e5YcHdOpyGtwzSjpp7p
         Gy1W7juo9h/AOooNDV6SBJUkNxdrXjZYj4e0y7K94lgnBOaMurS3gIkyxCKw5M7z1nMK
         h6ALvII1o+5rjHSguqmDJaGcFRX0KB2sdBRIcwfGkrrnQudQqOINBe40Ki06GGOLrhr+
         nggwMezfR1gULSGYU5hDX7rRgkT5Cv6HXIJ8LpgnEFNdR9fGum/Glxgw01VaW/+0RH1+
         0Dmw
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bhu0Faw4PdKtfepzTygt+PUpgjszIWfpFsGSn5QHJwr/U;
        bEhSl4afws+6NFysmRdVu3DHNgn63EzIuP44JFOGGDYQysaNBUnNs0S/EZjAIBXagMe
         azxrhBaLCxH97g7nzCKXouBBhI/1EtXDNJ0yeC24461/ayniss8BjETZrobOdtZm7FOg
         mrLBOGVrhUCz33F8+RR8WR5Yv1Dtl+RGpyqDVfmMKnaWhXa4qMhYIum4yiAuYMFLRUq2
         DHHjHijmuiKBS4sSnnwoRvGhliywAscrbbIVIm/N9iY7x3kUHzMlfITrTUT8zQ9KrBLZ
         pZFyI/tKfhXOYD/8gZKFq4b8DdGBjSQJNRFFjzE/Msqza9vVFnTIFdwpiUHJ/c3EA5z2
         /BmQ
X-Gm-Message-State: AN3rC/7+yhY3oEsA/fH4UgFDYufUa0oD1ti5rE26+dMoVLL1xfG6um3e
	hkmP5bUmMrO9GIXM6+eEN39VGpkMJvUl
X-Received: by 10.55.144.6 with SMTP id s6mr1164751qkd.27.1492588843941; Wed,
 19 Apr 2017 01:00:43 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.200.50.39 with HTTP; Wed, 19 Apr 2017 01:00:23 -0700 (PDT)
In-Reply-To: <1492488688966-5797776.post@n5.nabble.com>
References: <1492488688966-5797776.post@n5.nabble.com>
From: Claus Ibsen <claus.ibsen@gmail.com>
Date: Wed, 19 Apr 2017 10:00:23 +0200
Message-ID: <CAGB5yNEpzH-Nmzr4ttW5B8_M6wbdoQXCn-F7dxqBMZFnM9SQg@mail.gmail.com>
Subject: Re: Camel Route - File name
To: users@camel.apache.org <users@camel.apache.org>
Content-Type: text/plain; charsetUTF-8

You need to use a fileFilter to dynamic chose which files to consume.
There is more details on that file component doc page

On Tue, Apr 18, 2017 at 6:11 AM, KhajaNawas14 <khaja.nawas@me.com> wrote:
> Hi All,
>
> currently my query is like any file that comes to this folder will be
> processed to next stage. However I would like to add the file name also my
> camel route so that i can re-use the same folder for multiple files.
>
> sample folder cd-erpdata-csv
> sample file name us-ddmmyy.csv and uk-ddmmyy.csv
>
> <camel:from
> urifile:messaging/cd-erpdata-csv?preMoveinprogress&amp;move.done/>
>
>
>
>
>
>
> --
> View this message in context: http://camel.465427.n5.nabble.com/Camel-Route-File-name-tp5797776.html
> Sent from the Camel - Users mailing list archive at Nabble.com.



-- 
Claus Ibsen
-----------------
http://davsclaus.com @davsclaus
Camel in Action 2: https://www.manning.com/ibsen2

"
"178","1410","2017-04-19 08:01:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11166) @Generated annotation and java 9
 problem","Return-Path: <issues-return-41535-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id B1A8C185A5
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 08:01:44 +0000 (UTC)
Received: (qmail 78997 invoked by uid 500); 19 Apr 2017 08:01:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 78951 invoked by uid 500); 19 Apr 2017 08:01:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 78942 invoked by uid 99); 19 Apr 2017 08:01:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:01:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 3009BC0C69
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:01:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id xxQAvID2qxTp for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 08:01:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 31A8A5F2FD
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:01:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 6241DE0D55
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:01:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id BF1CB21B53
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:01:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 08:01:41 +0000 (UTC)
From: John Poth (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13065011.1492588059000.315526.1492588901781@Atlassian.JIRA>
In-Reply-To: <JIRA.13065011.1492588059000@Atlassian.JIRA>
References: <JIRA.13065011.1492588059000@Atlassian.JIRA> <JIRA.13065011.1492588059705@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11166) @Generated annotation and java 9
 problem
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11166?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15974278#comment-15974278 ] 

John Poth commented on CAMEL-11166:
-----------------------------------

Sure, will try this out on the latest build.

> @Generated annotation and java 9 problem
> ----------------------------------------
>
>                 Key: CAMEL-11166
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11166
>             Project: Camel
>          Issue Type: Task
>            Reporter: Claus Ibsen
>            Assignee: Zoran Regvart
>
> Just noticed this on the JDK9 build
> [ERROR] -> [Help 1]
> org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration (validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration: javax/annotation/Generated
> [~jpoth] do you have time to help look into this?
> It fails when building camel-core due a recent addition of adding `@generated` annotation to the generated source code for spring-boot starters and whatnot.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"179","357","2017-04-19 08:02:24+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: This closes #1527.","Return-Path: <commits-return-55730-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 58648185B2
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:02:24 +0000 (UTC)
Received: (qmail 80383 invoked by uid 500); 19 Apr 2017 08:02:24 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 80329 invoked by uid 500); 19 Apr 2017 08:02:24 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 80320 invoked by uid 99); 19 Apr 2017 08:02:24 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:02:24 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 169A0DFC31; Wed, 19 Apr 2017 08:02:24 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <61fdb2f947524496a539ee2e7e8c0bfd@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: This closes #1527.
Date: Wed, 19 Apr 2017 08:02:24 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 567dff400 -> 9f126aab7


This closes #1527.


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/9f126aab
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/9f126aab
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/9f126aab

Branch: refs/heads/master
Commit: 9f126aab751e2a7468c981971ca5ab9628155797
Parents: 567dff4
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Wed Apr 19 10:02:17 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Wed Apr 19 10:02:17 2017 +0200

----------------------------------------------------------------------

----------------------------------------------------------------------



"
"180","765","2017-04-19 08:02:44+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1527: CAMEL-10988 - Improve performance of CaseInsensiti...","Return-Path: <dev-return-47403-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 90B28185B3
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 08:02:45 +0000 (UTC)
Received: (qmail 80547 invoked by uid 500); 19 Apr 2017 08:02:45 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 80486 invoked by uid 500); 19 Apr 2017 08:02:45 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 80460 invoked by uid 99); 19 Apr 2017 08:02:45 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:02:45 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id DB02FDFC31; Wed, 19 Apr 2017 08:02:44 +0000 (UTC)
From: asfgit <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
References: <git-pr-1527-camel@git.apache.org>
In-Reply-To: <git-pr-1527-camel@git.apache.org>
Subject: [GitHub] camel pull request #1527: CAMEL-10988 - Improve performance of CaseInsensiti...
Content-Type: text/plain
Message-Id: <20170419080244.DB02FDFC31@git1-us-west.apache.org>
Date: Wed, 19 Apr 2017 08:02:44 +0000 (UTC)

Github user asfgit closed the pull request at:

    https://github.com/apache/camel/pull/1527


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"181","1411","2017-04-19 08:03:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-10988) Improve performance of
 CaseInsensitiveMap","Return-Path: <issues-return-41536-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id A5392185B9
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 08:03:44 +0000 (UTC)
Received: (qmail 81404 invoked by uid 500); 19 Apr 2017 08:03:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 81363 invoked by uid 500); 19 Apr 2017 08:03:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 81354 invoked by uid 99); 19 Apr 2017 08:03:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:03:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 33E88185E94
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:03:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.201
X-Spam-Level: 
X-Spam-Status: No, score-99.201 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, URIBL_BLOCKED0.001, USER_IN_WHITELIST-100]
	autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id otRIQMyV8T0I for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 08:03:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 924F960D83
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:03:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 27890E0BDD
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:03:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id D243E21B46
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:03:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 08:03:41 +0000 (UTC)
From: ASF GitHub Bot (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13050157.1489183849000.315541.1492589021859@Atlassian.JIRA>
In-Reply-To: <JIRA.13050157.1489183849000@Atlassian.JIRA>
References: <JIRA.13050157.1489183849000@Atlassian.JIRA> <JIRA.13050157.1489183849733@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-10988) Improve performance of
 CaseInsensitiveMap
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-10988?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15974280#comment-15974280 ] 

ASF GitHub Bot commented on CAMEL-10988:
----------------------------------------

Github user asfgit closed the pull request at:

    https://github.com/apache/camel/pull/1527


> Improve performance of CaseInsensitiveMap
> -----------------------------------------
>
>                 Key: CAMEL-10988
>                 URL: https://issues.apache.org/jira/browse/CAMEL-10988
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-core
>    Affects Versions: 2.18.2
>            Reporter: Marcin Lachowicz
>             Fix For: 2.20.0
>
>
> Current CaseInsensitiveMap bases on TreeMap. 
> Basing on JMH, I found out that [the following implementation of CaseInsensitiveMap|https://github.com/jdereg/java-util/blob/master/src/main/java/com/cedarsoftware/util/CaseInsensitiveMap.java] results with even 50% performance boost, depending on use-case. 
> It uses HashMap with case-insensitive wrappers on String keys. 



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"182","358","2017-04-19 08:05:09+00:00","acosentino@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-10948: Camel-hdfs2: initialDelay option is
 overwritten with default value","Return-Path: <commits-return-55731-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 8F7ED185CC
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:05:09 +0000 (UTC)
Received: (qmail 83490 invoked by uid 500); 19 Apr 2017 08:05:09 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 83427 invoked by uid 500); 19 Apr 2017 08:05:09 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 83418 invoked by uid 99); 19 Apr 2017 08:05:09 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:05:09 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 27A75DFC31; Wed, 19 Apr 2017 08:05:09 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: acosentino@apache.org
To: commits@camel.apache.org
Message-Id: <98d3b7827ccb49678f54bca9d6814bb8@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-10948: Camel-hdfs2: initialDelay option is
 overwritten with default value
Date: Wed, 19 Apr 2017 08:05:09 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 9f126aab7 -> dd940e926


CAMEL-10948: Camel-hdfs2: initialDelay option is overwritten with default value


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/dd940e92
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/dd940e92
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/dd940e92

Branch: refs/heads/master
Commit: dd940e926c947f1e9ab915a8e523b30fab65566e
Parents: 9f126aa
Author: Andrea Cosentino <ancosen@gmail.com>
Authored: Wed Apr 19 10:03:49 2017 +0200
Committer: Andrea Cosentino <ancosen@gmail.com>
Committed: Wed Apr 19 10:04:56 2017 +0200

----------------------------------------------------------------------
 .../main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java  | 1 -
 .../hdfs2/springboot/HdfsComponentAutoConfiguration.java          | 3 +++
 .../component/hdfs2/springboot/HdfsComponentConfiguration.java    | 2 ++
 3 files changed, 5 insertions(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/dd940e92/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java
----------------------------------------------------------------------
diff --git a/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java b/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java
index 6b29475..7224d37 100644
--- a/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java
+++ b/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java
@@ -41,7 +41,6 @@ public class HdfsEndpoint extends ScheduledPollEndpoint {
         super(endpointUri, context);
         this.config  new HdfsConfiguration();
         this.config.parseURI(new URI(endpointUri));
-        setInitialDelay(HdfsConsumer.DEFAULT_CONSUMER_INITIAL_DELAY);
     }
 
     @Override

http://git-wip-us.apache.org/repos/asf/camel/blob/dd940e92/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentAutoConfiguration.java
index 47da1fc..88b86d2 100644
--- a/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.hdfs2.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.hdfs2.HdfsComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:03:41.690Z)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(HdfsComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class HdfsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:03:41.738Z)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/dd940e92/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentConfiguration.java
index d2cfd9d..29d8a56 100644
--- a/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.hdfs2.springboot;
 
+import javax.annotation.Generated;
 import javax.security.auth.login.Configuration;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:03:41.545Z)
 @ConfigurationProperties(prefix  camel.component.hdfs2)
 public class HdfsComponentConfiguration {
 


"
"183","359","2017-04-19 08:08:27+00:00","acosentino@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-10948: Camel-hdfs2: initialDelay option is
 overwritten with default value","Return-Path: <commits-return-55732-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9CB02185E2
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:08:28 +0000 (UTC)
Received: (qmail 91784 invoked by uid 500); 19 Apr 2017 08:08:27 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 91569 invoked by uid 500); 19 Apr 2017 08:08:27 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 91052 invoked by uid 99); 19 Apr 2017 08:08:27 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:08:27 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 24CE8DFC31; Wed, 19 Apr 2017 08:08:27 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: acosentino@apache.org
To: commits@camel.apache.org
Message-Id: <5032f17311004106b02fd4777e9fc6bb@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-10948: Camel-hdfs2: initialDelay option is
 overwritten with default value
Date: Wed, 19 Apr 2017 08:08:27 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/camel-2.18.x 4765927aa -> 4f1b6539e


CAMEL-10948: Camel-hdfs2: initialDelay option is overwritten with default value


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/4f1b6539
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/4f1b6539
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/4f1b6539

Branch: refs/heads/camel-2.18.x
Commit: 4f1b6539e07f1069357947d432ffa5392e43ca57
Parents: 4765927
Author: Andrea Cosentino <ancosen@gmail.com>
Authored: Wed Apr 19 10:03:49 2017 +0200
Committer: Andrea Cosentino <ancosen@gmail.com>
Committed: Wed Apr 19 10:05:56 2017 +0200

----------------------------------------------------------------------
 .../main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java    | 1 -
 1 file changed, 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/4f1b6539/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java
----------------------------------------------------------------------
diff --git a/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java b/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java
index 3e9d81d..baecdcc 100644
--- a/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java
+++ b/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java
@@ -41,7 +41,6 @@ public class HdfsEndpoint extends ScheduledPollEndpoint {
         super(endpointUri, context);
         this.config  new HdfsConfiguration();
         this.config.parseURI(new URI(endpointUri));
-        setInitialDelay(HdfsConsumer.DEFAULT_CONSUMER_INITIAL_DELAY);
     }
 
     @Override


"
"184","1412","2017-04-19 08:10:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-10948) Camel-hdfs2: initialDelay option
 is overwritten with default value","Return-Path: <issues-return-41537-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 531AA185F7
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 08:10:44 +0000 (UTC)
Received: (qmail 96908 invoked by uid 500); 19 Apr 2017 08:10:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 96867 invoked by uid 500); 19 Apr 2017 08:10:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 96857 invoked by uid 99); 19 Apr 2017 08:10:43 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:10:43 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 83050C062B
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:10:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id k3BfLwY1Lqgb for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 08:10:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 65F1D61058
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:10:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id F26E2E095D
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:10:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id A105621B46
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:10:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 08:10:41 +0000 (UTC)
From: Andrea Cosentino (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13048508.1488802579000.315596.1492589441657@Atlassian.JIRA>
In-Reply-To: <JIRA.13048508.1488802579000@Atlassian.JIRA>
References: <JIRA.13048508.1488802579000@Atlassian.JIRA> <JIRA.13048508.1488802579983@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-10948) Camel-hdfs2: initialDelay option
 is overwritten with default value
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-10948?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15974288#comment-15974288 ] 

Andrea Cosentino commented on CAMEL-10948:
------------------------------------------

Fixed.

> Camel-hdfs2: initialDelay option is overwritten with default value
> ------------------------------------------------------------------
>
>                 Key: CAMEL-10948
>                 URL: https://issues.apache.org/jira/browse/CAMEL-10948
>             Project: Camel
>          Issue Type: Bug
>          Components: camel-hdfs2
>            Reporter: Andrea Cosentino
>            Assignee: Andrea Cosentino
>            Priority: Minor
>             Fix For: 2.17.7, 2.18.4, 2.19.0
>
>
> We need to use the same trick as the mail component in the consumer side.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"185","360","2017-04-19 08:10:44+00:00","acosentino@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-10948: Camel-hdfs2: initialDelay option is
 overwritten with default value","Return-Path: <commits-return-55733-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6DFC5185F8
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:10:45 +0000 (UTC)
Received: (qmail 97608 invoked by uid 500); 19 Apr 2017 08:10:45 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 97560 invoked by uid 500); 19 Apr 2017 08:10:45 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 97550 invoked by uid 99); 19 Apr 2017 08:10:45 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:10:45 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id EA52EDFC31; Wed, 19 Apr 2017 08:10:44 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: acosentino@apache.org
To: commits@camel.apache.org
Message-Id: <f39ca6e740e94fcc898efe0188ffb0d0@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-10948: Camel-hdfs2: initialDelay option is
 overwritten with default value
Date: Wed, 19 Apr 2017 08:10:44 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/camel-2.17.x 96fc48c3e -> 82bf20aef


CAMEL-10948: Camel-hdfs2: initialDelay option is overwritten with default value


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/82bf20ae
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/82bf20ae
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/82bf20ae

Branch: refs/heads/camel-2.17.x
Commit: 82bf20aef311af8611e5e62a4b759a21452716bd
Parents: 96fc48c
Author: Andrea Cosentino <ancosen@gmail.com>
Authored: Wed Apr 19 10:03:49 2017 +0200
Committer: Andrea Cosentino <ancosen@gmail.com>
Committed: Wed Apr 19 10:08:58 2017 +0200

----------------------------------------------------------------------
 .../main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java    | 1 -
 1 file changed, 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/82bf20ae/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java
----------------------------------------------------------------------
diff --git a/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java b/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java
index 3e9d81d..baecdcc 100644
--- a/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java
+++ b/components/camel-hdfs2/src/main/java/org/apache/camel/component/hdfs2/HdfsEndpoint.java
@@ -41,7 +41,6 @@ public class HdfsEndpoint extends ScheduledPollEndpoint {
         super(endpointUri, context);
         this.config  new HdfsConfiguration();
         this.config.parseURI(new URI(endpointUri));
-        setInitialDelay(HdfsConsumer.DEFAULT_CONSUMER_INITIAL_DELAY);
     }
 
     @Override


"
"186","766","2017-04-19 08:31:14+00:00","jenkins@builds.apache.org","['davsclaus@apache.org', 'dev@camel.apache.org']","Camel.2.17.x.notest - Build # 203 - Failure","Return-Path: <dev-return-47404-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id D62C1186DD
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 08:31:15 +0000 (UTC)
Received: (qmail 30833 invoked by uid 500); 19 Apr 2017 08:31:15 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 30784 invoked by uid 500); 19 Apr 2017 08:31:15 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 30769 invoked by uid 99); 19 Apr 2017 08:31:15 -0000
Received: from crius.apache.org (HELO crius.apache.org) (140.211.11.14)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:31:15 +0000
Received: from crius.apache.org (localhost [127.0.0.1])
	by crius.apache.org (ASF Mail Server at crius.apache.org) with ESMTP id 3540F9C00A6;
	Wed, 19 Apr 2017 08:31:15 +0000 (UTC)
Date: Wed, 19 Apr 2017 08:31:14 +0000 (UTC)
From: Apache Jenkins Server <jenkins@builds.apache.org>
To: davsclaus@apache.org, dev@camel.apache.org
Message-ID: <1100248025.1350.1492590675219.JavaMail.jenkins@crius>
Subject: Camel.2.17.x.notest - Build # 203 - Failure
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary----_Part_1348_1437546546.1492590674521
X-Jenkins-Job: Camel.2.17.x.notest
X-Jenkins-Result: FAILURE

------_Part_1348_1437546546.1492590674521
Content-Type: text/plain; charsetUTF-8
Content-Transfer-Encoding: 7bit

The Apache Jenkins build system has built Camel.2.17.x.notest (build #203)

Status: Failure

Check console output at https://builds.apache.org/job/Camel.2.17.x.notest/203/ to view the results.
------_Part_1348_1437546546.1492590674521--

"
"187","361","2017-04-19 08:35:46+00:00","zregvart@apache.org","['commits@camel.apache.org']","[01/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...","Return-Path: <commits-return-55734-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id D099118706
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:35:46 +0000 (UTC)
Received: (qmail 39499 invoked by uid 500); 19 Apr 2017 08:35:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 39439 invoked by uid 500); 19 Apr 2017 08:35:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 39425 invoked by uid 99); 19 Apr 2017 08:35:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:35:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 6BD12DFBB7; Wed, 19 Apr 2017 08:35:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 08:35:46 -0000
Message-Id: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [01/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...

Repository: camel
Updated Branches:
  refs/heads/master dd940e926 -> 492bef343


CAMEL-11165 Add @Generated annotation to code g...

...enerated by SpringBootAutoConfigurationMojo

This removes the `date` annotation member, so that generation timestamps
do not create source code difference when code gets regenerated on clean
build.


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/583d6dce
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/583d6dce
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/583d6dce

Branch: refs/heads/master
Commit: 583d6dce4f42ae320107c4a16b13af68870b228b
Parents: dd940e9
Author: Zoran Regvart <zregvart@apache.org>
Authored: Wed Apr 19 10:00:45 2017 +0200
Committer: Zoran Regvart <zregvart@apache.org>
Committed: Wed Apr 19 10:29:00 2017 +0200

----------------------------------------------------------------------
 .../SpringBootAutoConfigurationMojo.java        | 33 +++++++-------------
 1 file changed, 11 insertions(+), 22 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/583d6dce/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java
----------------------------------------------------------------------
diff --git a/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java b/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java
index bba8ecf..57dd4649d 100644
--- a/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java
+++ b/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/SpringBootAutoConfigurationMojo.java
@@ -304,8 +304,7 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
             doc  model.getDescription() + \n\n + doc;
         }
         commonClass.getJavaDoc().setFullText(doc);
-        commonClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
-        .setStringValue(date, Instant.now().toString());
+        commonClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName());
 
         for (OtherOptionModel option : model.getOptions()) {
             String type  option.getJavaType();
@@ -351,8 +350,7 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
             configClass.setPackage(packageName);
             configClass.setName(configName);
             configClass.extendSuperType(commonClass);
-            configClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
-            .setStringValue(date, Instant.now().toString());
+            configClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName());
             configClass.addAnnotation(org.springframework.boot.context.properties.ConfigurationProperties).setStringValue(prefix, propertiesPrefix);
             configClass.addImport(Map.class);
             configClass.addImport(HashMap.class);
@@ -402,8 +400,7 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         JavaClassSource javaClass  Roaster.create(JavaClassSource.class);
         javaClass.setPackage(packageName);
         javaClass.setName(className);
-        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
-        .setStringValue(date, Instant.now().toString());
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName());
         javaClass.addAnnotation(org.springframework.boot.context.properties.ConfigurationProperties).setStringValue(prefix, propertiesPrefix);
 
         String doc  Generated by camel-package-maven-plugin - do not edit this file!;
@@ -467,8 +464,7 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         String doc  Generated by camel-package-maven-plugin - do not edit this file!;
         javaClass.getJavaDoc().setFullText(doc);
 
-        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
-        .setStringValue(date, Instant.now().toString());
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName());
         javaClass.addAnnotation(Configuration.class);
         javaClass.addAnnotation(ConditionalOnBean.class).setStringValue(type, org.apache.camel.spring.boot.CamelAutoConfiguration);
         javaClass.addAnnotation(ConditionalOnProperty.class).setStringValue(name, camel.rest.enabled).setLiteralValue(matchIfMissing, true);
@@ -693,8 +689,7 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         String prefix  camel.component. + (overrideComponentName ! null ? overrideComponentName : model.getScheme());
         // make sure prefix is in lower case
         prefix  prefix.toLowerCase(Locale.US);
-        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
-        .setStringValue(date, Instant.now().toString());
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName());
         javaClass.addAnnotation(org.springframework.boot.context.properties.ConfigurationProperties).setStringValue(prefix, prefix);
 
         Set<JavaClassSource> nestedTypes  new HashSet<>();
@@ -1046,8 +1041,7 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         String prefix  camel.dataformat. + (overrideDataFormatName ! null ? overrideDataFormatName : model.getName());
         // make sure prefix is in lower case
         prefix  prefix.toLowerCase(Locale.US);
-        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
-        .setStringValue(date, Instant.now().toString());
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName());
         javaClass.addAnnotation(org.springframework.boot.context.properties.ConfigurationProperties).setStringValue(prefix, prefix);
 
         for (DataFormatOptionModel option : model.getDataFormatOptions()) {
@@ -1110,8 +1104,7 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         String prefix  camel.language. + (overrideLanguageName ! null ? overrideLanguageName : model.getName());
         // make sure prefix is in lower case
         prefix  prefix.toLowerCase(Locale.US);
-        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
-        .setStringValue(date, Instant.now().toString());
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName());
         javaClass.addAnnotation(org.springframework.boot.context.properties.ConfigurationProperties).setStringValue(prefix, prefix);
 
         for (LanguageOptionModel option : model.getLanguageOptions()) {
@@ -1201,8 +1194,7 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         String doc  Generated by camel-package-maven-plugin - do not edit this file!;
         javaClass.getJavaDoc().setFullText(doc);
 
-        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
-            .setStringValue(date, Instant.now().toString());
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName());
         javaClass.addAnnotation(Configuration.class);
         javaClass.addAnnotation(ConditionalOnBean.class).setStringValue(type, org.apache.camel.spring.boot.CamelAutoConfiguration);
         javaClass.addAnnotation(Conditional.class).setLiteralValue(name + .Condition.class);
@@ -1277,8 +1269,7 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         String doc  Generated by camel-package-maven-plugin - do not edit this file!;
         javaClass.getJavaDoc().setFullText(doc);
 
-        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
-        .setStringValue(date, Instant.now().toString());
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName());
         javaClass.addAnnotation(Configuration.class);
         javaClass.addAnnotation(ConditionalOnBean.class).setStringValue(type, org.apache.camel.spring.boot.CamelAutoConfiguration);
         javaClass.addAnnotation(Conditional.class).setLiteralValue(name + .Condition.class);
@@ -1355,8 +1346,7 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         String doc  Generated by camel-package-maven-plugin - do not edit this file!;
         javaClass.getJavaDoc().setFullText(doc);
 
-        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
-        .setStringValue(date, Instant.now().toString());
+        javaClass.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName());
         javaClass.addAnnotation(Configuration.class);
         javaClass.addAnnotation(ConditionalOnBean.class).setStringValue(type, org.apache.camel.spring.boot.CamelAutoConfiguration);
         javaClass.addAnnotation(Conditional.class).setLiteralValue(name + .Condition.class);
@@ -2059,8 +2049,7 @@ public class SpringBootAutoConfigurationMojo extends AbstractMojo {
         condition.setPublic();
         condition.setStatic(true);
         
-        condition.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName())
-        .setStringValue(date, Instant.now().toString());
+        condition.addAnnotation(Generated.class).setStringValue(value, SpringBootAutoConfigurationMojo.class.getName());
 
         String fullQualifiedType  prefix.endsWith(.) ? prefix +  type : prefix + . + type;
 


"
"188","366","2017-04-19 08:35:47+00:00","zregvart@apache.org","['commits@camel.apache.org']","[02/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...","Return-Path: <commits-return-55735-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 3206D18708
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:35:48 +0000 (UTC)
Received: (qmail 39621 invoked by uid 500); 19 Apr 2017 08:35:46 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 39452 invoked by uid 500); 19 Apr 2017 08:35:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 39428 invoked by uid 99); 19 Apr 2017 08:35:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:35:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 6FFDCE0885; Wed, 19 Apr 2017 08:35:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 08:35:47 -0000
Message-Id: <19ba0daee4734fc1b83147288089a447@git.apache.org>
In-Reply-To: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
References: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [02/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xmlbeans-starter/src/main/java/org/apache/camel/converter/xmlbeans/springboot/XmlBeansDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xmlbeans-starter/src/main/java/org/apache/camel/converter/xmlbeans/springboot/XmlBeansDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-xmlbeans-starter/src/main/java/org/apache/camel/converter/xmlbeans/springboot/XmlBeansDataFormatAutoConfiguration.java
index 7ec6a95..cfd5297 100644
--- a/platforms/spring-boot/components-starter/camel-xmlbeans-starter/src/main/java/org/apache/camel/converter/xmlbeans/springboot/XmlBeansDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xmlbeans-starter/src/main/java/org/apache/camel/converter/xmlbeans/springboot/XmlBeansDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.converter.xmlbeans.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(XmlBeansDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class XmlBeansDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xmlbeans-starter/src/main/java/org/apache/camel/converter/xmlbeans/springboot/XmlBeansDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xmlbeans-starter/src/main/java/org/apache/camel/converter/xmlbeans/springboot/XmlBeansDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-xmlbeans-starter/src/main/java/org/apache/camel/converter/xmlbeans/springboot/XmlBeansDataFormatConfiguration.java
index eef7b64..1ff358b 100644
--- a/platforms/spring-boot/components-starter/camel-xmlbeans-starter/src/main/java/org/apache/camel/converter/xmlbeans/springboot/XmlBeansDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xmlbeans-starter/src/main/java/org/apache/camel/converter/xmlbeans/springboot/XmlBeansDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.converter.xmlbeans.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.xmlbeans)
 public class XmlBeansDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xmljson-starter/src/main/java/org/apache/camel/dataformat/xmljson/springboot/XmlJsonDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xmljson-starter/src/main/java/org/apache/camel/dataformat/xmljson/springboot/XmlJsonDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-xmljson-starter/src/main/java/org/apache/camel/dataformat/xmljson/springboot/XmlJsonDataFormatAutoConfiguration.java
index 6c6c7b7..ad00be1 100644
--- a/platforms/spring-boot/components-starter/camel-xmljson-starter/src/main/java/org/apache/camel/dataformat/xmljson/springboot/XmlJsonDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xmljson-starter/src/main/java/org/apache/camel/dataformat/xmljson/springboot/XmlJsonDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.xmljson.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(XmlJsonDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class XmlJsonDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xmljson-starter/src/main/java/org/apache/camel/dataformat/xmljson/springboot/XmlJsonDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xmljson-starter/src/main/java/org/apache/camel/dataformat/xmljson/springboot/XmlJsonDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-xmljson-starter/src/main/java/org/apache/camel/dataformat/xmljson/springboot/XmlJsonDataFormatConfiguration.java
index 013bdc0..63741af 100644
--- a/platforms/spring-boot/components-starter/camel-xmljson-starter/src/main/java/org/apache/camel/dataformat/xmljson/springboot/XmlJsonDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xmljson-starter/src/main/java/org/apache/camel/dataformat/xmljson/springboot/XmlJsonDataFormatConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.dataformat.xmljson.springboot;
 
 import java.util.List;
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.xmljson)
 public class XmlJsonDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/component/xmlrpc/springboot/XmlRpcComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/component/xmlrpc/springboot/XmlRpcComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/component/xmlrpc/springboot/XmlRpcComponentAutoConfiguration.java
index ab993bb..c4ae448 100644
--- a/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/component/xmlrpc/springboot/XmlRpcComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/component/xmlrpc/springboot/XmlRpcComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.xmlrpc.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.xmlrpc.XmlRpcComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(XmlRpcComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class XmlRpcComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/dataformat/xmlrpc/springboot/XmlRpcDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/dataformat/xmlrpc/springboot/XmlRpcDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/dataformat/xmlrpc/springboot/XmlRpcDataFormatAutoConfiguration.java
index 79d2439..81f0b5e 100644
--- a/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/dataformat/xmlrpc/springboot/XmlRpcDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/dataformat/xmlrpc/springboot/XmlRpcDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.xmlrpc.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(XmlRpcDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class XmlRpcDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/dataformat/xmlrpc/springboot/XmlRpcDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/dataformat/xmlrpc/springboot/XmlRpcDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/dataformat/xmlrpc/springboot/XmlRpcDataFormatConfiguration.java
index b13729f..b66d2c3 100644
--- a/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/dataformat/xmlrpc/springboot/XmlRpcDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xmlrpc-starter/src/main/java/org/apache/camel/dataformat/xmlrpc/springboot/XmlRpcDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.xmlrpc.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.xmlrpc)
 public class XmlRpcDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/component/xmlsecurity/springboot/XmlSignatureComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/component/xmlsecurity/springboot/XmlSignatureComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/component/xmlsecurity/springboot/XmlSignatureComponentAutoConfiguration.java
index dfcd3de..67fb7a6 100644
--- a/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/component/xmlsecurity/springboot/XmlSignatureComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/component/xmlsecurity/springboot/XmlSignatureComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.xmlsecurity.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.xmlsecurity.XmlSignatureComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(XmlSignatureComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class XmlSignatureComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/component/xmlsecurity/springboot/XmlSignatureComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/component/xmlsecurity/springboot/XmlSignatureComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/component/xmlsecurity/springboot/XmlSignatureComponentConfiguration.java
index 443724d..0c3f804 100644
--- a/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/component/xmlsecurity/springboot/XmlSignatureComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/component/xmlsecurity/springboot/XmlSignatureComponentConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.xmlsecurity.springboot;
 
 import java.util.List;
 import java.util.Map;
+import javax.annotation.Generated;
 import javax.xml.crypto.AlgorithmMethod;
 import javax.xml.crypto.KeySelector;
 import javax.xml.crypto.URIDereferencer;
@@ -35,6 +36,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.xmlsecurity)
 public class XmlSignatureComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/dataformat/xmlsecurity/springboot/XMLSecurityDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/dataformat/xmlsecurity/springboot/XMLSecurityDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/dataformat/xmlsecurity/springboot/XMLSecurityDataFormatAutoConfiguration.java
index 62ca4d5..7bb1d70 100644
--- a/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/dataformat/xmlsecurity/springboot/XMLSecurityDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/dataformat/xmlsecurity/springboot/XMLSecurityDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.xmlsecurity.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(XMLSecurityDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class XMLSecurityDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/dataformat/xmlsecurity/springboot/XMLSecurityDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/dataformat/xmlsecurity/springboot/XMLSecurityDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/dataformat/xmlsecurity/springboot/XMLSecurityDataFormatConfiguration.java
index 9c725c7..772b52c 100644
--- a/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/dataformat/xmlsecurity/springboot/XMLSecurityDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xmlsecurity-starter/src/main/java/org/apache/camel/dataformat/xmlsecurity/springboot/XMLSecurityDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.xmlsecurity.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.securexml)
 public class XMLSecurityDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xmpp-starter/src/main/java/org/apache/camel/component/xmpp/springboot/XmppComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xmpp-starter/src/main/java/org/apache/camel/component/xmpp/springboot/XmppComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-xmpp-starter/src/main/java/org/apache/camel/component/xmpp/springboot/XmppComponentAutoConfiguration.java
index a48647e..5b21da0 100644
--- a/platforms/spring-boot/components-starter/camel-xmpp-starter/src/main/java/org/apache/camel/component/xmpp/springboot/XmppComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xmpp-starter/src/main/java/org/apache/camel/component/xmpp/springboot/XmppComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.xmpp.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.xmpp.XmppComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(XmppComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class XmppComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatAutoConfiguration.java
index b45b669..58f86c8 100644
--- a/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.xstream.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JsonDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class JsonDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatConfiguration.java
index 522c52e..d56f19a 100644
--- a/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/JsonDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.xstream.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.dataformat.xstream.JsonDataFormat;
 import org.apache.camel.model.dataformat.JsonLibrary;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.json-xstream)
 public class JsonDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/XStreamDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/XStreamDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/XStreamDataFormatAutoConfiguration.java
index c132cab..3d5b520 100644
--- a/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/XStreamDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/XStreamDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.xstream.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(XStreamDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class XStreamDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/XStreamDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/XStreamDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/XStreamDataFormatConfiguration.java
index 8e953c6..4921355 100644
--- a/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/XStreamDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-xstream-starter/src/main/java/org/apache/camel/dataformat/xstream/springboot/XStreamDataFormatConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.xstream.springboot;
 
 import java.util.List;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.xstream)
 public class XStreamDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentAutoConfiguration.java
index 006d096..219e800 100644
--- a/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.yammer.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.yammer.YammerComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(YammerComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class YammerComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java
index 1168a36..752766f 100644
--- a/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-yammer-starter/src/main/java/org/apache/camel/component/yammer/springboot/YammerComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.yammer.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.yammer.ApiRequestor;
 import org.apache.camel.component.yammer.YammerFunctionType;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.yammer)
 public class YammerComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-zendesk-starter/src/main/java/org/apache/camel/component/zendesk/springboot/ZendeskComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-zendesk-starter/src/main/java/org/apache/camel/component/zendesk/springboot/ZendeskComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-zendesk-starter/src/main/java/org/apache/camel/component/zendesk/springboot/ZendeskComponentAutoConfiguration.java
index d181838..0bd35c0 100644
--- a/platforms/spring-boot/components-starter/camel-zendesk-starter/src/main/java/org/apache/camel/component/zendesk/springboot/ZendeskComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-zendesk-starter/src/main/java/org/apache/camel/component/zendesk/springboot/ZendeskComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.zendesk.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.zendesk.ZendeskComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ZendeskComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class ZendeskComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-zendesk-starter/src/main/java/org/apache/camel/component/zendesk/springboot/ZendeskComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-zendesk-starter/src/main/java/org/apache/camel/component/zendesk/springboot/ZendeskComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-zendesk-starter/src/main/java/org/apache/camel/component/zendesk/springboot/ZendeskComponentConfiguration.java
index 8defaca..e81d23f 100644
--- a/platforms/spring-boot/components-starter/camel-zendesk-starter/src/main/java/org/apache/camel/component/zendesk/springboot/ZendeskComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-zendesk-starter/src/main/java/org/apache/camel/component/zendesk/springboot/ZendeskComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.zendesk.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
 import org.zendesk.client.v2.Zendesk;
@@ -25,6 +26,7 @@ import org.zendesk.client.v2.Zendesk;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.zendesk)
 public class ZendeskComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-zipfile-starter/src/main/java/org/apache/camel/dataformat/zipfile/springboot/ZipFileDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-zipfile-starter/src/main/java/org/apache/camel/dataformat/zipfile/springboot/ZipFileDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-zipfile-starter/src/main/java/org/apache/camel/dataformat/zipfile/springboot/ZipFileDataFormatAutoConfiguration.java
index a0a3213..9772e7d 100644
--- a/platforms/spring-boot/components-starter/camel-zipfile-starter/src/main/java/org/apache/camel/dataformat/zipfile/springboot/ZipFileDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-zipfile-starter/src/main/java/org/apache/camel/dataformat/zipfile/springboot/ZipFileDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.zipfile.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ZipFileDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class ZipFileDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-zipfile-starter/src/main/java/org/apache/camel/dataformat/zipfile/springboot/ZipFileDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-zipfile-starter/src/main/java/org/apache/camel/dataformat/zipfile/springboot/ZipFileDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-zipfile-starter/src/main/java/org/apache/camel/dataformat/zipfile/springboot/ZipFileDataFormatConfiguration.java
index fa42d9e..d08996a 100644
--- a/platforms/spring-boot/components-starter/camel-zipfile-starter/src/main/java/org/apache/camel/dataformat/zipfile/springboot/ZipFileDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-zipfile-starter/src/main/java/org/apache/camel/dataformat/zipfile/springboot/ZipFileDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.zipfile.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.zipfile)
 public class ZipFileDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-zookeeper-master-starter/src/main/java/org/apache/camel/component/zookeepermaster/springboot/MasterComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-zookeeper-master-starter/src/main/java/org/apache/camel/component/zookeepermaster/springboot/MasterComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-zookeeper-master-starter/src/main/java/org/apache/camel/component/zookeepermaster/springboot/MasterComponentAutoConfiguration.java
index 5afd8cc..1162a59 100644
--- a/platforms/spring-boot/components-starter/camel-zookeeper-master-starter/src/main/java/org/apache/camel/component/zookeepermaster/springboot/MasterComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-zookeeper-master-starter/src/main/java/org/apache/camel/component/zookeepermaster/springboot/MasterComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.zookeepermaster.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.zookeepermaster.MasterComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MasterComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class MasterComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-zookeeper-master-starter/src/main/java/org/apache/camel/component/zookeepermaster/springboot/MasterComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-zookeeper-master-starter/src/main/java/org/apache/camel/component/zookeepermaster/springboot/MasterComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-zookeeper-master-starter/src/main/java/org/apache/camel/component/zookeepermaster/springboot/MasterComponentConfiguration.java
index 8529a4d..5e0ed69 100644
--- a/platforms/spring-boot/components-starter/camel-zookeeper-master-starter/src/main/java/org/apache/camel/component/zookeepermaster/springboot/MasterComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-zookeeper-master-starter/src/main/java/org/apache/camel/component/zookeepermaster/springboot/MasterComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.zookeepermaster.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.zookeepermaster.ContainerIdFactory;
 import org.apache.curator.framework.CuratorFramework;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.zookeeper-master)
 public class MasterComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-zookeeper-starter/src/main/java/org/apache/camel/component/zookeeper/springboot/ZooKeeperComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-zookeeper-starter/src/main/java/org/apache/camel/component/zookeeper/springboot/ZooKeeperComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-zookeeper-starter/src/main/java/org/apache/camel/component/zookeeper/springboot/ZooKeeperComponentAutoConfiguration.java
index 1478c95..209747a 100644
--- a/platforms/spring-boot/components-starter/camel-zookeeper-starter/src/main/java/org/apache/camel/component/zookeeper/springboot/ZooKeeperComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-zookeeper-starter/src/main/java/org/apache/camel/component/zookeeper/springboot/ZooKeeperComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.zookeeper.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.zookeeper.ZooKeeperComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ZooKeeperComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class ZooKeeperComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-zookeeper-starter/src/main/java/org/apache/camel/component/zookeeper/springboot/ZooKeeperComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-zookeeper-starter/src/main/java/org/apache/camel/component/zookeeper/springboot/ZooKeeperComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-zookeeper-starter/src/main/java/org/apache/camel/component/zookeeper/springboot/ZooKeeperComponentConfiguration.java
index 7f40e02..9e4d2cc 100644
--- a/platforms/spring-boot/components-starter/camel-zookeeper-starter/src/main/java/org/apache/camel/component/zookeeper/springboot/ZooKeeperComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-zookeeper-starter/src/main/java/org/apache/camel/component/zookeeper/springboot/ZooKeeperComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.zookeeper.springboot;
 
 import java.util.List;
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.DeprecatedConfigurationProperty;
 
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.DeprecatedConfigurationProper
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.zookeeper)
 public class ZooKeeperComponentConfiguration {
 


"
"189","362","2017-04-19 08:35:48+00:00","zregvart@apache.org","['commits@camel.apache.org']","[03/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...","Return-Path: <commits-return-55736-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 31F5F18707
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:35:48 +0000 (UTC)
Received: (qmail 39734 invoked by uid 500); 19 Apr 2017 08:35:47 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 39585 invoked by uid 500); 19 Apr 2017 08:35:46 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 39444 invoked by uid 99); 19 Apr 2017 08:35:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:35:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 7511EE17C7; Wed, 19 Apr 2017 08:35:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 08:35:48 -0000
Message-Id: <c04c2513dd764094bfebc8ac9fcb9cb7@git.apache.org>
In-Reply-To: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
References: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [03/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-splunk-starter/src/main/java/org/apache/camel/component/splunk/springboot/SplunkComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-splunk-starter/src/main/java/org/apache/camel/component/splunk/springboot/SplunkComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-splunk-starter/src/main/java/org/apache/camel/component/splunk/springboot/SplunkComponentConfiguration.java
index 8e1d97b..ede27fc 100644
--- a/platforms/spring-boot/components-starter/camel-splunk-starter/src/main/java/org/apache/camel/component/splunk/springboot/SplunkComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-splunk-starter/src/main/java/org/apache/camel/component/splunk/springboot/SplunkComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.splunk.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.splunk.SplunkConfigurationFactory;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.splunk)
 public class SplunkComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-spring-batch-starter/src/main/java/org/apache/camel/component/spring/batch/springboot/SpringBatchComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-spring-batch-starter/src/main/java/org/apache/camel/component/spring/batch/springboot/SpringBatchComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-spring-batch-starter/src/main/java/org/apache/camel/component/spring/batch/springboot/SpringBatchComponentAutoConfiguration.java
index 380c1fe..fb3fad0 100644
--- a/platforms/spring-boot/components-starter/camel-spring-batch-starter/src/main/java/org/apache/camel/component/spring/batch/springboot/SpringBatchComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-spring-batch-starter/src/main/java/org/apache/camel/component/spring/batch/springboot/SpringBatchComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.spring.batch.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.spring.batch.SpringBatchComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SpringBatchComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class SpringBatchComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-spring-batch-starter/src/main/java/org/apache/camel/component/spring/batch/springboot/SpringBatchComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-spring-batch-starter/src/main/java/org/apache/camel/component/spring/batch/springboot/SpringBatchComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-spring-batch-starter/src/main/java/org/apache/camel/component/spring/batch/springboot/SpringBatchComponentConfiguration.java
index 4aff6a2..85fb173 100644
--- a/platforms/spring-boot/components-starter/camel-spring-batch-starter/src/main/java/org/apache/camel/component/spring/batch/springboot/SpringBatchComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-spring-batch-starter/src/main/java/org/apache/camel/component/spring/batch/springboot/SpringBatchComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.spring.batch.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.batch.core.configuration.JobRegistry;
 import org.springframework.batch.core.launch.JobLauncher;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.spring-batch)
 public class SpringBatchComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-spring-integration-starter/src/main/java/org/apache/camel/component/spring/integration/springboot/SpringIntegrationComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-spring-integration-starter/src/main/java/org/apache/camel/component/spring/integration/springboot/SpringIntegrationComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-spring-integration-starter/src/main/java/org/apache/camel/component/spring/integration/springboot/SpringIntegrationComponentAutoConfiguration.java
index e0bf058..c0cc013 100644
--- a/platforms/spring-boot/components-starter/camel-spring-integration-starter/src/main/java/org/apache/camel/component/spring/integration/springboot/SpringIntegrationComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-spring-integration-starter/src/main/java/org/apache/camel/component/spring/integration/springboot/SpringIntegrationComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.spring.integration.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.spring.integration.SpringIntegrationComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SpringIntegrationComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class SpringIntegrationComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-spring-ldap-starter/src/main/java/org/apache/camel/component/springldap/springboot/SpringLdapComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-spring-ldap-starter/src/main/java/org/apache/camel/component/springldap/springboot/SpringLdapComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-spring-ldap-starter/src/main/java/org/apache/camel/component/springldap/springboot/SpringLdapComponentAutoConfiguration.java
index fef476d..1a032a4 100644
--- a/platforms/spring-boot/components-starter/camel-spring-ldap-starter/src/main/java/org/apache/camel/component/springldap/springboot/SpringLdapComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-spring-ldap-starter/src/main/java/org/apache/camel/component/springldap/springboot/SpringLdapComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.springldap.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.springldap.SpringLdapComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SpringLdapComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class SpringLdapComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-spring-redis-starter/src/main/java/org/apache/camel/component/redis/springboot/RedisComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-spring-redis-starter/src/main/java/org/apache/camel/component/redis/springboot/RedisComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-spring-redis-starter/src/main/java/org/apache/camel/component/redis/springboot/RedisComponentAutoConfiguration.java
index 66bd1be..adcdd1c 100644
--- a/platforms/spring-boot/components-starter/camel-spring-redis-starter/src/main/java/org/apache/camel/component/redis/springboot/RedisComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-spring-redis-starter/src/main/java/org/apache/camel/component/redis/springboot/RedisComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.redis.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.redis.RedisComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RedisComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class RedisComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/component/event/springboot/EventComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/component/event/springboot/EventComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/component/event/springboot/EventComponentAutoConfiguration.java
index 62b26a0..6fea192 100644
--- a/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/component/event/springboot/EventComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/component/event/springboot/EventComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.event.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.event.EventComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(EventComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class EventComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/language/spel/springboot/SpelLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/language/spel/springboot/SpelLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/language/spel/springboot/SpelLanguageAutoConfiguration.java
index c41a22c..eb7e21f 100644
--- a/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/language/spel/springboot/SpelLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/language/spel/springboot/SpelLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.spel.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.spel.SpelLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SpelLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class SpelLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/language/spel/springboot/SpelLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/language/spel/springboot/SpelLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/language/spel/springboot/SpelLanguageConfiguration.java
index b8dddfd..37968ae 100644
--- a/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/language/spel/springboot/SpelLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-spring-starter/src/main/java/org/apache/camel/language/spel/springboot/SpelLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.spel.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.spel)
 public class SpelLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-spring-ws-starter/src/main/java/org/apache/camel/component/spring/ws/springboot/SpringWebserviceComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-spring-ws-starter/src/main/java/org/apache/camel/component/spring/ws/springboot/SpringWebserviceComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-spring-ws-starter/src/main/java/org/apache/camel/component/spring/ws/springboot/SpringWebserviceComponentAutoConfiguration.java
index 42c56db..d64e3b0 100644
--- a/platforms/spring-boot/components-starter/camel-spring-ws-starter/src/main/java/org/apache/camel/component/spring/ws/springboot/SpringWebserviceComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-spring-ws-starter/src/main/java/org/apache/camel/component/spring/ws/springboot/SpringWebserviceComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.spring.ws.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.spring.ws.SpringWebserviceComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SpringWebserviceComponentAutoConfiguration.Condition.class)
@@ -85,6 +87,7 @@ public class SpringWebserviceComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-spring-ws-starter/src/main/java/org/apache/camel/component/spring/ws/springboot/SpringWebserviceComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-spring-ws-starter/src/main/java/org/apache/camel/component/spring/ws/springboot/SpringWebserviceComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-spring-ws-starter/src/main/java/org/apache/camel/component/spring/ws/springboot/SpringWebserviceComponentConfiguration.java
index a24699a..4d7bf1c 100644
--- a/platforms/spring-boot/components-starter/camel-spring-ws-starter/src/main/java/org/apache/camel/component/spring/ws/springboot/SpringWebserviceComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-spring-ws-starter/src/main/java/org/apache/camel/component/spring/ws/springboot/SpringWebserviceComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.spring.ws.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.spring-ws)
 public class SpringWebserviceComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/springboot/SqlComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/springboot/SqlComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/springboot/SqlComponentAutoConfiguration.java
index facfb76..0783c16 100644
--- a/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/springboot/SqlComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/springboot/SqlComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.sql.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.sql.SqlComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SqlComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class SqlComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/springboot/SqlComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/springboot/SqlComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/springboot/SqlComponentConfiguration.java
index 99df47c..41b913a 100644
--- a/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/springboot/SqlComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/springboot/SqlComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.sql.springboot;
 
+import javax.annotation.Generated;
 import javax.sql.DataSource;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.sql)
 public class SqlComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/stored/springboot/SqlStoredComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/stored/springboot/SqlStoredComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/stored/springboot/SqlStoredComponentAutoConfiguration.java
index 68190dc..c9ef4e5 100644
--- a/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/stored/springboot/SqlStoredComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/stored/springboot/SqlStoredComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.sql.stored.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.sql.stored.SqlStoredComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SqlStoredComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class SqlStoredComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/stored/springboot/SqlStoredComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/stored/springboot/SqlStoredComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/stored/springboot/SqlStoredComponentConfiguration.java
index 310d2d3..234b800 100644
--- a/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/stored/springboot/SqlStoredComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-sql-starter/src/main/java/org/apache/camel/component/sql/stored/springboot/SqlStoredComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.sql.stored.springboot;
 
+import javax.annotation.Generated;
 import javax.sql.DataSource;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.sql-stored)
 public class SqlStoredComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ssh-starter/src/main/java/org/apache/camel/component/ssh/springboot/SshComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ssh-starter/src/main/java/org/apache/camel/component/ssh/springboot/SshComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-ssh-starter/src/main/java/org/apache/camel/component/ssh/springboot/SshComponentAutoConfiguration.java
index e9f3ced..87750a7 100644
--- a/platforms/spring-boot/components-starter/camel-ssh-starter/src/main/java/org/apache/camel/component/ssh/springboot/SshComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ssh-starter/src/main/java/org/apache/camel/component/ssh/springboot/SshComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.ssh.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.ssh.SshComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SshComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class SshComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ssh-starter/src/main/java/org/apache/camel/component/ssh/springboot/SshComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ssh-starter/src/main/java/org/apache/camel/component/ssh/springboot/SshComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-ssh-starter/src/main/java/org/apache/camel/component/ssh/springboot/SshComponentConfiguration.java
index 4befc2f..2f31426 100644
--- a/platforms/spring-boot/components-starter/camel-ssh-starter/src/main/java/org/apache/camel/component/ssh/springboot/SshComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ssh-starter/src/main/java/org/apache/camel/component/ssh/springboot/SshComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.ssh.springboot;
 
+import javax.annotation.Generated;
 import org.apache.sshd.common.KeyPairProvider;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.DeprecatedConfigurationProperty;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.ssh)
 public class SshComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-stax-starter/src/main/java/org/apache/camel/component/stax/springboot/StAXComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-stax-starter/src/main/java/org/apache/camel/component/stax/springboot/StAXComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-stax-starter/src/main/java/org/apache/camel/component/stax/springboot/StAXComponentAutoConfiguration.java
index bee7380..fa6e299 100644
--- a/platforms/spring-boot/components-starter/camel-stax-starter/src/main/java/org/apache/camel/component/stax/springboot/StAXComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-stax-starter/src/main/java/org/apache/camel/component/stax/springboot/StAXComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.stax.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.stax.StAXComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(StAXComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class StAXComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-stomp-starter/src/main/java/org/apache/camel/component/stomp/springboot/StompComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-stomp-starter/src/main/java/org/apache/camel/component/stomp/springboot/StompComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-stomp-starter/src/main/java/org/apache/camel/component/stomp/springboot/StompComponentAutoConfiguration.java
index c46611e..08f7262 100644
--- a/platforms/spring-boot/components-starter/camel-stomp-starter/src/main/java/org/apache/camel/component/stomp/springboot/StompComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-stomp-starter/src/main/java/org/apache/camel/component/stomp/springboot/StompComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.stomp.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.stomp.StompComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(StompComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class StompComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-stomp-starter/src/main/java/org/apache/camel/component/stomp/springboot/StompComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-stomp-starter/src/main/java/org/apache/camel/component/stomp/springboot/StompComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-stomp-starter/src/main/java/org/apache/camel/component/stomp/springboot/StompComponentConfiguration.java
index f2be104..2671bd5 100644
--- a/platforms/spring-boot/components-starter/camel-stomp-starter/src/main/java/org/apache/camel/component/stomp/springboot/StompComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-stomp-starter/src/main/java/org/apache/camel/component/stomp/springboot/StompComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.stomp.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.util.jsse.SSLContextParameters;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.stomp)
 public class StompComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-stream-starter/src/main/java/org/apache/camel/component/stream/springboot/StreamComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-stream-starter/src/main/java/org/apache/camel/component/stream/springboot/StreamComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-stream-starter/src/main/java/org/apache/camel/component/stream/springboot/StreamComponentAutoConfiguration.java
index 8f72be2..8b5177d 100644
--- a/platforms/spring-boot/components-starter/camel-stream-starter/src/main/java/org/apache/camel/component/stream/springboot/StreamComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-stream-starter/src/main/java/org/apache/camel/component/stream/springboot/StreamComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.stream.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.stream.StreamComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(StreamComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class StreamComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-stringtemplate-starter/src/main/java/org/apache/camel/component/stringtemplate/springboot/StringTemplateComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-stringtemplate-starter/src/main/java/org/apache/camel/component/stringtemplate/springboot/StringTemplateComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-stringtemplate-starter/src/main/java/org/apache/camel/component/stringtemplate/springboot/StringTemplateComponentAutoConfiguration.java
index 098d350..9409ab2 100644
--- a/platforms/spring-boot/components-starter/camel-stringtemplate-starter/src/main/java/org/apache/camel/component/stringtemplate/springboot/StringTemplateComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-stringtemplate-starter/src/main/java/org/apache/camel/component/stringtemplate/springboot/StringTemplateComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.stringtemplate.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.stringtemplate.StringTemplateComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(StringTemplateComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class StringTemplateComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-syslog-starter/src/main/java/org/apache/camel/component/syslog/springboot/SyslogDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-syslog-starter/src/main/java/org/apache/camel/component/syslog/springboot/SyslogDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-syslog-starter/src/main/java/org/apache/camel/component/syslog/springboot/SyslogDataFormatAutoConfiguration.java
index 6c96a3f..0645a74 100644
--- a/platforms/spring-boot/components-starter/camel-syslog-starter/src/main/java/org/apache/camel/component/syslog/springboot/SyslogDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-syslog-starter/src/main/java/org/apache/camel/component/syslog/springboot/SyslogDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.syslog.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SyslogDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class SyslogDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-syslog-starter/src/main/java/org/apache/camel/component/syslog/springboot/SyslogDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-syslog-starter/src/main/java/org/apache/camel/component/syslog/springboot/SyslogDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-syslog-starter/src/main/java/org/apache/camel/component/syslog/springboot/SyslogDataFormatConfiguration.java
index afdc18f..3ef518f 100644
--- a/platforms/spring-boot/components-starter/camel-syslog-starter/src/main/java/org/apache/camel/component/syslog/springboot/SyslogDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-syslog-starter/src/main/java/org/apache/camel/component/syslog/springboot/SyslogDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.syslog.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.syslog)
 public class SyslogDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-tagsoup-starter/src/main/java/org/apache/camel/dataformat/tagsoup/springboot/TidyMarkupDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-tagsoup-starter/src/main/java/org/apache/camel/dataformat/tagsoup/springboot/TidyMarkupDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-tagsoup-starter/src/main/java/org/apache/camel/dataformat/tagsoup/springboot/TidyMarkupDataFormatAutoConfiguration.java
index b9f2ed8..6ee00da 100644
--- a/platforms/spring-boot/components-starter/camel-tagsoup-starter/src/main/java/org/apache/camel/dataformat/tagsoup/springboot/TidyMarkupDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-tagsoup-starter/src/main/java/org/apache/camel/dataformat/tagsoup/springboot/TidyMarkupDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.tagsoup.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(TidyMarkupDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class TidyMarkupDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-tagsoup-starter/src/main/java/org/apache/camel/dataformat/tagsoup/springboot/TidyMarkupDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-tagsoup-starter/src/main/java/org/apache/camel/dataformat/tagsoup/springboot/TidyMarkupDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-tagsoup-starter/src/main/java/org/apache/camel/dataformat/tagsoup/springboot/TidyMarkupDataFormatConfiguration.java
index 0e45ec6..a7fb06a 100644
--- a/platforms/spring-boot/components-starter/camel-tagsoup-starter/src/main/java/org/apache/camel/dataformat/tagsoup/springboot/TidyMarkupDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-tagsoup-starter/src/main/java/org/apache/camel/dataformat/tagsoup/springboot/TidyMarkupDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.tagsoup.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.tidymarkup)
 public class TidyMarkupDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-tarfile-starter/src/main/java/org/apache/camel/dataformat/tarfile/springboot/TarFileDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-tarfile-starter/src/main/java/org/apache/camel/dataformat/tarfile/springboot/TarFileDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-tarfile-starter/src/main/java/org/apache/camel/dataformat/tarfile/springboot/TarFileDataFormatAutoConfiguration.java
index 24b34f7..2427e92 100644
--- a/platforms/spring-boot/components-starter/camel-tarfile-starter/src/main/java/org/apache/camel/dataformat/tarfile/springboot/TarFileDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-tarfile-starter/src/main/java/org/apache/camel/dataformat/tarfile/springboot/TarFileDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.tarfile.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(TarFileDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class TarFileDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-tarfile-starter/src/main/java/org/apache/camel/dataformat/tarfile/springboot/TarFileDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-tarfile-starter/src/main/java/org/apache/camel/dataformat/tarfile/springboot/TarFileDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-tarfile-starter/src/main/java/org/apache/camel/dataformat/tarfile/springboot/TarFileDataFormatConfiguration.java
index 6d96c3b..ab7836b 100644
--- a/platforms/spring-boot/components-starter/camel-tarfile-starter/src/main/java/org/apache/camel/dataformat/tarfile/springboot/TarFileDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-tarfile-starter/src/main/java/org/apache/camel/dataformat/tarfile/springboot/TarFileDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.tarfile.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.tarfile)
 public class TarFileDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-telegram-starter/src/main/java/org/apache/camel/component/telegram/springboot/TelegramComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-telegram-starter/src/main/java/org/apache/camel/component/telegram/springboot/TelegramComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-telegram-starter/src/main/java/org/apache/camel/component/telegram/springboot/TelegramComponentAutoConfiguration.java
index ef588b197..0dfd831 100644
--- a/platforms/spring-boot/components-starter/camel-telegram-starter/src/main/java/org/apache/camel/component/telegram/springboot/TelegramComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-telegram-starter/src/main/java/org/apache/camel/component/telegram/springboot/TelegramComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.telegram.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.telegram.TelegramComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(TelegramComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class TelegramComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-telegram-starter/src/main/java/org/apache/camel/component/telegram/springboot/TelegramComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-telegram-starter/src/main/java/org/apache/camel/component/telegram/springboot/TelegramComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-telegram-starter/src/main/java/org/apache/camel/component/telegram/springboot/TelegramComponentConfiguration.java
index b4b53fd..b27d2c9 100644
--- a/platforms/spring-boot/components-starter/camel-telegram-starter/src/main/java/org/apache/camel/component/telegram/springboot/TelegramComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-telegram-starter/src/main/java/org/apache/camel/component/telegram/springboot/TelegramComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.telegram.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.telegram)
 public class TelegramComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-tika-starter/src/main/java/org/apache/camel/component/tika/springboot/TikaComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-tika-starter/src/main/java/org/apache/camel/component/tika/springboot/TikaComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-tika-starter/src/main/java/org/apache/camel/component/tika/springboot/TikaComponentAutoConfiguration.java
index 72c4d56..c6ab08c 100644
--- a/platforms/spring-boot/components-starter/camel-tika-starter/src/main/java/org/apache/camel/component/tika/springboot/TikaComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-tika-starter/src/main/java/org/apache/camel/component/tika/springboot/TikaComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.tika.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.tika.TikaComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(TikaComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class TikaComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-twitter-starter/src/main/java/org/apache/camel/component/twitter/springboot/TwitterComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-twitter-starter/src/main/java/org/apache/camel/component/twitter/springboot/TwitterComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-twitter-starter/src/main/java/org/apache/camel/component/twitter/springboot/TwitterComponentAutoConfiguration.java
index b31610b..985ec37 100644
--- a/platforms/spring-boot/components-starter/camel-twitter-starter/src/main/java/org/apache/camel/component/twitter/springboot/TwitterComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-twitter-starter/src/main/java/org/apache/camel/component/twitter/springboot/TwitterComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.twitter.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.twitter.TwitterComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(TwitterComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class TwitterComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-twitter-starter/src/main/java/org/apache/camel/component/twitter/springboot/TwitterComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-twitter-starter/src/main/java/org/apache/camel/component/twitter/springboot/TwitterComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-twitter-starter/src/main/java/org/apache/camel/component/twitter/springboot/TwitterComponentConfiguration.java
index 21cd925..624f274 100644
--- a/platforms/spring-boot/components-starter/camel-twitter-starter/src/main/java/org/apache/camel/component/twitter/springboot/TwitterComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-twitter-starter/src/main/java/org/apache/camel/component/twitter/springboot/TwitterComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.twitter.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.twitter)
 public class TwitterComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-undertow-starter/src/main/java/org/apache/camel/component/undertow/springboot/UndertowComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-undertow-starter/src/main/java/org/apache/camel/component/undertow/springboot/UndertowComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-undertow-starter/src/main/java/org/apache/camel/component/undertow/springboot/UndertowComponentAutoConfiguration.java
index 8676805..554bd17 100644
--- a/platforms/spring-boot/components-starter/camel-undertow-starter/src/main/java/org/apache/camel/component/undertow/springboot/UndertowComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-undertow-starter/src/main/java/org/apache/camel/component/undertow/springboot/UndertowComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.undertow.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.undertow.UndertowComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(UndertowComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class UndertowComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-undertow-starter/src/main/java/org/apache/camel/component/undertow/springboot/UndertowComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-undertow-starter/src/main/java/org/apache/camel/component/undertow/springboot/UndertowComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-undertow-starter/src/main/java/org/apache/camel/component/undertow/springboot/UndertowComponentConfiguration.java
index ba44c7f..0548f3f 100644
--- a/platforms/spring-boot/components-starter/camel-undertow-starter/src/main/java/org/apache/camel/component/undertow/springboot/UndertowComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-undertow-starter/src/main/java/org/apache/camel/component/undertow/springboot/UndertowComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.undertow.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.undertow.UndertowHttpBinding;
 import org.apache.camel.util.jsse.SSLContextParameters;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.undertow)
 public class UndertowComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityCsvDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityCsvDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityCsvDataFormatAutoConfiguration.java
index 9430915..fc798a6 100644
--- a/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityCsvDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityCsvDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.univocity.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(UniVocityCsvDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class UniVocityCsvDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityCsvDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityCsvDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityCsvDataFormatConfiguration.java
index 6b4bb84..7c826b0 100644
--- a/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityCsvDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityCsvDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.univocity.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.univocity-csv)
 public class UniVocityCsvDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityFixedWidthDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityFixedWidthDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityFixedWidthDataFormatAutoConfiguration.java
index b7e50b3..44313ec 100644
--- a/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityFixedWidthDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityFixedWidthDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.univocity.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(UniVocityFixedWidthDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class UniVocityFixedWidthDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityFixedWidthDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityFixedWidthDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityFixedWidthDataFormatConfiguration.java
index 6fada79..4ac1cf8 100644
--- a/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityFixedWidthDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityFixedWidthDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.univocity.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.univocity-fixed)
 public class UniVocityFixedWidthDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityTsvDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityTsvDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityTsvDataFormatAutoConfiguration.java
index aaaff6c..d4e5513 100644
--- a/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityTsvDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityTsvDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.univocity.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(UniVocityTsvDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class UniVocityTsvDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityTsvDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityTsvDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityTsvDataFormatConfiguration.java
index 110369f..a04fa0c 100644
--- a/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityTsvDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-univocity-parsers-starter/src/main/java/org/apache/camel/dataformat/univocity/springboot/UniVocityTsvDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.univocity.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.univocity-tsv)
 public class UniVocityTsvDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-velocity-starter/src/main/java/org/apache/camel/component/velocity/springboot/VelocityComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-velocity-starter/src/main/java/org/apache/camel/component/velocity/springboot/VelocityComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-velocity-starter/src/main/java/org/apache/camel/component/velocity/springboot/VelocityComponentAutoConfiguration.java
index 77c26bb..34f7d3c 100644
--- a/platforms/spring-boot/components-starter/camel-velocity-starter/src/main/java/org/apache/camel/component/velocity/springboot/VelocityComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-velocity-starter/src/main/java/org/apache/camel/component/velocity/springboot/VelocityComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.velocity.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.velocity.VelocityComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(VelocityComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class VelocityComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-velocity-starter/src/main/java/org/apache/camel/component/velocity/springboot/VelocityComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-velocity-starter/src/main/java/org/apache/camel/component/velocity/springboot/VelocityComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-velocity-starter/src/main/java/org/apache/camel/component/velocity/springboot/VelocityComponentConfiguration.java
index 365d4af..ab13c27 100644
--- a/platforms/spring-boot/components-starter/camel-velocity-starter/src/main/java/org/apache/camel/component/velocity/springboot/VelocityComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-velocity-starter/src/main/java/org/apache/camel/component/velocity/springboot/VelocityComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.velocity.springboot;
 
+import javax.annotation.Generated;
 import org.apache.velocity.app.VelocityEngine;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.velocity)
 public class VelocityComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-vertx-starter/src/main/java/org/apache/camel/component/vertx/springboot/VertxComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-vertx-starter/src/main/java/org/apache/camel/component/vertx/springboot/VertxComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-vertx-starter/src/main/java/org/apache/camel/component/vertx/springboot/VertxComponentAutoConfiguration.java
index 5677d99..d5c6724 100644
--- a/platforms/spring-boot/components-starter/camel-vertx-starter/src/main/java/org/apache/camel/component/vertx/springboot/VertxComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-vertx-starter/src/main/java/org/apache/camel/component/vertx/springboot/VertxComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.vertx.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.vertx.VertxComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(VertxComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class VertxComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-vertx-starter/src/main/java/org/apache/camel/component/vertx/springboot/VertxComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-vertx-starter/src/main/java/org/apache/camel/component/vertx/springboot/VertxComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-vertx-starter/src/main/java/org/apache/camel/component/vertx/springboot/VertxComponentConfiguration.java
index 0a44bdf..12d6417 100644
--- a/platforms/spring-boot/components-starter/camel-vertx-starter/src/main/java/org/apache/camel/component/vertx/springboot/VertxComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-vertx-starter/src/main/java/org/apache/camel/component/vertx/springboot/VertxComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.vertx.springboot;
 
+import javax.annotation.Generated;
 import io.vertx.core.Vertx;
 import io.vertx.core.VertxOptions;
 import io.vertx.core.spi.VertxFactory;
@@ -28,6 +29,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.vertx)
 public class VertxComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-weather-starter/src/main/java/org/apache/camel/component/weather/springboot/WeatherComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-weather-starter/src/main/java/org/apache/camel/component/weather/springboot/WeatherComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-weather-starter/src/main/java/org/apache/camel/component/weather/springboot/WeatherComponentAutoConfiguration.java
index be36aaa..6e09f0d 100644
--- a/platforms/spring-boot/components-starter/camel-weather-starter/src/main/java/org/apache/camel/component/weather/springboot/WeatherComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-weather-starter/src/main/java/org/apache/camel/component/weather/springboot/WeatherComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.weather.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.weather.WeatherComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(WeatherComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class WeatherComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-websocket-starter/src/main/java/org/apache/camel/component/websocket/springboot/WebsocketComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-websocket-starter/src/main/java/org/apache/camel/component/websocket/springboot/WebsocketComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-websocket-starter/src/main/java/org/apache/camel/component/websocket/springboot/WebsocketComponentAutoConfiguration.java
index 9e2ad4b..864d4f3 100644
--- a/platforms/spring-boot/components-starter/camel-websocket-starter/src/main/java/org/apache/camel/component/websocket/springboot/WebsocketComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-websocket-starter/src/main/java/org/apache/camel/component/websocket/springboot/WebsocketComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.websocket.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.websocket.WebsocketComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(WebsocketComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class WebsocketComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-websocket-starter/src/main/java/org/apache/camel/component/websocket/springboot/WebsocketComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-websocket-starter/src/main/java/org/apache/camel/component/websocket/springboot/WebsocketComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-websocket-starter/src/main/java/org/apache/camel/component/websocket/springboot/WebsocketComponentConfiguration.java
index ec61ac0..27331a6 100644
--- a/platforms/spring-boot/components-starter/camel-websocket-starter/src/main/java/org/apache/camel/component/websocket/springboot/WebsocketComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-websocket-starter/src/main/java/org/apache/camel/component/websocket/springboot/WebsocketComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.websocket.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.component.websocket.WebSocketFactory;
 import org.apache.camel.util.jsse.SSLContextParameters;
 import org.eclipse.jetty.util.thread.ThreadPool;
@@ -29,6 +30,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.websocket)
 public class WebsocketComponentConfiguration {
 


"
"190","367","2017-04-19 08:35:49+00:00","zregvart@apache.org","['commits@camel.apache.org']","[04/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...","Return-Path: <commits-return-55741-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 4EEA91870C
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:35:49 +0000 (UTC)
Received: (qmail 40426 invoked by uid 500); 19 Apr 2017 08:35:49 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 40239 invoked by uid 500); 19 Apr 2017 08:35:48 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 39529 invoked by uid 99); 19 Apr 2017 08:35:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:35:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 7A6DEE180B; Wed, 19 Apr 2017 08:35:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 08:35:49 -0000
Message-Id: <464e4f3daf11494cb2bdb1dba9d6af41@git.apache.org>
In-Reply-To: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
References: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [04/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java
index 52f4ef1..56064f2 100644
--- a/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.rest.swagger.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.rest.swagger.RestSwaggerComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RestSwaggerComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class RestSwaggerComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java
index 1d59966..cf01faa 100644
--- a/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.rest.swagger.springboot;
 
 import java.net.URI;
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.rest-swagger)
 public class RestSwaggerComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-restlet-starter/src/main/java/org/apache/camel/component/restlet/springboot/RestletComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-restlet-starter/src/main/java/org/apache/camel/component/restlet/springboot/RestletComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-restlet-starter/src/main/java/org/apache/camel/component/restlet/springboot/RestletComponentAutoConfiguration.java
index de4f785..254cb73 100644
--- a/platforms/spring-boot/components-starter/camel-restlet-starter/src/main/java/org/apache/camel/component/restlet/springboot/RestletComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-restlet-starter/src/main/java/org/apache/camel/component/restlet/springboot/RestletComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.restlet.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.restlet.RestletComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RestletComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class RestletComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-restlet-starter/src/main/java/org/apache/camel/component/restlet/springboot/RestletComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-restlet-starter/src/main/java/org/apache/camel/component/restlet/springboot/RestletComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-restlet-starter/src/main/java/org/apache/camel/component/restlet/springboot/RestletComponentConfiguration.java
index 38d23c6..1d485e8 100644
--- a/platforms/spring-boot/components-starter/camel-restlet-starter/src/main/java/org/apache/camel/component/restlet/springboot/RestletComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-restlet-starter/src/main/java/org/apache/camel/component/restlet/springboot/RestletComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.restlet.springboot;
 
 import java.util.List;
+import javax.annotation.Generated;
 import org.apache.camel.spi.HeaderFilterStrategy;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.restlet)
 public class RestletComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-rmi-starter/src/main/java/org/apache/camel/component/rmi/springboot/RmiComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-rmi-starter/src/main/java/org/apache/camel/component/rmi/springboot/RmiComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-rmi-starter/src/main/java/org/apache/camel/component/rmi/springboot/RmiComponentAutoConfiguration.java
index b7c0ee3..275a09e 100644
--- a/platforms/spring-boot/components-starter/camel-rmi-starter/src/main/java/org/apache/camel/component/rmi/springboot/RmiComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-rmi-starter/src/main/java/org/apache/camel/component/rmi/springboot/RmiComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.rmi.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.rmi.RmiComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RmiComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class RmiComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-routebox-starter/src/main/java/org/apache/camel/component/routebox/springboot/RouteboxComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-routebox-starter/src/main/java/org/apache/camel/component/routebox/springboot/RouteboxComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-routebox-starter/src/main/java/org/apache/camel/component/routebox/springboot/RouteboxComponentAutoConfiguration.java
index a5e8023..87984cd 100644
--- a/platforms/spring-boot/components-starter/camel-routebox-starter/src/main/java/org/apache/camel/component/routebox/springboot/RouteboxComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-routebox-starter/src/main/java/org/apache/camel/component/routebox/springboot/RouteboxComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.routebox.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.routebox.RouteboxComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RouteboxComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class RouteboxComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/component/rss/springboot/RssComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/component/rss/springboot/RssComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/component/rss/springboot/RssComponentAutoConfiguration.java
index 6d0a272..1f27ae1 100644
--- a/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/component/rss/springboot/RssComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/component/rss/springboot/RssComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.rss.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.rss.RssComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RssComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class RssComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/dataformat/rss/springboot/RssDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/dataformat/rss/springboot/RssDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/dataformat/rss/springboot/RssDataFormatAutoConfiguration.java
index 708a3bd..32d10e0 100644
--- a/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/dataformat/rss/springboot/RssDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/dataformat/rss/springboot/RssDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.rss.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RssDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class RssDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/dataformat/rss/springboot/RssDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/dataformat/rss/springboot/RssDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/dataformat/rss/springboot/RssDataFormatConfiguration.java
index 405e8af..ae0813f 100644
--- a/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/dataformat/rss/springboot/RssDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-rss-starter/src/main/java/org/apache/camel/dataformat/rss/springboot/RssDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.rss.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.rss)
 public class RssDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-salesforce-starter/src/main/java/org/apache/camel/component/salesforce/springboot/SalesforceComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-salesforce-starter/src/main/java/org/apache/camel/component/salesforce/springboot/SalesforceComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-salesforce-starter/src/main/java/org/apache/camel/component/salesforce/springboot/SalesforceComponentAutoConfiguration.java
index b38fd21..153c330 100644
--- a/platforms/spring-boot/components-starter/camel-salesforce-starter/src/main/java/org/apache/camel/component/salesforce/springboot/SalesforceComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-salesforce-starter/src/main/java/org/apache/camel/component/salesforce/springboot/SalesforceComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.salesforce.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.salesforce.SalesforceComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SalesforceComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class SalesforceComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-salesforce-starter/src/main/java/org/apache/camel/component/salesforce/springboot/SalesforceComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-salesforce-starter/src/main/java/org/apache/camel/component/salesforce/springboot/SalesforceComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-salesforce-starter/src/main/java/org/apache/camel/component/salesforce/springboot/SalesforceComponentConfiguration.java
index e36d5a6..3cde2be 100644
--- a/platforms/spring-boot/components-starter/camel-salesforce-starter/src/main/java/org/apache/camel/component/salesforce/springboot/SalesforceComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-salesforce-starter/src/main/java/org/apache/camel/component/salesforce/springboot/SalesforceComponentConfiguration.java
@@ -19,6 +19,7 @@ package org.apache.camel.component.salesforce.springboot;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
+import javax.annotation.Generated;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.apache.camel.component.salesforce.AuthenticationType;
 import org.apache.camel.component.salesforce.NotFoundBehaviour;
@@ -41,6 +42,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.salesforce)
 public class SalesforceComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-sap-netweaver-starter/src/main/java/org/apache/camel/component/sap/netweaver/springboot/NetWeaverComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-sap-netweaver-starter/src/main/java/org/apache/camel/component/sap/netweaver/springboot/NetWeaverComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-sap-netweaver-starter/src/main/java/org/apache/camel/component/sap/netweaver/springboot/NetWeaverComponentAutoConfiguration.java
index f58e734..88da568 100644
--- a/platforms/spring-boot/components-starter/camel-sap-netweaver-starter/src/main/java/org/apache/camel/component/sap/netweaver/springboot/NetWeaverComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-sap-netweaver-starter/src/main/java/org/apache/camel/component/sap/netweaver/springboot/NetWeaverComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.sap.netweaver.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.sap.netweaver.NetWeaverComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(NetWeaverComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class NetWeaverComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/component/xquery/springboot/XQueryComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/component/xquery/springboot/XQueryComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/component/xquery/springboot/XQueryComponentAutoConfiguration.java
index f81c5bd..2542c9b 100644
--- a/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/component/xquery/springboot/XQueryComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/component/xquery/springboot/XQueryComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.xquery.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.xquery.XQueryComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(XQueryComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class XQueryComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/component/xquery/springboot/XQueryComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/component/xquery/springboot/XQueryComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/component/xquery/springboot/XQueryComponentConfiguration.java
index 86adaef..69b7644 100644
--- a/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/component/xquery/springboot/XQueryComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/component/xquery/springboot/XQueryComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.xquery.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 import net.sf.saxon.Configuration;
 import net.sf.saxon.lib.ModuleURIResolver;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.xquery)
 public class XQueryComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/language/xquery/springboot/XQueryLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/language/xquery/springboot/XQueryLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/language/xquery/springboot/XQueryLanguageAutoConfiguration.java
index b53f4c8..c970cf3 100644
--- a/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/language/xquery/springboot/XQueryLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/language/xquery/springboot/XQueryLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.xquery.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.xquery.XQueryLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(XQueryLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class XQueryLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/language/xquery/springboot/XQueryLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/language/xquery/springboot/XQueryLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/language/xquery/springboot/XQueryLanguageConfiguration.java
index d45e4c4..d479273 100644
--- a/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/language/xquery/springboot/XQueryLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-saxon-starter/src/main/java/org/apache/camel/language/xquery/springboot/XQueryLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.xquery.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.xquery)
 public class XQueryLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-schematron-starter/src/main/java/org/apache/camel/component/schematron/springboot/SchematronComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-schematron-starter/src/main/java/org/apache/camel/component/schematron/springboot/SchematronComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-schematron-starter/src/main/java/org/apache/camel/component/schematron/springboot/SchematronComponentAutoConfiguration.java
index 30d3f0f..6b5e42f 100644
--- a/platforms/spring-boot/components-starter/camel-schematron-starter/src/main/java/org/apache/camel/component/schematron/springboot/SchematronComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-schematron-starter/src/main/java/org/apache/camel/component/schematron/springboot/SchematronComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.schematron.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.schematron.SchematronComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SchematronComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class SchematronComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/JavaScriptLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/JavaScriptLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/JavaScriptLanguageAutoConfiguration.java
index fff186c..7a2e636 100644
--- a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/JavaScriptLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/JavaScriptLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.builder.script.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.builder.script.JavaScriptLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JavaScriptLanguageAutoConfiguration.Condition.class)
@@ -71,6 +73,7 @@ public class JavaScriptLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/JavaScriptLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/JavaScriptLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/JavaScriptLanguageConfiguration.java
index d7be77d..bbd9a57 100644
--- a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/JavaScriptLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/JavaScriptLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.builder.script.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.javascript)
 public class JavaScriptLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PhpLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PhpLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PhpLanguageAutoConfiguration.java
index 3c8cd52..23202cd 100644
--- a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PhpLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PhpLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.builder.script.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.builder.script.PhpLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(PhpLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class PhpLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PhpLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PhpLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PhpLanguageConfiguration.java
index 0bdee8e..4d6641b 100644
--- a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PhpLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PhpLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.builder.script.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.php)
 public class PhpLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PythonLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PythonLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PythonLanguageAutoConfiguration.java
index 1741771..6cac0e9 100644
--- a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PythonLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PythonLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.builder.script.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.builder.script.PythonLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(PythonLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class PythonLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PythonLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PythonLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PythonLanguageConfiguration.java
index 1b0f256..214f23a 100644
--- a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PythonLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/PythonLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.builder.script.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.python)
 public class PythonLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/RubyLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/RubyLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/RubyLanguageAutoConfiguration.java
index 727b5d4..c480b3b 100644
--- a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/RubyLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/RubyLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.builder.script.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.builder.script.RubyLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RubyLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class RubyLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/RubyLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/RubyLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/RubyLanguageConfiguration.java
index 865fb78..8811497 100644
--- a/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/RubyLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-script-starter/src/main/java/org/apache/camel/builder/script/springboot/RubyLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.builder.script.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.ruby)
 public class RubyLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-servicenow-starter/src/main/java/org/apache/camel/component/servicenow/springboot/ServiceNowComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-servicenow-starter/src/main/java/org/apache/camel/component/servicenow/springboot/ServiceNowComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-servicenow-starter/src/main/java/org/apache/camel/component/servicenow/springboot/ServiceNowComponentAutoConfiguration.java
index 3ef4ed8..f201ffe 100644
--- a/platforms/spring-boot/components-starter/camel-servicenow-starter/src/main/java/org/apache/camel/component/servicenow/springboot/ServiceNowComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-servicenow-starter/src/main/java/org/apache/camel/component/servicenow/springboot/ServiceNowComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.servicenow.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.servicenow.ServiceNowComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ServiceNowComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class ServiceNowComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-servicenow-starter/src/main/java/org/apache/camel/component/servicenow/springboot/ServiceNowComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-servicenow-starter/src/main/java/org/apache/camel/component/servicenow/springboot/ServiceNowComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-servicenow-starter/src/main/java/org/apache/camel/component/servicenow/springboot/ServiceNowComponentConfiguration.java
index 4bc2a61..4b7fc5b 100644
--- a/platforms/spring-boot/components-starter/camel-servicenow-starter/src/main/java/org/apache/camel/component/servicenow/springboot/ServiceNowComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-servicenow-starter/src/main/java/org/apache/camel/component/servicenow/springboot/ServiceNowComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.servicenow.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.apache.camel.component.servicenow.ServiceNowComponent;
 import org.apache.camel.component.servicenow.ServiceNowRelease;
@@ -32,6 +33,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.servicenow)
 public class ServiceNowComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-servlet-starter/src/main/java/org/apache/camel/component/servlet/springboot/ServletComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-servlet-starter/src/main/java/org/apache/camel/component/servlet/springboot/ServletComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-servlet-starter/src/main/java/org/apache/camel/component/servlet/springboot/ServletComponentAutoConfiguration.java
index 86cc6be..7b6ae53 100644
--- a/platforms/spring-boot/components-starter/camel-servlet-starter/src/main/java/org/apache/camel/component/servlet/springboot/ServletComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-servlet-starter/src/main/java/org/apache/camel/component/servlet/springboot/ServletComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.servlet.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.servlet.ServletComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ServletComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class ServletComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-servlet-starter/src/main/java/org/apache/camel/component/servlet/springboot/ServletComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-servlet-starter/src/main/java/org/apache/camel/component/servlet/springboot/ServletComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-servlet-starter/src/main/java/org/apache/camel/component/servlet/springboot/ServletComponentConfiguration.java
index bddd727..a54938a 100644
--- a/platforms/spring-boot/components-starter/camel-servlet-starter/src/main/java/org/apache/camel/component/servlet/springboot/ServletComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-servlet-starter/src/main/java/org/apache/camel/component/servlet/springboot/ServletComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.servlet.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.servlet.HttpRegistry;
 import org.apache.camel.http.common.HttpBinding;
 import org.apache.camel.http.common.HttpConfiguration;
@@ -29,6 +30,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.servlet)
 public class ServletComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-sip-starter/src/main/java/org/apache/camel/component/sip/springboot/SipComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-sip-starter/src/main/java/org/apache/camel/component/sip/springboot/SipComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-sip-starter/src/main/java/org/apache/camel/component/sip/springboot/SipComponentAutoConfiguration.java
index 48122e0..9a3d7a6 100644
--- a/platforms/spring-boot/components-starter/camel-sip-starter/src/main/java/org/apache/camel/component/sip/springboot/SipComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-sip-starter/src/main/java/org/apache/camel/component/sip/springboot/SipComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.sip.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.sip.SipComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SipComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class SipComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/batch/springboot/SjmsBatchComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/batch/springboot/SjmsBatchComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/batch/springboot/SjmsBatchComponentAutoConfiguration.java
index 442a3e7..b7bc6fa 100644
--- a/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/batch/springboot/SjmsBatchComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/batch/springboot/SjmsBatchComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.sjms.batch.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.sjms.batch.SjmsBatchComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SjmsBatchComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class SjmsBatchComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/batch/springboot/SjmsBatchComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/batch/springboot/SjmsBatchComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/batch/springboot/SjmsBatchComponentConfiguration.java
index 5b9ac23..90ad059 100644
--- a/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/batch/springboot/SjmsBatchComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/batch/springboot/SjmsBatchComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.sjms.batch.springboot;
 
+import javax.annotation.Generated;
 import javax.jms.ConnectionFactory;
 import org.apache.camel.spi.HeaderFilterStrategy;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.sjms-batch)
 public class SjmsBatchComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/springboot/SjmsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/springboot/SjmsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/springboot/SjmsComponentAutoConfiguration.java
index a931c21..30022fc 100644
--- a/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/springboot/SjmsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/springboot/SjmsComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.sjms.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.sjms.SjmsComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SjmsComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class SjmsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/springboot/SjmsComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/springboot/SjmsComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/springboot/SjmsComponentConfiguration.java
index f099d09..6e8bdce 100644
--- a/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/springboot/SjmsComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-sjms-starter/src/main/java/org/apache/camel/component/sjms/springboot/SjmsComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.sjms.springboot;
 
+import javax.annotation.Generated;
 import javax.jms.ConnectionFactory;
 import org.apache.camel.component.sjms.TransactionCommitStrategy;
 import org.apache.camel.component.sjms.jms.ConnectionResource;
@@ -32,6 +33,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.sjms)
 public class SjmsComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-sjms2-starter/src/main/java/org/apache/camel/component/sjms2/springboot/Sjms2ComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-sjms2-starter/src/main/java/org/apache/camel/component/sjms2/springboot/Sjms2ComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-sjms2-starter/src/main/java/org/apache/camel/component/sjms2/springboot/Sjms2ComponentAutoConfiguration.java
index 4be32a4..fa2a166 100644
--- a/platforms/spring-boot/components-starter/camel-sjms2-starter/src/main/java/org/apache/camel/component/sjms2/springboot/Sjms2ComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-sjms2-starter/src/main/java/org/apache/camel/component/sjms2/springboot/Sjms2ComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.sjms2.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.sjms2.Sjms2Component;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(Sjms2ComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class Sjms2ComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-sjms2-starter/src/main/java/org/apache/camel/component/sjms2/springboot/Sjms2ComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-sjms2-starter/src/main/java/org/apache/camel/component/sjms2/springboot/Sjms2ComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-sjms2-starter/src/main/java/org/apache/camel/component/sjms2/springboot/Sjms2ComponentConfiguration.java
index a4a503b..e5f8ad5 100644
--- a/platforms/spring-boot/components-starter/camel-sjms2-starter/src/main/java/org/apache/camel/component/sjms2/springboot/Sjms2ComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-sjms2-starter/src/main/java/org/apache/camel/component/sjms2/springboot/Sjms2ComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.sjms2.springboot;
 
+import javax.annotation.Generated;
 import javax.jms.ConnectionFactory;
 import org.apache.camel.component.sjms.TransactionCommitStrategy;
 import org.apache.camel.component.sjms.jms.ConnectionResource;
@@ -33,6 +34,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.sjms2)
 public class Sjms2ComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-slack-starter/src/main/java/org/apache/camel/component/slack/springboot/SlackComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-slack-starter/src/main/java/org/apache/camel/component/slack/springboot/SlackComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-slack-starter/src/main/java/org/apache/camel/component/slack/springboot/SlackComponentAutoConfiguration.java
index 296d80e..3a09bd4 100644
--- a/platforms/spring-boot/components-starter/camel-slack-starter/src/main/java/org/apache/camel/component/slack/springboot/SlackComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-slack-starter/src/main/java/org/apache/camel/component/slack/springboot/SlackComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.slack.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.slack.SlackComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SlackComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class SlackComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-slack-starter/src/main/java/org/apache/camel/component/slack/springboot/SlackComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-slack-starter/src/main/java/org/apache/camel/component/slack/springboot/SlackComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-slack-starter/src/main/java/org/apache/camel/component/slack/springboot/SlackComponentConfiguration.java
index aa92aa0..8e5ce18 100644
--- a/platforms/spring-boot/components-starter/camel-slack-starter/src/main/java/org/apache/camel/component/slack/springboot/SlackComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-slack-starter/src/main/java/org/apache/camel/component/slack/springboot/SlackComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.slack.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.slack)
 public class SlackComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-smpp-starter/src/main/java/org/apache/camel/component/smpp/springboot/SmppComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-smpp-starter/src/main/java/org/apache/camel/component/smpp/springboot/SmppComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-smpp-starter/src/main/java/org/apache/camel/component/smpp/springboot/SmppComponentAutoConfiguration.java
index 8f62937..3153fc9 100644
--- a/platforms/spring-boot/components-starter/camel-smpp-starter/src/main/java/org/apache/camel/component/smpp/springboot/SmppComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-smpp-starter/src/main/java/org/apache/camel/component/smpp/springboot/SmppComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.smpp.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.smpp.SmppComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SmppComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class SmppComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-smpp-starter/src/main/java/org/apache/camel/component/smpp/springboot/SmppComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-smpp-starter/src/main/java/org/apache/camel/component/smpp/springboot/SmppComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-smpp-starter/src/main/java/org/apache/camel/component/smpp/springboot/SmppComponentConfiguration.java
index a0f489f..285e097 100644
--- a/platforms/spring-boot/components-starter/camel-smpp-starter/src/main/java/org/apache/camel/component/smpp/springboot/SmppComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-smpp-starter/src/main/java/org/apache/camel/component/smpp/springboot/SmppComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.smpp.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.component.smpp.SmppComponent;
 import org.apache.camel.component.smpp.SmppSplittingPolicy;
 import org.jsmpp.session.SessionStateListener;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.smpp)
 public class SmppComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-snakeyaml-starter/src/main/java/org/apache/camel/component/snakeyaml/springboot/SnakeYAMLDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-snakeyaml-starter/src/main/java/org/apache/camel/component/snakeyaml/springboot/SnakeYAMLDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-snakeyaml-starter/src/main/java/org/apache/camel/component/snakeyaml/springboot/SnakeYAMLDataFormatAutoConfiguration.java
index c5595d9..8e990fc 100644
--- a/platforms/spring-boot/components-starter/camel-snakeyaml-starter/src/main/java/org/apache/camel/component/snakeyaml/springboot/SnakeYAMLDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-snakeyaml-starter/src/main/java/org/apache/camel/component/snakeyaml/springboot/SnakeYAMLDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.snakeyaml.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SnakeYAMLDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class SnakeYAMLDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-snakeyaml-starter/src/main/java/org/apache/camel/component/snakeyaml/springboot/SnakeYAMLDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-snakeyaml-starter/src/main/java/org/apache/camel/component/snakeyaml/springboot/SnakeYAMLDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-snakeyaml-starter/src/main/java/org/apache/camel/component/snakeyaml/springboot/SnakeYAMLDataFormatConfiguration.java
index 368e1e4..e0e1d90 100644
--- a/platforms/spring-boot/components-starter/camel-snakeyaml-starter/src/main/java/org/apache/camel/component/snakeyaml/springboot/SnakeYAMLDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-snakeyaml-starter/src/main/java/org/apache/camel/component/snakeyaml/springboot/SnakeYAMLDataFormatConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.snakeyaml.springboot;
 
 import java.util.List;
+import javax.annotation.Generated;
 import org.apache.camel.component.snakeyaml.SnakeYAMLDataFormat;
 import org.apache.camel.model.dataformat.YAMLLibrary;
 import org.apache.camel.model.dataformat.YAMLTypeFilterDefinition;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.yaml-snakeyaml)
 public class SnakeYAMLDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-snmp-starter/src/main/java/org/apache/camel/component/snmp/springboot/SnmpComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-snmp-starter/src/main/java/org/apache/camel/component/snmp/springboot/SnmpComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-snmp-starter/src/main/java/org/apache/camel/component/snmp/springboot/SnmpComponentAutoConfiguration.java
index 14839fa..82cd4cb 100644
--- a/platforms/spring-boot/components-starter/camel-snmp-starter/src/main/java/org/apache/camel/component/snmp/springboot/SnmpComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-snmp-starter/src/main/java/org/apache/camel/component/snmp/springboot/SnmpComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.snmp.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.snmp.SnmpComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SnmpComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class SnmpComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-soap-starter/src/main/java/org/apache/camel/dataformat/soap/springboot/SoapJaxbDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-soap-starter/src/main/java/org/apache/camel/dataformat/soap/springboot/SoapJaxbDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-soap-starter/src/main/java/org/apache/camel/dataformat/soap/springboot/SoapJaxbDataFormatAutoConfiguration.java
index 85e6b5d..6b575e0 100644
--- a/platforms/spring-boot/components-starter/camel-soap-starter/src/main/java/org/apache/camel/dataformat/soap/springboot/SoapJaxbDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-soap-starter/src/main/java/org/apache/camel/dataformat/soap/springboot/SoapJaxbDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.soap.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SoapJaxbDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class SoapJaxbDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-soap-starter/src/main/java/org/apache/camel/dataformat/soap/springboot/SoapJaxbDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-soap-starter/src/main/java/org/apache/camel/dataformat/soap/springboot/SoapJaxbDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-soap-starter/src/main/java/org/apache/camel/dataformat/soap/springboot/SoapJaxbDataFormatConfiguration.java
index 311d951..a1769ac 100644
--- a/platforms/spring-boot/components-starter/camel-soap-starter/src/main/java/org/apache/camel/dataformat/soap/springboot/SoapJaxbDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-soap-starter/src/main/java/org/apache/camel/dataformat/soap/springboot/SoapJaxbDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.soap.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.soapjaxb)
 public class SoapJaxbDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-solr-starter/src/main/java/org/apache/camel/component/solr/springboot/SolrComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-solr-starter/src/main/java/org/apache/camel/component/solr/springboot/SolrComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-solr-starter/src/main/java/org/apache/camel/component/solr/springboot/SolrComponentAutoConfiguration.java
index 341a6ba..1afb281 100644
--- a/platforms/spring-boot/components-starter/camel-solr-starter/src/main/java/org/apache/camel/component/solr/springboot/SolrComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-solr-starter/src/main/java/org/apache/camel/component/solr/springboot/SolrComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.solr.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.solr.SolrComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SolrComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class SolrComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-spark-starter/src/main/java/org/apache/camel/component/spark/springboot/SparkComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-spark-starter/src/main/java/org/apache/camel/component/spark/springboot/SparkComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-spark-starter/src/main/java/org/apache/camel/component/spark/springboot/SparkComponentAutoConfiguration.java
index 38a2264..bcfbf96 100644
--- a/platforms/spring-boot/components-starter/camel-spark-starter/src/main/java/org/apache/camel/component/spark/springboot/SparkComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-spark-starter/src/main/java/org/apache/camel/component/spark/springboot/SparkComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.spark.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.spark.SparkComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SparkComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class SparkComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-spark-starter/src/main/java/org/apache/camel/component/spark/springboot/SparkComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-spark-starter/src/main/java/org/apache/camel/component/spark/springboot/SparkComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-spark-starter/src/main/java/org/apache/camel/component/spark/springboot/SparkComponentConfiguration.java
index 2d52a1f..98a55a4 100644
--- a/platforms/spring-boot/components-starter/camel-spark-starter/src/main/java/org/apache/camel/component/spark/springboot/SparkComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-spark-starter/src/main/java/org/apache/camel/component/spark/springboot/SparkComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.spark.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.spark.RddCallback;
 import org.apache.spark.api.java.JavaRDDLike;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.spark)
 public class SparkComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-splunk-starter/src/main/java/org/apache/camel/component/splunk/springboot/SplunkComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-splunk-starter/src/main/java/org/apache/camel/component/splunk/springboot/SplunkComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-splunk-starter/src/main/java/org/apache/camel/component/splunk/springboot/SplunkComponentAutoConfiguration.java
index f8a1ee2..d80d4d1 100644
--- a/platforms/spring-boot/components-starter/camel-splunk-starter/src/main/java/org/apache/camel/component/splunk/springboot/SplunkComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-splunk-starter/src/main/java/org/apache/camel/component/splunk/springboot/SplunkComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.splunk.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.splunk.SplunkComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SplunkComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class SplunkComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(


"
"191","363","2017-04-19 08:35:50+00:00","zregvart@apache.org","['commits@camel.apache.org']","[05/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...","Return-Path: <commits-return-55737-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 95B1F18709
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:35:48 +0000 (UTC)
Received: (qmail 39869 invoked by uid 500); 19 Apr 2017 08:35:48 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 39792 invoked by uid 500); 19 Apr 2017 08:35:48 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 39548 invoked by uid 99); 19 Apr 2017 08:35:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:35:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 80180E382D; Wed, 19 Apr 2017 08:35:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 08:35:50 -0000
Message-Id: <fd0bc43441814d50a8ceed0660539f1a@git.apache.org>
In-Reply-To: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
References: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [05/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/component/mvel/springboot/MvelComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/component/mvel/springboot/MvelComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/component/mvel/springboot/MvelComponentAutoConfiguration.java
index 9761226..bfaef25 100644
--- a/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/component/mvel/springboot/MvelComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/component/mvel/springboot/MvelComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.mvel.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.mvel.MvelComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MvelComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class MvelComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/language/mvel/springboot/MvelLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/language/mvel/springboot/MvelLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/language/mvel/springboot/MvelLanguageAutoConfiguration.java
index e864e35..0072cfe 100644
--- a/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/language/mvel/springboot/MvelLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/language/mvel/springboot/MvelLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.mvel.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.mvel.MvelLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MvelLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class MvelLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/language/mvel/springboot/MvelLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/language/mvel/springboot/MvelLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/language/mvel/springboot/MvelLanguageConfiguration.java
index cad6bd9..9eeb3e7 100644
--- a/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/language/mvel/springboot/MvelLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mvel-starter/src/main/java/org/apache/camel/language/mvel/springboot/MvelLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.mvel.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.mvel)
 public class MvelLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mybatis-starter/src/main/java/org/apache/camel/component/mybatis/springboot/MyBatisComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mybatis-starter/src/main/java/org/apache/camel/component/mybatis/springboot/MyBatisComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-mybatis-starter/src/main/java/org/apache/camel/component/mybatis/springboot/MyBatisComponentAutoConfiguration.java
index 5995490..b0e516a 100644
--- a/platforms/spring-boot/components-starter/camel-mybatis-starter/src/main/java/org/apache/camel/component/mybatis/springboot/MyBatisComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mybatis-starter/src/main/java/org/apache/camel/component/mybatis/springboot/MyBatisComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.mybatis.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.mybatis.MyBatisComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MyBatisComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class MyBatisComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mybatis-starter/src/main/java/org/apache/camel/component/mybatis/springboot/MyBatisComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mybatis-starter/src/main/java/org/apache/camel/component/mybatis/springboot/MyBatisComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-mybatis-starter/src/main/java/org/apache/camel/component/mybatis/springboot/MyBatisComponentConfiguration.java
index 3d67f47..d3152c4 100644
--- a/platforms/spring-boot/components-starter/camel-mybatis-starter/src/main/java/org/apache/camel/component/mybatis/springboot/MyBatisComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mybatis-starter/src/main/java/org/apache/camel/component/mybatis/springboot/MyBatisComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.mybatis.springboot;
 
+import javax.annotation.Generated;
 import org.apache.ibatis.session.SqlSessionFactory;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.mybatis)
 public class MyBatisComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-nagios-starter/src/main/java/org/apache/camel/component/nagios/springboot/NagiosComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-nagios-starter/src/main/java/org/apache/camel/component/nagios/springboot/NagiosComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-nagios-starter/src/main/java/org/apache/camel/component/nagios/springboot/NagiosComponentAutoConfiguration.java
index 7d6984d..ff72f2b 100644
--- a/platforms/spring-boot/components-starter/camel-nagios-starter/src/main/java/org/apache/camel/component/nagios/springboot/NagiosComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-nagios-starter/src/main/java/org/apache/camel/component/nagios/springboot/NagiosComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.nagios.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.nagios.NagiosComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(NagiosComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class NagiosComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-nagios-starter/src/main/java/org/apache/camel/component/nagios/springboot/NagiosComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-nagios-starter/src/main/java/org/apache/camel/component/nagios/springboot/NagiosComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-nagios-starter/src/main/java/org/apache/camel/component/nagios/springboot/NagiosComponentConfiguration.java
index a621c46..ddcf6cb 100644
--- a/platforms/spring-boot/components-starter/camel-nagios-starter/src/main/java/org/apache/camel/component/nagios/springboot/NagiosComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-nagios-starter/src/main/java/org/apache/camel/component/nagios/springboot/NagiosComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.nagios.springboot;
 
+import javax.annotation.Generated;
 import com.googlecode.jsendnsca.core.NagiosSettings;
 import org.apache.camel.component.nagios.NagiosEncryptionMethod;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.nagios)
 public class NagiosComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-nats-starter/src/main/java/org/apache/camel/component/nats/springboot/NatsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-nats-starter/src/main/java/org/apache/camel/component/nats/springboot/NatsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-nats-starter/src/main/java/org/apache/camel/component/nats/springboot/NatsComponentAutoConfiguration.java
index 52780ce..5f0a19f 100644
--- a/platforms/spring-boot/components-starter/camel-nats-starter/src/main/java/org/apache/camel/component/nats/springboot/NatsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-nats-starter/src/main/java/org/apache/camel/component/nats/springboot/NatsComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.nats.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.nats.NatsComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(NatsComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class NatsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-nats-starter/src/main/java/org/apache/camel/component/nats/springboot/NatsComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-nats-starter/src/main/java/org/apache/camel/component/nats/springboot/NatsComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-nats-starter/src/main/java/org/apache/camel/component/nats/springboot/NatsComponentConfiguration.java
index 92cbe0c..fb872db 100644
--- a/platforms/spring-boot/components-starter/camel-nats-starter/src/main/java/org/apache/camel/component/nats/springboot/NatsComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-nats-starter/src/main/java/org/apache/camel/component/nats/springboot/NatsComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.nats.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.nats)
 public class NatsComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-netty-http-starter/src/main/java/org/apache/camel/component/netty/http/springboot/NettyHttpComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-netty-http-starter/src/main/java/org/apache/camel/component/netty/http/springboot/NettyHttpComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-netty-http-starter/src/main/java/org/apache/camel/component/netty/http/springboot/NettyHttpComponentAutoConfiguration.java
index e1238d2..1ed1da4 100644
--- a/platforms/spring-boot/components-starter/camel-netty-http-starter/src/main/java/org/apache/camel/component/netty/http/springboot/NettyHttpComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-netty-http-starter/src/main/java/org/apache/camel/component/netty/http/springboot/NettyHttpComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.netty.http.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.netty.http.NettyHttpComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(NettyHttpComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class NettyHttpComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-netty-http-starter/src/main/java/org/apache/camel/component/netty/http/springboot/NettyHttpComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-netty-http-starter/src/main/java/org/apache/camel/component/netty/http/springboot/NettyHttpComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-netty-http-starter/src/main/java/org/apache/camel/component/netty/http/springboot/NettyHttpComponentConfiguration.java
index fc4064b..e105a34 100644
--- a/platforms/spring-boot/components-starter/camel-netty-http-starter/src/main/java/org/apache/camel/component/netty/http/springboot/NettyHttpComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-netty-http-starter/src/main/java/org/apache/camel/component/netty/http/springboot/NettyHttpComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.netty.http.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.LoggingLevel;
 import org.apache.camel.component.netty.http.NettyHttpBinding;
 import org.apache.camel.component.netty.http.SecurityAuthenticator;
@@ -29,6 +30,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.netty-http)
 public class NettyHttpComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-netty-starter/src/main/java/org/apache/camel/component/netty/springboot/NettyComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-netty-starter/src/main/java/org/apache/camel/component/netty/springboot/NettyComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-netty-starter/src/main/java/org/apache/camel/component/netty/springboot/NettyComponentAutoConfiguration.java
index 0d54763..c80984a 100644
--- a/platforms/spring-boot/components-starter/camel-netty-starter/src/main/java/org/apache/camel/component/netty/springboot/NettyComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-netty-starter/src/main/java/org/apache/camel/component/netty/springboot/NettyComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.netty.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.netty.NettyComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(NettyComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class NettyComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-netty-starter/src/main/java/org/apache/camel/component/netty/springboot/NettyComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-netty-starter/src/main/java/org/apache/camel/component/netty/springboot/NettyComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-netty-starter/src/main/java/org/apache/camel/component/netty/springboot/NettyComponentConfiguration.java
index 0468394..9509391 100644
--- a/platforms/spring-boot/components-starter/camel-netty-starter/src/main/java/org/apache/camel/component/netty/springboot/NettyComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-netty-starter/src/main/java/org/apache/camel/component/netty/springboot/NettyComponentConfiguration.java
@@ -19,6 +19,7 @@ package org.apache.camel.component.netty.springboot;
 import java.io.File;
 import java.util.List;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.LoggingLevel;
 import org.apache.camel.component.netty.ClientPipelineFactory;
 import org.apache.camel.component.netty.NettyComponent;
@@ -40,6 +41,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.netty)
 public class NettyComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-netty4-http-starter/src/main/java/org/apache/camel/component/netty4/http/springboot/NettyHttpComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-netty4-http-starter/src/main/java/org/apache/camel/component/netty4/http/springboot/NettyHttpComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-netty4-http-starter/src/main/java/org/apache/camel/component/netty4/http/springboot/NettyHttpComponentAutoConfiguration.java
index 3898d9a..6478cfc 100644
--- a/platforms/spring-boot/components-starter/camel-netty4-http-starter/src/main/java/org/apache/camel/component/netty4/http/springboot/NettyHttpComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-netty4-http-starter/src/main/java/org/apache/camel/component/netty4/http/springboot/NettyHttpComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.netty4.http.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.netty4.http.NettyHttpComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(NettyHttpComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class NettyHttpComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-netty4-http-starter/src/main/java/org/apache/camel/component/netty4/http/springboot/NettyHttpComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-netty4-http-starter/src/main/java/org/apache/camel/component/netty4/http/springboot/NettyHttpComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-netty4-http-starter/src/main/java/org/apache/camel/component/netty4/http/springboot/NettyHttpComponentConfiguration.java
index 3c88189..7ac1105 100644
--- a/platforms/spring-boot/components-starter/camel-netty4-http-starter/src/main/java/org/apache/camel/component/netty4/http/springboot/NettyHttpComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-netty4-http-starter/src/main/java/org/apache/camel/component/netty4/http/springboot/NettyHttpComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.netty4.http.springboot;
 
+import javax.annotation.Generated;
 import io.netty.util.concurrent.EventExecutorGroup;
 import org.apache.camel.LoggingLevel;
 import org.apache.camel.component.netty4.http.NettyHttpBinding;
@@ -30,6 +31,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.netty4-http)
 public class NettyHttpComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-netty4-starter/src/main/java/org/apache/camel/component/netty4/springboot/NettyComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-netty4-starter/src/main/java/org/apache/camel/component/netty4/springboot/NettyComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-netty4-starter/src/main/java/org/apache/camel/component/netty4/springboot/NettyComponentAutoConfiguration.java
index 8696765..afb784c 100644
--- a/platforms/spring-boot/components-starter/camel-netty4-starter/src/main/java/org/apache/camel/component/netty4/springboot/NettyComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-netty4-starter/src/main/java/org/apache/camel/component/netty4/springboot/NettyComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.netty4.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.netty4.NettyComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(NettyComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class NettyComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-netty4-starter/src/main/java/org/apache/camel/component/netty4/springboot/NettyComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-netty4-starter/src/main/java/org/apache/camel/component/netty4/springboot/NettyComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-netty4-starter/src/main/java/org/apache/camel/component/netty4/springboot/NettyComponentConfiguration.java
index 4d8621f..659ea39 100644
--- a/platforms/spring-boot/components-starter/camel-netty4-starter/src/main/java/org/apache/camel/component/netty4/springboot/NettyComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-netty4-starter/src/main/java/org/apache/camel/component/netty4/springboot/NettyComponentConfiguration.java
@@ -19,6 +19,7 @@ package org.apache.camel.component.netty4.springboot;
 import java.io.File;
 import java.util.List;
 import java.util.Map;
+import javax.annotation.Generated;
 import io.netty.channel.ChannelHandler;
 import io.netty.channel.EventLoopGroup;
 import io.netty.channel.group.ChannelGroup;
@@ -40,6 +41,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.netty4)
 public class NettyComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ognl-starter/src/main/java/org/apache/camel/language/ognl/springboot/OgnlLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ognl-starter/src/main/java/org/apache/camel/language/ognl/springboot/OgnlLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-ognl-starter/src/main/java/org/apache/camel/language/ognl/springboot/OgnlLanguageAutoConfiguration.java
index eb87fa8..4d6bcc0 100644
--- a/platforms/spring-boot/components-starter/camel-ognl-starter/src/main/java/org/apache/camel/language/ognl/springboot/OgnlLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ognl-starter/src/main/java/org/apache/camel/language/ognl/springboot/OgnlLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.ognl.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.ognl.OgnlLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(OgnlLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class OgnlLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ognl-starter/src/main/java/org/apache/camel/language/ognl/springboot/OgnlLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ognl-starter/src/main/java/org/apache/camel/language/ognl/springboot/OgnlLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-ognl-starter/src/main/java/org/apache/camel/language/ognl/springboot/OgnlLanguageConfiguration.java
index c0db250..77c4b6b 100644
--- a/platforms/spring-boot/components-starter/camel-ognl-starter/src/main/java/org/apache/camel/language/ognl/springboot/OgnlLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ognl-starter/src/main/java/org/apache/camel/language/ognl/springboot/OgnlLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.ognl.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.ognl)
 public class OgnlLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-olingo2-starter/src/main/java/org/apache/camel/component/olingo2/springboot/Olingo2ComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-olingo2-starter/src/main/java/org/apache/camel/component/olingo2/springboot/Olingo2ComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-olingo2-starter/src/main/java/org/apache/camel/component/olingo2/springboot/Olingo2ComponentAutoConfiguration.java
index 33a4304..bf91860 100644
--- a/platforms/spring-boot/components-starter/camel-olingo2-starter/src/main/java/org/apache/camel/component/olingo2/springboot/Olingo2ComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-olingo2-starter/src/main/java/org/apache/camel/component/olingo2/springboot/Olingo2ComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.olingo2.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.olingo2.Olingo2Component;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(Olingo2ComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class Olingo2ComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-olingo2-starter/src/main/java/org/apache/camel/component/olingo2/springboot/Olingo2ComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-olingo2-starter/src/main/java/org/apache/camel/component/olingo2/springboot/Olingo2ComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-olingo2-starter/src/main/java/org/apache/camel/component/olingo2/springboot/Olingo2ComponentConfiguration.java
index 1ea121d..a808800 100644
--- a/platforms/spring-boot/components-starter/camel-olingo2-starter/src/main/java/org/apache/camel/component/olingo2/springboot/Olingo2ComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-olingo2-starter/src/main/java/org/apache/camel/component/olingo2/springboot/Olingo2ComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.olingo2.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.component.olingo2.internal.Olingo2ApiName;
 import org.apache.camel.util.jsse.SSLContextParameters;
 import org.apache.http.HttpHost;
@@ -30,6 +31,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.olingo2)
 public class Olingo2ComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-olingo4-starter/src/main/java/org/apache/camel/component/olingo4/springboot/Olingo4ComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-olingo4-starter/src/main/java/org/apache/camel/component/olingo4/springboot/Olingo4ComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-olingo4-starter/src/main/java/org/apache/camel/component/olingo4/springboot/Olingo4ComponentAutoConfiguration.java
index f3e685d..6cdf4b1 100644
--- a/platforms/spring-boot/components-starter/camel-olingo4-starter/src/main/java/org/apache/camel/component/olingo4/springboot/Olingo4ComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-olingo4-starter/src/main/java/org/apache/camel/component/olingo4/springboot/Olingo4ComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.olingo4.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.olingo4.Olingo4Component;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(Olingo4ComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class Olingo4ComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-olingo4-starter/src/main/java/org/apache/camel/component/olingo4/springboot/Olingo4ComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-olingo4-starter/src/main/java/org/apache/camel/component/olingo4/springboot/Olingo4ComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-olingo4-starter/src/main/java/org/apache/camel/component/olingo4/springboot/Olingo4ComponentConfiguration.java
index 664c51a..105cd2d 100644
--- a/platforms/spring-boot/components-starter/camel-olingo4-starter/src/main/java/org/apache/camel/component/olingo4/springboot/Olingo4ComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-olingo4-starter/src/main/java/org/apache/camel/component/olingo4/springboot/Olingo4ComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.olingo4.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.component.olingo4.internal.Olingo4ApiName;
 import org.apache.camel.util.jsse.SSLContextParameters;
 import org.apache.http.HttpHost;
@@ -30,6 +31,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.olingo4)
 public class Olingo4ComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-openshift-starter/src/main/java/org/apache/camel/component/openshift/springboot/OpenShiftComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-openshift-starter/src/main/java/org/apache/camel/component/openshift/springboot/OpenShiftComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-openshift-starter/src/main/java/org/apache/camel/component/openshift/springboot/OpenShiftComponentAutoConfiguration.java
index f86b79b..d08dda4 100644
--- a/platforms/spring-boot/components-starter/camel-openshift-starter/src/main/java/org/apache/camel/component/openshift/springboot/OpenShiftComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-openshift-starter/src/main/java/org/apache/camel/component/openshift/springboot/OpenShiftComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.openshift.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.openshift.OpenShiftComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(OpenShiftComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class OpenShiftComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-openshift-starter/src/main/java/org/apache/camel/component/openshift/springboot/OpenShiftComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-openshift-starter/src/main/java/org/apache/camel/component/openshift/springboot/OpenShiftComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-openshift-starter/src/main/java/org/apache/camel/component/openshift/springboot/OpenShiftComponentConfiguration.java
index b4ccb37..d0d7a95 100644
--- a/platforms/spring-boot/components-starter/camel-openshift-starter/src/main/java/org/apache/camel/component/openshift/springboot/OpenShiftComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-openshift-starter/src/main/java/org/apache/camel/component/openshift/springboot/OpenShiftComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.openshift.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.openshift)
 public class OpenShiftComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/cinder/springboot/CinderComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/cinder/springboot/CinderComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/cinder/springboot/CinderComponentAutoConfiguration.java
index 4defed1..4890d66 100644
--- a/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/cinder/springboot/CinderComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/cinder/springboot/CinderComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.openstack.cinder.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.openstack.cinder.CinderComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CinderComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class CinderComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/glance/springboot/GlanceComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/glance/springboot/GlanceComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/glance/springboot/GlanceComponentAutoConfiguration.java
index a404e64..5ea5b1b 100644
--- a/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/glance/springboot/GlanceComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/glance/springboot/GlanceComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.openstack.glance.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.openstack.glance.GlanceComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GlanceComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class GlanceComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/keystone/springboot/KeystoneComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/keystone/springboot/KeystoneComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/keystone/springboot/KeystoneComponentAutoConfiguration.java
index ac5053e..7816c7f 100644
--- a/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/keystone/springboot/KeystoneComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/keystone/springboot/KeystoneComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.openstack.keystone.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.openstack.keystone.KeystoneComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(KeystoneComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class KeystoneComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/neutron/springboot/NeutronComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/neutron/springboot/NeutronComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/neutron/springboot/NeutronComponentAutoConfiguration.java
index 8d9d54c..69ca7d2 100644
--- a/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/neutron/springboot/NeutronComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/neutron/springboot/NeutronComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.openstack.neutron.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.openstack.neutron.NeutronComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(NeutronComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class NeutronComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/nova/springboot/NovaComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/nova/springboot/NovaComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/nova/springboot/NovaComponentAutoConfiguration.java
index 59f6f9a..69a2033 100644
--- a/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/nova/springboot/NovaComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/nova/springboot/NovaComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.openstack.nova.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.openstack.nova.NovaComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(NovaComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class NovaComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/swift/springboot/SwiftComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/swift/springboot/SwiftComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/swift/springboot/SwiftComponentAutoConfiguration.java
index 2a21ed9..49220ba 100644
--- a/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/swift/springboot/SwiftComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-openstack-starter/src/main/java/org/apache/camel/component/openstack/swift/springboot/SwiftComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.openstack.swift.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.openstack.swift.SwiftComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SwiftComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class SwiftComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-optaplanner-starter/src/main/java/org/apache/camel/component/optaplanner/springboot/OptaPlannerComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-optaplanner-starter/src/main/java/org/apache/camel/component/optaplanner/springboot/OptaPlannerComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-optaplanner-starter/src/main/java/org/apache/camel/component/optaplanner/springboot/OptaPlannerComponentAutoConfiguration.java
index 62047ab..06ecb5f 100644
--- a/platforms/spring-boot/components-starter/camel-optaplanner-starter/src/main/java/org/apache/camel/component/optaplanner/springboot/OptaPlannerComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-optaplanner-starter/src/main/java/org/apache/camel/component/optaplanner/springboot/OptaPlannerComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.optaplanner.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.optaplanner.OptaPlannerComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(OptaPlannerComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class OptaPlannerComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-paho-starter/src/main/java/org/apache/camel/component/paho/springboot/PahoComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-paho-starter/src/main/java/org/apache/camel/component/paho/springboot/PahoComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-paho-starter/src/main/java/org/apache/camel/component/paho/springboot/PahoComponentAutoConfiguration.java
index e156732..13c6342 100644
--- a/platforms/spring-boot/components-starter/camel-paho-starter/src/main/java/org/apache/camel/component/paho/springboot/PahoComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-paho-starter/src/main/java/org/apache/camel/component/paho/springboot/PahoComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.paho.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.paho.PahoComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(PahoComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class PahoComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-paho-starter/src/main/java/org/apache/camel/component/paho/springboot/PahoComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-paho-starter/src/main/java/org/apache/camel/component/paho/springboot/PahoComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-paho-starter/src/main/java/org/apache/camel/component/paho/springboot/PahoComponentConfiguration.java
index fcc757d..cf2b40b 100644
--- a/platforms/spring-boot/components-starter/camel-paho-starter/src/main/java/org/apache/camel/component/paho/springboot/PahoComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-paho-starter/src/main/java/org/apache/camel/component/paho/springboot/PahoComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.paho.springboot;
 
+import javax.annotation.Generated;
 import org.eclipse.paho.client.mqttv3.MqttConnectOptions;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.paho)
 public class PahoComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-pdf-starter/src/main/java/org/apache/camel/component/pdf/springboot/PdfComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-pdf-starter/src/main/java/org/apache/camel/component/pdf/springboot/PdfComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-pdf-starter/src/main/java/org/apache/camel/component/pdf/springboot/PdfComponentAutoConfiguration.java
index 8076b67..c9098e9 100644
--- a/platforms/spring-boot/components-starter/camel-pdf-starter/src/main/java/org/apache/camel/component/pdf/springboot/PdfComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-pdf-starter/src/main/java/org/apache/camel/component/pdf/springboot/PdfComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.pdf.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.pdf.PdfComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(PdfComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class PdfComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-pgevent-starter/src/main/java/org/apache/camel/component/pgevent/springboot/PgEventComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-pgevent-starter/src/main/java/org/apache/camel/component/pgevent/springboot/PgEventComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-pgevent-starter/src/main/java/org/apache/camel/component/pgevent/springboot/PgEventComponentAutoConfiguration.java
index 7314c24..04998ad 100644
--- a/platforms/spring-boot/components-starter/camel-pgevent-starter/src/main/java/org/apache/camel/component/pgevent/springboot/PgEventComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-pgevent-starter/src/main/java/org/apache/camel/component/pgevent/springboot/PgEventComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.pgevent.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.pgevent.PgEventComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(PgEventComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class PgEventComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-printer-starter/src/main/java/org/apache/camel/component/printer/springboot/PrinterComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-printer-starter/src/main/java/org/apache/camel/component/printer/springboot/PrinterComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-printer-starter/src/main/java/org/apache/camel/component/printer/springboot/PrinterComponentAutoConfiguration.java
index a9db24a..281f1d1 100644
--- a/platforms/spring-boot/components-starter/camel-printer-starter/src/main/java/org/apache/camel/component/printer/springboot/PrinterComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-printer-starter/src/main/java/org/apache/camel/component/printer/springboot/PrinterComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.printer.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.printer.PrinterComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(PrinterComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class PrinterComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-protobuf-starter/src/main/java/org/apache/camel/dataformat/protobuf/springboot/ProtobufDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-protobuf-starter/src/main/java/org/apache/camel/dataformat/protobuf/springboot/ProtobufDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-protobuf-starter/src/main/java/org/apache/camel/dataformat/protobuf/springboot/ProtobufDataFormatAutoConfiguration.java
index 417d610..20ae50e 100644
--- a/platforms/spring-boot/components-starter/camel-protobuf-starter/src/main/java/org/apache/camel/dataformat/protobuf/springboot/ProtobufDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-protobuf-starter/src/main/java/org/apache/camel/dataformat/protobuf/springboot/ProtobufDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.protobuf.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ProtobufDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class ProtobufDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-protobuf-starter/src/main/java/org/apache/camel/dataformat/protobuf/springboot/ProtobufDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-protobuf-starter/src/main/java/org/apache/camel/dataformat/protobuf/springboot/ProtobufDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-protobuf-starter/src/main/java/org/apache/camel/dataformat/protobuf/springboot/ProtobufDataFormatConfiguration.java
index 85a6319..74ed36a 100644
--- a/platforms/spring-boot/components-starter/camel-protobuf-starter/src/main/java/org/apache/camel/dataformat/protobuf/springboot/ProtobufDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-protobuf-starter/src/main/java/org/apache/camel/dataformat/protobuf/springboot/ProtobufDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.protobuf.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.dataformat.protobuf.ProtobufDataFormat;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.protobuf)
 public class ProtobufDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java
index 897f9d4..671c1ce 100644
--- a/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.pubnub.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.pubnub.PubNubComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(PubNubComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class PubNubComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-quartz2-starter/src/main/java/org/apache/camel/component/quartz2/springboot/QuartzComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-quartz2-starter/src/main/java/org/apache/camel/component/quartz2/springboot/QuartzComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-quartz2-starter/src/main/java/org/apache/camel/component/quartz2/springboot/QuartzComponentAutoConfiguration.java
index 0714400..058162a 100644
--- a/platforms/spring-boot/components-starter/camel-quartz2-starter/src/main/java/org/apache/camel/component/quartz2/springboot/QuartzComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-quartz2-starter/src/main/java/org/apache/camel/component/quartz2/springboot/QuartzComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.quartz2.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.quartz2.QuartzComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(QuartzComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class QuartzComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-quartz2-starter/src/main/java/org/apache/camel/component/quartz2/springboot/QuartzComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-quartz2-starter/src/main/java/org/apache/camel/component/quartz2/springboot/QuartzComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-quartz2-starter/src/main/java/org/apache/camel/component/quartz2/springboot/QuartzComponentConfiguration.java
index 55ae924..b064f26 100644
--- a/platforms/spring-boot/components-starter/camel-quartz2-starter/src/main/java/org/apache/camel/component/quartz2/springboot/QuartzComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-quartz2-starter/src/main/java/org/apache/camel/component/quartz2/springboot/QuartzComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.quartz2.springboot;
 
 import java.util.Properties;
+import javax.annotation.Generated;
 import org.quartz.Scheduler;
 import org.quartz.SchedulerFactory;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.quartz2)
 public class QuartzComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-quickfix-starter/src/main/java/org/apache/camel/component/quickfixj/springboot/QuickfixjComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-quickfix-starter/src/main/java/org/apache/camel/component/quickfixj/springboot/QuickfixjComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-quickfix-starter/src/main/java/org/apache/camel/component/quickfixj/springboot/QuickfixjComponentAutoConfiguration.java
index 5934230..1d6b54f 100644
--- a/platforms/spring-boot/components-starter/camel-quickfix-starter/src/main/java/org/apache/camel/component/quickfixj/springboot/QuickfixjComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-quickfix-starter/src/main/java/org/apache/camel/component/quickfixj/springboot/QuickfixjComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.quickfixj.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.quickfixj.QuickfixjComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(QuickfixjComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class QuickfixjComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-quickfix-starter/src/main/java/org/apache/camel/component/quickfixj/springboot/QuickfixjComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-quickfix-starter/src/main/java/org/apache/camel/component/quickfixj/springboot/QuickfixjComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-quickfix-starter/src/main/java/org/apache/camel/component/quickfixj/springboot/QuickfixjComponentConfiguration.java
index de88743..14aadb0 100644
--- a/platforms/spring-boot/components-starter/camel-quickfix-starter/src/main/java/org/apache/camel/component/quickfixj/springboot/QuickfixjComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-quickfix-starter/src/main/java/org/apache/camel/component/quickfixj/springboot/QuickfixjComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.quickfixj.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.component.quickfixj.QuickfixjConfiguration;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -30,6 +31,7 @@ import quickfix.MessageStoreFactory;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.quickfix)
 public class QuickfixjComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-rabbitmq-starter/src/main/java/org/apache/camel/component/rabbitmq/springboot/RabbitMQComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-rabbitmq-starter/src/main/java/org/apache/camel/component/rabbitmq/springboot/RabbitMQComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-rabbitmq-starter/src/main/java/org/apache/camel/component/rabbitmq/springboot/RabbitMQComponentAutoConfiguration.java
index fa00891..fa5e7d9 100644
--- a/platforms/spring-boot/components-starter/camel-rabbitmq-starter/src/main/java/org/apache/camel/component/rabbitmq/springboot/RabbitMQComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-rabbitmq-starter/src/main/java/org/apache/camel/component/rabbitmq/springboot/RabbitMQComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.rabbitmq.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.rabbitmq.RabbitMQComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RabbitMQComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class RabbitMQComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-reactive-streams-starter/src/main/java/org/apache/camel/component/reactive/streams/springboot/ReactiveStreamsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-reactive-streams-starter/src/main/java/org/apache/camel/component/reactive/streams/springboot/ReactiveStreamsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-reactive-streams-starter/src/main/java/org/apache/camel/component/reactive/streams/springboot/ReactiveStreamsComponentAutoConfiguration.java
index 10f6dad..2e26698 100644
--- a/platforms/spring-boot/components-starter/camel-reactive-streams-starter/src/main/java/org/apache/camel/component/reactive/streams/springboot/ReactiveStreamsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-reactive-streams-starter/src/main/java/org/apache/camel/component/reactive/streams/springboot/ReactiveStreamsComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.reactive.streams.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.reactive.streams.ReactiveStreamsComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ReactiveStreamsComponentAutoConfiguration.Condition.class)
@@ -85,6 +87,7 @@ public class ReactiveStreamsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-reactive-streams-starter/src/main/java/org/apache/camel/component/reactive/streams/springboot/ReactiveStreamsComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-reactive-streams-starter/src/main/java/org/apache/camel/component/reactive/streams/springboot/ReactiveStreamsComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-reactive-streams-starter/src/main/java/org/apache/camel/component/reactive/streams/springboot/ReactiveStreamsComponentConfiguration.java
index 5fb6dd4..d75bcbd 100644
--- a/platforms/spring-boot/components-starter/camel-reactive-streams-starter/src/main/java/org/apache/camel/component/reactive/streams/springboot/ReactiveStreamsComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-reactive-streams-starter/src/main/java/org/apache/camel/component/reactive/streams/springboot/ReactiveStreamsComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.reactive.streams.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.reactive.streams.ReactiveStreamsBackpressureStrategy;
 import org.apache.camel.component.reactive.streams.ReactiveStreamsComponent;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.reactive-streams)
 public class ReactiveStreamsComponentConfiguration {
 


"
"192","364","2017-04-19 08:35:51+00:00","zregvart@apache.org","['commits@camel.apache.org']","[06/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...","Return-Path: <commits-return-55738-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id B12B01870A
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:35:48 +0000 (UTC)
Received: (qmail 40041 invoked by uid 500); 19 Apr 2017 08:35:48 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 39824 invoked by uid 500); 19 Apr 2017 08:35:48 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 39554 invoked by uid 99); 19 Apr 2017 08:35:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:35:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 84E1AE7153; Wed, 19 Apr 2017 08:35:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 08:35:51 -0000
Message-Id: <8a85b0ba129c45eb82ed94eff0cea425@git.apache.org>
In-Reply-To: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
References: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [06/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jpa-starter/src/main/java/org/apache/camel/component/jpa/springboot/JpaComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jpa-starter/src/main/java/org/apache/camel/component/jpa/springboot/JpaComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jpa-starter/src/main/java/org/apache/camel/component/jpa/springboot/JpaComponentAutoConfiguration.java
index 3aa6b0e..e8c56a7 100644
--- a/platforms/spring-boot/components-starter/camel-jpa-starter/src/main/java/org/apache/camel/component/jpa/springboot/JpaComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jpa-starter/src/main/java/org/apache/camel/component/jpa/springboot/JpaComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.jpa.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.jpa.JpaComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JpaComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class JpaComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jpa-starter/src/main/java/org/apache/camel/component/jpa/springboot/JpaComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jpa-starter/src/main/java/org/apache/camel/component/jpa/springboot/JpaComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-jpa-starter/src/main/java/org/apache/camel/component/jpa/springboot/JpaComponentConfiguration.java
index ed73738..93064c1 100644
--- a/platforms/spring-boot/components-starter/camel-jpa-starter/src/main/java/org/apache/camel/component/jpa/springboot/JpaComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jpa-starter/src/main/java/org/apache/camel/component/jpa/springboot/JpaComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.jpa.springboot;
 
+import javax.annotation.Generated;
 import javax.persistence.EntityManagerFactory;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -27,6 +28,7 @@ import org.springframework.transaction.PlatformTransactionManager;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.jpa)
 public class JpaComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jsch-starter/src/main/java/org/apache/camel/component/scp/springboot/ScpComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jsch-starter/src/main/java/org/apache/camel/component/scp/springboot/ScpComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jsch-starter/src/main/java/org/apache/camel/component/scp/springboot/ScpComponentAutoConfiguration.java
index fcff156..d626d83 100644
--- a/platforms/spring-boot/components-starter/camel-jsch-starter/src/main/java/org/apache/camel/component/scp/springboot/ScpComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jsch-starter/src/main/java/org/apache/camel/component/scp/springboot/ScpComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.scp.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.scp.ScpComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ScpComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class ScpComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jsch-starter/src/main/java/org/apache/camel/component/scp/springboot/ScpComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jsch-starter/src/main/java/org/apache/camel/component/scp/springboot/ScpComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-jsch-starter/src/main/java/org/apache/camel/component/scp/springboot/ScpComponentConfiguration.java
index 5ec146c..3423184 100644
--- a/platforms/spring-boot/components-starter/camel-jsch-starter/src/main/java/org/apache/camel/component/scp/springboot/ScpComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jsch-starter/src/main/java/org/apache/camel/component/scp/springboot/ScpComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.scp.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.scp)
 public class ScpComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jsonpath-starter/src/main/java/org/apache/camel/jsonpath/springboot/JsonPathLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jsonpath-starter/src/main/java/org/apache/camel/jsonpath/springboot/JsonPathLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jsonpath-starter/src/main/java/org/apache/camel/jsonpath/springboot/JsonPathLanguageAutoConfiguration.java
index 86e337e..654c8c8 100644
--- a/platforms/spring-boot/components-starter/camel-jsonpath-starter/src/main/java/org/apache/camel/jsonpath/springboot/JsonPathLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jsonpath-starter/src/main/java/org/apache/camel/jsonpath/springboot/JsonPathLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.jsonpath.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.jsonpath.JsonPathLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JsonPathLanguageAutoConfiguration.Condition.class)
@@ -71,6 +73,7 @@ public class JsonPathLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jsonpath-starter/src/main/java/org/apache/camel/jsonpath/springboot/JsonPathLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jsonpath-starter/src/main/java/org/apache/camel/jsonpath/springboot/JsonPathLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-jsonpath-starter/src/main/java/org/apache/camel/jsonpath/springboot/JsonPathLanguageConfiguration.java
index 616362d..e812a7f 100644
--- a/platforms/spring-boot/components-starter/camel-jsonpath-starter/src/main/java/org/apache/camel/jsonpath/springboot/JsonPathLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jsonpath-starter/src/main/java/org/apache/camel/jsonpath/springboot/JsonPathLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.jsonpath.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.jsonpath)
 public class JsonPathLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jt400-starter/src/main/java/org/apache/camel/component/jt400/springboot/Jt400ComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jt400-starter/src/main/java/org/apache/camel/component/jt400/springboot/Jt400ComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jt400-starter/src/main/java/org/apache/camel/component/jt400/springboot/Jt400ComponentAutoConfiguration.java
index d7e1d1d..28e9128 100644
--- a/platforms/spring-boot/components-starter/camel-jt400-starter/src/main/java/org/apache/camel/component/jt400/springboot/Jt400ComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jt400-starter/src/main/java/org/apache/camel/component/jt400/springboot/Jt400ComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.jt400.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.jt400.Jt400Component;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(Jt400ComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class Jt400ComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jt400-starter/src/main/java/org/apache/camel/component/jt400/springboot/Jt400ComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jt400-starter/src/main/java/org/apache/camel/component/jt400/springboot/Jt400ComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-jt400-starter/src/main/java/org/apache/camel/component/jt400/springboot/Jt400ComponentConfiguration.java
index 1da21d4..7fa9c36 100644
--- a/platforms/spring-boot/components-starter/camel-jt400-starter/src/main/java/org/apache/camel/component/jt400/springboot/Jt400ComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jt400-starter/src/main/java/org/apache/camel/component/jt400/springboot/Jt400ComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.jt400.springboot;
 
+import javax.annotation.Generated;
 import com.ibm.as400.access.AS400ConnectionPool;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.jt400)
 public class Jt400ComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-juel-starter/src/main/java/org/apache/camel/language/juel/springboot/JuelLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-juel-starter/src/main/java/org/apache/camel/language/juel/springboot/JuelLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-juel-starter/src/main/java/org/apache/camel/language/juel/springboot/JuelLanguageAutoConfiguration.java
index b419281..0ec2827 100644
--- a/platforms/spring-boot/components-starter/camel-juel-starter/src/main/java/org/apache/camel/language/juel/springboot/JuelLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-juel-starter/src/main/java/org/apache/camel/language/juel/springboot/JuelLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.juel.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.juel.JuelLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JuelLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class JuelLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-juel-starter/src/main/java/org/apache/camel/language/juel/springboot/JuelLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-juel-starter/src/main/java/org/apache/camel/language/juel/springboot/JuelLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-juel-starter/src/main/java/org/apache/camel/language/juel/springboot/JuelLanguageConfiguration.java
index 08ae2da..87b9baf 100644
--- a/platforms/spring-boot/components-starter/camel-juel-starter/src/main/java/org/apache/camel/language/juel/springboot/JuelLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-juel-starter/src/main/java/org/apache/camel/language/juel/springboot/JuelLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.juel.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.el)
 public class JuelLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jxpath-starter/src/main/java/org/apache/camel/language/jxpath/springboot/JXPathLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jxpath-starter/src/main/java/org/apache/camel/language/jxpath/springboot/JXPathLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jxpath-starter/src/main/java/org/apache/camel/language/jxpath/springboot/JXPathLanguageAutoConfiguration.java
index 928aba9..3816ffd 100644
--- a/platforms/spring-boot/components-starter/camel-jxpath-starter/src/main/java/org/apache/camel/language/jxpath/springboot/JXPathLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jxpath-starter/src/main/java/org/apache/camel/language/jxpath/springboot/JXPathLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.jxpath.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.jxpath.JXPathLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JXPathLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class JXPathLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jxpath-starter/src/main/java/org/apache/camel/language/jxpath/springboot/JXPathLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jxpath-starter/src/main/java/org/apache/camel/language/jxpath/springboot/JXPathLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-jxpath-starter/src/main/java/org/apache/camel/language/jxpath/springboot/JXPathLanguageConfiguration.java
index ca46049..5fc6add 100644
--- a/platforms/spring-boot/components-starter/camel-jxpath-starter/src/main/java/org/apache/camel/language/jxpath/springboot/JXPathLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jxpath-starter/src/main/java/org/apache/camel/language/jxpath/springboot/JXPathLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.jxpath.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.jxpath)
 public class JXPathLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-kafka-starter/src/main/java/org/apache/camel/component/kafka/springboot/KafkaComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-kafka-starter/src/main/java/org/apache/camel/component/kafka/springboot/KafkaComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-kafka-starter/src/main/java/org/apache/camel/component/kafka/springboot/KafkaComponentAutoConfiguration.java
index a3022ee..0c8d81a 100644
--- a/platforms/spring-boot/components-starter/camel-kafka-starter/src/main/java/org/apache/camel/component/kafka/springboot/KafkaComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-kafka-starter/src/main/java/org/apache/camel/component/kafka/springboot/KafkaComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.kafka.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.kafka.KafkaComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(KafkaComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class KafkaComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-kafka-starter/src/main/java/org/apache/camel/component/kafka/springboot/KafkaComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-kafka-starter/src/main/java/org/apache/camel/component/kafka/springboot/KafkaComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-kafka-starter/src/main/java/org/apache/camel/component/kafka/springboot/KafkaComponentConfiguration.java
index 3843e8a..160c552 100644
--- a/platforms/spring-boot/components-starter/camel-kafka-starter/src/main/java/org/apache/camel/component/kafka/springboot/KafkaComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-kafka-starter/src/main/java/org/apache/camel/component/kafka/springboot/KafkaComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.kafka.springboot;
 
 import java.util.concurrent.ExecutorService;
+import javax.annotation.Generated;
 import org.apache.camel.spi.StateRepository;
 import org.apache.camel.util.jsse.SSLContextParameters;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -28,6 +29,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.kafka)
 public class KafkaComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-kestrel-starter/src/main/java/org/apache/camel/component/kestrel/springboot/KestrelComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-kestrel-starter/src/main/java/org/apache/camel/component/kestrel/springboot/KestrelComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-kestrel-starter/src/main/java/org/apache/camel/component/kestrel/springboot/KestrelComponentAutoConfiguration.java
index d6be15e..c1e238c 100644
--- a/platforms/spring-boot/components-starter/camel-kestrel-starter/src/main/java/org/apache/camel/component/kestrel/springboot/KestrelComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-kestrel-starter/src/main/java/org/apache/camel/component/kestrel/springboot/KestrelComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.kestrel.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.kestrel.KestrelComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(KestrelComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class KestrelComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-kestrel-starter/src/main/java/org/apache/camel/component/kestrel/springboot/KestrelComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-kestrel-starter/src/main/java/org/apache/camel/component/kestrel/springboot/KestrelComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-kestrel-starter/src/main/java/org/apache/camel/component/kestrel/springboot/KestrelComponentConfiguration.java
index 9d62010..2f04772 100644
--- a/platforms/spring-boot/components-starter/camel-kestrel-starter/src/main/java/org/apache/camel/component/kestrel/springboot/KestrelComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-kestrel-starter/src/main/java/org/apache/camel/component/kestrel/springboot/KestrelComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.kestrel.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.kestrel)
 public class KestrelComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-krati-starter/src/main/java/org/apache/camel/component/krati/springboot/KratiComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-krati-starter/src/main/java/org/apache/camel/component/krati/springboot/KratiComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-krati-starter/src/main/java/org/apache/camel/component/krati/springboot/KratiComponentAutoConfiguration.java
index 9930712..8147c37 100644
--- a/platforms/spring-boot/components-starter/camel-krati-starter/src/main/java/org/apache/camel/component/krati/springboot/KratiComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-krati-starter/src/main/java/org/apache/camel/component/krati/springboot/KratiComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.krati.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.krati.KratiComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(KratiComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class KratiComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-kubernetes-starter/src/main/java/org/apache/camel/component/kubernetes/springboot/KubernetesComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-kubernetes-starter/src/main/java/org/apache/camel/component/kubernetes/springboot/KubernetesComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-kubernetes-starter/src/main/java/org/apache/camel/component/kubernetes/springboot/KubernetesComponentAutoConfiguration.java
index c3b5545..5bcd127 100644
--- a/platforms/spring-boot/components-starter/camel-kubernetes-starter/src/main/java/org/apache/camel/component/kubernetes/springboot/KubernetesComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-kubernetes-starter/src/main/java/org/apache/camel/component/kubernetes/springboot/KubernetesComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.kubernetes.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.kubernetes.KubernetesComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(KubernetesComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class KubernetesComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ldap-starter/src/main/java/org/apache/camel/component/ldap/springboot/LdapComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ldap-starter/src/main/java/org/apache/camel/component/ldap/springboot/LdapComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-ldap-starter/src/main/java/org/apache/camel/component/ldap/springboot/LdapComponentAutoConfiguration.java
index 9a541be..7f4bc3e 100644
--- a/platforms/spring-boot/components-starter/camel-ldap-starter/src/main/java/org/apache/camel/component/ldap/springboot/LdapComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ldap-starter/src/main/java/org/apache/camel/component/ldap/springboot/LdapComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.ldap.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.ldap.LdapComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(LdapComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class LdapComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-linkedin-starter/src/main/java/org/apache/camel/component/linkedin/springboot/LinkedInComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-linkedin-starter/src/main/java/org/apache/camel/component/linkedin/springboot/LinkedInComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-linkedin-starter/src/main/java/org/apache/camel/component/linkedin/springboot/LinkedInComponentAutoConfiguration.java
index c183aba..4bc8079 100644
--- a/platforms/spring-boot/components-starter/camel-linkedin-starter/src/main/java/org/apache/camel/component/linkedin/springboot/LinkedInComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-linkedin-starter/src/main/java/org/apache/camel/component/linkedin/springboot/LinkedInComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.linkedin.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.linkedin.LinkedInComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(LinkedInComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class LinkedInComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-linkedin-starter/src/main/java/org/apache/camel/component/linkedin/springboot/LinkedInComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-linkedin-starter/src/main/java/org/apache/camel/component/linkedin/springboot/LinkedInComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-linkedin-starter/src/main/java/org/apache/camel/component/linkedin/springboot/LinkedInComponentConfiguration.java
index 86ab776..d7b753a 100644
--- a/platforms/spring-boot/components-starter/camel-linkedin-starter/src/main/java/org/apache/camel/component/linkedin/springboot/LinkedInComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-linkedin-starter/src/main/java/org/apache/camel/component/linkedin/springboot/LinkedInComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.linkedin.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.component.linkedin.api.OAuthScope;
 import org.apache.camel.component.linkedin.api.OAuthSecureStorage;
 import org.apache.camel.component.linkedin.internal.LinkedInApiName;
@@ -28,6 +29,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.linkedin)
 public class LinkedInComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-lucene-starter/src/main/java/org/apache/camel/component/lucene/springboot/LuceneComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-lucene-starter/src/main/java/org/apache/camel/component/lucene/springboot/LuceneComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-lucene-starter/src/main/java/org/apache/camel/component/lucene/springboot/LuceneComponentAutoConfiguration.java
index 358005c..64eec42 100644
--- a/platforms/spring-boot/components-starter/camel-lucene-starter/src/main/java/org/apache/camel/component/lucene/springboot/LuceneComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-lucene-starter/src/main/java/org/apache/camel/component/lucene/springboot/LuceneComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.lucene.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.lucene.LuceneComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(LuceneComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class LuceneComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-lucene-starter/src/main/java/org/apache/camel/component/lucene/springboot/LuceneComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-lucene-starter/src/main/java/org/apache/camel/component/lucene/springboot/LuceneComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-lucene-starter/src/main/java/org/apache/camel/component/lucene/springboot/LuceneComponentConfiguration.java
index 25aaf95..6513191 100644
--- a/platforms/spring-boot/components-starter/camel-lucene-starter/src/main/java/org/apache/camel/component/lucene/springboot/LuceneComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-lucene-starter/src/main/java/org/apache/camel/component/lucene/springboot/LuceneComponentConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.lucene.springboot;
 
 import java.io.File;
 import java.net.URI;
+import javax.annotation.Generated;
 import org.apache.camel.component.lucene.LuceneOperation;
 import org.apache.lucene.analysis.Analyzer;
 import org.apache.lucene.util.Version;
@@ -29,6 +30,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.lucene)
 public class LuceneComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-lumberjack-starter/src/main/java/org/apache/camel/component/lumberjack/springboot/LumberjackComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-lumberjack-starter/src/main/java/org/apache/camel/component/lumberjack/springboot/LumberjackComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-lumberjack-starter/src/main/java/org/apache/camel/component/lumberjack/springboot/LumberjackComponentAutoConfiguration.java
index 070766e..df79781 100644
--- a/platforms/spring-boot/components-starter/camel-lumberjack-starter/src/main/java/org/apache/camel/component/lumberjack/springboot/LumberjackComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-lumberjack-starter/src/main/java/org/apache/camel/component/lumberjack/springboot/LumberjackComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.lumberjack.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.lumberjack.LumberjackComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(LumberjackComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class LumberjackComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-lumberjack-starter/src/main/java/org/apache/camel/component/lumberjack/springboot/LumberjackComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-lumberjack-starter/src/main/java/org/apache/camel/component/lumberjack/springboot/LumberjackComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-lumberjack-starter/src/main/java/org/apache/camel/component/lumberjack/springboot/LumberjackComponentConfiguration.java
index 6836fb6..611df02 100644
--- a/platforms/spring-boot/components-starter/camel-lumberjack-starter/src/main/java/org/apache/camel/component/lumberjack/springboot/LumberjackComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-lumberjack-starter/src/main/java/org/apache/camel/component/lumberjack/springboot/LumberjackComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.lumberjack.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.util.jsse.SSLContextParameters;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.lumberjack)
 public class LumberjackComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-lzf-starter/src/main/java/org/apache/camel/dataformat/lzf/springboot/LZFDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-lzf-starter/src/main/java/org/apache/camel/dataformat/lzf/springboot/LZFDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-lzf-starter/src/main/java/org/apache/camel/dataformat/lzf/springboot/LZFDataFormatAutoConfiguration.java
index fdffdef..cd137da 100644
--- a/platforms/spring-boot/components-starter/camel-lzf-starter/src/main/java/org/apache/camel/dataformat/lzf/springboot/LZFDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-lzf-starter/src/main/java/org/apache/camel/dataformat/lzf/springboot/LZFDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.lzf.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(LZFDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class LZFDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-lzf-starter/src/main/java/org/apache/camel/dataformat/lzf/springboot/LZFDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-lzf-starter/src/main/java/org/apache/camel/dataformat/lzf/springboot/LZFDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-lzf-starter/src/main/java/org/apache/camel/dataformat/lzf/springboot/LZFDataFormatConfiguration.java
index 9a716b6..f04ab15 100644
--- a/platforms/spring-boot/components-starter/camel-lzf-starter/src/main/java/org/apache/camel/dataformat/lzf/springboot/LZFDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-lzf-starter/src/main/java/org/apache/camel/dataformat/lzf/springboot/LZFDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.lzf.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.lzf)
 public class LZFDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/component/mail/springboot/MailComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/component/mail/springboot/MailComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/component/mail/springboot/MailComponentAutoConfiguration.java
index 9e6e7b3..fcd9d5e 100644
--- a/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/component/mail/springboot/MailComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/component/mail/springboot/MailComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.mail.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.mail.MailComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MailComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class MailComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/component/mail/springboot/MailComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/component/mail/springboot/MailComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/component/mail/springboot/MailComponentConfiguration.java
index fb45260..3439866 100644
--- a/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/component/mail/springboot/MailComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/component/mail/springboot/MailComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.mail.springboot;
 
 import java.util.Properties;
+import javax.annotation.Generated;
 import javax.mail.Session;
 import org.apache.camel.component.mail.AttachmentsContentTransferEncodingResolver;
 import org.apache.camel.component.mail.ContentTypeResolver;
@@ -30,6 +31,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.mail)
 public class MailComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/dataformat/mime/multipart/springboot/MimeMultipartDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/dataformat/mime/multipart/springboot/MimeMultipartDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/dataformat/mime/multipart/springboot/MimeMultipartDataFormatAutoConfiguration.java
index 3e97726..d95972e 100644
--- a/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/dataformat/mime/multipart/springboot/MimeMultipartDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/dataformat/mime/multipart/springboot/MimeMultipartDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.mime.multipart.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MimeMultipartDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class MimeMultipartDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/dataformat/mime/multipart/springboot/MimeMultipartDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/dataformat/mime/multipart/springboot/MimeMultipartDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/dataformat/mime/multipart/springboot/MimeMultipartDataFormatConfiguration.java
index 9c2202a..c88a4a1 100644
--- a/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/dataformat/mime/multipart/springboot/MimeMultipartDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mail-starter/src/main/java/org/apache/camel/dataformat/mime/multipart/springboot/MimeMultipartDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.mime.multipart.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.mime-multipart)
 public class MimeMultipartDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-metrics-starter/src/main/java/org/apache/camel/component/metrics/springboot/MetricsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-metrics-starter/src/main/java/org/apache/camel/component/metrics/springboot/MetricsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-metrics-starter/src/main/java/org/apache/camel/component/metrics/springboot/MetricsComponentAutoConfiguration.java
index e3f2e87..6f000b7 100644
--- a/platforms/spring-boot/components-starter/camel-metrics-starter/src/main/java/org/apache/camel/component/metrics/springboot/MetricsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-metrics-starter/src/main/java/org/apache/camel/component/metrics/springboot/MetricsComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.metrics.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.metrics.MetricsComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MetricsComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class MetricsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-metrics-starter/src/main/java/org/apache/camel/component/metrics/springboot/MetricsComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-metrics-starter/src/main/java/org/apache/camel/component/metrics/springboot/MetricsComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-metrics-starter/src/main/java/org/apache/camel/component/metrics/springboot/MetricsComponentConfiguration.java
index 6c2306b..1f6e350 100644
--- a/platforms/spring-boot/components-starter/camel-metrics-starter/src/main/java/org/apache/camel/component/metrics/springboot/MetricsComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-metrics-starter/src/main/java/org/apache/camel/component/metrics/springboot/MetricsComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.metrics.springboot;
 
+import javax.annotation.Generated;
 import com.codahale.metrics.MetricRegistry;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.metrics)
 public class MetricsComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentAutoConfiguration.java
index 36e6961..245a1e6 100644
--- a/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.milo.client.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.milo.client.MiloClientComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MiloClientComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class MiloClientComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentConfiguration.java
index ad0ebed..0760771 100644
--- a/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/client/springboot/MiloClientComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.milo.client.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.milo-client)
 public class MiloClientComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentAutoConfiguration.java
index 46d80a9..620cacd 100644
--- a/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.milo.server.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.milo.server.MiloServerComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MiloServerComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class MiloServerComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentConfiguration.java
index 14745d8..4a368e0 100644
--- a/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-milo-starter/src/main/java/org/apache/camel/component/milo/server/springboot/MiloServerComponentConfiguration.java
@@ -20,6 +20,7 @@ import java.io.File;
 import java.util.Collection;
 import java.util.Set;
 import java.util.function.Supplier;
+import javax.annotation.Generated;
 import org.apache.camel.component.milo.KeyStoreLoader.Result;
 import org.eclipse.milo.opcua.stack.core.application.CertificateManager;
 import org.eclipse.milo.opcua.stack.core.application.CertificateValidator;
@@ -33,6 +34,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.milo-server)
 public class MiloServerComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mina2-starter/src/main/java/org/apache/camel/component/mina2/springboot/Mina2ComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mina2-starter/src/main/java/org/apache/camel/component/mina2/springboot/Mina2ComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-mina2-starter/src/main/java/org/apache/camel/component/mina2/springboot/Mina2ComponentAutoConfiguration.java
index d8a22a2..5b919b5 100644
--- a/platforms/spring-boot/components-starter/camel-mina2-starter/src/main/java/org/apache/camel/component/mina2/springboot/Mina2ComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mina2-starter/src/main/java/org/apache/camel/component/mina2/springboot/Mina2ComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.mina2.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.mina2.Mina2Component;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(Mina2ComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class Mina2ComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mina2-starter/src/main/java/org/apache/camel/component/mina2/springboot/Mina2ComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mina2-starter/src/main/java/org/apache/camel/component/mina2/springboot/Mina2ComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-mina2-starter/src/main/java/org/apache/camel/component/mina2/springboot/Mina2ComponentConfiguration.java
index 5fee68f..1448d76 100644
--- a/platforms/spring-boot/components-starter/camel-mina2-starter/src/main/java/org/apache/camel/component/mina2/springboot/Mina2ComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mina2-starter/src/main/java/org/apache/camel/component/mina2/springboot/Mina2ComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.mina2.springboot;
 
 import java.util.List;
+import javax.annotation.Generated;
 import org.apache.camel.LoggingLevel;
 import org.apache.camel.component.mina2.Mina2Component;
 import org.apache.camel.component.mina2.Mina2TextLineDelimiter;
@@ -30,6 +31,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.mina2)
 public class Mina2ComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mllp-starter/src/main/java/org/apache/camel/component/mllp/springboot/MllpComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mllp-starter/src/main/java/org/apache/camel/component/mllp/springboot/MllpComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-mllp-starter/src/main/java/org/apache/camel/component/mllp/springboot/MllpComponentAutoConfiguration.java
index 1386dd4..aa05c12 100644
--- a/platforms/spring-boot/components-starter/camel-mllp-starter/src/main/java/org/apache/camel/component/mllp/springboot/MllpComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mllp-starter/src/main/java/org/apache/camel/component/mllp/springboot/MllpComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.mllp.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.mllp.MllpComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MllpComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class MllpComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mongodb-gridfs-starter/src/main/java/org/apache/camel/component/mongodb/gridfs/springboot/GridFsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mongodb-gridfs-starter/src/main/java/org/apache/camel/component/mongodb/gridfs/springboot/GridFsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-mongodb-gridfs-starter/src/main/java/org/apache/camel/component/mongodb/gridfs/springboot/GridFsComponentAutoConfiguration.java
index 4ee9881..3306a78 100644
--- a/platforms/spring-boot/components-starter/camel-mongodb-gridfs-starter/src/main/java/org/apache/camel/component/mongodb/gridfs/springboot/GridFsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mongodb-gridfs-starter/src/main/java/org/apache/camel/component/mongodb/gridfs/springboot/GridFsComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.mongodb.gridfs.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.mongodb.gridfs.GridFsComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GridFsComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class GridFsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mongodb-starter/src/main/java/org/apache/camel/component/mongodb/springboot/MongoDbComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mongodb-starter/src/main/java/org/apache/camel/component/mongodb/springboot/MongoDbComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-mongodb-starter/src/main/java/org/apache/camel/component/mongodb/springboot/MongoDbComponentAutoConfiguration.java
index aa68ff1..6c0bace 100644
--- a/platforms/spring-boot/components-starter/camel-mongodb-starter/src/main/java/org/apache/camel/component/mongodb/springboot/MongoDbComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mongodb-starter/src/main/java/org/apache/camel/component/mongodb/springboot/MongoDbComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.mongodb.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.mongodb.MongoDbComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MongoDbComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class MongoDbComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mongodb3-starter/src/main/java/org/apache/camel/component/mongodb3/springboot/MongoDbComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mongodb3-starter/src/main/java/org/apache/camel/component/mongodb3/springboot/MongoDbComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-mongodb3-starter/src/main/java/org/apache/camel/component/mongodb3/springboot/MongoDbComponentAutoConfiguration.java
index 38f7dc7..24c20db 100644
--- a/platforms/spring-boot/components-starter/camel-mongodb3-starter/src/main/java/org/apache/camel/component/mongodb3/springboot/MongoDbComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mongodb3-starter/src/main/java/org/apache/camel/component/mongodb3/springboot/MongoDbComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.mongodb3.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.mongodb3.MongoDbComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MongoDbComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class MongoDbComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mqtt-starter/src/main/java/org/apache/camel/component/mqtt/springboot/MQTTComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mqtt-starter/src/main/java/org/apache/camel/component/mqtt/springboot/MQTTComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-mqtt-starter/src/main/java/org/apache/camel/component/mqtt/springboot/MQTTComponentAutoConfiguration.java
index 17477b7..8bfa98c 100644
--- a/platforms/spring-boot/components-starter/camel-mqtt-starter/src/main/java/org/apache/camel/component/mqtt/springboot/MQTTComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mqtt-starter/src/main/java/org/apache/camel/component/mqtt/springboot/MQTTComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.mqtt.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.mqtt.MQTTComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MQTTComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class MQTTComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mqtt-starter/src/main/java/org/apache/camel/component/mqtt/springboot/MQTTComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mqtt-starter/src/main/java/org/apache/camel/component/mqtt/springboot/MQTTComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-mqtt-starter/src/main/java/org/apache/camel/component/mqtt/springboot/MQTTComponentConfiguration.java
index f3c45c5..a449f1b 100644
--- a/platforms/spring-boot/components-starter/camel-mqtt-starter/src/main/java/org/apache/camel/component/mqtt/springboot/MQTTComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mqtt-starter/src/main/java/org/apache/camel/component/mqtt/springboot/MQTTComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.mqtt.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.mqtt)
 public class MQTTComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-msv-starter/src/main/java/org/apache/camel/component/validator/msv/springboot/MsvComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-msv-starter/src/main/java/org/apache/camel/component/validator/msv/springboot/MsvComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-msv-starter/src/main/java/org/apache/camel/component/validator/msv/springboot/MsvComponentAutoConfiguration.java
index 7d923c2..ec86706 100644
--- a/platforms/spring-boot/components-starter/camel-msv-starter/src/main/java/org/apache/camel/component/validator/msv/springboot/MsvComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-msv-starter/src/main/java/org/apache/camel/component/validator/msv/springboot/MsvComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.validator.msv.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.validator.msv.MsvComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MsvComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class MsvComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-msv-starter/src/main/java/org/apache/camel/component/validator/msv/springboot/MsvComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-msv-starter/src/main/java/org/apache/camel/component/validator/msv/springboot/MsvComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-msv-starter/src/main/java/org/apache/camel/component/validator/msv/springboot/MsvComponentConfiguration.java
index 66ddfb9..5a5165f 100644
--- a/platforms/spring-boot/components-starter/camel-msv-starter/src/main/java/org/apache/camel/component/validator/msv/springboot/MsvComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-msv-starter/src/main/java/org/apache/camel/component/validator/msv/springboot/MsvComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.validator.msv.springboot;
 
+import javax.annotation.Generated;
 import javax.xml.validation.SchemaFactory;
 import org.apache.camel.component.validator.ValidatorResourceResolverFactory;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.msv)
 public class MsvComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mustache-starter/src/main/java/org/apache/camel/component/mustache/springboot/MustacheComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mustache-starter/src/main/java/org/apache/camel/component/mustache/springboot/MustacheComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-mustache-starter/src/main/java/org/apache/camel/component/mustache/springboot/MustacheComponentAutoConfiguration.java
index a66bd3d..fb6ca8d 100644
--- a/platforms/spring-boot/components-starter/camel-mustache-starter/src/main/java/org/apache/camel/component/mustache/springboot/MustacheComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mustache-starter/src/main/java/org/apache/camel/component/mustache/springboot/MustacheComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.mustache.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.mustache.MustacheComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MustacheComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class MustacheComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-mustache-starter/src/main/java/org/apache/camel/component/mustache/springboot/MustacheComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-mustache-starter/src/main/java/org/apache/camel/component/mustache/springboot/MustacheComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-mustache-starter/src/main/java/org/apache/camel/component/mustache/springboot/MustacheComponentConfiguration.java
index 0393a2d..32cf515 100644
--- a/platforms/spring-boot/components-starter/camel-mustache-starter/src/main/java/org/apache/camel/component/mustache/springboot/MustacheComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-mustache-starter/src/main/java/org/apache/camel/component/mustache/springboot/MustacheComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.mustache.springboot;
 
+import javax.annotation.Generated;
 import com.github.mustachejava.MustacheFactory;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.mustache)
 public class MustacheComponentConfiguration {
 


"
"193","365","2017-04-19 08:35:52+00:00","zregvart@apache.org","['commits@camel.apache.org']","[07/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...","Return-Path: <commits-return-55739-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id B19061870B
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:35:48 +0000 (UTC)
Received: (qmail 40021 invoked by uid 500); 19 Apr 2017 08:35:48 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 39943 invoked by uid 500); 19 Apr 2017 08:35:48 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 39555 invoked by uid 99); 19 Apr 2017 08:35:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:35:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 8A3D8E7E99; Wed, 19 Apr 2017 08:35:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 08:35:52 -0000
Message-Id: <6b16c48f14ad48ab8ec2f241a9d0f7b5@git.apache.org>
In-Reply-To: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
References: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [07/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hessian-starter/src/main/java/org/apache/camel/dataformat/hessian/springboot/HessianDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hessian-starter/src/main/java/org/apache/camel/dataformat/hessian/springboot/HessianDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-hessian-starter/src/main/java/org/apache/camel/dataformat/hessian/springboot/HessianDataFormatAutoConfiguration.java
index 11c817e..4629150 100644
--- a/platforms/spring-boot/components-starter/camel-hessian-starter/src/main/java/org/apache/camel/dataformat/hessian/springboot/HessianDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hessian-starter/src/main/java/org/apache/camel/dataformat/hessian/springboot/HessianDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.hessian.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(HessianDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class HessianDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hessian-starter/src/main/java/org/apache/camel/dataformat/hessian/springboot/HessianDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hessian-starter/src/main/java/org/apache/camel/dataformat/hessian/springboot/HessianDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-hessian-starter/src/main/java/org/apache/camel/dataformat/hessian/springboot/HessianDataFormatConfiguration.java
index b00d46d..2a48dc4 100644
--- a/platforms/spring-boot/components-starter/camel-hessian-starter/src/main/java/org/apache/camel/dataformat/hessian/springboot/HessianDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hessian-starter/src/main/java/org/apache/camel/dataformat/hessian/springboot/HessianDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.hessian.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.hessian)
 public class HessianDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hipchat-starter/src/main/java/org/apache/camel/component/hipchat/springboot/HipchatComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hipchat-starter/src/main/java/org/apache/camel/component/hipchat/springboot/HipchatComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-hipchat-starter/src/main/java/org/apache/camel/component/hipchat/springboot/HipchatComponentAutoConfiguration.java
index 7e450a4..ee16b53 100644
--- a/platforms/spring-boot/components-starter/camel-hipchat-starter/src/main/java/org/apache/camel/component/hipchat/springboot/HipchatComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hipchat-starter/src/main/java/org/apache/camel/component/hipchat/springboot/HipchatComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.hipchat.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.hipchat.HipchatComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(HipchatComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class HipchatComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/HL7DataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/HL7DataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/HL7DataFormatAutoConfiguration.java
index 55a1bed..242569d 100644
--- a/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/HL7DataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/HL7DataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.hl7.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(HL7DataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class HL7DataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/HL7DataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/HL7DataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/HL7DataFormatConfiguration.java
index f25f772..f20bde9 100644
--- a/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/HL7DataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/HL7DataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.hl7.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.hl7)
 public class HL7DataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/TerserLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/TerserLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/TerserLanguageAutoConfiguration.java
index f64fe5e..bdeb045 100644
--- a/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/TerserLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/TerserLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.hl7.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.component.hl7.TerserLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(TerserLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class TerserLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/TerserLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/TerserLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/TerserLanguageConfiguration.java
index 8551aa9..e13994a 100644
--- a/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/TerserLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hl7-starter/src/main/java/org/apache/camel/component/hl7/springboot/TerserLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.hl7.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.terser)
 public class TerserLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-http-starter/src/main/java/org/apache/camel/component/http/springboot/HttpComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-http-starter/src/main/java/org/apache/camel/component/http/springboot/HttpComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-http-starter/src/main/java/org/apache/camel/component/http/springboot/HttpComponentAutoConfiguration.java
index 338d58a..96daf13 100644
--- a/platforms/spring-boot/components-starter/camel-http-starter/src/main/java/org/apache/camel/component/http/springboot/HttpComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-http-starter/src/main/java/org/apache/camel/component/http/springboot/HttpComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.http.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.http.HttpComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(HttpComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class HttpComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-http-starter/src/main/java/org/apache/camel/component/http/springboot/HttpComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-http-starter/src/main/java/org/apache/camel/component/http/springboot/HttpComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-http-starter/src/main/java/org/apache/camel/component/http/springboot/HttpComponentConfiguration.java
index 02c86e8..62b4821 100644
--- a/platforms/spring-boot/components-starter/camel-http-starter/src/main/java/org/apache/camel/component/http/springboot/HttpComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-http-starter/src/main/java/org/apache/camel/component/http/springboot/HttpComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.http.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.http.HttpClientConfigurer;
 import org.apache.camel.http.common.HttpBinding;
 import org.apache.camel.http.common.HttpConfiguration;
@@ -29,6 +30,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.http)
 public class HttpComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-http4-starter/src/main/java/org/apache/camel/component/http4/springboot/HttpComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-http4-starter/src/main/java/org/apache/camel/component/http4/springboot/HttpComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-http4-starter/src/main/java/org/apache/camel/component/http4/springboot/HttpComponentAutoConfiguration.java
index 4530a87..040655f 100644
--- a/platforms/spring-boot/components-starter/camel-http4-starter/src/main/java/org/apache/camel/component/http4/springboot/HttpComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-http4-starter/src/main/java/org/apache/camel/component/http4/springboot/HttpComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.http4.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.http4.HttpComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(HttpComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class HttpComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-http4-starter/src/main/java/org/apache/camel/component/http4/springboot/HttpComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-http4-starter/src/main/java/org/apache/camel/component/http4/springboot/HttpComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-http4-starter/src/main/java/org/apache/camel/component/http4/springboot/HttpComponentConfiguration.java
index d80edc8..78aa3ff 100644
--- a/platforms/spring-boot/components-starter/camel-http4-starter/src/main/java/org/apache/camel/component/http4/springboot/HttpComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-http4-starter/src/main/java/org/apache/camel/component/http4/springboot/HttpComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.http4.springboot;
 
+import javax.annotation.Generated;
 import javax.net.ssl.HostnameVerifier;
 import org.apache.camel.component.http4.HttpClientConfigurer;
 import org.apache.camel.http.common.HttpBinding;
@@ -33,6 +34,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.http4)
 public class HttpComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ical-starter/src/main/java/org/apache/camel/component/ical/springboot/ICalDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ical-starter/src/main/java/org/apache/camel/component/ical/springboot/ICalDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-ical-starter/src/main/java/org/apache/camel/component/ical/springboot/ICalDataFormatAutoConfiguration.java
index b799b7d..36ec2a5 100644
--- a/platforms/spring-boot/components-starter/camel-ical-starter/src/main/java/org/apache/camel/component/ical/springboot/ICalDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ical-starter/src/main/java/org/apache/camel/component/ical/springboot/ICalDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.ical.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ICalDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class ICalDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ical-starter/src/main/java/org/apache/camel/component/ical/springboot/ICalDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ical-starter/src/main/java/org/apache/camel/component/ical/springboot/ICalDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-ical-starter/src/main/java/org/apache/camel/component/ical/springboot/ICalDataFormatConfiguration.java
index 88ddfa0..2b654ae 100644
--- a/platforms/spring-boot/components-starter/camel-ical-starter/src/main/java/org/apache/camel/component/ical/springboot/ICalDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ical-starter/src/main/java/org/apache/camel/component/ical/springboot/ICalDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.ical.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.ical)
 public class ICalDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-infinispan-starter/src/main/java/org/apache/camel/component/infinispan/springboot/InfinispanComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-infinispan-starter/src/main/java/org/apache/camel/component/infinispan/springboot/InfinispanComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-infinispan-starter/src/main/java/org/apache/camel/component/infinispan/springboot/InfinispanComponentAutoConfiguration.java
index 144791c..ae496d2 100644
--- a/platforms/spring-boot/components-starter/camel-infinispan-starter/src/main/java/org/apache/camel/component/infinispan/springboot/InfinispanComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-infinispan-starter/src/main/java/org/apache/camel/component/infinispan/springboot/InfinispanComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.infinispan.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.infinispan.InfinispanComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(InfinispanComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class InfinispanComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-infinispan-starter/src/main/java/org/apache/camel/component/infinispan/springboot/InfinispanComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-infinispan-starter/src/main/java/org/apache/camel/component/infinispan/springboot/InfinispanComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-infinispan-starter/src/main/java/org/apache/camel/component/infinispan/springboot/InfinispanComponentConfiguration.java
index c4afece..8fc56dd 100644
--- a/platforms/spring-boot/components-starter/camel-infinispan-starter/src/main/java/org/apache/camel/component/infinispan/springboot/InfinispanComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-infinispan-starter/src/main/java/org/apache/camel/component/infinispan/springboot/InfinispanComponentConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.infinispan.springboot;
 
 import java.util.Map;
 import java.util.Set;
+import javax.annotation.Generated;
 import org.apache.camel.component.infinispan.InfinispanCustomListener;
 import org.apache.camel.component.infinispan.InfinispanQueryBuilder;
 import org.infinispan.commons.api.BasicCacheContainer;
@@ -31,6 +32,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.infinispan)
 public class InfinispanComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-influxdb-starter/src/main/java/org/apache/camel/component/influxdb/springboot/InfluxDbComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-influxdb-starter/src/main/java/org/apache/camel/component/influxdb/springboot/InfluxDbComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-influxdb-starter/src/main/java/org/apache/camel/component/influxdb/springboot/InfluxDbComponentAutoConfiguration.java
index f7a0e26..9aa6fe0 100644
--- a/platforms/spring-boot/components-starter/camel-influxdb-starter/src/main/java/org/apache/camel/component/influxdb/springboot/InfluxDbComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-influxdb-starter/src/main/java/org/apache/camel/component/influxdb/springboot/InfluxDbComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.influxdb.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.influxdb.InfluxDbComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(InfluxDbComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class InfluxDbComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-irc-starter/src/main/java/org/apache/camel/component/irc/springboot/IrcComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-irc-starter/src/main/java/org/apache/camel/component/irc/springboot/IrcComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-irc-starter/src/main/java/org/apache/camel/component/irc/springboot/IrcComponentAutoConfiguration.java
index 67d9cf8..741a06e 100644
--- a/platforms/spring-boot/components-starter/camel-irc-starter/src/main/java/org/apache/camel/component/irc/springboot/IrcComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-irc-starter/src/main/java/org/apache/camel/component/irc/springboot/IrcComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.irc.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.irc.IrcComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(IrcComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class IrcComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-irc-starter/src/main/java/org/apache/camel/component/irc/springboot/IrcComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-irc-starter/src/main/java/org/apache/camel/component/irc/springboot/IrcComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-irc-starter/src/main/java/org/apache/camel/component/irc/springboot/IrcComponentConfiguration.java
index 02daefb..fe89d50 100644
--- a/platforms/spring-boot/components-starter/camel-irc-starter/src/main/java/org/apache/camel/component/irc/springboot/IrcComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-irc-starter/src/main/java/org/apache/camel/component/irc/springboot/IrcComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.irc.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.irc)
 public class IrcComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ironmq-starter/src/main/java/org/apache/camel/component/ironmq/springboot/IronMQComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ironmq-starter/src/main/java/org/apache/camel/component/ironmq/springboot/IronMQComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-ironmq-starter/src/main/java/org/apache/camel/component/ironmq/springboot/IronMQComponentAutoConfiguration.java
index 5053f68..de636c0 100644
--- a/platforms/spring-boot/components-starter/camel-ironmq-starter/src/main/java/org/apache/camel/component/ironmq/springboot/IronMQComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ironmq-starter/src/main/java/org/apache/camel/component/ironmq/springboot/IronMQComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.ironmq.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.ironmq.IronMQComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(IronMQComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class IronMQComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatAutoConfiguration.java
index 406b5af..5099b19 100644
--- a/platforms/spring-boot/components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.jackson.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JacksonDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class JacksonDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatConfiguration.java
index e5dcbc2..8f69717 100644
--- a/platforms/spring-boot/components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jackson-starter/src/main/java/org/apache/camel/component/jackson/springboot/JacksonDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.jackson.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.jackson.JacksonDataFormat;
 import org.apache.camel.model.dataformat.JsonLibrary;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.json-jackson)
 public class JacksonDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatAutoConfiguration.java
index 30c2f63..3a22f52 100644
--- a/platforms/spring-boot/components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.jacksonxml.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JacksonXMLDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class JacksonXMLDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java
index 50c8062..389e38a 100644
--- a/platforms/spring-boot/components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jacksonxml-starter/src/main/java/org/apache/camel/component/jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.jacksonxml.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.jacksonxml)
 public class JacksonXMLDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-javaspace-starter/src/main/java/org/apache/camel/component/javaspace/springboot/JavaSpaceComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-javaspace-starter/src/main/java/org/apache/camel/component/javaspace/springboot/JavaSpaceComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-javaspace-starter/src/main/java/org/apache/camel/component/javaspace/springboot/JavaSpaceComponentAutoConfiguration.java
index 567af38..a409ff9 100644
--- a/platforms/spring-boot/components-starter/camel-javaspace-starter/src/main/java/org/apache/camel/component/javaspace/springboot/JavaSpaceComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-javaspace-starter/src/main/java/org/apache/camel/component/javaspace/springboot/JavaSpaceComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.javaspace.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.javaspace.JavaSpaceComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JavaSpaceComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class JavaSpaceComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jaxb-starter/src/main/java/org/apache/camel/converter/jaxb/springboot/JaxbDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jaxb-starter/src/main/java/org/apache/camel/converter/jaxb/springboot/JaxbDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jaxb-starter/src/main/java/org/apache/camel/converter/jaxb/springboot/JaxbDataFormatAutoConfiguration.java
index 3562119..a8388f1 100644
--- a/platforms/spring-boot/components-starter/camel-jaxb-starter/src/main/java/org/apache/camel/converter/jaxb/springboot/JaxbDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jaxb-starter/src/main/java/org/apache/camel/converter/jaxb/springboot/JaxbDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.converter.jaxb.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JaxbDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class JaxbDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jaxb-starter/src/main/java/org/apache/camel/converter/jaxb/springboot/JaxbDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jaxb-starter/src/main/java/org/apache/camel/converter/jaxb/springboot/JaxbDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-jaxb-starter/src/main/java/org/apache/camel/converter/jaxb/springboot/JaxbDataFormatConfiguration.java
index a980537..4d28036 100644
--- a/platforms/spring-boot/components-starter/camel-jaxb-starter/src/main/java/org/apache/camel/converter/jaxb/springboot/JaxbDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jaxb-starter/src/main/java/org/apache/camel/converter/jaxb/springboot/JaxbDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.converter.jaxb.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.jaxb)
 public class JaxbDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jbpm-starter/src/main/java/org/apache/camel/component/jbpm/springboot/JBPMComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jbpm-starter/src/main/java/org/apache/camel/component/jbpm/springboot/JBPMComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jbpm-starter/src/main/java/org/apache/camel/component/jbpm/springboot/JBPMComponentAutoConfiguration.java
index e744a5a..13ede67 100644
--- a/platforms/spring-boot/components-starter/camel-jbpm-starter/src/main/java/org/apache/camel/component/jbpm/springboot/JBPMComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jbpm-starter/src/main/java/org/apache/camel/component/jbpm/springboot/JBPMComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.jbpm.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.jbpm.JBPMComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JBPMComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class JBPMComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jcache-starter/src/main/java/org/apache/camel/component/jcache/springboot/JCacheComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jcache-starter/src/main/java/org/apache/camel/component/jcache/springboot/JCacheComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jcache-starter/src/main/java/org/apache/camel/component/jcache/springboot/JCacheComponentAutoConfiguration.java
index d552b5f..37137b4 100644
--- a/platforms/spring-boot/components-starter/camel-jcache-starter/src/main/java/org/apache/camel/component/jcache/springboot/JCacheComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jcache-starter/src/main/java/org/apache/camel/component/jcache/springboot/JCacheComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.jcache.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.jcache.JCacheComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JCacheComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class JCacheComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jcache-starter/src/main/java/org/apache/camel/component/jcache/springboot/JCacheComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jcache-starter/src/main/java/org/apache/camel/component/jcache/springboot/JCacheComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-jcache-starter/src/main/java/org/apache/camel/component/jcache/springboot/JCacheComponentConfiguration.java
index b0d9f5e..be5ced1 100644
--- a/platforms/spring-boot/components-starter/camel-jcache-starter/src/main/java/org/apache/camel/component/jcache/springboot/JCacheComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jcache-starter/src/main/java/org/apache/camel/component/jcache/springboot/JCacheComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.jcache.springboot;
 
 import java.util.Properties;
+import javax.annotation.Generated;
 import javax.cache.configuration.Configuration;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.jcache)
 public class JCacheComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jcr-starter/src/main/java/org/apache/camel/component/jcr/springboot/JcrComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jcr-starter/src/main/java/org/apache/camel/component/jcr/springboot/JcrComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jcr-starter/src/main/java/org/apache/camel/component/jcr/springboot/JcrComponentAutoConfiguration.java
index 21ea150..8aebcc2 100644
--- a/platforms/spring-boot/components-starter/camel-jcr-starter/src/main/java/org/apache/camel/component/jcr/springboot/JcrComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jcr-starter/src/main/java/org/apache/camel/component/jcr/springboot/JcrComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.jcr.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.jcr.JcrComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JcrComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class JcrComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jdbc-starter/src/main/java/org/apache/camel/component/jdbc/springboot/JdbcComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jdbc-starter/src/main/java/org/apache/camel/component/jdbc/springboot/JdbcComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jdbc-starter/src/main/java/org/apache/camel/component/jdbc/springboot/JdbcComponentAutoConfiguration.java
index fe8cb68..2424bdc 100644
--- a/platforms/spring-boot/components-starter/camel-jdbc-starter/src/main/java/org/apache/camel/component/jdbc/springboot/JdbcComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jdbc-starter/src/main/java/org/apache/camel/component/jdbc/springboot/JdbcComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.jdbc.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.jdbc.JdbcComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JdbcComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class JdbcComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jdbc-starter/src/main/java/org/apache/camel/component/jdbc/springboot/JdbcComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jdbc-starter/src/main/java/org/apache/camel/component/jdbc/springboot/JdbcComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-jdbc-starter/src/main/java/org/apache/camel/component/jdbc/springboot/JdbcComponentConfiguration.java
index 49df11b..f2e6234 100644
--- a/platforms/spring-boot/components-starter/camel-jdbc-starter/src/main/java/org/apache/camel/component/jdbc/springboot/JdbcComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jdbc-starter/src/main/java/org/apache/camel/component/jdbc/springboot/JdbcComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.jdbc.springboot;
 
+import javax.annotation.Generated;
 import javax.sql.DataSource;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.jdbc)
 public class JdbcComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jetty9-starter/src/main/java/org/apache/camel/component/jetty9/springboot/JettyHttpComponentAutoConfiguration9.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jetty9-starter/src/main/java/org/apache/camel/component/jetty9/springboot/JettyHttpComponentAutoConfiguration9.java b/platforms/spring-boot/components-starter/camel-jetty9-starter/src/main/java/org/apache/camel/component/jetty9/springboot/JettyHttpComponentAutoConfiguration9.java
index 3ac3ed9..c887d25 100644
--- a/platforms/spring-boot/components-starter/camel-jetty9-starter/src/main/java/org/apache/camel/component/jetty9/springboot/JettyHttpComponentAutoConfiguration9.java
+++ b/platforms/spring-boot/components-starter/camel-jetty9-starter/src/main/java/org/apache/camel/component/jetty9/springboot/JettyHttpComponentAutoConfiguration9.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.jetty9.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.jetty9.JettyHttpComponent9;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JettyHttpComponentAutoConfiguration9.Condition.class)
@@ -84,6 +86,7 @@ public class JettyHttpComponentAutoConfiguration9 {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jetty9-starter/src/main/java/org/apache/camel/component/jetty9/springboot/JettyHttpComponentConfiguration9.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jetty9-starter/src/main/java/org/apache/camel/component/jetty9/springboot/JettyHttpComponentConfiguration9.java b/platforms/spring-boot/components-starter/camel-jetty9-starter/src/main/java/org/apache/camel/component/jetty9/springboot/JettyHttpComponentConfiguration9.java
index 6cfc3dc..dc841bb 100644
--- a/platforms/spring-boot/components-starter/camel-jetty9-starter/src/main/java/org/apache/camel/component/jetty9/springboot/JettyHttpComponentConfiguration9.java
+++ b/platforms/spring-boot/components-starter/camel-jetty9-starter/src/main/java/org/apache/camel/component/jetty9/springboot/JettyHttpComponentConfiguration9.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.jetty9.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.component.jetty.JettyHttpBinding;
 import org.apache.camel.http.common.HttpBinding;
 import org.apache.camel.http.common.HttpConfiguration;
@@ -35,6 +36,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.jetty)
 public class JettyHttpComponentConfiguration9 {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jgroups-starter/src/main/java/org/apache/camel/component/jgroups/springboot/JGroupsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jgroups-starter/src/main/java/org/apache/camel/component/jgroups/springboot/JGroupsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jgroups-starter/src/main/java/org/apache/camel/component/jgroups/springboot/JGroupsComponentAutoConfiguration.java
index a6d263f..492439c 100644
--- a/platforms/spring-boot/components-starter/camel-jgroups-starter/src/main/java/org/apache/camel/component/jgroups/springboot/JGroupsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jgroups-starter/src/main/java/org/apache/camel/component/jgroups/springboot/JGroupsComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.jgroups.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.jgroups.JGroupsComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JGroupsComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class JGroupsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jgroups-starter/src/main/java/org/apache/camel/component/jgroups/springboot/JGroupsComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jgroups-starter/src/main/java/org/apache/camel/component/jgroups/springboot/JGroupsComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-jgroups-starter/src/main/java/org/apache/camel/component/jgroups/springboot/JGroupsComponentConfiguration.java
index 8f61eb1..0c2e812 100644
--- a/platforms/spring-boot/components-starter/camel-jgroups-starter/src/main/java/org/apache/camel/component/jgroups/springboot/JGroupsComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jgroups-starter/src/main/java/org/apache/camel/component/jgroups/springboot/JGroupsComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.jgroups.springboot;
 
+import javax.annotation.Generated;
 import org.jgroups.JChannel;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.jgroups)
 public class JGroupsComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jibx-starter/src/main/java/org/apache/camel/dataformat/jibx/springboot/JibxDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jibx-starter/src/main/java/org/apache/camel/dataformat/jibx/springboot/JibxDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jibx-starter/src/main/java/org/apache/camel/dataformat/jibx/springboot/JibxDataFormatAutoConfiguration.java
index 179701a..1597cbd 100644
--- a/platforms/spring-boot/components-starter/camel-jibx-starter/src/main/java/org/apache/camel/dataformat/jibx/springboot/JibxDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jibx-starter/src/main/java/org/apache/camel/dataformat/jibx/springboot/JibxDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.jibx.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JibxDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class JibxDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jibx-starter/src/main/java/org/apache/camel/dataformat/jibx/springboot/JibxDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jibx-starter/src/main/java/org/apache/camel/dataformat/jibx/springboot/JibxDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-jibx-starter/src/main/java/org/apache/camel/dataformat/jibx/springboot/JibxDataFormatConfiguration.java
index 47af923..a2e21b7 100644
--- a/platforms/spring-boot/components-starter/camel-jibx-starter/src/main/java/org/apache/camel/dataformat/jibx/springboot/JibxDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jibx-starter/src/main/java/org/apache/camel/dataformat/jibx/springboot/JibxDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.jibx.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.jibx)
 public class JibxDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jing-starter/src/main/java/org/apache/camel/component/validator/jing/springboot/JingComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jing-starter/src/main/java/org/apache/camel/component/validator/jing/springboot/JingComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jing-starter/src/main/java/org/apache/camel/component/validator/jing/springboot/JingComponentAutoConfiguration.java
index b318b2c..eeb94b4 100644
--- a/platforms/spring-boot/components-starter/camel-jing-starter/src/main/java/org/apache/camel/component/validator/jing/springboot/JingComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jing-starter/src/main/java/org/apache/camel/component/validator/jing/springboot/JingComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.validator.jing.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.validator.jing.JingComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JingComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class JingComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jira-starter/src/main/java/org/apache/camel/component/jira/springboot/JIRAComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jira-starter/src/main/java/org/apache/camel/component/jira/springboot/JIRAComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jira-starter/src/main/java/org/apache/camel/component/jira/springboot/JIRAComponentAutoConfiguration.java
index a40a8c1..1a1a48e 100644
--- a/platforms/spring-boot/components-starter/camel-jira-starter/src/main/java/org/apache/camel/component/jira/springboot/JIRAComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jira-starter/src/main/java/org/apache/camel/component/jira/springboot/JIRAComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.jira.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.jira.JIRAComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JIRAComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class JIRAComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jms-starter/src/main/java/org/apache/camel/component/jms/springboot/JmsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jms-starter/src/main/java/org/apache/camel/component/jms/springboot/JmsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jms-starter/src/main/java/org/apache/camel/component/jms/springboot/JmsComponentAutoConfiguration.java
index c7761fa..9cf6e26 100644
--- a/platforms/spring-boot/components-starter/camel-jms-starter/src/main/java/org/apache/camel/component/jms/springboot/JmsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jms-starter/src/main/java/org/apache/camel/component/jms/springboot/JmsComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.jms.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.jms.JmsComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JmsComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class JmsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jms-starter/src/main/java/org/apache/camel/component/jms/springboot/JmsComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jms-starter/src/main/java/org/apache/camel/component/jms/springboot/JmsComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-jms-starter/src/main/java/org/apache/camel/component/jms/springboot/JmsComponentConfiguration.java
index 7225161..1f1130e 100644
--- a/platforms/spring-boot/components-starter/camel-jms-starter/src/main/java/org/apache/camel/component/jms/springboot/JmsComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jms-starter/src/main/java/org/apache/camel/component/jms/springboot/JmsComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.jms.springboot;
 
+import javax.annotation.Generated;
 import javax.jms.ConnectionFactory;
 import javax.jms.ExceptionListener;
 import org.apache.camel.LoggingLevel;
@@ -46,6 +47,7 @@ import org.springframework.util.ErrorHandler;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.jms)
 public class JmsComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jmx-starter/src/main/java/org/apache/camel/component/jmx/springboot/JMXComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jmx-starter/src/main/java/org/apache/camel/component/jmx/springboot/JMXComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jmx-starter/src/main/java/org/apache/camel/component/jmx/springboot/JMXComponentAutoConfiguration.java
index 2230be6..ec8d6c3 100644
--- a/platforms/spring-boot/components-starter/camel-jmx-starter/src/main/java/org/apache/camel/component/jmx/springboot/JMXComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jmx-starter/src/main/java/org/apache/camel/component/jmx/springboot/JMXComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.jmx.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.jmx.JMXComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JMXComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class JMXComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatAutoConfiguration.java
index 0f5d2e0..e20fde9 100644
--- a/platforms/spring-boot/components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.johnzon.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JohnzonDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class JohnzonDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatConfiguration.java
index 47b9093..67c542b 100644
--- a/platforms/spring-boot/components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-johnzon-starter/src/main/java/org/apache/camel/component/johnzon/springboot/JohnzonDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.johnzon.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.johnzon.JohnzonDataFormat;
 import org.apache.camel.model.dataformat.JsonLibrary;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.json-johnzon)
 public class JohnzonDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jolt-starter/src/main/java/org/apache/camel/component/jolt/springboot/JoltComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jolt-starter/src/main/java/org/apache/camel/component/jolt/springboot/JoltComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-jolt-starter/src/main/java/org/apache/camel/component/jolt/springboot/JoltComponentAutoConfiguration.java
index 7b6552d..1c53972 100644
--- a/platforms/spring-boot/components-starter/camel-jolt-starter/src/main/java/org/apache/camel/component/jolt/springboot/JoltComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jolt-starter/src/main/java/org/apache/camel/component/jolt/springboot/JoltComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.jolt.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.jolt.JoltComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(JoltComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class JoltComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-jolt-starter/src/main/java/org/apache/camel/component/jolt/springboot/JoltComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-jolt-starter/src/main/java/org/apache/camel/component/jolt/springboot/JoltComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-jolt-starter/src/main/java/org/apache/camel/component/jolt/springboot/JoltComponentConfiguration.java
index c14d949..e1017f0 100644
--- a/platforms/spring-boot/components-starter/camel-jolt-starter/src/main/java/org/apache/camel/component/jolt/springboot/JoltComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jolt-starter/src/main/java/org/apache/camel/component/jolt/springboot/JoltComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.jolt.springboot;
 
+import javax.annotation.Generated;
 import com.bazaarvoice.jolt.Transform;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.jolt)
 public class JoltComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-josql-starter/src/main/java/org/apache/camel/language/sql/springboot/SqlLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-josql-starter/src/main/java/org/apache/camel/language/sql/springboot/SqlLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-josql-starter/src/main/java/org/apache/camel/language/sql/springboot/SqlLanguageAutoConfiguration.java
index 0bc0a5d..8a993a6 100644
--- a/platforms/spring-boot/components-starter/camel-josql-starter/src/main/java/org/apache/camel/language/sql/springboot/SqlLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-josql-starter/src/main/java/org/apache/camel/language/sql/springboot/SqlLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.sql.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.sql.SqlLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SqlLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class SqlLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-josql-starter/src/main/java/org/apache/camel/language/sql/springboot/SqlLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-josql-starter/src/main/java/org/apache/camel/language/sql/springboot/SqlLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-josql-starter/src/main/java/org/apache/camel/language/sql/springboot/SqlLanguageConfiguration.java
index 1816393..6060fb5 100644
--- a/platforms/spring-boot/components-starter/camel-josql-starter/src/main/java/org/apache/camel/language/sql/springboot/SqlLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-josql-starter/src/main/java/org/apache/camel/language/sql/springboot/SqlLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.sql.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.sql)
 public class SqlLanguageConfiguration {
 


"
"194","373","2017-04-19 08:35:53+00:00","zregvart@apache.org","['commits@camel.apache.org']","[08/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...","Return-Path: <commits-return-55740-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 2E9E718715
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:35:54 +0000 (UTC)
Received: (qmail 40291 invoked by uid 500); 19 Apr 2017 08:35:48 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 39960 invoked by uid 500); 19 Apr 2017 08:35:48 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 39557 invoked by uid 99); 19 Apr 2017 08:35:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:35:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id A2191DFBB7; Wed, 19 Apr 2017 08:35:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 08:35:53 -0000
Message-Id: <399093a95cdb4277b5c497f2e80c60a3@git.apache.org>
In-Reply-To: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
References: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [08/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-elsql-starter/src/main/java/org/apache/camel/component/elsql/springboot/ElsqlComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-elsql-starter/src/main/java/org/apache/camel/component/elsql/springboot/ElsqlComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-elsql-starter/src/main/java/org/apache/camel/component/elsql/springboot/ElsqlComponentAutoConfiguration.java
index cb4bf49..344a03a 100644
--- a/platforms/spring-boot/components-starter/camel-elsql-starter/src/main/java/org/apache/camel/component/elsql/springboot/ElsqlComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-elsql-starter/src/main/java/org/apache/camel/component/elsql/springboot/ElsqlComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.elsql.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.elsql.ElsqlComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ElsqlComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class ElsqlComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-elsql-starter/src/main/java/org/apache/camel/component/elsql/springboot/ElsqlComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-elsql-starter/src/main/java/org/apache/camel/component/elsql/springboot/ElsqlComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-elsql-starter/src/main/java/org/apache/camel/component/elsql/springboot/ElsqlComponentConfiguration.java
index c6a1577..da283bd 100644
--- a/platforms/spring-boot/components-starter/camel-elsql-starter/src/main/java/org/apache/camel/component/elsql/springboot/ElsqlComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-elsql-starter/src/main/java/org/apache/camel/component/elsql/springboot/ElsqlComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.elsql.springboot;
 
+import javax.annotation.Generated;
 import javax.sql.DataSource;
 import com.opengamma.elsql.ElSqlConfig;
 import org.apache.camel.component.elsql.ElSqlDatabaseVendor;
@@ -28,6 +29,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.elsql)
 public class ElsqlComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-etcd-starter/src/main/java/org/apache/camel/component/etcd/springboot/EtcdComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-etcd-starter/src/main/java/org/apache/camel/component/etcd/springboot/EtcdComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-etcd-starter/src/main/java/org/apache/camel/component/etcd/springboot/EtcdComponentAutoConfiguration.java
index 26290f1..c48f095 100644
--- a/platforms/spring-boot/components-starter/camel-etcd-starter/src/main/java/org/apache/camel/component/etcd/springboot/EtcdComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-etcd-starter/src/main/java/org/apache/camel/component/etcd/springboot/EtcdComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.etcd.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.etcd.EtcdComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(EtcdComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class EtcdComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-etcd-starter/src/main/java/org/apache/camel/component/etcd/springboot/EtcdComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-etcd-starter/src/main/java/org/apache/camel/component/etcd/springboot/EtcdComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-etcd-starter/src/main/java/org/apache/camel/component/etcd/springboot/EtcdComponentConfiguration.java
index 0e2cbdb..a7168a6 100644
--- a/platforms/spring-boot/components-starter/camel-etcd-starter/src/main/java/org/apache/camel/component/etcd/springboot/EtcdComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-etcd-starter/src/main/java/org/apache/camel/component/etcd/springboot/EtcdComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.etcd.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.util.jsse.SSLContextParameters;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.etcd)
 public class EtcdComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-exec-starter/src/main/java/org/apache/camel/component/exec/springboot/ExecComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-exec-starter/src/main/java/org/apache/camel/component/exec/springboot/ExecComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-exec-starter/src/main/java/org/apache/camel/component/exec/springboot/ExecComponentAutoConfiguration.java
index 0b3c115..8337190 100644
--- a/platforms/spring-boot/components-starter/camel-exec-starter/src/main/java/org/apache/camel/component/exec/springboot/ExecComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-exec-starter/src/main/java/org/apache/camel/component/exec/springboot/ExecComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.exec.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.exec.ExecComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ExecComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class ExecComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-facebook-starter/src/main/java/org/apache/camel/component/facebook/springboot/FacebookComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-facebook-starter/src/main/java/org/apache/camel/component/facebook/springboot/FacebookComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-facebook-starter/src/main/java/org/apache/camel/component/facebook/springboot/FacebookComponentAutoConfiguration.java
index baa8e05..9bfa887 100644
--- a/platforms/spring-boot/components-starter/camel-facebook-starter/src/main/java/org/apache/camel/component/facebook/springboot/FacebookComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-facebook-starter/src/main/java/org/apache/camel/component/facebook/springboot/FacebookComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.facebook.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.facebook.FacebookComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(FacebookComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class FacebookComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-facebook-starter/src/main/java/org/apache/camel/component/facebook/springboot/FacebookComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-facebook-starter/src/main/java/org/apache/camel/component/facebook/springboot/FacebookComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-facebook-starter/src/main/java/org/apache/camel/component/facebook/springboot/FacebookComponentConfiguration.java
index 28b2963..e164fe7 100644
--- a/platforms/spring-boot/components-starter/camel-facebook-starter/src/main/java/org/apache/camel/component/facebook/springboot/FacebookComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-facebook-starter/src/main/java/org/apache/camel/component/facebook/springboot/FacebookComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.facebook.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.facebook)
 public class FacebookComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/component/flatpack/springboot/FlatpackComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/component/flatpack/springboot/FlatpackComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/component/flatpack/springboot/FlatpackComponentAutoConfiguration.java
index 2a9c2f1..19e04d4 100644
--- a/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/component/flatpack/springboot/FlatpackComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/component/flatpack/springboot/FlatpackComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.flatpack.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.flatpack.FlatpackComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(FlatpackComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class FlatpackComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/dataformat/flatpack/springboot/FlatpackDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/dataformat/flatpack/springboot/FlatpackDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/dataformat/flatpack/springboot/FlatpackDataFormatAutoConfiguration.java
index ce9a747..553ccb6 100644
--- a/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/dataformat/flatpack/springboot/FlatpackDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/dataformat/flatpack/springboot/FlatpackDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.flatpack.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(FlatpackDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class FlatpackDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/dataformat/flatpack/springboot/FlatpackDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/dataformat/flatpack/springboot/FlatpackDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/dataformat/flatpack/springboot/FlatpackDataFormatConfiguration.java
index 4d81857..0f07c9a 100644
--- a/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/dataformat/flatpack/springboot/FlatpackDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-flatpack-starter/src/main/java/org/apache/camel/dataformat/flatpack/springboot/FlatpackDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.flatpack.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.flatpack)
 public class FlatpackDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-flink-starter/src/main/java/org/apache/camel/component/flink/springboot/FlinkComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-flink-starter/src/main/java/org/apache/camel/component/flink/springboot/FlinkComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-flink-starter/src/main/java/org/apache/camel/component/flink/springboot/FlinkComponentAutoConfiguration.java
index d505ab5..31cd17c 100644
--- a/platforms/spring-boot/components-starter/camel-flink-starter/src/main/java/org/apache/camel/component/flink/springboot/FlinkComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-flink-starter/src/main/java/org/apache/camel/component/flink/springboot/FlinkComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.flink.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.flink.FlinkComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(FlinkComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class FlinkComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-flink-starter/src/main/java/org/apache/camel/component/flink/springboot/FlinkComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-flink-starter/src/main/java/org/apache/camel/component/flink/springboot/FlinkComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-flink-starter/src/main/java/org/apache/camel/component/flink/springboot/FlinkComponentConfiguration.java
index c6ebc59..5387af1 100644
--- a/platforms/spring-boot/components-starter/camel-flink-starter/src/main/java/org/apache/camel/component/flink/springboot/FlinkComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-flink-starter/src/main/java/org/apache/camel/component/flink/springboot/FlinkComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.flink.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.flink.DataSetCallback;
 import org.apache.camel.component.flink.DataStreamCallback;
 import org.apache.flink.api.java.DataSet;
@@ -28,6 +29,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.flink)
 public class FlinkComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-fop-starter/src/main/java/org/apache/camel/component/fop/springboot/FopComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-fop-starter/src/main/java/org/apache/camel/component/fop/springboot/FopComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-fop-starter/src/main/java/org/apache/camel/component/fop/springboot/FopComponentAutoConfiguration.java
index b5afd94..d2c0108 100644
--- a/platforms/spring-boot/components-starter/camel-fop-starter/src/main/java/org/apache/camel/component/fop/springboot/FopComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-fop-starter/src/main/java/org/apache/camel/component/fop/springboot/FopComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.fop.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.fop.FopComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(FopComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class FopComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-freemarker-starter/src/main/java/org/apache/camel/component/freemarker/springboot/FreemarkerComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-freemarker-starter/src/main/java/org/apache/camel/component/freemarker/springboot/FreemarkerComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-freemarker-starter/src/main/java/org/apache/camel/component/freemarker/springboot/FreemarkerComponentAutoConfiguration.java
index d0c68ae..4b57873 100644
--- a/platforms/spring-boot/components-starter/camel-freemarker-starter/src/main/java/org/apache/camel/component/freemarker/springboot/FreemarkerComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-freemarker-starter/src/main/java/org/apache/camel/component/freemarker/springboot/FreemarkerComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.freemarker.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.freemarker.FreemarkerComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(FreemarkerComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class FreemarkerComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-freemarker-starter/src/main/java/org/apache/camel/component/freemarker/springboot/FreemarkerComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-freemarker-starter/src/main/java/org/apache/camel/component/freemarker/springboot/FreemarkerComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-freemarker-starter/src/main/java/org/apache/camel/component/freemarker/springboot/FreemarkerComponentConfiguration.java
index 25d1d83..2ccdfaa 100644
--- a/platforms/spring-boot/components-starter/camel-freemarker-starter/src/main/java/org/apache/camel/component/freemarker/springboot/FreemarkerComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-freemarker-starter/src/main/java/org/apache/camel/component/freemarker/springboot/FreemarkerComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.freemarker.springboot;
 
+import javax.annotation.Generated;
 import freemarker.template.Configuration;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.freemarker)
 public class FreemarkerComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpComponentAutoConfiguration.java
index 80427e3..756a65b 100644
--- a/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.file.remote.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.file.remote.FtpComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(FtpComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class FtpComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpsComponentAutoConfiguration.java
index 731b91b..db13a00 100644
--- a/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpsComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.file.remote.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.file.remote.FtpsComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(FtpsComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class FtpsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpsComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpsComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpsComponentConfiguration.java
index 45a36e2..667f643 100644
--- a/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpsComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/FtpsComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.file.remote.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.ftps)
 public class FtpsComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/SftpComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/SftpComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/SftpComponentAutoConfiguration.java
index 1c728ea..883e8f2 100644
--- a/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/SftpComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ftp-starter/src/main/java/org/apache/camel/component/file/remote/springboot/SftpComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.file.remote.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.file.remote.SftpComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SftpComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class SftpComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ganglia-starter/src/main/java/org/apache/camel/component/ganglia/springboot/GangliaComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ganglia-starter/src/main/java/org/apache/camel/component/ganglia/springboot/GangliaComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-ganglia-starter/src/main/java/org/apache/camel/component/ganglia/springboot/GangliaComponentAutoConfiguration.java
index a325c6b..3d2fa32 100644
--- a/platforms/spring-boot/components-starter/camel-ganglia-starter/src/main/java/org/apache/camel/component/ganglia/springboot/GangliaComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ganglia-starter/src/main/java/org/apache/camel/component/ganglia/springboot/GangliaComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.ganglia.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.ganglia.GangliaComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GangliaComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class GangliaComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ganglia-starter/src/main/java/org/apache/camel/component/ganglia/springboot/GangliaComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ganglia-starter/src/main/java/org/apache/camel/component/ganglia/springboot/GangliaComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-ganglia-starter/src/main/java/org/apache/camel/component/ganglia/springboot/GangliaComponentConfiguration.java
index 7763525..6f82f77 100644
--- a/platforms/spring-boot/components-starter/camel-ganglia-starter/src/main/java/org/apache/camel/component/ganglia/springboot/GangliaComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ganglia-starter/src/main/java/org/apache/camel/component/ganglia/springboot/GangliaComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.ganglia.springboot;
 
+import javax.annotation.Generated;
 import info.ganglia.gmetric4j.gmetric.GMetric.UDPAddressingMode;
 import info.ganglia.gmetric4j.gmetric.GMetricSlope;
 import info.ganglia.gmetric4j.gmetric.GMetricType;
@@ -28,6 +29,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.ganglia)
 public class GangliaComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-geocoder-starter/src/main/java/org/apache/camel/component/geocoder/springboot/GeoCoderComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-geocoder-starter/src/main/java/org/apache/camel/component/geocoder/springboot/GeoCoderComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-geocoder-starter/src/main/java/org/apache/camel/component/geocoder/springboot/GeoCoderComponentAutoConfiguration.java
index f3f4725..a0291e0 100644
--- a/platforms/spring-boot/components-starter/camel-geocoder-starter/src/main/java/org/apache/camel/component/geocoder/springboot/GeoCoderComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-geocoder-starter/src/main/java/org/apache/camel/component/geocoder/springboot/GeoCoderComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.geocoder.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.geocoder.GeoCoderComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GeoCoderComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class GeoCoderComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-git-starter/src/main/java/org/apache/camel/component/git/springboot/GitComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-git-starter/src/main/java/org/apache/camel/component/git/springboot/GitComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-git-starter/src/main/java/org/apache/camel/component/git/springboot/GitComponentAutoConfiguration.java
index f63c61e..886a699 100644
--- a/platforms/spring-boot/components-starter/camel-git-starter/src/main/java/org/apache/camel/component/git/springboot/GitComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-git-starter/src/main/java/org/apache/camel/component/git/springboot/GitComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.git.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.git.GitComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GitComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class GitComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-github-starter/src/main/java/org/apache/camel/component/github/springboot/GitHubComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-github-starter/src/main/java/org/apache/camel/component/github/springboot/GitHubComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-github-starter/src/main/java/org/apache/camel/component/github/springboot/GitHubComponentAutoConfiguration.java
index 69f7757..82ffa4a 100644
--- a/platforms/spring-boot/components-starter/camel-github-starter/src/main/java/org/apache/camel/component/github/springboot/GitHubComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-github-starter/src/main/java/org/apache/camel/component/github/springboot/GitHubComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.github.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.github.GitHubComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GitHubComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class GitHubComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-google-calendar-starter/src/main/java/org/apache/camel/component/google/calendar/springboot/GoogleCalendarComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-google-calendar-starter/src/main/java/org/apache/camel/component/google/calendar/springboot/GoogleCalendarComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-google-calendar-starter/src/main/java/org/apache/camel/component/google/calendar/springboot/GoogleCalendarComponentAutoConfiguration.java
index 771dad5..ee870b5 100644
--- a/platforms/spring-boot/components-starter/camel-google-calendar-starter/src/main/java/org/apache/camel/component/google/calendar/springboot/GoogleCalendarComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-google-calendar-starter/src/main/java/org/apache/camel/component/google/calendar/springboot/GoogleCalendarComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.google.calendar.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.google.calendar.GoogleCalendarComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GoogleCalendarComponentAutoConfiguration.Condition.class)
@@ -85,6 +87,7 @@ public class GoogleCalendarComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-google-calendar-starter/src/main/java/org/apache/camel/component/google/calendar/springboot/GoogleCalendarComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-google-calendar-starter/src/main/java/org/apache/camel/component/google/calendar/springboot/GoogleCalendarComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-google-calendar-starter/src/main/java/org/apache/camel/component/google/calendar/springboot/GoogleCalendarComponentConfiguration.java
index 68c5683..600fab6 100644
--- a/platforms/spring-boot/components-starter/camel-google-calendar-starter/src/main/java/org/apache/camel/component/google/calendar/springboot/GoogleCalendarComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-google-calendar-starter/src/main/java/org/apache/camel/component/google/calendar/springboot/GoogleCalendarComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.google.calendar.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.google.calendar.GoogleCalendarClientFactory;
 import org.apache.camel.component.google.calendar.internal.GoogleCalendarApiName;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.google-calendar)
 public class GoogleCalendarComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-google-drive-starter/src/main/java/org/apache/camel/component/google/drive/springboot/GoogleDriveComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-google-drive-starter/src/main/java/org/apache/camel/component/google/drive/springboot/GoogleDriveComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-google-drive-starter/src/main/java/org/apache/camel/component/google/drive/springboot/GoogleDriveComponentAutoConfiguration.java
index 4fd6229..d643326 100644
--- a/platforms/spring-boot/components-starter/camel-google-drive-starter/src/main/java/org/apache/camel/component/google/drive/springboot/GoogleDriveComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-google-drive-starter/src/main/java/org/apache/camel/component/google/drive/springboot/GoogleDriveComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.google.drive.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.google.drive.GoogleDriveComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GoogleDriveComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class GoogleDriveComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-google-drive-starter/src/main/java/org/apache/camel/component/google/drive/springboot/GoogleDriveComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-google-drive-starter/src/main/java/org/apache/camel/component/google/drive/springboot/GoogleDriveComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-google-drive-starter/src/main/java/org/apache/camel/component/google/drive/springboot/GoogleDriveComponentConfiguration.java
index 3aee8f5..31d46dd 100644
--- a/platforms/spring-boot/components-starter/camel-google-drive-starter/src/main/java/org/apache/camel/component/google/drive/springboot/GoogleDriveComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-google-drive-starter/src/main/java/org/apache/camel/component/google/drive/springboot/GoogleDriveComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.google.drive.springboot;
 
 import java.util.List;
+import javax.annotation.Generated;
 import org.apache.camel.component.google.drive.GoogleDriveClientFactory;
 import org.apache.camel.component.google.drive.internal.GoogleDriveApiName;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -28,6 +29,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.google-drive)
 public class GoogleDriveComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-google-mail-starter/src/main/java/org/apache/camel/component/google/mail/springboot/GoogleMailComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-google-mail-starter/src/main/java/org/apache/camel/component/google/mail/springboot/GoogleMailComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-google-mail-starter/src/main/java/org/apache/camel/component/google/mail/springboot/GoogleMailComponentAutoConfiguration.java
index 6c7b5b5..69b8493 100644
--- a/platforms/spring-boot/components-starter/camel-google-mail-starter/src/main/java/org/apache/camel/component/google/mail/springboot/GoogleMailComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-google-mail-starter/src/main/java/org/apache/camel/component/google/mail/springboot/GoogleMailComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.google.mail.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.google.mail.GoogleMailComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GoogleMailComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class GoogleMailComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-google-mail-starter/src/main/java/org/apache/camel/component/google/mail/springboot/GoogleMailComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-google-mail-starter/src/main/java/org/apache/camel/component/google/mail/springboot/GoogleMailComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-google-mail-starter/src/main/java/org/apache/camel/component/google/mail/springboot/GoogleMailComponentConfiguration.java
index 13cf940..de05160 100644
--- a/platforms/spring-boot/components-starter/camel-google-mail-starter/src/main/java/org/apache/camel/component/google/mail/springboot/GoogleMailComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-google-mail-starter/src/main/java/org/apache/camel/component/google/mail/springboot/GoogleMailComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.google.mail.springboot;
 
 import java.util.List;
+import javax.annotation.Generated;
 import org.apache.camel.component.google.mail.GoogleMailClientFactory;
 import org.apache.camel.component.google.mail.internal.GoogleMailApiName;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.google-mail)
 public class GoogleMailComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-google-pubsub-starter/src/main/java/org/apache/camel/component/google/pubsub/springboot/GooglePubsubComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-google-pubsub-starter/src/main/java/org/apache/camel/component/google/pubsub/springboot/GooglePubsubComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-google-pubsub-starter/src/main/java/org/apache/camel/component/google/pubsub/springboot/GooglePubsubComponentAutoConfiguration.java
index 31f14b9..f018f70 100644
--- a/platforms/spring-boot/components-starter/camel-google-pubsub-starter/src/main/java/org/apache/camel/component/google/pubsub/springboot/GooglePubsubComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-google-pubsub-starter/src/main/java/org/apache/camel/component/google/pubsub/springboot/GooglePubsubComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.google.pubsub.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.google.pubsub.GooglePubsubComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GooglePubsubComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class GooglePubsubComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-google-pubsub-starter/src/main/java/org/apache/camel/component/google/pubsub/springboot/GooglePubsubComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-google-pubsub-starter/src/main/java/org/apache/camel/component/google/pubsub/springboot/GooglePubsubComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-google-pubsub-starter/src/main/java/org/apache/camel/component/google/pubsub/springboot/GooglePubsubComponentConfiguration.java
index 1c3116c..80e22f8 100644
--- a/platforms/spring-boot/components-starter/camel-google-pubsub-starter/src/main/java/org/apache/camel/component/google/pubsub/springboot/GooglePubsubComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-google-pubsub-starter/src/main/java/org/apache/camel/component/google/pubsub/springboot/GooglePubsubComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.google.pubsub.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.google-pubsub)
 public class GooglePubsubComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-gora-starter/src/main/java/org/apache/camel/component/gora/springboot/GoraComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-gora-starter/src/main/java/org/apache/camel/component/gora/springboot/GoraComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-gora-starter/src/main/java/org/apache/camel/component/gora/springboot/GoraComponentAutoConfiguration.java
index 8bc3294..431f241 100644
--- a/platforms/spring-boot/components-starter/camel-gora-starter/src/main/java/org/apache/camel/component/gora/springboot/GoraComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-gora-starter/src/main/java/org/apache/camel/component/gora/springboot/GoraComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.gora.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.gora.GoraComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GoraComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class GoraComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-groovy-starter/src/main/java/org/apache/camel/language/groovy/springboot/GroovyLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-groovy-starter/src/main/java/org/apache/camel/language/groovy/springboot/GroovyLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-groovy-starter/src/main/java/org/apache/camel/language/groovy/springboot/GroovyLanguageAutoConfiguration.java
index 31ae769..f1d4da7 100644
--- a/platforms/spring-boot/components-starter/camel-groovy-starter/src/main/java/org/apache/camel/language/groovy/springboot/GroovyLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-groovy-starter/src/main/java/org/apache/camel/language/groovy/springboot/GroovyLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.groovy.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.groovy.GroovyLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GroovyLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class GroovyLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-groovy-starter/src/main/java/org/apache/camel/language/groovy/springboot/GroovyLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-groovy-starter/src/main/java/org/apache/camel/language/groovy/springboot/GroovyLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-groovy-starter/src/main/java/org/apache/camel/language/groovy/springboot/GroovyLanguageConfiguration.java
index 8b34501..a10a018 100644
--- a/platforms/spring-boot/components-starter/camel-groovy-starter/src/main/java/org/apache/camel/language/groovy/springboot/GroovyLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-groovy-starter/src/main/java/org/apache/camel/language/groovy/springboot/GroovyLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.groovy.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.groovy)
 public class GroovyLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-grpc-starter/src/main/java/org/apache/camel/component/grpc/springboot/GrpcComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-grpc-starter/src/main/java/org/apache/camel/component/grpc/springboot/GrpcComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-grpc-starter/src/main/java/org/apache/camel/component/grpc/springboot/GrpcComponentAutoConfiguration.java
index f511eb0..2b584d5 100644
--- a/platforms/spring-boot/components-starter/camel-grpc-starter/src/main/java/org/apache/camel/component/grpc/springboot/GrpcComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-grpc-starter/src/main/java/org/apache/camel/component/grpc/springboot/GrpcComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.grpc.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.grpc.GrpcComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GrpcComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class GrpcComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatAutoConfiguration.java
index 97122f2..09db4a2 100644
--- a/platforms/spring-boot/components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.gson.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GsonDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class GsonDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatConfiguration.java
index cf25b31..4897562 100644
--- a/platforms/spring-boot/components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-gson-starter/src/main/java/org/apache/camel/component/gson/springboot/GsonDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.gson.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.gson.GsonDataFormat;
 import org.apache.camel.model.dataformat.JsonLibrary;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.json-gson)
 public class GsonDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-guava-eventbus-starter/src/main/java/org/apache/camel/component/guava/eventbus/springboot/GuavaEventBusComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-guava-eventbus-starter/src/main/java/org/apache/camel/component/guava/eventbus/springboot/GuavaEventBusComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-guava-eventbus-starter/src/main/java/org/apache/camel/component/guava/eventbus/springboot/GuavaEventBusComponentAutoConfiguration.java
index 23aa142..cf23c1e 100644
--- a/platforms/spring-boot/components-starter/camel-guava-eventbus-starter/src/main/java/org/apache/camel/component/guava/eventbus/springboot/GuavaEventBusComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-guava-eventbus-starter/src/main/java/org/apache/camel/component/guava/eventbus/springboot/GuavaEventBusComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.guava.eventbus.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.guava.eventbus.GuavaEventBusComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GuavaEventBusComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class GuavaEventBusComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-guava-eventbus-starter/src/main/java/org/apache/camel/component/guava/eventbus/springboot/GuavaEventBusComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-guava-eventbus-starter/src/main/java/org/apache/camel/component/guava/eventbus/springboot/GuavaEventBusComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-guava-eventbus-starter/src/main/java/org/apache/camel/component/guava/eventbus/springboot/GuavaEventBusComponentConfiguration.java
index 6dbcc5c..1b13339 100644
--- a/platforms/spring-boot/components-starter/camel-guava-eventbus-starter/src/main/java/org/apache/camel/component/guava/eventbus/springboot/GuavaEventBusComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-guava-eventbus-starter/src/main/java/org/apache/camel/component/guava/eventbus/springboot/GuavaEventBusComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.guava.eventbus.springboot;
 
+import javax.annotation.Generated;
 import com.google.common.eventbus.EventBus;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.guava-eventbus)
 public class GuavaEventBusComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hazelcast-starter/src/main/java/org/apache/camel/component/hazelcast/springboot/HazelcastComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hazelcast-starter/src/main/java/org/apache/camel/component/hazelcast/springboot/HazelcastComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-hazelcast-starter/src/main/java/org/apache/camel/component/hazelcast/springboot/HazelcastComponentAutoConfiguration.java
index 182007c..f779771 100644
--- a/platforms/spring-boot/components-starter/camel-hazelcast-starter/src/main/java/org/apache/camel/component/hazelcast/springboot/HazelcastComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hazelcast-starter/src/main/java/org/apache/camel/component/hazelcast/springboot/HazelcastComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.hazelcast.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.hazelcast.HazelcastComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(HazelcastComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class HazelcastComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hazelcast-starter/src/main/java/org/apache/camel/component/hazelcast/springboot/HazelcastComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hazelcast-starter/src/main/java/org/apache/camel/component/hazelcast/springboot/HazelcastComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-hazelcast-starter/src/main/java/org/apache/camel/component/hazelcast/springboot/HazelcastComponentConfiguration.java
index a6a8fec..abda166 100644
--- a/platforms/spring-boot/components-starter/camel-hazelcast-starter/src/main/java/org/apache/camel/component/hazelcast/springboot/HazelcastComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hazelcast-starter/src/main/java/org/apache/camel/component/hazelcast/springboot/HazelcastComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.hazelcast.springboot;
 
+import javax.annotation.Generated;
 import com.hazelcast.core.HazelcastInstance;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.hazelcast)
 public class HazelcastComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hbase-starter/src/main/java/org/apache/camel/component/hbase/springboot/HBaseComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hbase-starter/src/main/java/org/apache/camel/component/hbase/springboot/HBaseComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-hbase-starter/src/main/java/org/apache/camel/component/hbase/springboot/HBaseComponentAutoConfiguration.java
index 6118483..3ce6fae 100644
--- a/platforms/spring-boot/components-starter/camel-hbase-starter/src/main/java/org/apache/camel/component/hbase/springboot/HBaseComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hbase-starter/src/main/java/org/apache/camel/component/hbase/springboot/HBaseComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.hbase.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.hbase.HBaseComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(HBaseComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class HBaseComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hbase-starter/src/main/java/org/apache/camel/component/hbase/springboot/HBaseComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hbase-starter/src/main/java/org/apache/camel/component/hbase/springboot/HBaseComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-hbase-starter/src/main/java/org/apache/camel/component/hbase/springboot/HBaseComponentConfiguration.java
index 74eff3f..a9540d4 100644
--- a/platforms/spring-boot/components-starter/camel-hbase-starter/src/main/java/org/apache/camel/component/hbase/springboot/HBaseComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hbase-starter/src/main/java/org/apache/camel/component/hbase/springboot/HBaseComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.hbase.springboot;
 
+import javax.annotation.Generated;
 import org.apache.hadoop.conf.Configuration;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.hbase)
 public class HBaseComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hdfs-starter/src/main/java/org/apache/camel/component/hdfs/springboot/HdfsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hdfs-starter/src/main/java/org/apache/camel/component/hdfs/springboot/HdfsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-hdfs-starter/src/main/java/org/apache/camel/component/hdfs/springboot/HdfsComponentAutoConfiguration.java
index d128b0f..2da832e 100644
--- a/platforms/spring-boot/components-starter/camel-hdfs-starter/src/main/java/org/apache/camel/component/hdfs/springboot/HdfsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hdfs-starter/src/main/java/org/apache/camel/component/hdfs/springboot/HdfsComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.hdfs.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.hdfs.HdfsComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(HdfsComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class HdfsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hdfs-starter/src/main/java/org/apache/camel/component/hdfs/springboot/HdfsComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hdfs-starter/src/main/java/org/apache/camel/component/hdfs/springboot/HdfsComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-hdfs-starter/src/main/java/org/apache/camel/component/hdfs/springboot/HdfsComponentConfiguration.java
index 324f869..83f62eb 100644
--- a/platforms/spring-boot/components-starter/camel-hdfs-starter/src/main/java/org/apache/camel/component/hdfs/springboot/HdfsComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hdfs-starter/src/main/java/org/apache/camel/component/hdfs/springboot/HdfsComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.hdfs.springboot;
 
+import javax.annotation.Generated;
 import javax.security.auth.login.Configuration;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.hdfs)
 public class HdfsComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentAutoConfiguration.java
index 88b86d2..5e7cc06 100644
--- a/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentAutoConfiguration.java
@@ -41,7 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
-@Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:03:41.690Z)
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(HdfsComponentAutoConfiguration.Condition.class)
@@ -85,7 +85,7 @@ public class HdfsComponentAutoConfiguration {
         return component;
     }
 
-    @Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:03:41.738Z)
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentConfiguration.java
index 29d8a56..4c45bf1 100644
--- a/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-hdfs2-starter/src/main/java/org/apache/camel/component/hdfs2/springboot/HdfsComponentConfiguration.java
@@ -25,7 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
-@Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:03:41.545Z)
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.hdfs2)
 public class HdfsComponentConfiguration {
 


"
"195","368","2017-04-19 08:35:54+00:00","zregvart@apache.org","['commits@camel.apache.org']","[09/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...","Return-Path: <commits-return-55742-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id AACD01870D
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:35:49 +0000 (UTC)
Received: (qmail 40436 invoked by uid 500); 19 Apr 2017 08:35:49 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 40344 invoked by uid 500); 19 Apr 2017 08:35:48 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 39626 invoked by uid 99); 19 Apr 2017 08:35:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:35:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id A79CEE0885; Wed, 19 Apr 2017 08:35:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 08:35:54 -0000
Message-Id: <ba063c0840a44aa5902d9ed7d584880a@git.apache.org>
In-Reply-To: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
References: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [09/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/SimpleLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/SimpleLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/SimpleLanguageAutoConfiguration.java
index e793c92..dadfb85 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/SimpleLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/SimpleLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.simple.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.simple.SimpleLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SimpleLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class SimpleLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/SimpleLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/SimpleLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/SimpleLanguageConfiguration.java
index 4c1e2e9..f987583 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/SimpleLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/SimpleLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.simple.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.simple)
 public class SimpleLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/TokenizeLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/TokenizeLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/TokenizeLanguageAutoConfiguration.java
index 1dbb098..41c56f6 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/TokenizeLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/TokenizeLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.tokenizer.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.tokenizer.TokenizeLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(TokenizeLanguageAutoConfiguration.Condition.class)
@@ -71,6 +73,7 @@ public class TokenizeLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/TokenizeLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/TokenizeLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/TokenizeLanguageConfiguration.java
index 9a30c9b..e74795d 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/TokenizeLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/TokenizeLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.tokenizer.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.tokenize)
 public class TokenizeLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/XMLTokenizeLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/XMLTokenizeLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/XMLTokenizeLanguageAutoConfiguration.java
index d346612..52ca01e 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/XMLTokenizeLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/XMLTokenizeLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.tokenizer.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.tokenizer.XMLTokenizeLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(XMLTokenizeLanguageAutoConfiguration.Condition.class)
@@ -71,6 +73,7 @@ public class XMLTokenizeLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/XMLTokenizeLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/XMLTokenizeLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/XMLTokenizeLanguageConfiguration.java
index 10f37c7..0c00c48 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/XMLTokenizeLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/tokenizer/springboot/XMLTokenizeLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.tokenizer.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.xtokenize)
 public class XMLTokenizeLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/xpath/springboot/XPathLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/xpath/springboot/XPathLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/xpath/springboot/XPathLanguageAutoConfiguration.java
index dc8526d..30b2c06 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/xpath/springboot/XPathLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/xpath/springboot/XPathLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.xpath.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.xpath.XPathLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(XPathLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class XPathLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/xpath/springboot/XPathLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/xpath/springboot/XPathLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/xpath/springboot/XPathLanguageConfiguration.java
index efa0046..ae8e690 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/xpath/springboot/XPathLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/xpath/springboot/XPathLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.xpath.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.xpath)
 public class XPathLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/ConsulServiceCallServiceDiscoveryConfigurationCommon.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/ConsulServiceCallServiceDiscoveryConfigurationCommon.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/ConsulServiceCallServiceDiscoveryConfigurationCommon.java
index cc8ae52..f0212f7 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/ConsulServiceCallServiceDiscoveryConfigurationCommon.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/ConsulServiceCallServiceDiscoveryConfigurationCommon.java
@@ -17,10 +17,12 @@
 package org.apache.camel.model.cloud.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 public class ConsulServiceCallServiceDiscoveryConfigurationCommon {
 
     /**

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/ConsulServiceCallServiceDiscoveryConfigurationProperties.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/ConsulServiceCallServiceDiscoveryConfigurationProperties.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/ConsulServiceCallServiceDiscoveryConfigurationProperties.java
index 57d2588..3df09fb 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/ConsulServiceCallServiceDiscoveryConfigurationProperties.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/ConsulServiceCallServiceDiscoveryConfigurationProperties.java
@@ -18,8 +18,10 @@ package org.apache.camel.model.cloud.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.cloud.consul.service-discovery)
 public class ConsulServiceCallServiceDiscoveryConfigurationProperties
         extends

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/DnsServiceCallServiceDiscoveryConfigurationCommon.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/DnsServiceCallServiceDiscoveryConfigurationCommon.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/DnsServiceCallServiceDiscoveryConfigurationCommon.java
index 42fe393..8a9bc7a 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/DnsServiceCallServiceDiscoveryConfigurationCommon.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/DnsServiceCallServiceDiscoveryConfigurationCommon.java
@@ -17,10 +17,12 @@
 package org.apache.camel.model.cloud.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 public class DnsServiceCallServiceDiscoveryConfigurationCommon {
 
     /**

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/DnsServiceCallServiceDiscoveryConfigurationProperties.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/DnsServiceCallServiceDiscoveryConfigurationProperties.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/DnsServiceCallServiceDiscoveryConfigurationProperties.java
index 76f9c7a..1d83f91 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/DnsServiceCallServiceDiscoveryConfigurationProperties.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/DnsServiceCallServiceDiscoveryConfigurationProperties.java
@@ -18,8 +18,10 @@ package org.apache.camel.model.cloud.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.cloud.dns.service-discovery)
 public class DnsServiceCallServiceDiscoveryConfigurationProperties
         extends

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/EtcdServiceCallServiceDiscoveryConfigurationCommon.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/EtcdServiceCallServiceDiscoveryConfigurationCommon.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/EtcdServiceCallServiceDiscoveryConfigurationCommon.java
index 0109284..4f7f946 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/EtcdServiceCallServiceDiscoveryConfigurationCommon.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/EtcdServiceCallServiceDiscoveryConfigurationCommon.java
@@ -17,10 +17,12 @@
 package org.apache.camel.model.cloud.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 public class EtcdServiceCallServiceDiscoveryConfigurationCommon {
 
     /**

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/EtcdServiceCallServiceDiscoveryConfigurationProperties.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/EtcdServiceCallServiceDiscoveryConfigurationProperties.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/EtcdServiceCallServiceDiscoveryConfigurationProperties.java
index 9d6353d..357863d 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/EtcdServiceCallServiceDiscoveryConfigurationProperties.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/EtcdServiceCallServiceDiscoveryConfigurationProperties.java
@@ -18,8 +18,10 @@ package org.apache.camel.model.cloud.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.cloud.etcd.service-discovery)
 public class EtcdServiceCallServiceDiscoveryConfigurationProperties
         extends

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/KubernetesServiceCallServiceDiscoveryConfigurationCommon.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/KubernetesServiceCallServiceDiscoveryConfigurationCommon.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/KubernetesServiceCallServiceDiscoveryConfigurationCommon.java
index 5ffac09..cdfd5a9 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/KubernetesServiceCallServiceDiscoveryConfigurationCommon.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/KubernetesServiceCallServiceDiscoveryConfigurationCommon.java
@@ -17,10 +17,12 @@
 package org.apache.camel.model.cloud.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 public class KubernetesServiceCallServiceDiscoveryConfigurationCommon {
 
     /**

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/KubernetesServiceCallServiceDiscoveryConfigurationProperties.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/KubernetesServiceCallServiceDiscoveryConfigurationProperties.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/KubernetesServiceCallServiceDiscoveryConfigurationProperties.java
index 4807d33..76db8f9 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/KubernetesServiceCallServiceDiscoveryConfigurationProperties.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/KubernetesServiceCallServiceDiscoveryConfigurationProperties.java
@@ -18,8 +18,10 @@ package org.apache.camel.model.cloud.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.cloud.kubernetes.service-discovery)
 public class KubernetesServiceCallServiceDiscoveryConfigurationProperties
         extends

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationCommon.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationCommon.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationCommon.java
index d45c3cc..d25dc3d 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationCommon.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationCommon.java
@@ -17,10 +17,12 @@
 package org.apache.camel.model.cloud.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 public class RibbonServiceCallLoadBalancerConfigurationCommon {
 
     /**

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationProperties.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationProperties.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationProperties.java
index a826984..d0f230a 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationProperties.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/cloud/springboot/RibbonServiceCallLoadBalancerConfigurationProperties.java
@@ -18,8 +18,10 @@ package org.apache.camel.model.cloud.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.cloud.ribbon.load-balancer)
 public class RibbonServiceCallLoadBalancerConfigurationProperties
         extends

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/rest/springboot/RestConfigurationDefinitionAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/rest/springboot/RestConfigurationDefinitionAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/rest/springboot/RestConfigurationDefinitionAutoConfiguration.java
index 3ea9cbe..067858c 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/rest/springboot/RestConfigurationDefinitionAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/rest/springboot/RestConfigurationDefinitionAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.model.rest.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.model.rest.RestConstants;
 import org.apache.camel.spi.RestConfiguration;
@@ -36,6 +37,7 @@ import org.springframework.context.annotation.Lazy;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @ConditionalOnProperty(name  camel.rest.enabled, matchIfMissing  true)

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/rest/springboot/RestConfigurationDefinitionProperties.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/rest/springboot/RestConfigurationDefinitionProperties.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/rest/springboot/RestConfigurationDefinitionProperties.java
index ec134c2..174134e 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/rest/springboot/RestConfigurationDefinitionProperties.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/rest/springboot/RestConfigurationDefinitionProperties.java
@@ -17,6 +17,7 @@
 package org.apache.camel.model.rest.springboot;
 
 import java.util.List;
+import javax.annotation.Generated;
 import org.apache.camel.model.rest.RestBindingMode;
 import org.apache.camel.model.rest.RestHostNameResolver;
 import org.apache.camel.model.rest.RestPropertyDefinition;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.rest)
 public class RestConfigurationDefinitionProperties {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/springboot/HystrixConfigurationDefinitionCommon.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/springboot/HystrixConfigurationDefinitionCommon.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/springboot/HystrixConfigurationDefinitionCommon.java
index 7947788..acf095b 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/springboot/HystrixConfigurationDefinitionCommon.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/springboot/HystrixConfigurationDefinitionCommon.java
@@ -15,11 +15,15 @@
  * limitations under the License.
  */
 package org.apache.camel.model.springboot;
+
+import javax.annotation.Generated;
+
 /**
  * Hystrix Circuit Breaker EIP configuration
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 public class HystrixConfigurationDefinitionCommon {
 
     /**

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/springboot/HystrixConfigurationDefinitionProperties.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/springboot/HystrixConfigurationDefinitionProperties.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/springboot/HystrixConfigurationDefinitionProperties.java
index 5cf7c99..706b8a7 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/springboot/HystrixConfigurationDefinitionProperties.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/model/springboot/HystrixConfigurationDefinitionProperties.java
@@ -18,8 +18,10 @@ package org.apache.camel.model.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.hystrix)
 public class HystrixConfigurationDefinitionProperties
         extends

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-couchbase-starter/src/main/java/org/apache/camel/component/couchbase/springboot/CouchbaseComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-couchbase-starter/src/main/java/org/apache/camel/component/couchbase/springboot/CouchbaseComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-couchbase-starter/src/main/java/org/apache/camel/component/couchbase/springboot/CouchbaseComponentAutoConfiguration.java
index e9bdd3b..2c5f4c8 100644
--- a/platforms/spring-boot/components-starter/camel-couchbase-starter/src/main/java/org/apache/camel/component/couchbase/springboot/CouchbaseComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-couchbase-starter/src/main/java/org/apache/camel/component/couchbase/springboot/CouchbaseComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.couchbase.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.couchbase.CouchbaseComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CouchbaseComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class CouchbaseComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-couchdb-starter/src/main/java/org/apache/camel/component/couchdb/springboot/CouchDbComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-couchdb-starter/src/main/java/org/apache/camel/component/couchdb/springboot/CouchDbComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-couchdb-starter/src/main/java/org/apache/camel/component/couchdb/springboot/CouchDbComponentAutoConfiguration.java
index e5ebbc6..dbd2332 100644
--- a/platforms/spring-boot/components-starter/camel-couchdb-starter/src/main/java/org/apache/camel/component/couchdb/springboot/CouchDbComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-couchdb-starter/src/main/java/org/apache/camel/component/couchdb/springboot/CouchDbComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.couchdb.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.couchdb.CouchDbComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CouchDbComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class CouchDbComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/component/crypto/springboot/DigitalSignatureComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/component/crypto/springboot/DigitalSignatureComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/component/crypto/springboot/DigitalSignatureComponentAutoConfiguration.java
index 59a7117..403dbeb 100644
--- a/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/component/crypto/springboot/DigitalSignatureComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/component/crypto/springboot/DigitalSignatureComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.crypto.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.crypto.DigitalSignatureComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DigitalSignatureComponentAutoConfiguration.Condition.class)
@@ -85,6 +87,7 @@ public class DigitalSignatureComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/component/crypto/springboot/DigitalSignatureComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/component/crypto/springboot/DigitalSignatureComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/component/crypto/springboot/DigitalSignatureComponentConfiguration.java
index 34a0e4c..8c314a6 100644
--- a/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/component/crypto/springboot/DigitalSignatureComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/component/crypto/springboot/DigitalSignatureComponentConfiguration.java
@@ -21,6 +21,7 @@ import java.security.PrivateKey;
 import java.security.PublicKey;
 import java.security.SecureRandom;
 import java.security.cert.Certificate;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.crypto.CryptoOperation;
 import org.apache.camel.util.jsse.KeyStoreParameters;
@@ -33,6 +34,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.crypto)
 public class DigitalSignatureComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/CryptoDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/CryptoDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/CryptoDataFormatAutoConfiguration.java
index 4b13322..62d9a5f 100644
--- a/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/CryptoDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/CryptoDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.converter.crypto.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CryptoDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class CryptoDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/CryptoDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/CryptoDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/CryptoDataFormatConfiguration.java
index 867db4b..855c3dd 100644
--- a/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/CryptoDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/CryptoDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.converter.crypto.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.crypto)
 public class CryptoDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/PGPDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/PGPDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/PGPDataFormatAutoConfiguration.java
index 8dd787a..7b0d209 100644
--- a/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/PGPDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/PGPDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.converter.crypto.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(PGPDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class PGPDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/PGPDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/PGPDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/PGPDataFormatConfiguration.java
index 4e39f7f..5f55ec7 100644
--- a/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/PGPDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-crypto-starter/src/main/java/org/apache/camel/converter/crypto/springboot/PGPDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.converter.crypto.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.pgp)
 public class PGPDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-csv-starter/src/main/java/org/apache/camel/dataformat/csv/springboot/CsvDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-csv-starter/src/main/java/org/apache/camel/dataformat/csv/springboot/CsvDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-csv-starter/src/main/java/org/apache/camel/dataformat/csv/springboot/CsvDataFormatAutoConfiguration.java
index 0eccf24..6845752 100644
--- a/platforms/spring-boot/components-starter/camel-csv-starter/src/main/java/org/apache/camel/dataformat/csv/springboot/CsvDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-csv-starter/src/main/java/org/apache/camel/dataformat/csv/springboot/CsvDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.csv.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CsvDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class CsvDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-csv-starter/src/main/java/org/apache/camel/dataformat/csv/springboot/CsvDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-csv-starter/src/main/java/org/apache/camel/dataformat/csv/springboot/CsvDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-csv-starter/src/main/java/org/apache/camel/dataformat/csv/springboot/CsvDataFormatConfiguration.java
index bf5f8c4..0d08c6f 100644
--- a/platforms/spring-boot/components-starter/camel-csv-starter/src/main/java/org/apache/camel/dataformat/csv/springboot/CsvDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-csv-starter/src/main/java/org/apache/camel/dataformat/csv/springboot/CsvDataFormatConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.dataformat.csv.springboot;
 
 import java.util.List;
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.csv)
 public class CsvDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/jaxrs/springboot/CxfRsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/jaxrs/springboot/CxfRsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/jaxrs/springboot/CxfRsComponentAutoConfiguration.java
index 370db9a..395254b 100644
--- a/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/jaxrs/springboot/CxfRsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/jaxrs/springboot/CxfRsComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.cxf.jaxrs.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.cxf.jaxrs.CxfRsComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CxfRsComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class CxfRsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/jaxrs/springboot/CxfRsComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/jaxrs/springboot/CxfRsComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/jaxrs/springboot/CxfRsComponentConfiguration.java
index 3667f87..8f2d390 100644
--- a/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/jaxrs/springboot/CxfRsComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/jaxrs/springboot/CxfRsComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.cxf.jaxrs.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.spi.HeaderFilterStrategy;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.cxfrs)
 public class CxfRsComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/springboot/CxfComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/springboot/CxfComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/springboot/CxfComponentAutoConfiguration.java
index 1a569d1..f0d939a 100644
--- a/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/springboot/CxfComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/springboot/CxfComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.cxf.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.cxf.CxfComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CxfComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class CxfComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/springboot/CxfComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/springboot/CxfComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/springboot/CxfComponentConfiguration.java
index 740acf0..7d7d474 100644
--- a/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/springboot/CxfComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-cxf-starter/src/main/java/org/apache/camel/component/cxf/springboot/CxfComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.cxf.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.spi.HeaderFilterStrategy;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.cxf)
 public class CxfComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-digitalocean-starter/src/main/java/org/apache/camel/component/digitalocean/springboot/DigitalOceanComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-digitalocean-starter/src/main/java/org/apache/camel/component/digitalocean/springboot/DigitalOceanComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-digitalocean-starter/src/main/java/org/apache/camel/component/digitalocean/springboot/DigitalOceanComponentAutoConfiguration.java
index c095a33..d9995b3 100644
--- a/platforms/spring-boot/components-starter/camel-digitalocean-starter/src/main/java/org/apache/camel/component/digitalocean/springboot/DigitalOceanComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-digitalocean-starter/src/main/java/org/apache/camel/component/digitalocean/springboot/DigitalOceanComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.digitalocean.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.digitalocean.DigitalOceanComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DigitalOceanComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class DigitalOceanComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/springboot/DisruptorComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/springboot/DisruptorComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/springboot/DisruptorComponentAutoConfiguration.java
index 2ede6c8..9e25274 100644
--- a/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/springboot/DisruptorComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/springboot/DisruptorComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.disruptor.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.disruptor.DisruptorComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DisruptorComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class DisruptorComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/springboot/DisruptorComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/springboot/DisruptorComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/springboot/DisruptorComponentConfiguration.java
index cea8f0c..4456cf0 100644
--- a/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/springboot/DisruptorComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/springboot/DisruptorComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.disruptor.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.disruptor.DisruptorComponent;
 import org.apache.camel.component.disruptor.DisruptorProducerType;
 import org.apache.camel.component.disruptor.DisruptorWaitStrategy;
@@ -28,6 +29,7 @@ import org.springframework.boot.context.properties.DeprecatedConfigurationProper
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.disruptor)
 public class DisruptorComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/vm/springboot/DisruptorVmComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/vm/springboot/DisruptorVmComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/vm/springboot/DisruptorVmComponentAutoConfiguration.java
index 6b9fc29..bd68968 100644
--- a/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/vm/springboot/DisruptorVmComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/vm/springboot/DisruptorVmComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.disruptor.vm.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.disruptor.vm.DisruptorVmComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DisruptorVmComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class DisruptorVmComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/vm/springboot/DisruptorVmComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/vm/springboot/DisruptorVmComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/vm/springboot/DisruptorVmComponentConfiguration.java
index 3c025af..ca9bac0 100644
--- a/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/vm/springboot/DisruptorVmComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-disruptor-starter/src/main/java/org/apache/camel/component/disruptor/vm/springboot/DisruptorVmComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.disruptor.vm.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.disruptor.DisruptorProducerType;
 import org.apache.camel.component.disruptor.DisruptorWaitStrategy;
 import org.apache.camel.component.disruptor.vm.DisruptorVmComponent;
@@ -28,6 +29,7 @@ import org.springframework.boot.context.properties.DeprecatedConfigurationProper
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.disruptor-vm)
 public class DisruptorVmComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-dns-starter/src/main/java/org/apache/camel/component/dns/springboot/DnsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-dns-starter/src/main/java/org/apache/camel/component/dns/springboot/DnsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-dns-starter/src/main/java/org/apache/camel/component/dns/springboot/DnsComponentAutoConfiguration.java
index 5925f5e..c5006a3 100644
--- a/platforms/spring-boot/components-starter/camel-dns-starter/src/main/java/org/apache/camel/component/dns/springboot/DnsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-dns-starter/src/main/java/org/apache/camel/component/dns/springboot/DnsComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.dns.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.dns.DnsComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DnsComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class DnsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-docker-starter/src/main/java/org/apache/camel/component/docker/springboot/DockerComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-docker-starter/src/main/java/org/apache/camel/component/docker/springboot/DockerComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-docker-starter/src/main/java/org/apache/camel/component/docker/springboot/DockerComponentAutoConfiguration.java
index 4412ce2..29c7f7a 100644
--- a/platforms/spring-boot/components-starter/camel-docker-starter/src/main/java/org/apache/camel/component/docker/springboot/DockerComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-docker-starter/src/main/java/org/apache/camel/component/docker/springboot/DockerComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.docker.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.docker.DockerComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DockerComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class DockerComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-docker-starter/src/main/java/org/apache/camel/component/docker/springboot/DockerComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-docker-starter/src/main/java/org/apache/camel/component/docker/springboot/DockerComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-docker-starter/src/main/java/org/apache/camel/component/docker/springboot/DockerComponentConfiguration.java
index b788091..5c55879 100644
--- a/platforms/spring-boot/components-starter/camel-docker-starter/src/main/java/org/apache/camel/component/docker/springboot/DockerComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-docker-starter/src/main/java/org/apache/camel/component/docker/springboot/DockerComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.docker.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.component.docker.DockerOperation;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.docker)
 public class DockerComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-dozer-starter/src/main/java/org/apache/camel/component/dozer/springboot/DozerComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-dozer-starter/src/main/java/org/apache/camel/component/dozer/springboot/DozerComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-dozer-starter/src/main/java/org/apache/camel/component/dozer/springboot/DozerComponentAutoConfiguration.java
index df0348d..21d94c0 100644
--- a/platforms/spring-boot/components-starter/camel-dozer-starter/src/main/java/org/apache/camel/component/dozer/springboot/DozerComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-dozer-starter/src/main/java/org/apache/camel/component/dozer/springboot/DozerComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.dozer.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.dozer.DozerComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DozerComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class DozerComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-drill-starter/src/main/java/org/apache/camel/component/drill/springboot/DrillComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-drill-starter/src/main/java/org/apache/camel/component/drill/springboot/DrillComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-drill-starter/src/main/java/org/apache/camel/component/drill/springboot/DrillComponentAutoConfiguration.java
index fdfdc09..e0c8b63 100644
--- a/platforms/spring-boot/components-starter/camel-drill-starter/src/main/java/org/apache/camel/component/drill/springboot/DrillComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-drill-starter/src/main/java/org/apache/camel/component/drill/springboot/DrillComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.drill.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.drill.DrillComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DrillComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class DrillComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-dropbox-starter/src/main/java/org/apache/camel/component/dropbox/springboot/DropboxComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-dropbox-starter/src/main/java/org/apache/camel/component/dropbox/springboot/DropboxComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-dropbox-starter/src/main/java/org/apache/camel/component/dropbox/springboot/DropboxComponentAutoConfiguration.java
index 53b7c8a..9d498f0 100644
--- a/platforms/spring-boot/components-starter/camel-dropbox-starter/src/main/java/org/apache/camel/component/dropbox/springboot/DropboxComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-dropbox-starter/src/main/java/org/apache/camel/component/dropbox/springboot/DropboxComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.dropbox.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.dropbox.DropboxComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DropboxComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class DropboxComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ehcache-starter/src/main/java/org/apache/camel/component/ehcache/springboot/EhcacheComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ehcache-starter/src/main/java/org/apache/camel/component/ehcache/springboot/EhcacheComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-ehcache-starter/src/main/java/org/apache/camel/component/ehcache/springboot/EhcacheComponentAutoConfiguration.java
index 00e8355..ece5cf2 100644
--- a/platforms/spring-boot/components-starter/camel-ehcache-starter/src/main/java/org/apache/camel/component/ehcache/springboot/EhcacheComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ehcache-starter/src/main/java/org/apache/camel/component/ehcache/springboot/EhcacheComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.ehcache.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.ehcache.EhcacheComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(EhcacheComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class EhcacheComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-elasticsearch-starter/src/main/java/org/apache/camel/component/elasticsearch/springboot/ElasticsearchComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-elasticsearch-starter/src/main/java/org/apache/camel/component/elasticsearch/springboot/ElasticsearchComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-elasticsearch-starter/src/main/java/org/apache/camel/component/elasticsearch/springboot/ElasticsearchComponentAutoConfiguration.java
index 3d1cade..d8cf1b7 100644
--- a/platforms/spring-boot/components-starter/camel-elasticsearch-starter/src/main/java/org/apache/camel/component/elasticsearch/springboot/ElasticsearchComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-elasticsearch-starter/src/main/java/org/apache/camel/component/elasticsearch/springboot/ElasticsearchComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.elasticsearch.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.elasticsearch.ElasticsearchComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ElasticsearchComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class ElasticsearchComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-elasticsearch-starter/src/main/java/org/apache/camel/component/elasticsearch/springboot/ElasticsearchComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-elasticsearch-starter/src/main/java/org/apache/camel/component/elasticsearch/springboot/ElasticsearchComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-elasticsearch-starter/src/main/java/org/apache/camel/component/elasticsearch/springboot/ElasticsearchComponentConfiguration.java
index 50fb329..830b97e 100644
--- a/platforms/spring-boot/components-starter/camel-elasticsearch-starter/src/main/java/org/apache/camel/component/elasticsearch/springboot/ElasticsearchComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-elasticsearch-starter/src/main/java/org/apache/camel/component/elasticsearch/springboot/ElasticsearchComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.elasticsearch.springboot;
 
+import javax.annotation.Generated;
 import org.elasticsearch.client.Client;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.elasticsearch)
 public class ElasticsearchComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-elasticsearch5-starter/src/main/java/org/apache/camel/component/elasticsearch5/springboot/ElasticsearchComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-elasticsearch5-starter/src/main/java/org/apache/camel/component/elasticsearch5/springboot/ElasticsearchComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-elasticsearch5-starter/src/main/java/org/apache/camel/component/elasticsearch5/springboot/ElasticsearchComponentAutoConfiguration.java
index 3e9a70b..34cfc66 100644
--- a/platforms/spring-boot/components-starter/camel-elasticsearch5-starter/src/main/java/org/apache/camel/component/elasticsearch5/springboot/ElasticsearchComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-elasticsearch5-starter/src/main/java/org/apache/camel/component/elasticsearch5/springboot/ElasticsearchComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.elasticsearch5.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.elasticsearch5.ElasticsearchComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ElasticsearchComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class ElasticsearchComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(


"
"196","372","2017-04-19 08:35:55+00:00","zregvart@apache.org","['commits@camel.apache.org']","[10/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...","Return-Path: <commits-return-55743-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 88A1E18711
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:35:50 +0000 (UTC)
Received: (qmail 40639 invoked by uid 500); 19 Apr 2017 08:35:50 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 40361 invoked by uid 500); 19 Apr 2017 08:35:49 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 39633 invoked by uid 99); 19 Apr 2017 08:35:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:35:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id ACFA3E17C7; Wed, 19 Apr 2017 08:35:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 08:35:55 -0000
Message-Id: <c306b1f3c4214122ace43dc8d3f23170@git.apache.org>
In-Reply-To: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
References: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [10/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/dataset/springboot/DataSetComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/dataset/springboot/DataSetComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/dataset/springboot/DataSetComponentAutoConfiguration.java
index e3d205c..98405d6 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/dataset/springboot/DataSetComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/dataset/springboot/DataSetComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.dataset.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.dataset.DataSetComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DataSetComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class DataSetComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/direct/springboot/DirectComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/direct/springboot/DirectComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/direct/springboot/DirectComponentAutoConfiguration.java
index 07aa4d9..fd59a16 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/direct/springboot/DirectComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/direct/springboot/DirectComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.direct.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.direct.DirectComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DirectComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class DirectComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/direct/springboot/DirectComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/direct/springboot/DirectComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/direct/springboot/DirectComponentConfiguration.java
index 5110239..4ba792c 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/direct/springboot/DirectComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/direct/springboot/DirectComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.direct.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.direct)
 public class DirectComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/directvm/springboot/DirectVmComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/directvm/springboot/DirectVmComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/directvm/springboot/DirectVmComponentAutoConfiguration.java
index 33a1e2a..bb636d1 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/directvm/springboot/DirectVmComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/directvm/springboot/DirectVmComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.directvm.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.directvm.DirectVmComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DirectVmComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class DirectVmComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/directvm/springboot/DirectVmComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/directvm/springboot/DirectVmComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/directvm/springboot/DirectVmComponentConfiguration.java
index 2f4383b..ae30a25 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/directvm/springboot/DirectVmComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/directvm/springboot/DirectVmComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.directvm.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.spi.HeaderFilterStrategy;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.direct-vm)
 public class DirectVmComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/file/springboot/FileComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/file/springboot/FileComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/file/springboot/FileComponentAutoConfiguration.java
index 8b82256..4558d3b 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/file/springboot/FileComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/file/springboot/FileComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.file.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.file.FileComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(FileComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class FileComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/language/springboot/LanguageComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/language/springboot/LanguageComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/language/springboot/LanguageComponentAutoConfiguration.java
index a67110a..6980be2 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/language/springboot/LanguageComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/language/springboot/LanguageComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.language.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.language.LanguageComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(LanguageComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class LanguageComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/log/springboot/LogComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/log/springboot/LogComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/log/springboot/LogComponentAutoConfiguration.java
index 5a95fce..cb885fa 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/log/springboot/LogComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/log/springboot/LogComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.log.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.log.LogComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(LogComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class LogComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/log/springboot/LogComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/log/springboot/LogComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/log/springboot/LogComponentConfiguration.java
index 22b2301..5318bc7 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/log/springboot/LogComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/log/springboot/LogComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.log.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.spi.ExchangeFormatter;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.log)
 public class LogComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/mock/springboot/MockComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/mock/springboot/MockComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/mock/springboot/MockComponentAutoConfiguration.java
index 73167f4..dc9389f 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/mock/springboot/MockComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/mock/springboot/MockComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.mock.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.mock.MockComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(MockComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class MockComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentAutoConfiguration.java
index a6ee450..b1d0e85 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.properties.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.properties.PropertiesComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(PropertiesComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class PropertiesComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentConfiguration.java
index fcb8096..b62dc67 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/properties/springboot/PropertiesComponentConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.properties.springboot;
 
 import java.util.List;
 import java.util.Properties;
+import javax.annotation.Generated;
 import org.apache.camel.component.properties.PropertiesLocation;
 import org.apache.camel.component.properties.PropertiesParser;
 import org.apache.camel.component.properties.PropertiesResolver;
@@ -30,6 +31,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.properties)
 public class PropertiesComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/ref/springboot/RefComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/ref/springboot/RefComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/ref/springboot/RefComponentAutoConfiguration.java
index c30907a..270d960 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/ref/springboot/RefComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/ref/springboot/RefComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.ref.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.ref.RefComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RefComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class RefComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestApiComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestApiComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestApiComponentAutoConfiguration.java
index 2567fb7..c113cce 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestApiComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestApiComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.rest.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.rest.RestApiComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RestApiComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class RestApiComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestComponentAutoConfiguration.java
index 7fb213b..e99b813 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.rest.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.rest.RestComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RestComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class RestComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestComponentConfiguration.java
index 03c6870..ce06f5e 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/rest/springboot/RestComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.rest.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.rest)
 public class RestComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/scheduler/springboot/SchedulerComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/scheduler/springboot/SchedulerComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/scheduler/springboot/SchedulerComponentAutoConfiguration.java
index 7521585..5ebf274 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/scheduler/springboot/SchedulerComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/scheduler/springboot/SchedulerComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.scheduler.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.scheduler.SchedulerComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SchedulerComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class SchedulerComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/scheduler/springboot/SchedulerComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/scheduler/springboot/SchedulerComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/scheduler/springboot/SchedulerComponentConfiguration.java
index f186f9c..60d0e61 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/scheduler/springboot/SchedulerComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/scheduler/springboot/SchedulerComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.scheduler.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.scheduler)
 public class SchedulerComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/seda/springboot/SedaComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/seda/springboot/SedaComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/seda/springboot/SedaComponentAutoConfiguration.java
index 60ce140..acd3d48 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/seda/springboot/SedaComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/seda/springboot/SedaComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.seda.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.seda.SedaComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SedaComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class SedaComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/seda/springboot/SedaComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/seda/springboot/SedaComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/seda/springboot/SedaComponentConfiguration.java
index 761d7af..456ad90 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/seda/springboot/SedaComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/seda/springboot/SedaComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.seda.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.Exchange;
 import org.apache.camel.component.seda.BlockingQueueFactory;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.seda)
 public class SedaComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/stub/springboot/StubComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/stub/springboot/StubComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/stub/springboot/StubComponentAutoConfiguration.java
index 5b75ade..fe4dcf5 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/stub/springboot/StubComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/stub/springboot/StubComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.stub.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.stub.StubComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(StubComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class StubComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/stub/springboot/StubComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/stub/springboot/StubComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/stub/springboot/StubComponentConfiguration.java
index bf9a6d0..a3a027f 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/stub/springboot/StubComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/stub/springboot/StubComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.stub.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.Exchange;
 import org.apache.camel.component.seda.BlockingQueueFactory;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.stub)
 public class StubComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/test/springboot/TestComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/test/springboot/TestComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/test/springboot/TestComponentAutoConfiguration.java
index fe4f022..12f253b 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/test/springboot/TestComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/test/springboot/TestComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.test.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.test.TestComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(TestComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class TestComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/timer/springboot/TimerComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/timer/springboot/TimerComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/timer/springboot/TimerComponentAutoConfiguration.java
index e65f565..e26ba57 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/timer/springboot/TimerComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/timer/springboot/TimerComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.timer.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.timer.TimerComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(TimerComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class TimerComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/validator/springboot/ValidatorComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/validator/springboot/ValidatorComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/validator/springboot/ValidatorComponentAutoConfiguration.java
index 0f0bf25..c97549c 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/validator/springboot/ValidatorComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/validator/springboot/ValidatorComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.validator.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.validator.ValidatorComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ValidatorComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class ValidatorComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/validator/springboot/ValidatorComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/validator/springboot/ValidatorComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/validator/springboot/ValidatorComponentConfiguration.java
index 1e607af..49ee967 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/validator/springboot/ValidatorComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/validator/springboot/ValidatorComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.validator.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.validator.ValidatorResourceResolverFactory;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.validator)
 public class ValidatorComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/vm/springboot/VmComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/vm/springboot/VmComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/vm/springboot/VmComponentAutoConfiguration.java
index 4761f78..fb19cf1 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/vm/springboot/VmComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/vm/springboot/VmComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.vm.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.vm.VmComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(VmComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class VmComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/vm/springboot/VmComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/vm/springboot/VmComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/vm/springboot/VmComponentConfiguration.java
index 3ac9f03..c1ad19d 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/vm/springboot/VmComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/vm/springboot/VmComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.vm.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.Exchange;
 import org.apache.camel.component.seda.BlockingQueueFactory;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -27,6 +28,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.vm)
 public class VmComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/xslt/springboot/XsltComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/xslt/springboot/XsltComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/xslt/springboot/XsltComponentAutoConfiguration.java
index ce4e9f7..10d3ba3 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/xslt/springboot/XsltComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/xslt/springboot/XsltComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.xslt.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.xslt.XsltComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(XsltComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class XsltComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/xslt/springboot/XsltComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/xslt/springboot/XsltComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/xslt/springboot/XsltComponentConfiguration.java
index 040e229..2fbcb14 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/xslt/springboot/XsltComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/xslt/springboot/XsltComponentConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.xslt.springboot;
 
 import java.util.List;
 import java.util.Map;
+import javax.annotation.Generated;
 import javax.xml.parsers.DocumentBuilderFactory;
 import javax.xml.transform.TransformerFactory;
 import javax.xml.transform.URIResolver;
@@ -30,6 +31,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.xslt)
 public class XsltComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/GzipDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/GzipDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/GzipDataFormatAutoConfiguration.java
index 81c052e..229aaf3 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/GzipDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/GzipDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.impl.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(GzipDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class GzipDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/GzipDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/GzipDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/GzipDataFormatConfiguration.java
index 4953a5c..3eee5db 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/GzipDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/GzipDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.impl.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.gzip)
 public class GzipDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/SerializationDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/SerializationDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/SerializationDataFormatAutoConfiguration.java
index 27f6dbb..149119f 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/SerializationDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/SerializationDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.impl.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SerializationDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class SerializationDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/SerializationDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/SerializationDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/SerializationDataFormatConfiguration.java
index 5cf28d4..4492282 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/SerializationDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/SerializationDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.impl.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.serialization)
 public class SerializationDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/StringDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/StringDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/StringDataFormatAutoConfiguration.java
index d699e97..087a643 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/StringDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/StringDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.impl.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(StringDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class StringDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/StringDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/StringDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/StringDataFormatConfiguration.java
index aeccfac..64c4ed7 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/StringDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/StringDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.impl.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.string)
 public class StringDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/ZipDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/ZipDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/ZipDataFormatAutoConfiguration.java
index 26ea5fe..653b189 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/ZipDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/ZipDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.impl.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ZipDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class ZipDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/ZipDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/ZipDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/ZipDataFormatConfiguration.java
index 401acb9..6a3a6ba 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/ZipDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/impl/springboot/ZipDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.impl.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.zip)
 public class ZipDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/bean/springboot/BeanLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/bean/springboot/BeanLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/bean/springboot/BeanLanguageAutoConfiguration.java
index 6f93fd8..810bd2d 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/bean/springboot/BeanLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/bean/springboot/BeanLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.bean.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.bean.BeanLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BeanLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class BeanLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/bean/springboot/BeanLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/bean/springboot/BeanLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/bean/springboot/BeanLanguageConfiguration.java
index b39a7ac..aa65384 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/bean/springboot/BeanLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/bean/springboot/BeanLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.bean.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.bean)
 public class BeanLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/constant/springboot/ConstantLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/constant/springboot/ConstantLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/constant/springboot/ConstantLanguageAutoConfiguration.java
index 50a4b7a..a5a00d4 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/constant/springboot/ConstantLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/constant/springboot/ConstantLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.constant.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.constant.ConstantLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ConstantLanguageAutoConfiguration.Condition.class)
@@ -71,6 +73,7 @@ public class ConstantLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/constant/springboot/ConstantLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/constant/springboot/ConstantLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/constant/springboot/ConstantLanguageConfiguration.java
index cec0509..7d0ad77 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/constant/springboot/ConstantLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/constant/springboot/ConstantLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.constant.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.constant)
 public class ConstantLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/header/springboot/HeaderLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/header/springboot/HeaderLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/header/springboot/HeaderLanguageAutoConfiguration.java
index d49c098..0d75034 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/header/springboot/HeaderLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/header/springboot/HeaderLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.header.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.header.HeaderLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(HeaderLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class HeaderLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/header/springboot/HeaderLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/header/springboot/HeaderLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/header/springboot/HeaderLanguageConfiguration.java
index bf00d3a..6a3d67a 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/header/springboot/HeaderLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/header/springboot/HeaderLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.header.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.header)
 public class HeaderLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/property/springboot/ExchangePropertyLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/property/springboot/ExchangePropertyLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/property/springboot/ExchangePropertyLanguageAutoConfiguration.java
index e4456cb..15e1508 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/property/springboot/ExchangePropertyLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/property/springboot/ExchangePropertyLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.property.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.property.ExchangePropertyLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ExchangePropertyLanguageAutoConfiguration.Condition.class)
@@ -73,6 +75,7 @@ public class ExchangePropertyLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/property/springboot/ExchangePropertyLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/property/springboot/ExchangePropertyLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/property/springboot/ExchangePropertyLanguageConfiguration.java
index ef7a21c..8e58600 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/property/springboot/ExchangePropertyLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/property/springboot/ExchangePropertyLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.property.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.exchangeproperty)
 public class ExchangePropertyLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/ref/springboot/RefLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/ref/springboot/RefLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/ref/springboot/RefLanguageAutoConfiguration.java
index 4c64f98..f73dffe 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/ref/springboot/RefLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/ref/springboot/RefLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.ref.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.ref.RefLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RefLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class RefLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/ref/springboot/RefLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/ref/springboot/RefLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/ref/springboot/RefLanguageConfiguration.java
index 7893b91..f1fbc7e 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/ref/springboot/RefLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/ref/springboot/RefLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.ref.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.ref)
 public class RefLanguageConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/FileLanguageAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/FileLanguageAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/FileLanguageAutoConfiguration.java
index 4891f8a..1345dc8 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/FileLanguageAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/FileLanguageAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.language.simple.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.language.simple.FileLanguage;
@@ -41,6 +42,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(FileLanguageAutoConfiguration.Condition.class)
@@ -70,6 +72,7 @@ public class FileLanguageAutoConfiguration {
         return language;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/FileLanguageConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/FileLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/FileLanguageConfiguration.java
index f80a9e4..13f0756 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/FileLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/language/simple/springboot/FileLanguageConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.language.simple.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.language.file)
 public class FileLanguageConfiguration {
 


"
"197","371","2017-04-19 08:35:56+00:00","zregvart@apache.org","['commits@camel.apache.org']","[11/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...","Return-Path: <commits-return-55746-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id D9F9D18713
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:35:50 +0000 (UTC)
Received: (qmail 40863 invoked by uid 500); 19 Apr 2017 08:35:50 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 40566 invoked by uid 500); 19 Apr 2017 08:35:50 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 39686 invoked by uid 99); 19 Apr 2017 08:35:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:35:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id B28EEE7EA5; Wed, 19 Apr 2017 08:35:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 08:35:56 -0000
Message-Id: <1416f95a4e8e40f0b5371c16ce2d83b1@git.apache.org>
In-Reply-To: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
References: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [11/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/swf/springboot/SWFComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/swf/springboot/SWFComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/swf/springboot/SWFComponentAutoConfiguration.java
index 41c5993..a2f24ce 100644
--- a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/swf/springboot/SWFComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/swf/springboot/SWFComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.aws.swf.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.aws.swf.SWFComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SWFComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class SWFComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-azure-starter/src/main/java/org/apache/camel/component/azure/blob/springboot/BlobServiceComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-azure-starter/src/main/java/org/apache/camel/component/azure/blob/springboot/BlobServiceComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-azure-starter/src/main/java/org/apache/camel/component/azure/blob/springboot/BlobServiceComponentAutoConfiguration.java
index fdb4dfc..5e8ee71 100644
--- a/platforms/spring-boot/components-starter/camel-azure-starter/src/main/java/org/apache/camel/component/azure/blob/springboot/BlobServiceComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-azure-starter/src/main/java/org/apache/camel/component/azure/blob/springboot/BlobServiceComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.azure.blob.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.azure.blob.BlobServiceComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BlobServiceComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class BlobServiceComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-azure-starter/src/main/java/org/apache/camel/component/azure/queue/springboot/QueueServiceComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-azure-starter/src/main/java/org/apache/camel/component/azure/queue/springboot/QueueServiceComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-azure-starter/src/main/java/org/apache/camel/component/azure/queue/springboot/QueueServiceComponentAutoConfiguration.java
index a929af0..691ab09 100644
--- a/platforms/spring-boot/components-starter/camel-azure-starter/src/main/java/org/apache/camel/component/azure/queue/springboot/QueueServiceComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-azure-starter/src/main/java/org/apache/camel/component/azure/queue/springboot/QueueServiceComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.azure.queue.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.azure.queue.QueueServiceComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(QueueServiceComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class QueueServiceComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-barcode-starter/src/main/java/org/apache/camel/dataformat/barcode/springboot/BarcodeDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-barcode-starter/src/main/java/org/apache/camel/dataformat/barcode/springboot/BarcodeDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-barcode-starter/src/main/java/org/apache/camel/dataformat/barcode/springboot/BarcodeDataFormatAutoConfiguration.java
index ce76822..d7cafd9 100644
--- a/platforms/spring-boot/components-starter/camel-barcode-starter/src/main/java/org/apache/camel/dataformat/barcode/springboot/BarcodeDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-barcode-starter/src/main/java/org/apache/camel/dataformat/barcode/springboot/BarcodeDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.barcode.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BarcodeDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class BarcodeDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-barcode-starter/src/main/java/org/apache/camel/dataformat/barcode/springboot/BarcodeDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-barcode-starter/src/main/java/org/apache/camel/dataformat/barcode/springboot/BarcodeDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-barcode-starter/src/main/java/org/apache/camel/dataformat/barcode/springboot/BarcodeDataFormatConfiguration.java
index 1cdb0c1..d8539be 100644
--- a/platforms/spring-boot/components-starter/camel-barcode-starter/src/main/java/org/apache/camel/dataformat/barcode/springboot/BarcodeDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-barcode-starter/src/main/java/org/apache/camel/dataformat/barcode/springboot/BarcodeDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.barcode.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.barcode)
 public class BarcodeDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-base64-starter/src/main/java/org/apache/camel/dataformat/base64/springboot/Base64DataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-base64-starter/src/main/java/org/apache/camel/dataformat/base64/springboot/Base64DataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-base64-starter/src/main/java/org/apache/camel/dataformat/base64/springboot/Base64DataFormatAutoConfiguration.java
index 11b6c7a..f0b1387 100644
--- a/platforms/spring-boot/components-starter/camel-base64-starter/src/main/java/org/apache/camel/dataformat/base64/springboot/Base64DataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-base64-starter/src/main/java/org/apache/camel/dataformat/base64/springboot/Base64DataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.base64.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(Base64DataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class Base64DataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-base64-starter/src/main/java/org/apache/camel/dataformat/base64/springboot/Base64DataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-base64-starter/src/main/java/org/apache/camel/dataformat/base64/springboot/Base64DataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-base64-starter/src/main/java/org/apache/camel/dataformat/base64/springboot/Base64DataFormatConfiguration.java
index 26bda5e..e0d52d3 100644
--- a/platforms/spring-boot/components-starter/camel-base64-starter/src/main/java/org/apache/camel/dataformat/base64/springboot/Base64DataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-base64-starter/src/main/java/org/apache/camel/dataformat/base64/springboot/Base64DataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.base64.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.base64)
 public class Base64DataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-bean-validator-starter/src/main/java/org/apache/camel/component/bean/validator/springboot/BeanValidatorComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-bean-validator-starter/src/main/java/org/apache/camel/component/bean/validator/springboot/BeanValidatorComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-bean-validator-starter/src/main/java/org/apache/camel/component/bean/validator/springboot/BeanValidatorComponentAutoConfiguration.java
index 2aef002..731fb15 100644
--- a/platforms/spring-boot/components-starter/camel-bean-validator-starter/src/main/java/org/apache/camel/component/bean/validator/springboot/BeanValidatorComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-bean-validator-starter/src/main/java/org/apache/camel/component/bean/validator/springboot/BeanValidatorComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.bean.validator.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.bean.validator.BeanValidatorComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BeanValidatorComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class BeanValidatorComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-beanio-starter/src/main/java/org/apache/camel/dataformat/beanio/springboot/BeanIODataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-beanio-starter/src/main/java/org/apache/camel/dataformat/beanio/springboot/BeanIODataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-beanio-starter/src/main/java/org/apache/camel/dataformat/beanio/springboot/BeanIODataFormatAutoConfiguration.java
index dc93bab..04d3b3b 100644
--- a/platforms/spring-boot/components-starter/camel-beanio-starter/src/main/java/org/apache/camel/dataformat/beanio/springboot/BeanIODataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-beanio-starter/src/main/java/org/apache/camel/dataformat/beanio/springboot/BeanIODataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.beanio.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BeanIODataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class BeanIODataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-beanio-starter/src/main/java/org/apache/camel/dataformat/beanio/springboot/BeanIODataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-beanio-starter/src/main/java/org/apache/camel/dataformat/beanio/springboot/BeanIODataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-beanio-starter/src/main/java/org/apache/camel/dataformat/beanio/springboot/BeanIODataFormatConfiguration.java
index 2f1922d..2a32468 100644
--- a/platforms/spring-boot/components-starter/camel-beanio-starter/src/main/java/org/apache/camel/dataformat/beanio/springboot/BeanIODataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-beanio-starter/src/main/java/org/apache/camel/dataformat/beanio/springboot/BeanIODataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.beanio.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.beanio)
 public class BeanIODataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-beanstalk-starter/src/main/java/org/apache/camel/component/beanstalk/springboot/BeanstalkComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-beanstalk-starter/src/main/java/org/apache/camel/component/beanstalk/springboot/BeanstalkComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-beanstalk-starter/src/main/java/org/apache/camel/component/beanstalk/springboot/BeanstalkComponentAutoConfiguration.java
index 9f283d2..ed4684b 100644
--- a/platforms/spring-boot/components-starter/camel-beanstalk-starter/src/main/java/org/apache/camel/component/beanstalk/springboot/BeanstalkComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-beanstalk-starter/src/main/java/org/apache/camel/component/beanstalk/springboot/BeanstalkComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.beanstalk.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.beanstalk.BeanstalkComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BeanstalkComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class BeanstalkComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-beanstalk-starter/src/main/java/org/apache/camel/component/beanstalk/springboot/BeanstalkComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-beanstalk-starter/src/main/java/org/apache/camel/component/beanstalk/springboot/BeanstalkComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-beanstalk-starter/src/main/java/org/apache/camel/component/beanstalk/springboot/BeanstalkComponentConfiguration.java
index e4eaf7e..6aae498 100644
--- a/platforms/spring-boot/components-starter/camel-beanstalk-starter/src/main/java/org/apache/camel/component/beanstalk/springboot/BeanstalkComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-beanstalk-starter/src/main/java/org/apache/camel/component/beanstalk/springboot/BeanstalkComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.beanstalk.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.beanstalk.ConnectionSettingsFactory;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.beanstalk)
 public class BeanstalkComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/csv/springboot/BindyCsvDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/csv/springboot/BindyCsvDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/csv/springboot/BindyCsvDataFormatAutoConfiguration.java
index e2583ee..4ed920a 100644
--- a/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/csv/springboot/BindyCsvDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/csv/springboot/BindyCsvDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.bindy.csv.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BindyCsvDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class BindyCsvDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/csv/springboot/BindyCsvDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/csv/springboot/BindyCsvDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/csv/springboot/BindyCsvDataFormatConfiguration.java
index 8589bf0..5c3db44 100644
--- a/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/csv/springboot/BindyCsvDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/csv/springboot/BindyCsvDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.bindy.csv.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.model.dataformat.BindyType;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.bindy-csv)
 public class BindyCsvDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/fixed/springboot/BindyFixedLengthDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/fixed/springboot/BindyFixedLengthDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/fixed/springboot/BindyFixedLengthDataFormatAutoConfiguration.java
index 64a547a..50cd7cf 100644
--- a/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/fixed/springboot/BindyFixedLengthDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/fixed/springboot/BindyFixedLengthDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.bindy.fixed.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BindyFixedLengthDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class BindyFixedLengthDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/fixed/springboot/BindyFixedLengthDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/fixed/springboot/BindyFixedLengthDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/fixed/springboot/BindyFixedLengthDataFormatConfiguration.java
index 91ef2f5..0292d8f 100644
--- a/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/fixed/springboot/BindyFixedLengthDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/fixed/springboot/BindyFixedLengthDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.bindy.fixed.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.model.dataformat.BindyType;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.bindy-fixed)
 public class BindyFixedLengthDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/kvp/springboot/BindyKeyValuePairDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/kvp/springboot/BindyKeyValuePairDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/kvp/springboot/BindyKeyValuePairDataFormatAutoConfiguration.java
index 733e14c..77de985 100644
--- a/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/kvp/springboot/BindyKeyValuePairDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/kvp/springboot/BindyKeyValuePairDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.bindy.kvp.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BindyKeyValuePairDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class BindyKeyValuePairDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/kvp/springboot/BindyKeyValuePairDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/kvp/springboot/BindyKeyValuePairDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/kvp/springboot/BindyKeyValuePairDataFormatConfiguration.java
index a26c9fa..f812e60 100644
--- a/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/kvp/springboot/BindyKeyValuePairDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-bindy-starter/src/main/java/org/apache/camel/dataformat/bindy/kvp/springboot/BindyKeyValuePairDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.bindy.kvp.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.model.dataformat.BindyType;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -24,6 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.bindy-kvp)
 public class BindyKeyValuePairDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java
index 776f6b2..8bfa8d8 100644
--- a/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.bonita.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.bonita.BonitaComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BonitaComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class BonitaComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-boon-starter/src/main/java/org/apache/camel/component/boon/springboot/BoonDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-boon-starter/src/main/java/org/apache/camel/component/boon/springboot/BoonDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-boon-starter/src/main/java/org/apache/camel/component/boon/springboot/BoonDataFormatAutoConfiguration.java
index 5d6702f..e4b60ac 100644
--- a/platforms/spring-boot/components-starter/camel-boon-starter/src/main/java/org/apache/camel/component/boon/springboot/BoonDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-boon-starter/src/main/java/org/apache/camel/component/boon/springboot/BoonDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.boon.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BoonDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class BoonDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-boon-starter/src/main/java/org/apache/camel/component/boon/springboot/BoonDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-boon-starter/src/main/java/org/apache/camel/component/boon/springboot/BoonDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-boon-starter/src/main/java/org/apache/camel/component/boon/springboot/BoonDataFormatConfiguration.java
index 9832694..0531b94 100644
--- a/platforms/spring-boot/components-starter/camel-boon-starter/src/main/java/org/apache/camel/component/boon/springboot/BoonDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-boon-starter/src/main/java/org/apache/camel/component/boon/springboot/BoonDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.boon.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.boon)
 public class BoonDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-box-starter/src/main/java/org/apache/camel/component/box/springboot/BoxComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-box-starter/src/main/java/org/apache/camel/component/box/springboot/BoxComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-box-starter/src/main/java/org/apache/camel/component/box/springboot/BoxComponentAutoConfiguration.java
index c71e9e1..d5e4c15 100644
--- a/platforms/spring-boot/components-starter/camel-box-starter/src/main/java/org/apache/camel/component/box/springboot/BoxComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-box-starter/src/main/java/org/apache/camel/component/box/springboot/BoxComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.box.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.box.BoxComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BoxComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class BoxComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-box-starter/src/main/java/org/apache/camel/component/box/springboot/BoxComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-box-starter/src/main/java/org/apache/camel/component/box/springboot/BoxComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-box-starter/src/main/java/org/apache/camel/component/box/springboot/BoxComponentConfiguration.java
index d60ba98..e65b88f 100644
--- a/platforms/spring-boot/components-starter/camel-box-starter/src/main/java/org/apache/camel/component/box/springboot/BoxComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-box-starter/src/main/java/org/apache/camel/component/box/springboot/BoxComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.box.springboot;
 
 import java.util.Map;
+import javax.annotation.Generated;
 import com.box.sdk.IAccessTokenCache;
 import org.apache.camel.component.box.internal.BoxApiName;
 import org.apache.camel.util.jsse.SSLContextParameters;
@@ -29,6 +30,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.box)
 public class BoxComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-braintree-starter/src/main/java/org/apache/camel/component/braintree/springboot/BraintreeComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-braintree-starter/src/main/java/org/apache/camel/component/braintree/springboot/BraintreeComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-braintree-starter/src/main/java/org/apache/camel/component/braintree/springboot/BraintreeComponentAutoConfiguration.java
index 9136399..74c6170 100644
--- a/platforms/spring-boot/components-starter/camel-braintree-starter/src/main/java/org/apache/camel/component/braintree/springboot/BraintreeComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-braintree-starter/src/main/java/org/apache/camel/component/braintree/springboot/BraintreeComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.braintree.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.braintree.BraintreeComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BraintreeComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class BraintreeComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-braintree-starter/src/main/java/org/apache/camel/component/braintree/springboot/BraintreeComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-braintree-starter/src/main/java/org/apache/camel/component/braintree/springboot/BraintreeComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-braintree-starter/src/main/java/org/apache/camel/component/braintree/springboot/BraintreeComponentConfiguration.java
index a040f05..036509e 100644
--- a/platforms/spring-boot/components-starter/camel-braintree-starter/src/main/java/org/apache/camel/component/braintree/springboot/BraintreeComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-braintree-starter/src/main/java/org/apache/camel/component/braintree/springboot/BraintreeComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.braintree.springboot;
 
 import java.util.logging.Level;
+import javax.annotation.Generated;
 import org.apache.camel.component.braintree.internal.BraintreeApiName;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.braintree)
 public class BraintreeComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-cache-starter/src/main/java/org/apache/camel/component/cache/springboot/CacheComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-cache-starter/src/main/java/org/apache/camel/component/cache/springboot/CacheComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-cache-starter/src/main/java/org/apache/camel/component/cache/springboot/CacheComponentAutoConfiguration.java
index e2f577e..cb42905 100644
--- a/platforms/spring-boot/components-starter/camel-cache-starter/src/main/java/org/apache/camel/component/cache/springboot/CacheComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-cache-starter/src/main/java/org/apache/camel/component/cache/springboot/CacheComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.cache.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.cache.CacheComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CacheComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class CacheComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-cache-starter/src/main/java/org/apache/camel/component/cache/springboot/CacheComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-cache-starter/src/main/java/org/apache/camel/component/cache/springboot/CacheComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-cache-starter/src/main/java/org/apache/camel/component/cache/springboot/CacheComponentConfiguration.java
index 1872e64..57a9ae5 100644
--- a/platforms/spring-boot/components-starter/camel-cache-starter/src/main/java/org/apache/camel/component/cache/springboot/CacheComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-cache-starter/src/main/java/org/apache/camel/component/cache/springboot/CacheComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.cache.springboot;
 
+import javax.annotation.Generated;
 import net.sf.ehcache.store.MemoryStoreEvictionPolicy;
 import org.apache.camel.component.cache.CacheEventListenerRegistry;
 import org.apache.camel.component.cache.CacheLoaderRegistry;
@@ -30,6 +31,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.cache)
 public class CacheComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-cassandraql-starter/src/main/java/org/apache/camel/component/cassandra/springboot/CassandraComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-cassandraql-starter/src/main/java/org/apache/camel/component/cassandra/springboot/CassandraComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-cassandraql-starter/src/main/java/org/apache/camel/component/cassandra/springboot/CassandraComponentAutoConfiguration.java
index 40cb722..041ba28 100644
--- a/platforms/spring-boot/components-starter/camel-cassandraql-starter/src/main/java/org/apache/camel/component/cassandra/springboot/CassandraComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-cassandraql-starter/src/main/java/org/apache/camel/component/cassandra/springboot/CassandraComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.cassandra.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.cassandra.CassandraComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CassandraComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class CassandraComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-castor-starter/src/main/java/org/apache/camel/dataformat/castor/springboot/CastorDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-castor-starter/src/main/java/org/apache/camel/dataformat/castor/springboot/CastorDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-castor-starter/src/main/java/org/apache/camel/dataformat/castor/springboot/CastorDataFormatAutoConfiguration.java
index f4588e1..22c6cb0 100644
--- a/platforms/spring-boot/components-starter/camel-castor-starter/src/main/java/org/apache/camel/dataformat/castor/springboot/CastorDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-castor-starter/src/main/java/org/apache/camel/dataformat/castor/springboot/CastorDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.castor.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CastorDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class CastorDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-castor-starter/src/main/java/org/apache/camel/dataformat/castor/springboot/CastorDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-castor-starter/src/main/java/org/apache/camel/dataformat/castor/springboot/CastorDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-castor-starter/src/main/java/org/apache/camel/dataformat/castor/springboot/CastorDataFormatConfiguration.java
index 7f566af..5eac61a 100644
--- a/platforms/spring-boot/components-starter/camel-castor-starter/src/main/java/org/apache/camel/dataformat/castor/springboot/CastorDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-castor-starter/src/main/java/org/apache/camel/dataformat/castor/springboot/CastorDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.castor.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.castor)
 public class CastorDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-chronicle-starter/src/main/java/org/apache/camel/component/chronicle/engine/springboot/ChronicleEngineComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-chronicle-starter/src/main/java/org/apache/camel/component/chronicle/engine/springboot/ChronicleEngineComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-chronicle-starter/src/main/java/org/apache/camel/component/chronicle/engine/springboot/ChronicleEngineComponentAutoConfiguration.java
index 416b32f..1cc30ab 100644
--- a/platforms/spring-boot/components-starter/camel-chronicle-starter/src/main/java/org/apache/camel/component/chronicle/engine/springboot/ChronicleEngineComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-chronicle-starter/src/main/java/org/apache/camel/component/chronicle/engine/springboot/ChronicleEngineComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.chronicle.engine.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.chronicle.engine.ChronicleEngineComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ChronicleEngineComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class ChronicleEngineComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-chunk-starter/src/main/java/org/apache/camel/component/chunk/springboot/ChunkComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-chunk-starter/src/main/java/org/apache/camel/component/chunk/springboot/ChunkComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-chunk-starter/src/main/java/org/apache/camel/component/chunk/springboot/ChunkComponentAutoConfiguration.java
index 76a5ef4..6f90de0 100644
--- a/platforms/spring-boot/components-starter/camel-chunk-starter/src/main/java/org/apache/camel/component/chunk/springboot/ChunkComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-chunk-starter/src/main/java/org/apache/camel/component/chunk/springboot/ChunkComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.chunk.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.chunk.ChunkComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ChunkComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class ChunkComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-cm-sms-starter/src/main/java/org/apache/camel/component/cm/springboot/CMComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-cm-sms-starter/src/main/java/org/apache/camel/component/cm/springboot/CMComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-cm-sms-starter/src/main/java/org/apache/camel/component/cm/springboot/CMComponentAutoConfiguration.java
index 96f44e6..0816d87 100644
--- a/platforms/spring-boot/components-starter/camel-cm-sms-starter/src/main/java/org/apache/camel/component/cm/springboot/CMComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-cm-sms-starter/src/main/java/org/apache/camel/component/cm/springboot/CMComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.cm.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.cm.CMComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CMComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class CMComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-cmis-starter/src/main/java/org/apache/camel/component/cmis/springboot/CMISComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-cmis-starter/src/main/java/org/apache/camel/component/cmis/springboot/CMISComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-cmis-starter/src/main/java/org/apache/camel/component/cmis/springboot/CMISComponentAutoConfiguration.java
index 484a69a..592c974 100644
--- a/platforms/spring-boot/components-starter/camel-cmis-starter/src/main/java/org/apache/camel/component/cmis/springboot/CMISComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-cmis-starter/src/main/java/org/apache/camel/component/cmis/springboot/CMISComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.cmis.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.cmis.CMISComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CMISComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class CMISComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-cmis-starter/src/main/java/org/apache/camel/component/cmis/springboot/CMISComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-cmis-starter/src/main/java/org/apache/camel/component/cmis/springboot/CMISComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-cmis-starter/src/main/java/org/apache/camel/component/cmis/springboot/CMISComponentConfiguration.java
index 7922287..624fb09 100644
--- a/platforms/spring-boot/components-starter/camel-cmis-starter/src/main/java/org/apache/camel/component/cmis/springboot/CMISComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-cmis-starter/src/main/java/org/apache/camel/component/cmis/springboot/CMISComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.cmis.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.cmis.CMISSessionFacadeFactory;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.cmis)
 public class CMISComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-coap-starter/src/main/java/org/apache/camel/coap/springboot/CoAPComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-coap-starter/src/main/java/org/apache/camel/coap/springboot/CoAPComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-coap-starter/src/main/java/org/apache/camel/coap/springboot/CoAPComponentAutoConfiguration.java
index 30eb83c..fa1ccfc 100644
--- a/platforms/spring-boot/components-starter/camel-coap-starter/src/main/java/org/apache/camel/coap/springboot/CoAPComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-coap-starter/src/main/java/org/apache/camel/coap/springboot/CoAPComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.coap.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.coap.CoAPComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CoAPComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class CoAPComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-cometd-starter/src/main/java/org/apache/camel/component/cometd/springboot/CometdComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-cometd-starter/src/main/java/org/apache/camel/component/cometd/springboot/CometdComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-cometd-starter/src/main/java/org/apache/camel/component/cometd/springboot/CometdComponentAutoConfiguration.java
index 5bfcdce..33a15ef 100644
--- a/platforms/spring-boot/components-starter/camel-cometd-starter/src/main/java/org/apache/camel/component/cometd/springboot/CometdComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-cometd-starter/src/main/java/org/apache/camel/component/cometd/springboot/CometdComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.cometd.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.cometd.CometdComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CometdComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class CometdComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-cometd-starter/src/main/java/org/apache/camel/component/cometd/springboot/CometdComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-cometd-starter/src/main/java/org/apache/camel/component/cometd/springboot/CometdComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-cometd-starter/src/main/java/org/apache/camel/component/cometd/springboot/CometdComponentConfiguration.java
index eacf933..1ad2c2c 100644
--- a/platforms/spring-boot/components-starter/camel-cometd-starter/src/main/java/org/apache/camel/component/cometd/springboot/CometdComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-cometd-starter/src/main/java/org/apache/camel/component/cometd/springboot/CometdComponentConfiguration.java
@@ -17,6 +17,7 @@
 package org.apache.camel.component.cometd.springboot;
 
 import java.util.List;
+import javax.annotation.Generated;
 import org.apache.camel.util.jsse.SSLContextParameters;
 import org.cometd.bayeux.server.BayeuxServer.Extension;
 import org.cometd.bayeux.server.SecurityPolicy;
@@ -29,6 +30,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.cometd)
 public class CometdComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-consul-starter/src/main/java/org/apache/camel/component/consul/springboot/ConsulComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-consul-starter/src/main/java/org/apache/camel/component/consul/springboot/ConsulComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-consul-starter/src/main/java/org/apache/camel/component/consul/springboot/ConsulComponentAutoConfiguration.java
index cd7fbbf..15c197b 100644
--- a/platforms/spring-boot/components-starter/camel-consul-starter/src/main/java/org/apache/camel/component/consul/springboot/ConsulComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-consul-starter/src/main/java/org/apache/camel/component/consul/springboot/ConsulComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.consul.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.consul.ConsulComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ConsulComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class ConsulComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-consul-starter/src/main/java/org/apache/camel/component/consul/springboot/ConsulComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-consul-starter/src/main/java/org/apache/camel/component/consul/springboot/ConsulComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-consul-starter/src/main/java/org/apache/camel/component/consul/springboot/ConsulComponentConfiguration.java
index 9e8b957..a763d9c 100644
--- a/platforms/spring-boot/components-starter/camel-consul-starter/src/main/java/org/apache/camel/component/consul/springboot/ConsulComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-consul-starter/src/main/java/org/apache/camel/component/consul/springboot/ConsulComponentConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.consul.springboot;
 
 import java.util.List;
 import java.util.Set;
+import javax.annotation.Generated;
 import com.orbitz.consul.option.ConsistencyMode;
 import org.apache.camel.CamelContext;
 import org.apache.camel.util.jsse.SSLContextParameters;
@@ -31,6 +32,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.consul)
 public class ConsulComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-context-starter/src/main/java/org/apache/camel/component/context/springboot/QualifiedContextComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-context-starter/src/main/java/org/apache/camel/component/context/springboot/QualifiedContextComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-context-starter/src/main/java/org/apache/camel/component/context/springboot/QualifiedContextComponentAutoConfiguration.java
index c1ac8a6..b45987c 100644
--- a/platforms/spring-boot/components-starter/camel-context-starter/src/main/java/org/apache/camel/component/context/springboot/QualifiedContextComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-context-starter/src/main/java/org/apache/camel/component/context/springboot/QualifiedContextComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.context.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.context.QualifiedContextComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(QualifiedContextComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class QualifiedContextComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/bean/springboot/BeanComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/bean/springboot/BeanComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/bean/springboot/BeanComponentAutoConfiguration.java
index 53abd7e..2387463 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/bean/springboot/BeanComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/bean/springboot/BeanComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.bean.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.bean.BeanComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BeanComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class BeanComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/beanclass/springboot/ClassComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/beanclass/springboot/ClassComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/beanclass/springboot/ClassComponentAutoConfiguration.java
index d75da6f..3a77bc3 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/beanclass/springboot/ClassComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/beanclass/springboot/ClassComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.beanclass.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.beanclass.ClassComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ClassComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class ClassComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/binding/springboot/BindingNameComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/binding/springboot/BindingNameComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/binding/springboot/BindingNameComponentAutoConfiguration.java
index ce78eb1..9be6807 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/binding/springboot/BindingNameComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/binding/springboot/BindingNameComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.binding.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.binding.BindingNameComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BindingNameComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class BindingNameComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/browse/springboot/BrowseComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/browse/springboot/BrowseComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/browse/springboot/BrowseComponentAutoConfiguration.java
index 9aa85c0..1cbe088 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/browse/springboot/BrowseComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/browse/springboot/BrowseComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.browse.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.browse.BrowseComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BrowseComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class BrowseComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/controlbus/springboot/ControlBusComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/controlbus/springboot/ControlBusComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/controlbus/springboot/ControlBusComponentAutoConfiguration.java
index d9a7aaa..1b572b5 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/controlbus/springboot/ControlBusComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/controlbus/springboot/ControlBusComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.controlbus.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.controlbus.ControlBusComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ControlBusComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class ControlBusComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/dataformat/springboot/DataFormatComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/dataformat/springboot/DataFormatComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/dataformat/springboot/DataFormatComponentAutoConfiguration.java
index c574bdc..02091d5 100644
--- a/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/dataformat/springboot/DataFormatComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-core-starter/src/main/java/org/apache/camel/component/dataformat/springboot/DataFormatComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.dataformat.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.dataformat.DataFormatComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DataFormatComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class DataFormatComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(


"
"198","369","2017-04-19 08:35:57+00:00","zregvart@apache.org","['commits@camel.apache.org']","[12/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...","Return-Path: <commits-return-55745-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 8886218710
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:35:50 +0000 (UTC)
Received: (qmail 40631 invoked by uid 500); 19 Apr 2017 08:35:50 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 40553 invoked by uid 500); 19 Apr 2017 08:35:49 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 39688 invoked by uid 99); 19 Apr 2017 08:35:46 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:35:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id B6E74E8E71; Wed, 19 Apr 2017 08:35:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 08:35:57 -0000
Message-Id: <6d252065a71e4141a84805e9335dda2f@git.apache.org>
In-Reply-To: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
References: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [12/13] camel git commit: CAMEL-11165 Add @Generated annotation to
 code g...

CAMEL-11165 Add @Generated annotation to code g...

...enerated by SpringBootAutoConfigurationMojo

This regenerates Spring Boot auto configuration source files to include
`@Generated` annotation.


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/2297128f
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/2297128f
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/2297128f

Branch: refs/heads/master
Commit: 2297128fc16a93e08f9e09fc2c8e64bbfb5a8387
Parents: 583d6dc
Author: Zoran Regvart <zregvart@apache.org>
Authored: Wed Apr 19 10:26:38 2017 +0200
Committer: Zoran Regvart <zregvart@apache.org>
Committed: Wed Apr 19 10:32:34 2017 +0200

----------------------------------------------------------------------
 .../component/ahc/springboot/AhcComponentAutoConfiguration.java  | 3 +++
 .../component/ahc/springboot/AhcComponentConfiguration.java      | 2 ++
 .../ahc/ws/springboot/WsComponentAutoConfiguration.java          | 3 +++
 .../component/ahc/ws/springboot/WsComponentConfiguration.java    | 2 ++
 .../amqp/springboot/AMQPComponentAutoConfiguration.java          | 3 +++
 .../component/amqp/springboot/AMQPComponentConfiguration.java    | 2 ++
 .../apns/springboot/ApnsComponentAutoConfiguration.java          | 3 +++
 .../component/apns/springboot/ApnsComponentConfiguration.java    | 2 ++
 .../asterisk/springboot/AsteriskComponentAutoConfiguration.java  | 3 +++
 .../atmos/springboot/AtmosComponentAutoConfiguration.java        | 3 +++
 .../springboot/WebsocketComponentAutoConfiguration.java          | 3 +++
 .../websocket/springboot/WebsocketComponentConfiguration.java    | 2 ++
 .../atom/springboot/AtomComponentAutoConfiguration.java          | 3 +++
 .../avro/springboot/AvroComponentAutoConfiguration.java          | 3 +++
 .../component/avro/springboot/AvroComponentConfiguration.java    | 2 ++
 .../avro/springboot/AvroDataFormatAutoConfiguration.java         | 3 +++
 .../dataformat/avro/springboot/AvroDataFormatConfiguration.java  | 2 ++
 .../aws/cw/springboot/CwComponentAutoConfiguration.java          | 3 +++
 .../aws/ddb/springboot/DdbComponentAutoConfiguration.java        | 3 +++
 .../springboot/DdbStreamComponentAutoConfiguration.java          | 3 +++
 .../aws/ec2/springboot/EC2ComponentAutoConfiguration.java        | 3 +++
 .../springboot/KinesisFirehoseComponentAutoConfiguration.java    | 3 +++
 .../kinesis/springboot/KinesisComponentAutoConfiguration.java    | 3 +++
 .../aws/s3/springboot/S3ComponentAutoConfiguration.java          | 3 +++
 .../aws/sdb/springboot/SdbComponentAutoConfiguration.java        | 3 +++
 .../aws/ses/springboot/SesComponentAutoConfiguration.java        | 3 +++
 .../aws/sns/springboot/SnsComponentAutoConfiguration.java        | 3 +++
 .../aws/sqs/springboot/SqsComponentAutoConfiguration.java        | 3 +++
 .../aws/swf/springboot/SWFComponentAutoConfiguration.java        | 3 +++
 .../blob/springboot/BlobServiceComponentAutoConfiguration.java   | 3 +++
 .../queue/springboot/QueueServiceComponentAutoConfiguration.java | 3 +++
 .../barcode/springboot/BarcodeDataFormatAutoConfiguration.java   | 3 +++
 .../barcode/springboot/BarcodeDataFormatConfiguration.java       | 2 ++
 .../base64/springboot/Base64DataFormatAutoConfiguration.java     | 3 +++
 .../base64/springboot/Base64DataFormatConfiguration.java         | 2 ++
 .../springboot/BeanValidatorComponentAutoConfiguration.java      | 3 +++
 .../beanio/springboot/BeanIODataFormatAutoConfiguration.java     | 3 +++
 .../beanio/springboot/BeanIODataFormatConfiguration.java         | 2 ++
 .../springboot/BeanstalkComponentAutoConfiguration.java          | 3 +++
 .../beanstalk/springboot/BeanstalkComponentConfiguration.java    | 2 ++
 .../csv/springboot/BindyCsvDataFormatAutoConfiguration.java      | 3 +++
 .../bindy/csv/springboot/BindyCsvDataFormatConfiguration.java    | 2 ++
 .../springboot/BindyFixedLengthDataFormatAutoConfiguration.java  | 3 +++
 .../springboot/BindyFixedLengthDataFormatConfiguration.java      | 2 ++
 .../springboot/BindyKeyValuePairDataFormatAutoConfiguration.java | 3 +++
 .../kvp/springboot/BindyKeyValuePairDataFormatConfiguration.java | 2 ++
 .../bonita/springboot/BonitaComponentAutoConfiguration.java      | 3 +++
 .../boon/springboot/BoonDataFormatAutoConfiguration.java         | 3 +++
 .../component/boon/springboot/BoonDataFormatConfiguration.java   | 2 ++
 .../component/box/springboot/BoxComponentAutoConfiguration.java  | 3 +++
 .../component/box/springboot/BoxComponentConfiguration.java      | 2 ++
 .../springboot/BraintreeComponentAutoConfiguration.java          | 3 +++
 .../braintree/springboot/BraintreeComponentConfiguration.java    | 2 ++
 .../cache/springboot/CacheComponentAutoConfiguration.java        | 3 +++
 .../component/cache/springboot/CacheComponentConfiguration.java  | 2 ++
 .../springboot/CassandraComponentAutoConfiguration.java          | 3 +++
 .../castor/springboot/CastorDataFormatAutoConfiguration.java     | 3 +++
 .../castor/springboot/CastorDataFormatConfiguration.java         | 2 ++
 .../springboot/ChronicleEngineComponentAutoConfiguration.java    | 3 +++
 .../chunk/springboot/ChunkComponentAutoConfiguration.java        | 3 +++
 .../component/cm/springboot/CMComponentAutoConfiguration.java    | 3 +++
 .../cmis/springboot/CMISComponentAutoConfiguration.java          | 3 +++
 .../component/cmis/springboot/CMISComponentConfiguration.java    | 2 ++
 .../camel/coap/springboot/CoAPComponentAutoConfiguration.java    | 3 +++
 .../cometd/springboot/CometdComponentAutoConfiguration.java      | 3 +++
 .../cometd/springboot/CometdComponentConfiguration.java          | 2 ++
 .../consul/springboot/ConsulComponentAutoConfiguration.java      | 3 +++
 .../consul/springboot/ConsulComponentConfiguration.java          | 2 ++
 .../springboot/QualifiedContextComponentAutoConfiguration.java   | 3 +++
 .../bean/springboot/BeanComponentAutoConfiguration.java          | 3 +++
 .../beanclass/springboot/ClassComponentAutoConfiguration.java    | 3 +++
 .../springboot/BindingNameComponentAutoConfiguration.java        | 3 +++
 .../browse/springboot/BrowseComponentAutoConfiguration.java      | 3 +++
 .../springboot/ControlBusComponentAutoConfiguration.java         | 3 +++
 .../springboot/DataFormatComponentAutoConfiguration.java         | 3 +++
 .../dataset/springboot/DataSetComponentAutoConfiguration.java    | 3 +++
 .../direct/springboot/DirectComponentAutoConfiguration.java      | 3 +++
 .../direct/springboot/DirectComponentConfiguration.java          | 2 ++
 .../directvm/springboot/DirectVmComponentAutoConfiguration.java  | 3 +++
 .../directvm/springboot/DirectVmComponentConfiguration.java      | 2 ++
 .../file/springboot/FileComponentAutoConfiguration.java          | 3 +++
 .../language/springboot/LanguageComponentAutoConfiguration.java  | 3 +++
 .../component/log/springboot/LogComponentAutoConfiguration.java  | 3 +++
 .../component/log/springboot/LogComponentConfiguration.java      | 2 ++
 .../mock/springboot/MockComponentAutoConfiguration.java          | 3 +++
 .../springboot/PropertiesComponentAutoConfiguration.java         | 3 +++
 .../properties/springboot/PropertiesComponentConfiguration.java  | 2 ++
 .../component/ref/springboot/RefComponentAutoConfiguration.java  | 3 +++
 .../rest/springboot/RestApiComponentAutoConfiguration.java       | 3 +++
 .../rest/springboot/RestComponentAutoConfiguration.java          | 3 +++
 .../component/rest/springboot/RestComponentConfiguration.java    | 2 ++
 .../springboot/SchedulerComponentAutoConfiguration.java          | 3 +++
 .../scheduler/springboot/SchedulerComponentConfiguration.java    | 2 ++
 .../seda/springboot/SedaComponentAutoConfiguration.java          | 3 +++
 .../component/seda/springboot/SedaComponentConfiguration.java    | 2 ++
 .../stub/springboot/StubComponentAutoConfiguration.java          | 3 +++
 .../component/stub/springboot/StubComponentConfiguration.java    | 2 ++
 .../test/springboot/TestComponentAutoConfiguration.java          | 3 +++
 .../timer/springboot/TimerComponentAutoConfiguration.java        | 3 +++
 .../springboot/ValidatorComponentAutoConfiguration.java          | 3 +++
 .../validator/springboot/ValidatorComponentConfiguration.java    | 2 ++
 .../component/vm/springboot/VmComponentAutoConfiguration.java    | 3 +++
 .../camel/component/vm/springboot/VmComponentConfiguration.java  | 2 ++
 .../xslt/springboot/XsltComponentAutoConfiguration.java          | 3 +++
 .../component/xslt/springboot/XsltComponentConfiguration.java    | 2 ++
 .../camel/impl/springboot/GzipDataFormatAutoConfiguration.java   | 3 +++
 .../camel/impl/springboot/GzipDataFormatConfiguration.java       | 2 ++
 .../springboot/SerializationDataFormatAutoConfiguration.java     | 3 +++
 .../impl/springboot/SerializationDataFormatConfiguration.java    | 2 ++
 .../camel/impl/springboot/StringDataFormatAutoConfiguration.java | 3 +++
 .../camel/impl/springboot/StringDataFormatConfiguration.java     | 2 ++
 .../camel/impl/springboot/ZipDataFormatAutoConfiguration.java    | 3 +++
 .../apache/camel/impl/springboot/ZipDataFormatConfiguration.java | 2 ++
 .../language/bean/springboot/BeanLanguageAutoConfiguration.java  | 3 +++
 .../language/bean/springboot/BeanLanguageConfiguration.java      | 2 ++
 .../constant/springboot/ConstantLanguageAutoConfiguration.java   | 3 +++
 .../constant/springboot/ConstantLanguageConfiguration.java       | 2 ++
 .../header/springboot/HeaderLanguageAutoConfiguration.java       | 3 +++
 .../language/header/springboot/HeaderLanguageConfiguration.java  | 2 ++
 .../springboot/ExchangePropertyLanguageAutoConfiguration.java    | 3 +++
 .../springboot/ExchangePropertyLanguageConfiguration.java        | 2 ++
 .../language/ref/springboot/RefLanguageAutoConfiguration.java    | 3 +++
 .../camel/language/ref/springboot/RefLanguageConfiguration.java  | 2 ++
 .../simple/springboot/FileLanguageAutoConfiguration.java         | 3 +++
 .../language/simple/springboot/FileLanguageConfiguration.java    | 2 ++
 .../simple/springboot/SimpleLanguageAutoConfiguration.java       | 3 +++
 .../language/simple/springboot/SimpleLanguageConfiguration.java  | 2 ++
 .../tokenizer/springboot/TokenizeLanguageAutoConfiguration.java  | 3 +++
 .../tokenizer/springboot/TokenizeLanguageConfiguration.java      | 2 ++
 .../springboot/XMLTokenizeLanguageAutoConfiguration.java         | 3 +++
 .../tokenizer/springboot/XMLTokenizeLanguageConfiguration.java   | 2 ++
 .../xpath/springboot/XPathLanguageAutoConfiguration.java         | 3 +++
 .../language/xpath/springboot/XPathLanguageConfiguration.java    | 2 ++
 .../ConsulServiceCallServiceDiscoveryConfigurationCommon.java    | 2 ++
 ...ConsulServiceCallServiceDiscoveryConfigurationProperties.java | 2 ++
 .../DnsServiceCallServiceDiscoveryConfigurationCommon.java       | 2 ++
 .../DnsServiceCallServiceDiscoveryConfigurationProperties.java   | 2 ++
 .../EtcdServiceCallServiceDiscoveryConfigurationCommon.java      | 2 ++
 .../EtcdServiceCallServiceDiscoveryConfigurationProperties.java  | 2 ++
 ...KubernetesServiceCallServiceDiscoveryConfigurationCommon.java | 2 ++
 ...rnetesServiceCallServiceDiscoveryConfigurationProperties.java | 2 ++
 .../RibbonServiceCallLoadBalancerConfigurationCommon.java        | 2 ++
 .../RibbonServiceCallLoadBalancerConfigurationProperties.java    | 2 ++
 .../springboot/RestConfigurationDefinitionAutoConfiguration.java | 2 ++
 .../rest/springboot/RestConfigurationDefinitionProperties.java   | 2 ++
 .../model/springboot/HystrixConfigurationDefinitionCommon.java   | 4 ++++
 .../springboot/HystrixConfigurationDefinitionProperties.java     | 2 ++
 .../springboot/CouchbaseComponentAutoConfiguration.java          | 3 +++
 .../couchdb/springboot/CouchDbComponentAutoConfiguration.java    | 3 +++
 .../springboot/DigitalSignatureComponentAutoConfiguration.java   | 3 +++
 .../springboot/DigitalSignatureComponentConfiguration.java       | 2 ++
 .../crypto/springboot/CryptoDataFormatAutoConfiguration.java     | 3 +++
 .../crypto/springboot/CryptoDataFormatConfiguration.java         | 2 ++
 .../crypto/springboot/PGPDataFormatAutoConfiguration.java        | 3 +++
 .../converter/crypto/springboot/PGPDataFormatConfiguration.java  | 2 ++
 .../csv/springboot/CsvDataFormatAutoConfiguration.java           | 3 +++
 .../dataformat/csv/springboot/CsvDataFormatConfiguration.java    | 2 ++
 .../cxf/jaxrs/springboot/CxfRsComponentAutoConfiguration.java    | 3 +++
 .../cxf/jaxrs/springboot/CxfRsComponentConfiguration.java        | 2 ++
 .../component/cxf/springboot/CxfComponentAutoConfiguration.java  | 3 +++
 .../component/cxf/springboot/CxfComponentConfiguration.java      | 2 ++
 .../springboot/DigitalOceanComponentAutoConfiguration.java       | 3 +++
 .../springboot/DisruptorComponentAutoConfiguration.java          | 3 +++
 .../disruptor/springboot/DisruptorComponentConfiguration.java    | 2 ++
 .../vm/springboot/DisruptorVmComponentAutoConfiguration.java     | 3 +++
 .../vm/springboot/DisruptorVmComponentConfiguration.java         | 2 ++
 .../component/dns/springboot/DnsComponentAutoConfiguration.java  | 3 +++
 .../docker/springboot/DockerComponentAutoConfiguration.java      | 3 +++
 .../docker/springboot/DockerComponentConfiguration.java          | 2 ++
 .../dozer/springboot/DozerComponentAutoConfiguration.java        | 3 +++
 .../drill/springboot/DrillComponentAutoConfiguration.java        | 3 +++
 .../dropbox/springboot/DropboxComponentAutoConfiguration.java    | 3 +++
 .../ehcache/springboot/EhcacheComponentAutoConfiguration.java    | 3 +++
 .../springboot/ElasticsearchComponentAutoConfiguration.java      | 3 +++
 .../springboot/ElasticsearchComponentConfiguration.java          | 2 ++
 .../springboot/ElasticsearchComponentAutoConfiguration.java      | 3 +++
 .../elsql/springboot/ElsqlComponentAutoConfiguration.java        | 3 +++
 .../component/elsql/springboot/ElsqlComponentConfiguration.java  | 2 ++
 .../etcd/springboot/EtcdComponentAutoConfiguration.java          | 3 +++
 .../component/etcd/springboot/EtcdComponentConfiguration.java    | 2 ++
 .../exec/springboot/ExecComponentAutoConfiguration.java          | 3 +++
 .../facebook/springboot/FacebookComponentAutoConfiguration.java  | 3 +++
 .../facebook/springboot/FacebookComponentConfiguration.java      | 2 ++
 .../flatpack/springboot/FlatpackComponentAutoConfiguration.java  | 3 +++
 .../flatpack/springboot/FlatpackDataFormatAutoConfiguration.java | 3 +++
 .../flatpack/springboot/FlatpackDataFormatConfiguration.java     | 2 ++
 .../flink/springboot/FlinkComponentAutoConfiguration.java        | 3 +++
 .../component/flink/springboot/FlinkComponentConfiguration.java  | 2 ++
 .../component/fop/springboot/FopComponentAutoConfiguration.java  | 3 +++
 .../springboot/FreemarkerComponentAutoConfiguration.java         | 3 +++
 .../freemarker/springboot/FreemarkerComponentConfiguration.java  | 2 ++
 .../file/remote/springboot/FtpComponentAutoConfiguration.java    | 3 +++
 .../file/remote/springboot/FtpsComponentAutoConfiguration.java   | 3 +++
 .../file/remote/springboot/FtpsComponentConfiguration.java       | 2 ++
 .../file/remote/springboot/SftpComponentAutoConfiguration.java   | 3 +++
 .../ganglia/springboot/GangliaComponentAutoConfiguration.java    | 3 +++
 .../ganglia/springboot/GangliaComponentConfiguration.java        | 2 ++
 .../geocoder/springboot/GeoCoderComponentAutoConfiguration.java  | 3 +++
 .../component/git/springboot/GitComponentAutoConfiguration.java  | 3 +++
 .../github/springboot/GitHubComponentAutoConfiguration.java      | 3 +++
 .../springboot/GoogleCalendarComponentAutoConfiguration.java     | 3 +++
 .../springboot/GoogleCalendarComponentConfiguration.java         | 2 ++
 .../drive/springboot/GoogleDriveComponentAutoConfiguration.java  | 3 +++
 .../drive/springboot/GoogleDriveComponentConfiguration.java      | 2 ++
 .../mail/springboot/GoogleMailComponentAutoConfiguration.java    | 3 +++
 .../google/mail/springboot/GoogleMailComponentConfiguration.java | 2 ++
 .../springboot/GooglePubsubComponentAutoConfiguration.java       | 3 +++
 .../pubsub/springboot/GooglePubsubComponentConfiguration.java    | 2 ++
 .../gora/springboot/GoraComponentAutoConfiguration.java          | 3 +++
 .../groovy/springboot/GroovyLanguageAutoConfiguration.java       | 3 +++
 .../language/groovy/springboot/GroovyLanguageConfiguration.java  | 2 ++
 .../grpc/springboot/GrpcComponentAutoConfiguration.java          | 3 +++
 .../gson/springboot/GsonDataFormatAutoConfiguration.java         | 3 +++
 .../component/gson/springboot/GsonDataFormatConfiguration.java   | 2 ++
 .../springboot/GuavaEventBusComponentAutoConfiguration.java      | 3 +++
 .../eventbus/springboot/GuavaEventBusComponentConfiguration.java | 2 ++
 .../springboot/HazelcastComponentAutoConfiguration.java          | 3 +++
 .../hazelcast/springboot/HazelcastComponentConfiguration.java    | 2 ++
 .../hbase/springboot/HBaseComponentAutoConfiguration.java        | 3 +++
 .../component/hbase/springboot/HBaseComponentConfiguration.java  | 2 ++
 .../hdfs/springboot/HdfsComponentAutoConfiguration.java          | 3 +++
 .../component/hdfs/springboot/HdfsComponentConfiguration.java    | 2 ++
 .../hdfs2/springboot/HdfsComponentAutoConfiguration.java         | 4 ++--
 .../component/hdfs2/springboot/HdfsComponentConfiguration.java   | 2 +-
 .../hessian/springboot/HessianDataFormatAutoConfiguration.java   | 3 +++
 .../hessian/springboot/HessianDataFormatConfiguration.java       | 2 ++
 .../hipchat/springboot/HipchatComponentAutoConfiguration.java    | 3 +++
 .../component/hl7/springboot/HL7DataFormatAutoConfiguration.java | 3 +++
 .../component/hl7/springboot/HL7DataFormatConfiguration.java     | 2 ++
 .../hl7/springboot/TerserLanguageAutoConfiguration.java          | 3 +++
 .../component/hl7/springboot/TerserLanguageConfiguration.java    | 2 ++
 .../http/springboot/HttpComponentAutoConfiguration.java          | 3 +++
 .../component/http/springboot/HttpComponentConfiguration.java    | 2 ++
 .../http4/springboot/HttpComponentAutoConfiguration.java         | 3 +++
 .../component/http4/springboot/HttpComponentConfiguration.java   | 2 ++
 .../ical/springboot/ICalDataFormatAutoConfiguration.java         | 3 +++
 .../component/ical/springboot/ICalDataFormatConfiguration.java   | 2 ++
 .../springboot/InfinispanComponentAutoConfiguration.java         | 3 +++
 .../infinispan/springboot/InfinispanComponentConfiguration.java  | 2 ++
 .../influxdb/springboot/InfluxDbComponentAutoConfiguration.java  | 3 +++
 .../component/irc/springboot/IrcComponentAutoConfiguration.java  | 3 +++
 .../component/irc/springboot/IrcComponentConfiguration.java      | 2 ++
 .../ironmq/springboot/IronMQComponentAutoConfiguration.java      | 3 +++
 .../jackson/springboot/JacksonDataFormatAutoConfiguration.java   | 3 +++
 .../jackson/springboot/JacksonDataFormatConfiguration.java       | 2 ++
 .../springboot/JacksonXMLDataFormatAutoConfiguration.java        | 3 +++
 .../jacksonxml/springboot/JacksonXMLDataFormatConfiguration.java | 2 ++
 .../springboot/JavaSpaceComponentAutoConfiguration.java          | 3 +++
 .../jaxb/springboot/JaxbDataFormatAutoConfiguration.java         | 3 +++
 .../converter/jaxb/springboot/JaxbDataFormatConfiguration.java   | 2 ++
 .../jbpm/springboot/JBPMComponentAutoConfiguration.java          | 3 +++
 .../jcache/springboot/JCacheComponentAutoConfiguration.java      | 3 +++
 .../jcache/springboot/JCacheComponentConfiguration.java          | 2 ++
 .../component/jcr/springboot/JcrComponentAutoConfiguration.java  | 3 +++
 .../jdbc/springboot/JdbcComponentAutoConfiguration.java          | 3 +++
 .../component/jdbc/springboot/JdbcComponentConfiguration.java    | 2 ++
 .../jetty9/springboot/JettyHttpComponentAutoConfiguration9.java  | 3 +++
 .../jetty9/springboot/JettyHttpComponentConfiguration9.java      | 2 ++
 .../jgroups/springboot/JGroupsComponentAutoConfiguration.java    | 3 +++
 .../jgroups/springboot/JGroupsComponentConfiguration.java        | 2 ++
 .../jibx/springboot/JibxDataFormatAutoConfiguration.java         | 3 +++
 .../dataformat/jibx/springboot/JibxDataFormatConfiguration.java  | 2 ++
 .../jing/springboot/JingComponentAutoConfiguration.java          | 3 +++
 .../jira/springboot/JIRAComponentAutoConfiguration.java          | 3 +++
 .../component/jms/springboot/JmsComponentAutoConfiguration.java  | 3 +++
 .../component/jms/springboot/JmsComponentConfiguration.java      | 2 ++
 .../component/jmx/springboot/JMXComponentAutoConfiguration.java  | 3 +++
 .../johnzon/springboot/JohnzonDataFormatAutoConfiguration.java   | 3 +++
 .../johnzon/springboot/JohnzonDataFormatConfiguration.java       | 2 ++
 .../jolt/springboot/JoltComponentAutoConfiguration.java          | 3 +++
 .../component/jolt/springboot/JoltComponentConfiguration.java    | 2 ++
 .../language/sql/springboot/SqlLanguageAutoConfiguration.java    | 3 +++
 .../camel/language/sql/springboot/SqlLanguageConfiguration.java  | 2 ++
 .../component/jpa/springboot/JpaComponentAutoConfiguration.java  | 3 +++
 .../component/jpa/springboot/JpaComponentConfiguration.java      | 2 ++
 .../component/scp/springboot/ScpComponentAutoConfiguration.java  | 3 +++
 .../component/scp/springboot/ScpComponentConfiguration.java      | 2 ++
 .../jsonpath/springboot/JsonPathLanguageAutoConfiguration.java   | 3 +++
 .../camel/jsonpath/springboot/JsonPathLanguageConfiguration.java | 2 ++
 .../jt400/springboot/Jt400ComponentAutoConfiguration.java        | 3 +++
 .../component/jt400/springboot/Jt400ComponentConfiguration.java  | 2 ++
 .../language/juel/springboot/JuelLanguageAutoConfiguration.java  | 3 +++
 .../language/juel/springboot/JuelLanguageConfiguration.java      | 2 ++
 .../jxpath/springboot/JXPathLanguageAutoConfiguration.java       | 3 +++
 .../language/jxpath/springboot/JXPathLanguageConfiguration.java  | 2 ++
 .../kafka/springboot/KafkaComponentAutoConfiguration.java        | 3 +++
 .../component/kafka/springboot/KafkaComponentConfiguration.java  | 2 ++
 .../kestrel/springboot/KestrelComponentAutoConfiguration.java    | 3 +++
 .../kestrel/springboot/KestrelComponentConfiguration.java        | 2 ++
 .../krati/springboot/KratiComponentAutoConfiguration.java        | 3 +++
 .../springboot/KubernetesComponentAutoConfiguration.java         | 3 +++
 .../ldap/springboot/LdapComponentAutoConfiguration.java          | 3 +++
 .../linkedin/springboot/LinkedInComponentAutoConfiguration.java  | 3 +++
 .../linkedin/springboot/LinkedInComponentConfiguration.java      | 2 ++
 .../lucene/springboot/LuceneComponentAutoConfiguration.java      | 3 +++
 .../lucene/springboot/LuceneComponentConfiguration.java          | 2 ++
 .../springboot/LumberjackComponentAutoConfiguration.java         | 3 +++
 .../lumberjack/springboot/LumberjackComponentConfiguration.java  | 2 ++
 .../lzf/springboot/LZFDataFormatAutoConfiguration.java           | 3 +++
 .../dataformat/lzf/springboot/LZFDataFormatConfiguration.java    | 2 ++
 .../mail/springboot/MailComponentAutoConfiguration.java          | 3 +++
 .../component/mail/springboot/MailComponentConfiguration.java    | 2 ++
 .../springboot/MimeMultipartDataFormatAutoConfiguration.java     | 3 +++
 .../springboot/MimeMultipartDataFormatConfiguration.java         | 2 ++
 .../metrics/springboot/MetricsComponentAutoConfiguration.java    | 3 +++
 .../metrics/springboot/MetricsComponentConfiguration.java        | 2 ++
 .../client/springboot/MiloClientComponentAutoConfiguration.java  | 3 +++
 .../milo/client/springboot/MiloClientComponentConfiguration.java | 2 ++
 .../server/springboot/MiloServerComponentAutoConfiguration.java  | 3 +++
 .../milo/server/springboot/MiloServerComponentConfiguration.java | 2 ++
 .../mina2/springboot/Mina2ComponentAutoConfiguration.java        | 3 +++
 .../component/mina2/springboot/Mina2ComponentConfiguration.java  | 2 ++
 .../mllp/springboot/MllpComponentAutoConfiguration.java          | 3 +++
 .../gridfs/springboot/GridFsComponentAutoConfiguration.java      | 3 +++
 .../mongodb/springboot/MongoDbComponentAutoConfiguration.java    | 3 +++
 .../mongodb3/springboot/MongoDbComponentAutoConfiguration.java   | 3 +++
 .../mqtt/springboot/MQTTComponentAutoConfiguration.java          | 3 +++
 .../component/mqtt/springboot/MQTTComponentConfiguration.java    | 2 ++
 .../validator/msv/springboot/MsvComponentAutoConfiguration.java  | 3 +++
 .../validator/msv/springboot/MsvComponentConfiguration.java      | 2 ++
 .../mustache/springboot/MustacheComponentAutoConfiguration.java  | 3 +++
 .../mustache/springboot/MustacheComponentConfiguration.java      | 2 ++
 .../mvel/springboot/MvelComponentAutoConfiguration.java          | 3 +++
 .../language/mvel/springboot/MvelLanguageAutoConfiguration.java  | 3 +++
 .../language/mvel/springboot/MvelLanguageConfiguration.java      | 2 ++
 .../mybatis/springboot/MyBatisComponentAutoConfiguration.java    | 3 +++
 .../mybatis/springboot/MyBatisComponentConfiguration.java        | 2 ++
 .../nagios/springboot/NagiosComponentAutoConfiguration.java      | 3 +++
 .../nagios/springboot/NagiosComponentConfiguration.java          | 2 ++
 .../nats/springboot/NatsComponentAutoConfiguration.java          | 3 +++
 .../component/nats/springboot/NatsComponentConfiguration.java    | 2 ++
 .../http/springboot/NettyHttpComponentAutoConfiguration.java     | 3 +++
 .../netty/http/springboot/NettyHttpComponentConfiguration.java   | 2 ++
 .../netty/springboot/NettyComponentAutoConfiguration.java        | 3 +++
 .../component/netty/springboot/NettyComponentConfiguration.java  | 2 ++
 .../http/springboot/NettyHttpComponentAutoConfiguration.java     | 3 +++
 .../netty4/http/springboot/NettyHttpComponentConfiguration.java  | 2 ++
 .../netty4/springboot/NettyComponentAutoConfiguration.java       | 3 +++
 .../component/netty4/springboot/NettyComponentConfiguration.java | 2 ++
 .../language/ognl/springboot/OgnlLanguageAutoConfiguration.java  | 3 +++
 .../language/ognl/springboot/OgnlLanguageConfiguration.java      | 2 ++
 .../olingo2/springboot/Olingo2ComponentAutoConfiguration.java    | 3 +++
 .../olingo2/springboot/Olingo2ComponentConfiguration.java        | 2 ++
 .../olingo4/springboot/Olingo4ComponentAutoConfiguration.java    | 3 +++
 .../olingo4/springboot/Olingo4ComponentConfiguration.java        | 2 ++
 .../springboot/OpenShiftComponentAutoConfiguration.java          | 3 +++
 .../openshift/springboot/OpenShiftComponentConfiguration.java    | 2 ++
 .../cinder/springboot/CinderComponentAutoConfiguration.java      | 3 +++
 .../glance/springboot/GlanceComponentAutoConfiguration.java      | 3 +++
 .../keystone/springboot/KeystoneComponentAutoConfiguration.java  | 3 +++
 .../neutron/springboot/NeutronComponentAutoConfiguration.java    | 3 +++
 .../nova/springboot/NovaComponentAutoConfiguration.java          | 3 +++
 .../swift/springboot/SwiftComponentAutoConfiguration.java        | 3 +++
 .../springboot/OptaPlannerComponentAutoConfiguration.java        | 3 +++
 .../paho/springboot/PahoComponentAutoConfiguration.java          | 3 +++
 .../component/paho/springboot/PahoComponentConfiguration.java    | 2 ++
 .../component/pdf/springboot/PdfComponentAutoConfiguration.java  | 3 +++
 .../pgevent/springboot/PgEventComponentAutoConfiguration.java    | 3 +++
 .../printer/springboot/PrinterComponentAutoConfiguration.java    | 3 +++
 .../protobuf/springboot/ProtobufDataFormatAutoConfiguration.java | 3 +++
 .../protobuf/springboot/ProtobufDataFormatConfiguration.java     | 2 ++
 .../pubnub/springboot/PubNubComponentAutoConfiguration.java      | 3 +++
 .../quartz2/springboot/QuartzComponentAutoConfiguration.java     | 3 +++
 .../quartz2/springboot/QuartzComponentConfiguration.java         | 2 ++
 .../springboot/QuickfixjComponentAutoConfiguration.java          | 3 +++
 .../quickfixj/springboot/QuickfixjComponentConfiguration.java    | 2 ++
 .../rabbitmq/springboot/RabbitMQComponentAutoConfiguration.java  | 3 +++
 .../springboot/ReactiveStreamsComponentAutoConfiguration.java    | 3 +++
 .../springboot/ReactiveStreamsComponentConfiguration.java        | 2 ++
 .../springboot/RestSwaggerComponentAutoConfiguration.java        | 3 +++
 .../swagger/springboot/RestSwaggerComponentConfiguration.java    | 2 ++
 .../restlet/springboot/RestletComponentAutoConfiguration.java    | 3 +++
 .../restlet/springboot/RestletComponentConfiguration.java        | 2 ++
 .../component/rmi/springboot/RmiComponentAutoConfiguration.java  | 3 +++
 .../routebox/springboot/RouteboxComponentAutoConfiguration.java  | 3 +++
 .../component/rss/springboot/RssComponentAutoConfiguration.java  | 3 +++
 .../rss/springboot/RssDataFormatAutoConfiguration.java           | 3 +++
 .../dataformat/rss/springboot/RssDataFormatConfiguration.java    | 2 ++
 .../springboot/SalesforceComponentAutoConfiguration.java         | 3 +++
 .../salesforce/springboot/SalesforceComponentConfiguration.java  | 2 ++
 .../springboot/NetWeaverComponentAutoConfiguration.java          | 3 +++
 .../xquery/springboot/XQueryComponentAutoConfiguration.java      | 3 +++
 .../xquery/springboot/XQueryComponentConfiguration.java          | 2 ++
 .../xquery/springboot/XQueryLanguageAutoConfiguration.java       | 3 +++
 .../language/xquery/springboot/XQueryLanguageConfiguration.java  | 2 ++
 .../springboot/SchematronComponentAutoConfiguration.java         | 3 +++
 .../script/springboot/JavaScriptLanguageAutoConfiguration.java   | 3 +++
 .../script/springboot/JavaScriptLanguageConfiguration.java       | 2 ++
 .../builder/script/springboot/PhpLanguageAutoConfiguration.java  | 3 +++
 .../builder/script/springboot/PhpLanguageConfiguration.java      | 2 ++
 .../script/springboot/PythonLanguageAutoConfiguration.java       | 3 +++
 .../builder/script/springboot/PythonLanguageConfiguration.java   | 2 ++
 .../builder/script/springboot/RubyLanguageAutoConfiguration.java | 3 +++
 .../builder/script/springboot/RubyLanguageConfiguration.java     | 2 ++
 .../springboot/ServiceNowComponentAutoConfiguration.java         | 3 +++
 .../servicenow/springboot/ServiceNowComponentConfiguration.java  | 2 ++
 .../servlet/springboot/ServletComponentAutoConfiguration.java    | 3 +++
 .../servlet/springboot/ServletComponentConfiguration.java        | 2 ++
 .../component/sip/springboot/SipComponentAutoConfiguration.java  | 3 +++
 .../batch/springboot/SjmsBatchComponentAutoConfiguration.java    | 3 +++
 .../sjms/batch/springboot/SjmsBatchComponentConfiguration.java   | 2 ++
 .../sjms/springboot/SjmsComponentAutoConfiguration.java          | 3 +++
 .../component/sjms/springboot/SjmsComponentConfiguration.java    | 2 ++
 .../sjms2/springboot/Sjms2ComponentAutoConfiguration.java        | 3 +++
 .../component/sjms2/springboot/Sjms2ComponentConfiguration.java  | 2 ++
 .../slack/springboot/SlackComponentAutoConfiguration.java        | 3 +++
 .../component/slack/springboot/SlackComponentConfiguration.java  | 2 ++
 .../smpp/springboot/SmppComponentAutoConfiguration.java          | 3 +++
 .../component/smpp/springboot/SmppComponentConfiguration.java    | 2 ++
 .../springboot/SnakeYAMLDataFormatAutoConfiguration.java         | 3 +++
 .../snakeyaml/springboot/SnakeYAMLDataFormatConfiguration.java   | 2 ++
 .../snmp/springboot/SnmpComponentAutoConfiguration.java          | 3 +++
 .../soap/springboot/SoapJaxbDataFormatAutoConfiguration.java     | 3 +++
 .../soap/springboot/SoapJaxbDataFormatConfiguration.java         | 2 ++
 .../solr/springboot/SolrComponentAutoConfiguration.java          | 3 +++
 .../spark/springboot/SparkComponentAutoConfiguration.java        | 3 +++
 .../component/spark/springboot/SparkComponentConfiguration.java  | 2 ++
 .../splunk/springboot/SplunkComponentAutoConfiguration.java      | 3 +++
 .../splunk/springboot/SplunkComponentConfiguration.java          | 2 ++
 .../batch/springboot/SpringBatchComponentAutoConfiguration.java  | 3 +++
 .../batch/springboot/SpringBatchComponentConfiguration.java      | 2 ++
 .../springboot/SpringIntegrationComponentAutoConfiguration.java  | 3 +++
 .../springboot/SpringLdapComponentAutoConfiguration.java         | 3 +++
 .../redis/springboot/RedisComponentAutoConfiguration.java        | 3 +++
 .../event/springboot/EventComponentAutoConfiguration.java        | 3 +++
 .../language/spel/springboot/SpelLanguageAutoConfiguration.java  | 3 +++
 .../language/spel/springboot/SpelLanguageConfiguration.java      | 2 ++
 .../springboot/SpringWebserviceComponentAutoConfiguration.java   | 3 +++
 .../ws/springboot/SpringWebserviceComponentConfiguration.java    | 2 ++
 .../component/sql/springboot/SqlComponentAutoConfiguration.java  | 3 +++
 .../component/sql/springboot/SqlComponentConfiguration.java      | 2 ++
 .../stored/springboot/SqlStoredComponentAutoConfiguration.java   | 3 +++
 .../sql/stored/springboot/SqlStoredComponentConfiguration.java   | 2 ++
 .../component/ssh/springboot/SshComponentAutoConfiguration.java  | 3 +++
 .../component/ssh/springboot/SshComponentConfiguration.java      | 2 ++
 .../stax/springboot/StAXComponentAutoConfiguration.java          | 3 +++
 .../stomp/springboot/StompComponentAutoConfiguration.java        | 3 +++
 .../component/stomp/springboot/StompComponentConfiguration.java  | 2 ++
 .../stream/springboot/StreamComponentAutoConfiguration.java      | 3 +++
 .../springboot/StringTemplateComponentAutoConfiguration.java     | 3 +++
 .../syslog/springboot/SyslogDataFormatAutoConfiguration.java     | 3 +++
 .../syslog/springboot/SyslogDataFormatConfiguration.java         | 2 ++
 .../springboot/TidyMarkupDataFormatAutoConfiguration.java        | 3 +++
 .../tagsoup/springboot/TidyMarkupDataFormatConfiguration.java    | 2 ++
 .../tarfile/springboot/TarFileDataFormatAutoConfiguration.java   | 3 +++
 .../tarfile/springboot/TarFileDataFormatConfiguration.java       | 2 ++
 .../telegram/springboot/TelegramComponentAutoConfiguration.java  | 3 +++
 .../telegram/springboot/TelegramComponentConfiguration.java      | 2 ++
 .../tika/springboot/TikaComponentAutoConfiguration.java          | 3 +++
 .../twitter/springboot/TwitterComponentAutoConfiguration.java    | 3 +++
 .../twitter/springboot/TwitterComponentConfiguration.java        | 2 ++
 .../undertow/springboot/UndertowComponentAutoConfiguration.java  | 3 +++
 .../undertow/springboot/UndertowComponentConfiguration.java      | 2 ++
 .../springboot/UniVocityCsvDataFormatAutoConfiguration.java      | 3 +++
 .../springboot/UniVocityCsvDataFormatConfiguration.java          | 2 ++
 .../UniVocityFixedWidthDataFormatAutoConfiguration.java          | 3 +++
 .../springboot/UniVocityFixedWidthDataFormatConfiguration.java   | 2 ++
 .../springboot/UniVocityTsvDataFormatAutoConfiguration.java      | 3 +++
 .../springboot/UniVocityTsvDataFormatConfiguration.java          | 2 ++
 .../velocity/springboot/VelocityComponentAutoConfiguration.java  | 3 +++
 .../velocity/springboot/VelocityComponentConfiguration.java      | 2 ++
 .../vertx/springboot/VertxComponentAutoConfiguration.java        | 3 +++
 .../component/vertx/springboot/VertxComponentConfiguration.java  | 2 ++
 .../weather/springboot/WeatherComponentAutoConfiguration.java    | 3 +++
 .../springboot/WebsocketComponentAutoConfiguration.java          | 3 +++
 .../websocket/springboot/WebsocketComponentConfiguration.java    | 2 ++
 .../xmlbeans/springboot/XmlBeansDataFormatAutoConfiguration.java | 3 +++
 .../xmlbeans/springboot/XmlBeansDataFormatConfiguration.java     | 2 ++
 .../xmljson/springboot/XmlJsonDataFormatAutoConfiguration.java   | 3 +++
 .../xmljson/springboot/XmlJsonDataFormatConfiguration.java       | 2 ++
 .../xmlrpc/springboot/XmlRpcComponentAutoConfiguration.java      | 3 +++
 .../xmlrpc/springboot/XmlRpcDataFormatAutoConfiguration.java     | 3 +++
 .../xmlrpc/springboot/XmlRpcDataFormatConfiguration.java         | 2 ++
 .../springboot/XmlSignatureComponentAutoConfiguration.java       | 3 +++
 .../springboot/XmlSignatureComponentConfiguration.java           | 2 ++
 .../springboot/XMLSecurityDataFormatAutoConfiguration.java       | 3 +++
 .../springboot/XMLSecurityDataFormatConfiguration.java           | 2 ++
 .../xmpp/springboot/XmppComponentAutoConfiguration.java          | 3 +++
 .../xstream/springboot/JsonDataFormatAutoConfiguration.java      | 3 +++
 .../xstream/springboot/JsonDataFormatConfiguration.java          | 2 ++
 .../xstream/springboot/XStreamDataFormatAutoConfiguration.java   | 3 +++
 .../xstream/springboot/XStreamDataFormatConfiguration.java       | 2 ++
 .../yammer/springboot/YammerComponentAutoConfiguration.java      | 3 +++
 .../yammer/springboot/YammerComponentConfiguration.java          | 2 ++
 .../zendesk/springboot/ZendeskComponentAutoConfiguration.java    | 3 +++
 .../zendesk/springboot/ZendeskComponentConfiguration.java        | 2 ++
 .../zipfile/springboot/ZipFileDataFormatAutoConfiguration.java   | 3 +++
 .../zipfile/springboot/ZipFileDataFormatConfiguration.java       | 2 ++
 .../springboot/MasterComponentAutoConfiguration.java             | 3 +++
 .../zookeepermaster/springboot/MasterComponentConfiguration.java | 2 ++
 .../springboot/ZooKeeperComponentAutoConfiguration.java          | 3 +++
 .../zookeeper/springboot/ZooKeeperComponentConfiguration.java    | 2 ++
 492 files changed, 1276 insertions(+), 3 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ahc-starter/src/main/java/org/apache/camel/component/ahc/springboot/AhcComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ahc-starter/src/main/java/org/apache/camel/component/ahc/springboot/AhcComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-ahc-starter/src/main/java/org/apache/camel/component/ahc/springboot/AhcComponentAutoConfiguration.java
index 9ecf975..671810a 100644
--- a/platforms/spring-boot/components-starter/camel-ahc-starter/src/main/java/org/apache/camel/component/ahc/springboot/AhcComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ahc-starter/src/main/java/org/apache/camel/component/ahc/springboot/AhcComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.ahc.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.ahc.AhcComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(AhcComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class AhcComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ahc-starter/src/main/java/org/apache/camel/component/ahc/springboot/AhcComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ahc-starter/src/main/java/org/apache/camel/component/ahc/springboot/AhcComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-ahc-starter/src/main/java/org/apache/camel/component/ahc/springboot/AhcComponentConfiguration.java
index d48437f..b810679 100644
--- a/platforms/spring-boot/components-starter/camel-ahc-starter/src/main/java/org/apache/camel/component/ahc/springboot/AhcComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ahc-starter/src/main/java/org/apache/camel/component/ahc/springboot/AhcComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.ahc.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.ahc.AhcBinding;
 import org.apache.camel.spi.HeaderFilterStrategy;
 import org.apache.camel.util.jsse.SSLContextParameters;
@@ -29,6 +30,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.ahc)
 public class AhcComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ahc-ws-starter/src/main/java/org/apache/camel/component/ahc/ws/springboot/WsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ahc-ws-starter/src/main/java/org/apache/camel/component/ahc/ws/springboot/WsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-ahc-ws-starter/src/main/java/org/apache/camel/component/ahc/ws/springboot/WsComponentAutoConfiguration.java
index f63cc7c..d370983 100644
--- a/platforms/spring-boot/components-starter/camel-ahc-ws-starter/src/main/java/org/apache/camel/component/ahc/ws/springboot/WsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ahc-ws-starter/src/main/java/org/apache/camel/component/ahc/ws/springboot/WsComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.ahc.ws.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.ahc.ws.WsComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(WsComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class WsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-ahc-ws-starter/src/main/java/org/apache/camel/component/ahc/ws/springboot/WsComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-ahc-ws-starter/src/main/java/org/apache/camel/component/ahc/ws/springboot/WsComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-ahc-ws-starter/src/main/java/org/apache/camel/component/ahc/ws/springboot/WsComponentConfiguration.java
index 160a961..25dea26 100644
--- a/platforms/spring-boot/components-starter/camel-ahc-ws-starter/src/main/java/org/apache/camel/component/ahc/ws/springboot/WsComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-ahc-ws-starter/src/main/java/org/apache/camel/component/ahc/ws/springboot/WsComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.ahc.ws.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.ahc.AhcBinding;
 import org.apache.camel.spi.HeaderFilterStrategy;
 import org.apache.camel.util.jsse.SSLContextParameters;
@@ -29,6 +30,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.ahc-ws)
 public class WsComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-amqp-starter/src/main/java/org/apache/camel/component/amqp/springboot/AMQPComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-amqp-starter/src/main/java/org/apache/camel/component/amqp/springboot/AMQPComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-amqp-starter/src/main/java/org/apache/camel/component/amqp/springboot/AMQPComponentAutoConfiguration.java
index d425353..1805ce2 100644
--- a/platforms/spring-boot/components-starter/camel-amqp-starter/src/main/java/org/apache/camel/component/amqp/springboot/AMQPComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-amqp-starter/src/main/java/org/apache/camel/component/amqp/springboot/AMQPComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.amqp.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.amqp.AMQPComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(AMQPComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class AMQPComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-amqp-starter/src/main/java/org/apache/camel/component/amqp/springboot/AMQPComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-amqp-starter/src/main/java/org/apache/camel/component/amqp/springboot/AMQPComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-amqp-starter/src/main/java/org/apache/camel/component/amqp/springboot/AMQPComponentConfiguration.java
index f30c727..ff88503 100644
--- a/platforms/spring-boot/components-starter/camel-amqp-starter/src/main/java/org/apache/camel/component/amqp/springboot/AMQPComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-amqp-starter/src/main/java/org/apache/camel/component/amqp/springboot/AMQPComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.amqp.springboot;
 
+import javax.annotation.Generated;
 import javax.jms.ConnectionFactory;
 import javax.jms.ExceptionListener;
 import org.apache.camel.LoggingLevel;
@@ -42,6 +43,7 @@ import org.springframework.util.ErrorHandler;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.amqp)
 public class AMQPComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-apns-starter/src/main/java/org/apache/camel/component/apns/springboot/ApnsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-apns-starter/src/main/java/org/apache/camel/component/apns/springboot/ApnsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-apns-starter/src/main/java/org/apache/camel/component/apns/springboot/ApnsComponentAutoConfiguration.java
index 4f7ba5b..c2233ce 100644
--- a/platforms/spring-boot/components-starter/camel-apns-starter/src/main/java/org/apache/camel/component/apns/springboot/ApnsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-apns-starter/src/main/java/org/apache/camel/component/apns/springboot/ApnsComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.apns.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.apns.ApnsComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(ApnsComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class ApnsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-apns-starter/src/main/java/org/apache/camel/component/apns/springboot/ApnsComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-apns-starter/src/main/java/org/apache/camel/component/apns/springboot/ApnsComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-apns-starter/src/main/java/org/apache/camel/component/apns/springboot/ApnsComponentConfiguration.java
index a5f9e0a..93fc197 100644
--- a/platforms/spring-boot/components-starter/camel-apns-starter/src/main/java/org/apache/camel/component/apns/springboot/ApnsComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-apns-starter/src/main/java/org/apache/camel/component/apns/springboot/ApnsComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.apns.springboot;
 
+import javax.annotation.Generated;
 import com.notnoop.apns.ApnsService;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.boot.context.properties.NestedConfigurationProperty;
@@ -25,6 +26,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.apns)
 public class ApnsComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-asterisk-starter/src/main/java/org/apache/camel/component/asterisk/springboot/AsteriskComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-asterisk-starter/src/main/java/org/apache/camel/component/asterisk/springboot/AsteriskComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-asterisk-starter/src/main/java/org/apache/camel/component/asterisk/springboot/AsteriskComponentAutoConfiguration.java
index 1faa558..ce8b6f9 100644
--- a/platforms/spring-boot/components-starter/camel-asterisk-starter/src/main/java/org/apache/camel/component/asterisk/springboot/AsteriskComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-asterisk-starter/src/main/java/org/apache/camel/component/asterisk/springboot/AsteriskComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.asterisk.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.asterisk.AsteriskComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(AsteriskComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class AsteriskComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-atmos-starter/src/main/java/org/apache/camel/component/atmos/springboot/AtmosComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-atmos-starter/src/main/java/org/apache/camel/component/atmos/springboot/AtmosComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-atmos-starter/src/main/java/org/apache/camel/component/atmos/springboot/AtmosComponentAutoConfiguration.java
index c1d7b1f..faca500 100644
--- a/platforms/spring-boot/components-starter/camel-atmos-starter/src/main/java/org/apache/camel/component/atmos/springboot/AtmosComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-atmos-starter/src/main/java/org/apache/camel/component/atmos/springboot/AtmosComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.atmos.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.atmos.AtmosComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(AtmosComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class AtmosComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-atmosphere-websocket-starter/src/main/java/org/apache/camel/component/atmosphere/websocket/springboot/WebsocketComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-atmosphere-websocket-starter/src/main/java/org/apache/camel/component/atmosphere/websocket/springboot/WebsocketComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-atmosphere-websocket-starter/src/main/java/org/apache/camel/component/atmosphere/websocket/springboot/WebsocketComponentAutoConfiguration.java
index 99a12f6..9b56ba1 100644
--- a/platforms/spring-boot/components-starter/camel-atmosphere-websocket-starter/src/main/java/org/apache/camel/component/atmosphere/websocket/springboot/WebsocketComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-atmosphere-websocket-starter/src/main/java/org/apache/camel/component/atmosphere/websocket/springboot/WebsocketComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.atmosphere.websocket.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.atmosphere.websocket.WebsocketComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(WebsocketComponentAutoConfiguration.Condition.class)
@@ -84,6 +86,7 @@ public class WebsocketComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-atmosphere-websocket-starter/src/main/java/org/apache/camel/component/atmosphere/websocket/springboot/WebsocketComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-atmosphere-websocket-starter/src/main/java/org/apache/camel/component/atmosphere/websocket/springboot/WebsocketComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-atmosphere-websocket-starter/src/main/java/org/apache/camel/component/atmosphere/websocket/springboot/WebsocketComponentConfiguration.java
index af474e8..753dac0 100644
--- a/platforms/spring-boot/components-starter/camel-atmosphere-websocket-starter/src/main/java/org/apache/camel/component/atmosphere/websocket/springboot/WebsocketComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-atmosphere-websocket-starter/src/main/java/org/apache/camel/component/atmosphere/websocket/springboot/WebsocketComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.atmosphere.websocket.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.component.servlet.HttpRegistry;
 import org.apache.camel.http.common.HttpBinding;
 import org.apache.camel.http.common.HttpConfiguration;
@@ -28,6 +29,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.atmosphere-websocket)
 public class WebsocketComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-atom-starter/src/main/java/org/apache/camel/component/atom/springboot/AtomComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-atom-starter/src/main/java/org/apache/camel/component/atom/springboot/AtomComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-atom-starter/src/main/java/org/apache/camel/component/atom/springboot/AtomComponentAutoConfiguration.java
index c39a6c4..1d41386 100644
--- a/platforms/spring-boot/components-starter/camel-atom-starter/src/main/java/org/apache/camel/component/atom/springboot/AtomComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-atom-starter/src/main/java/org/apache/camel/component/atom/springboot/AtomComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.atom.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.atom.AtomComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(AtomComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class AtomComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/component/avro/springboot/AvroComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/component/avro/springboot/AvroComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/component/avro/springboot/AvroComponentAutoConfiguration.java
index 1b60f16..7ce7934 100644
--- a/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/component/avro/springboot/AvroComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/component/avro/springboot/AvroComponentAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.component.avro.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.avro.AvroComponent;
 import org.apache.camel.util.IntrospectionSupport;
@@ -40,6 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(AvroComponentAutoConfiguration.Condition.class)
@@ -83,6 +85,7 @@ public class AvroComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/component/avro/springboot/AvroComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/component/avro/springboot/AvroComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/component/avro/springboot/AvroComponentConfiguration.java
index ca10519..42a61fb 100644
--- a/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/component/avro/springboot/AvroComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/component/avro/springboot/AvroComponentConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.avro.springboot;
 
+import javax.annotation.Generated;
 import org.apache.avro.Protocol;
 import org.apache.camel.component.avro.AvroTransport;
 import org.springframework.boot.context.properties.ConfigurationProperties;
@@ -26,6 +27,7 @@ import org.springframework.boot.context.properties.NestedConfigurationProperty;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.avro)
 public class AvroComponentConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/dataformat/avro/springboot/AvroDataFormatAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/dataformat/avro/springboot/AvroDataFormatAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/dataformat/avro/springboot/AvroDataFormatAutoConfiguration.java
index f4e6093..4d5debf 100644
--- a/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/dataformat/avro/springboot/AvroDataFormatAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/dataformat/avro/springboot/AvroDataFormatAutoConfiguration.java
@@ -18,6 +18,7 @@ package org.apache.camel.dataformat.avro.springboot;
 
 import java.util.HashMap;
 import java.util.Map;
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.CamelContextAware;
 import org.apache.camel.RuntimeCamelException;
@@ -43,6 +44,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(AvroDataFormatAutoConfiguration.Condition.class)
@@ -82,6 +84,7 @@ public class AvroDataFormatAutoConfiguration {
         };
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/dataformat/avro/springboot/AvroDataFormatConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/dataformat/avro/springboot/AvroDataFormatConfiguration.java b/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/dataformat/avro/springboot/AvroDataFormatConfiguration.java
index 2f5a6a0..54db754 100644
--- a/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/dataformat/avro/springboot/AvroDataFormatConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-avro-starter/src/main/java/org/apache/camel/dataformat/avro/springboot/AvroDataFormatConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.dataformat.avro.springboot;
 
+import javax.annotation.Generated;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
@@ -23,6 +24,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.dataformat.avro)
 public class AvroDataFormatConfiguration {
 

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/cw/springboot/CwComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/cw/springboot/CwComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/cw/springboot/CwComponentAutoConfiguration.java
index 6a1bc5d..4f195f6 100644
--- a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/cw/springboot/CwComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/cw/springboot/CwComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.aws.cw.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.aws.cw.CwComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(CwComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class CwComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ddb/springboot/DdbComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ddb/springboot/DdbComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ddb/springboot/DdbComponentAutoConfiguration.java
index 4782566..b34ab33 100644
--- a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ddb/springboot/DdbComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ddb/springboot/DdbComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.aws.ddb.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.aws.ddb.DdbComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DdbComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class DdbComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ddbstream/springboot/DdbStreamComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ddbstream/springboot/DdbStreamComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ddbstream/springboot/DdbStreamComponentAutoConfiguration.java
index 51d8ef5..35cc24e 100644
--- a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ddbstream/springboot/DdbStreamComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ddbstream/springboot/DdbStreamComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.aws.ddbstream.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.aws.ddbstream.DdbStreamComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(DdbStreamComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class DdbStreamComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ec2/springboot/EC2ComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ec2/springboot/EC2ComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ec2/springboot/EC2ComponentAutoConfiguration.java
index 5ec7a17..914b9f1 100644
--- a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ec2/springboot/EC2ComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ec2/springboot/EC2ComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.aws.ec2.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.aws.ec2.EC2Component;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(EC2ComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class EC2ComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/firehose/springboot/KinesisFirehoseComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/firehose/springboot/KinesisFirehoseComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/firehose/springboot/KinesisFirehoseComponentAutoConfiguration.java
index 7f60733..2f91996 100644
--- a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/firehose/springboot/KinesisFirehoseComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/firehose/springboot/KinesisFirehoseComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.aws.firehose.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.aws.firehose.KinesisFirehoseComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(KinesisFirehoseComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class KinesisFirehoseComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/kinesis/springboot/KinesisComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/kinesis/springboot/KinesisComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/kinesis/springboot/KinesisComponentAutoConfiguration.java
index 402f43d..043a07c 100644
--- a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/kinesis/springboot/KinesisComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/kinesis/springboot/KinesisComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.aws.kinesis.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.aws.kinesis.KinesisComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(KinesisComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class KinesisComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/s3/springboot/S3ComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/s3/springboot/S3ComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/s3/springboot/S3ComponentAutoConfiguration.java
index 192ebf0..eff632b 100644
--- a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/s3/springboot/S3ComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/s3/springboot/S3ComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.aws.s3.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.aws.s3.S3Component;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(S3ComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class S3ComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sdb/springboot/SdbComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sdb/springboot/SdbComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sdb/springboot/SdbComponentAutoConfiguration.java
index 784b48d..17de781 100644
--- a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sdb/springboot/SdbComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sdb/springboot/SdbComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.aws.sdb.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.aws.sdb.SdbComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SdbComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class SdbComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ses/springboot/SesComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ses/springboot/SesComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ses/springboot/SesComponentAutoConfiguration.java
index da577b8..472b4f8 100644
--- a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ses/springboot/SesComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/ses/springboot/SesComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.aws.ses.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.aws.ses.SesComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SesComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class SesComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sns/springboot/SnsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sns/springboot/SnsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sns/springboot/SnsComponentAutoConfiguration.java
index 3a89352..e7edf7f 100644
--- a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sns/springboot/SnsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sns/springboot/SnsComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.aws.sns.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.aws.sns.SnsComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SnsComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class SnsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/2297128f/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sqs/springboot/SqsComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sqs/springboot/SqsComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sqs/springboot/SqsComponentAutoConfiguration.java
index d898529..f8a6650 100644
--- a/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sqs/springboot/SqsComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-aws-starter/src/main/java/org/apache/camel/component/aws/sqs/springboot/SqsComponentAutoConfiguration.java
@@ -16,6 +16,7 @@
  */
 package org.apache.camel.component.aws.sqs.springboot;
 
+import javax.annotation.Generated;
 import org.apache.camel.CamelContext;
 import org.apache.camel.component.aws.sqs.SqsComponent;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
@@ -36,6 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(SqsComponentAutoConfiguration.Condition.class)
@@ -53,6 +55,7 @@ public class SqsComponentAutoConfiguration {
         return component;
     }
 
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(


"
"199","370","2017-04-19 08:35:58+00:00","zregvart@apache.org","['commits@camel.apache.org']","[13/13] camel git commit: Regenerate component documentation list","Return-Path: <commits-return-55744-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id D847618712
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:35:50 +0000 (UTC)
Received: (qmail 40686 invoked by uid 500); 19 Apr 2017 08:35:50 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 40540 invoked by uid 500); 19 Apr 2017 08:35:49 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 39693 invoked by uid 99); 19 Apr 2017 08:35:47 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:35:46 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id BAA6AE8E72; Wed, 19 Apr 2017 08:35:46 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 08:35:58 -0000
Message-Id: <67063c4f85164873b823bcc9de18e923@git.apache.org>
In-Reply-To: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
References: <532bd530059b491faaab8e91173b5fd8@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [13/13] camel git commit: Regenerate component documentation list

Regenerate component documentation list

This updates the component list in the documentation.


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/492bef34
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/492bef34
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/492bef34

Branch: refs/heads/master
Commit: 492bef3432349317f95622c0528e38f2e72ea866
Parents: 2297128
Author: Zoran Regvart <zregvart@apache.org>
Authored: Wed Apr 19 10:27:50 2017 +0200
Committer: Zoran Regvart <zregvart@apache.org>
Committed: Wed Apr 19 10:32:35 2017 +0200

----------------------------------------------------------------------
 components/readme.adoc         | 17 ++++++++++++++++-
 docs/user-manual/en/SUMMARY.md |  5 +++++
 2 files changed, 21 insertions(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/492bef34/components/readme.adoc
----------------------------------------------------------------------
diff --git a/components/readme.adoc b/components/readme.adoc
index 09c9bf1..a3990e7 100644
--- a/components/readme.adoc
+++ b/components/readme.adoc
@@ -2,7 +2,7 @@ Components
 ^^^^^^^^^^
 
 // components: START
-Number of Components: 231 in 184 JAR artifacts (14 deprecated)
+Number of Components: 236 in 185 JAR artifacts (14 deprecated)
 
 [width100%,cols4,1,5,optionsheader]
 |
@@ -251,12 +251,27 @@ Number of Components: 231 in 184 JAR artifacts (14 deprecated)
 | link:camel-google-drive/src/main/docs/google-drive-component.adoc[Google Drive] (camel-google-drive) +
 `google-drive:apiName/methodName` | 2.14 | The google-drive component provides access to Google Drive file storage service.
 
+| link:camel-gae/src/main/docs/gauth-component.adoc[Google GAuth] (camel-gae) +
+`gauth:name` |  | The gauth component is used by web applications to implement a Google-specific OAuth consumer.
+
+| link:camel-gae/src/main/docs/ghttp-component.adoc[Google HTTP] (camel-gae) +
+`ghttp:httpUri` |  | The ghttp component provides HTTP connectivity to the GAE.
+
+| link:camel-gae/src/main/docs/glogin-component.adoc[Google Login] (camel-gae) +
+`glogin:hostName` |  | The glogin component is used by Camel applications outside Google App Engine (GAE) for programmatic login to GAE applications.
+
+| link:camel-gae/src/main/docs/gmail-component.adoc[Google mail] (camel-gae) +
+`gmail:sender` |  | The gmail component is used for sending emails to GAE.
+
 | link:camel-google-mail/src/main/docs/google-mail-component.adoc[Google Mail] (camel-google-mail) +
 `google-mail:apiName/methodName` | 2.15 | The google-mail component provides access to Google Mail.
 
 | link:camel-google-pubsub/src/main/docs/google-pubsub-component.adoc[Google Pubsub] (camel-google-pubsub) +
 `google-pubsub:projectId:destinationName` | 2.19 | Messaging client for Google Cloud Platform PubSub Service: https://cloud.google.com/pubsub/
 
+| link:camel-gae/src/main/docs/gtask-component.adoc[Google Task] (camel-gae) +
+`gtask:queueName` |  | The gtask component is used for sending messages to GAE task queue service.
+
 | link:camel-gora/src/main/docs/gora-component.adoc[Gora] (camel-gora) +
 `gora:name` | 2.14 | The gora component allows you to work with NoSQL databases using the Apache Gora framework.
 

http://git-wip-us.apache.org/repos/asf/camel/blob/492bef34/docs/user-manual/en/SUMMARY.md
----------------------------------------------------------------------
diff --git a/docs/user-manual/en/SUMMARY.md b/docs/user-manual/en/SUMMARY.md
index 25968df..62f43ac 100644
--- a/docs/user-manual/en/SUMMARY.md
+++ b/docs/user-manual/en/SUMMARY.md
@@ -195,8 +195,13 @@
 	* [GitHub](github-component.adoc)
 	* [Google Calendar](google-calendar-component.adoc)
 	* [Google Drive](google-drive-component.adoc)
+	* [Google GAuth](gauth-component.adoc)
+	* [Google HTTP](ghttp-component.adoc)
+	* [Google Login](glogin-component.adoc)
+	* [Google mail](gmail-component.adoc)
 	* [Google Mail](google-mail-component.adoc)
 	* [Google Pubsub](google-pubsub-component.adoc)
+	* [Google Task](gtask-component.adoc)
 	* [Gora](gora-component.adoc)
 	* [Grape](grape-component.adoc)
 	* [gRPC](grpc-component.adoc)


"
"200","1413","2017-04-19 08:38:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Resolved] (CAMEL-11165) Add @Generated annotation to code
 generated by SpringBootAutoConfigurationMojo","Return-Path: <issues-return-41538-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 26B1E1872C
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 08:38:46 +0000 (UTC)
Received: (qmail 43829 invoked by uid 500); 19 Apr 2017 08:38:46 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 43789 invoked by uid 500); 19 Apr 2017 08:38:46 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 43780 invoked by uid 99); 19 Apr 2017 08:38:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:38:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 8F1A81AF8AD
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:38:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id RJhUjyPkrODY for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 08:38:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id D59555F39D
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:38:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 2D647E06BB
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:38:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 8DE2521B45
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:38:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 08:38:41 +0000 (UTC)
From: Zoran Regvart (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064724.1492525323000.315758.1492591121578@Atlassian.JIRA>
In-Reply-To: <JIRA.13064724.1492525323000@Atlassian.JIRA>
References: <JIRA.13064724.1492525323000@Atlassian.JIRA> <JIRA.13064724.1492525323590@jira-lw-us.apache.org>
Subject: [jira] [Resolved] (CAMEL-11165) Add @Generated annotation to code
 generated by SpringBootAutoConfigurationMojo
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11165?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Zoran Regvart resolved CAMEL-11165.
-----------------------------------
    Resolution: Fixed

The {{date}} annotation member was removed and the Spring Boot auto configuration source files have been updated.

> Add @Generated annotation to code generated by SpringBootAutoConfigurationMojo
> ------------------------------------------------------------------------------
>
>                 Key: CAMEL-11165
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11165
>             Project: Camel
>          Issue Type: Improvement
>          Components: tooling
>            Reporter: Zoran Regvart
>            Assignee: Zoran Regvart
>            Priority: Trivial
>             Fix For: 2.19.0
>
>
> To help IDEs and code analysis tools classes generated by the Camel Maven plugin for Spring Boot configuration support should be annotated with {{@Generated}}.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"201","1414","2017-04-19 08:39:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Reopened] (CAMEL-11163) Add @Generated annotation in REST
 DSL Swagger generated code","Return-Path: <issues-return-41539-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id C0B511873D
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 08:39:44 +0000 (UTC)
Received: (qmail 44782 invoked by uid 500); 19 Apr 2017 08:39:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 44740 invoked by uid 500); 19 Apr 2017 08:39:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 44731 invoked by uid 99); 19 Apr 2017 08:39:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:39:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 3170B185E94
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:39:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id XytJSaxSqxTV for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 08:39:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id E2E7C5F39D
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:39:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 1E5DBE07E1
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:39:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 90D9021B46
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:39:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 08:39:41 +0000 (UTC)
From: Zoran Regvart (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064693.1492521308000.315761.1492591181591@Atlassian.JIRA>
In-Reply-To: <JIRA.13064693.1492521308000@Atlassian.JIRA>
References: <JIRA.13064693.1492521308000@Atlassian.JIRA> <JIRA.13064693.1492521308634@jira-lw-us.apache.org>
Subject: [jira] [Reopened] (CAMEL-11163) Add @Generated annotation in REST
 DSL Swagger generated code
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11163?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Zoran Regvart reopened CAMEL-11163:
-----------------------------------

The {{date}} property on the {{@Generated}} annotation should be optional.

> Add @Generated annotation in REST DSL Swagger generated code
> ------------------------------------------------------------
>
>                 Key: CAMEL-11163
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11163
>             Project: Camel
>          Issue Type: Improvement
>          Components: tooling
>            Reporter: Zoran Regvart
>            Assignee: Zoran Regvart
>            Priority: Trivial
>             Fix For: 2.19.0
>
>
> REST DSL Swagger code generation should add {{@Generated}} annotation to the source code this will help IDEs and code analysis tools to treat the generated code as generated.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"202","1874","2017-04-19 01:42:49-07:00","nicolas.gehling@adesso.de","['users@camel.apache.org']","How to check after startup if folder exists","Return-Path: <users-return-65357-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 485B518829
	for <apmail-camel-users-archive@www.apache.org>; Wed, 19 Apr 2017 08:58:13 +0000 (UTC)
Received: (qmail 79736 invoked by uid 500); 19 Apr 2017 08:58:12 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 79695 invoked by uid 500); 19 Apr 2017 08:58:12 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Delivered-To: moderator for users@camel.apache.org
Received: (qmail 51951 invoked by uid 99); 19 Apr 2017 08:42:55 -0000
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 1.566
X-Spam-Level: *
X-Spam-Status: No, score1.566 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, RCVD_IN_DNSWL_LOW-0.7,
	RCVD_IN_MSPIKE_H3-0.01, RCVD_IN_MSPIKE_WL-0.01, SPF_SOFTFAIL0.972,
	URIBL_BLOCKED0.001, URI_HEX1.313] autolearndisabled
Authentication-Results: spamd4-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dmessagingengine.com
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed; d
	messagingengine.com; hcontent-transfer-encoding:content-type
	:date:from:message-id:mime-version:subject:to:x-me-sender
	:x-me-sender:x-sasl-enc:x-sasl-enc; sfm1; bhFrQ12/mYInHkfssKTm
	vYxHhxEZgtjCp83yqNW210cfw; bRoCiz4nqIYcPySwJHedZMOTKvtdJmbkOdA
	E67p2MYtdMUSXdCsEoQId/4Dt7RteAndEScGv78sELlGJpGfKQjfxrOuUx2/jz+4
	6vQIAaNEPt4HysudXas5a+D36FfXSb3l9htF6SCo1HMxla0ibpoQCHmLHo0AmvC3
	CLC3iPIQJfe5KphpL5eZgqGfrprfXGHiTJCU5qjbBLuK/jeRLg7OTBgJm98zihbJ
	0rOJKL6r0Awx/p0vecSBMOgV7f1sxma1I2OUA4Lrh8fHesFp8M772MHbd/8uOrET
	VHF6h+Ldsuav6HcNoLpdxj/YH4ZvxYU4L0ybY2CdcCuf98g0FG7w
X-ME-Sender: <xms:CiP3WC2MNVUB6YKNsm_KfpTAlXXHLRdRvupxG0p-tHo4VPo6-_kJqg>
X-Sasl-enc: ZT+5Q4jCiXtSLToeBrKBM2QKKEWZD4rEPATDzIAMX+pa 1492591370
Date: Wed, 19 Apr 2017 01:42:49 -0700 (MST)
From: Nico159 <nicolas.gehling@adesso.de>
To: users@camel.apache.org
Message-ID: <1492591369447-5797895.post@n5.nabble.com>
Subject: How to check after startup if folder exists
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Hi everyone,

Im looking for a way to check, if a folder exists, after the route is
started.

While startup I usually use auteCreate for the inbound folder, so there is
no problem if my inbound is not there yet, but if somebody (or something)
delete this created inbound folder (while route is running), the route will
check forever a non-existing folder (deadlock). 

Ive tried to use auteCreatefalse and startingDirectoryMustExisttrue
(while not having my input folder), therefore I get an error, but just at
the start of my route. 

Is there any way to check periodically if the input folder is there and
re-autocreate it if necessary (or throw an error?)

Thx in advance for any kind of help





--
View this message in context: http://camel.465427.n5.nabble.com/How-to-check-after-startup-if-folder-exists-tp5797895.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"203","374","2017-04-19 08:44:54+00:00","acosentino@apache.org","['commits@camel.apache.org']","camel git commit: Upgrade Wiremock to version 2.6.0","Return-Path: <commits-return-55747-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 7B65418762
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:44:54 +0000 (UTC)
Received: (qmail 52907 invoked by uid 500); 19 Apr 2017 08:44:54 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 52855 invoked by uid 500); 19 Apr 2017 08:44:54 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 52846 invoked by uid 99); 19 Apr 2017 08:44:54 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:44:54 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 13419DFBB7; Wed, 19 Apr 2017 08:44:54 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: acosentino@apache.org
To: commits@camel.apache.org
Message-Id: <06f2b9c6afc34951a730ca0c74f1f1a6@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Upgrade Wiremock to version 2.6.0
Date: Wed, 19 Apr 2017 08:44:54 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 492bef343 -> 9cf875246


Upgrade Wiremock to version 2.6.0


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/9cf87524
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/9cf87524
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/9cf87524

Branch: refs/heads/master
Commit: 9cf875246e91ee74baab2c78cc5d846c6e3ab8fb
Parents: 492bef3
Author: Andrea Cosentino <ancosen@gmail.com>
Authored: Wed Apr 19 10:44:16 2017 +0200
Committer: Andrea Cosentino <ancosen@gmail.com>
Committed: Wed Apr 19 10:44:16 2017 +0200

----------------------------------------------------------------------
 parent/pom.xml                                                   | 2 +-
 .../bonita/springboot/BonitaComponentAutoConfiguration.java      | 4 ++--
 .../pubnub/springboot/PubNubComponentAutoConfiguration.java      | 4 ++--
 .../springboot/RestSwaggerComponentAutoConfiguration.java        | 4 ++--
 .../swagger/springboot/RestSwaggerComponentConfiguration.java    | 2 +-
 5 files changed, 8 insertions(+), 8 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/9cf87524/parent/pom.xml
----------------------------------------------------------------------
diff --git a/parent/pom.xml b/parent/pom.xml
index b3284be..79bd2fa 100644
--- a/parent/pom.xml
+++ b/parent/pom.xml
@@ -661,7 +661,7 @@
     <weld2-version>2.4.2.Final</weld2-version>
     <weld3-version>3.0.0.CR2</weld3-version>
     <werken-xpath-bundle-version>0.9.4_5</werken-xpath-bundle-version>
-    <wiremock-version>2.5.1</wiremock-version>
+    <wiremock-version>2.6.0</wiremock-version>
     <woodstox-version>4.4.1</woodstox-version>
     <ws-commons-util-bundle-version>1.0.2_2</ws-commons-util-bundle-version>
     <wsdl4j-bundle-version>1.6.2_6</wsdl4j-bundle-version>

http://git-wip-us.apache.org/repos/asf/camel/blob/9cf87524/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java
index 8bfa8d8..deee612 100644
--- a/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java
@@ -37,7 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
-@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
+@Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:39:00.866Z)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BonitaComponentAutoConfiguration.Condition.class)
@@ -55,7 +55,7 @@ public class BonitaComponentAutoConfiguration {
         return component;
     }
 
-    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
+    @Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:39:00.940Z)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/9cf87524/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java
index 671c1ce..c649698 100644
--- a/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java
@@ -37,7 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
-@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
+@Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:39:35.390Z)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(PubNubComponentAutoConfiguration.Condition.class)
@@ -55,7 +55,7 @@ public class PubNubComponentAutoConfiguration {
         return component;
     }
 
-    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
+    @Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:39:35.455Z)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/9cf87524/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java
index 56064f2..694bc3f 100644
--- a/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java
@@ -41,7 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
-@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
+@Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:40:54.730Z)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RestSwaggerComponentAutoConfiguration.Condition.class)
@@ -86,7 +86,7 @@ public class RestSwaggerComponentAutoConfiguration {
         return component;
     }
 
-    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
+    @Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:40:54.785Z)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/9cf87524/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java
index cf01faa..205fcfd 100644
--- a/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java
@@ -25,7 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
-@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
+@Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:40:54.520Z)
 @ConfigurationProperties(prefix  camel.component.rest-swagger)
 public class RestSwaggerComponentConfiguration {
 


"
"204","375","2017-04-19 08:48:23+00:00","zregvart@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-11163 Add @Generated annotation in REST D...","Return-Path: <commits-return-55748-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id BBC2D187BE
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 08:48:23 +0000 (UTC)
Received: (qmail 59376 invoked by uid 500); 19 Apr 2017 08:48:23 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 59321 invoked by uid 500); 19 Apr 2017 08:48:23 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 59312 invoked by uid 99); 19 Apr 2017 08:48:23 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:48:23 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 351EBDFBB7; Wed, 19 Apr 2017 08:48:23 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Message-Id: <9994eb304dcc40f09f0b494ac5215a45@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-11163 Add @Generated annotation in REST D...
Date: Wed, 19 Apr 2017 08:48:23 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 9cf875246 -> 30308c9f9


CAMEL-11163 Add @Generated annotation in REST D...

...SL Swagger generated code

This makes the `date` annotation member of `@Generated` annotation
optional and its generation turned off by default.


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/30308c9f
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/30308c9f
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/30308c9f

Branch: refs/heads/master
Commit: 30308c9f9c453fb0731ca726a7821de839a4a1dd
Parents: 9cf8752
Author: Zoran Regvart <zregvart@apache.org>
Authored: Wed Apr 19 10:47:43 2017 +0200
Committer: Zoran Regvart <zregvart@apache.org>
Committed: Wed Apr 19 10:47:59 2017 +0200

----------------------------------------------------------------------
 .../swagger/RestDslSourceCodeGenerator.java     | 24 ++++++++++++++++++--
 .../generator/swagger/RestDslGeneratorTest.java |  2 +-
 .../src/test/resources/SwaggerPetstore.txt      |  5 +---
 3 files changed, 24 insertions(+), 7 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/30308c9f/tooling/swagger-rest-dsl-generator/src/main/java/org/apache/camel/generator/swagger/RestDslSourceCodeGenerator.java
----------------------------------------------------------------------
diff --git a/tooling/swagger-rest-dsl-generator/src/main/java/org/apache/camel/generator/swagger/RestDslSourceCodeGenerator.java b/tooling/swagger-rest-dsl-generator/src/main/java/org/apache/camel/generator/swagger/RestDslSourceCodeGenerator.java
index bbc4b22..252bc40 100644
--- a/tooling/swagger-rest-dsl-generator/src/main/java/org/apache/camel/generator/swagger/RestDslSourceCodeGenerator.java
+++ b/tooling/swagger-rest-dsl-generator/src/main/java/org/apache/camel/generator/swagger/RestDslSourceCodeGenerator.java
@@ -52,6 +52,8 @@ public abstract class RestDslSourceCodeGenerator<T> extends RestDslGenerator<Res
 
     private Function<Swagger, String> packageNameGenerator  RestDslSourceCodeGenerator::generatePackageName;
 
+    private boolean sourceCodeTimestamps;
+
     RestDslSourceCodeGenerator(final Swagger swagger) {
         super(swagger);
     }
@@ -71,6 +73,12 @@ public abstract class RestDslSourceCodeGenerator<T> extends RestDslGenerator<Res
         return this;
     }
 
+    public RestDslSourceCodeGenerator<T> withoutSourceCodeTimestamps() {
+        sourceCodeTimestamps  false;
+
+        return this;
+    }
+
     public RestDslSourceCodeGenerator<T> withPackageName(final String packageName) {
         notEmpty(packageName, packageName);
         this.packageNameGenerator  (s) -> packageName;
@@ -78,6 +86,12 @@ public abstract class RestDslSourceCodeGenerator<T> extends RestDslGenerator<Res
         return this;
     }
 
+    public RestDslSourceCodeGenerator<T> withSourceCodeTimestamps() {
+        sourceCodeTimestamps  true;
+
+        return this;
+    }
+
     MethodSpec generateConfigureMethod(final Swagger swagger) {
         final MethodSpec.Builder configure  MethodSpec.methodBuilder(configure).addModifiers(Modifier.PUBLIC)
             .returns(void.class).addJavadoc(Defines Apache Camel routes using REST DSL fluent API.\n);
@@ -99,10 +113,16 @@ public abstract class RestDslSourceCodeGenerator<T> extends RestDslGenerator<Res
 
         final String classNameToUse  classNameGenerator.apply(swagger);
 
+        final AnnotationSpec.Builder generatedAnnotation  AnnotationSpec.builder(Generated.class).addMember(value,
+            $S, getClass().getName());
+
+        if (sourceCodeTimestamps) {
+            generatedAnnotation.addMember(date, $S, generated());
+        }
+
         final TypeSpec generatedRouteBulder  TypeSpec.classBuilder(classNameToUse).superclass(RouteBuilder.class)
             .addModifiers(Modifier.PUBLIC, Modifier.FINAL).addMethod(methodSpec)
-            .addAnnotation(AnnotationSpec.builder(Generated.class).addMember(value, $S, getClass().getName())
-                .addMember(date, $S, generated()).build())
+            .addAnnotation(generatedAnnotation.build())
             .addJavadoc(Generated from Swagger specification by Camel REST DSL generator.\n).build();
 
         final String packageNameToUse  packageNameGenerator.apply(swagger);

http://git-wip-us.apache.org/repos/asf/camel/blob/30308c9f/tooling/swagger-rest-dsl-generator/src/test/java/org/apache/camel/generator/swagger/RestDslGeneratorTest.java
----------------------------------------------------------------------
diff --git a/tooling/swagger-rest-dsl-generator/src/test/java/org/apache/camel/generator/swagger/RestDslGeneratorTest.java b/tooling/swagger-rest-dsl-generator/src/test/java/org/apache/camel/generator/swagger/RestDslGeneratorTest.java
index 69aee57..ba0a553 100644
--- a/tooling/swagger-rest-dsl-generator/src/test/java/org/apache/camel/generator/swagger/RestDslGeneratorTest.java
+++ b/tooling/swagger-rest-dsl-generator/src/test/java/org/apache/camel/generator/swagger/RestDslGeneratorTest.java
@@ -66,7 +66,7 @@ public class RestDslGeneratorTest {
         final StringBuilder code  new StringBuilder();
 
         RestDslGenerator.toAppendable(swagger).withGeneratedTime(generated).withClassName(MyRestRoute)
-            .withPackageName(com.example).withIndent(\t)
+            .withPackageName(com.example).withIndent(\t).withSourceCodeTimestamps()
             .withDestinationGenerator(o -> direct:rest- + o.getOperationId()).generate(code);
 
         final URI file  RestDslGeneratorTest.class.getResource(/MyRestRoute.txt).toURI();

http://git-wip-us.apache.org/repos/asf/camel/blob/30308c9f/tooling/swagger-rest-dsl-generator/src/test/resources/SwaggerPetstore.txt
----------------------------------------------------------------------
diff --git a/tooling/swagger-rest-dsl-generator/src/test/resources/SwaggerPetstore.txt b/tooling/swagger-rest-dsl-generator/src/test/resources/SwaggerPetstore.txt
index 6a4cb0f..ab99611 100644
--- a/tooling/swagger-rest-dsl-generator/src/test/resources/SwaggerPetstore.txt
+++ b/tooling/swagger-rest-dsl-generator/src/test/resources/SwaggerPetstore.txt
@@ -8,10 +8,7 @@ import org.apache.camel.model.rest.RestParamType;
 /**
  * Generated from Swagger specification by Camel REST DSL generator.
  */
-@Generated(
-        value  org.apache.camel.generator.swagger.AppendableGenerator,
-        date  2017-10-17T00:00:00Z
-)
+@Generated(org.apache.camel.generator.swagger.AppendableGenerator)
 public final class SwaggerPetstore extends RouteBuilder {
     /**
      * Defines Apache Camel routes using REST DSL fluent API.


"
"205","1415","2017-04-19 08:49:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Resolved] (CAMEL-11163) Add @Generated annotation in REST
 DSL Swagger generated code","Return-Path: <issues-return-41540-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id C6286187CC
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 08:49:45 +0000 (UTC)
Received: (qmail 61190 invoked by uid 500); 19 Apr 2017 08:49:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 61152 invoked by uid 500); 19 Apr 2017 08:49:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 61140 invoked by uid 99); 19 Apr 2017 08:49:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:49:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 22B03C8CED
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:49:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id jbCLkBo0szoH for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 08:49:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 886885F664
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:49:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id D432CE06BB
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:49:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 8A9B520D54
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 08:49:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 08:49:41 +0000 (UTC)
From: Zoran Regvart (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064693.1492521308000.315801.1492591781564@Atlassian.JIRA>
In-Reply-To: <JIRA.13064693.1492521308000@Atlassian.JIRA>
References: <JIRA.13064693.1492521308000@Atlassian.JIRA> <JIRA.13064693.1492521308634@jira-lw-us.apache.org>
Subject: [jira] [Resolved] (CAMEL-11163) Add @Generated annotation in REST
 DSL Swagger generated code
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11163?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Zoran Regvart resolved CAMEL-11163.
-----------------------------------
    Resolution: Fixed

{{date}} member of {{@Generated}} annotation made optional and its generation turned off by default

> Add @Generated annotation in REST DSL Swagger generated code
> ------------------------------------------------------------
>
>                 Key: CAMEL-11163
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11163
>             Project: Camel
>          Issue Type: Improvement
>          Components: tooling
>            Reporter: Zoran Regvart
>            Assignee: Zoran Regvart
>            Priority: Trivial
>             Fix For: 2.19.0
>
>
> REST DSL Swagger code generation should add {{@Generated}} annotation to the source code this will help IDEs and code analysis tools to treat the generated code as generated.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"206","767","2017-04-19 08:51:49+00:00","jenkins@builds.apache.org","['davsclaus@apache.org', 'dev@camel.apache.org']","Camel.2.18.x.notest - Build # 113 - Failure","Return-Path: <dev-return-47405-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id A2B6D187DE
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 08:51:50 +0000 (UTC)
Received: (qmail 65830 invoked by uid 500); 19 Apr 2017 08:51:50 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 65784 invoked by uid 500); 19 Apr 2017 08:51:50 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 65702 invoked by uid 99); 19 Apr 2017 08:51:50 -0000
Received: from crius.apache.org (HELO crius.apache.org) (140.211.11.14)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 08:51:50 +0000
Received: from crius.apache.org (localhost [127.0.0.1])
	by crius.apache.org (ASF Mail Server at crius.apache.org) with ESMTP id EB2E49C00A6;
	Wed, 19 Apr 2017 08:51:49 +0000 (UTC)
Date: Wed, 19 Apr 2017 08:51:49 +0000 (UTC)
From: Apache Jenkins Server <jenkins@builds.apache.org>
To: davsclaus@apache.org, dev@camel.apache.org
Message-ID: <2077918246.1360.1492591909964.JavaMail.jenkins@crius>
Subject: Camel.2.18.x.notest - Build # 113 - Failure
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary----_Part_1359_1832492221.1492591909550
X-Jenkins-Job: Camel.2.18.x.notest
X-Jenkins-Result: FAILURE

------_Part_1359_1832492221.1492591909550
Content-Type: text/plain; charsetUTF-8
Content-Transfer-Encoding: 7bit

The Apache Jenkins build system has built Camel.2.18.x.notest (build #113)

Status: Failure

Check console output at https://builds.apache.org/job/Camel.2.18.x.notest/113/ to view the results.
------_Part_1359_1832492221.1492591909550--

"
"207","1875","2017-04-19 11:05:02+02:00","claus.ibsen@gmail.com","['users@camel.apache.org']","Re: How to check after startup if folder exists","Return-Path: <users-return-65358-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6D17F18877
	for <apmail-camel-users-archive@www.apache.org>; Wed, 19 Apr 2017 09:05:28 +0000 (UTC)
Received: (qmail 90741 invoked by uid 500); 19 Apr 2017 09:05:28 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 90678 invoked by uid 500); 19 Apr 2017 09:05:27 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 90663 invoked by uid 99); 19 Apr 2017 09:05:27 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 09:05:27 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 21B95D2C3B
	for <users@camel.apache.org>; Wed, 19 Apr 2017 09:05:27 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 0.993
X-Spam-Level: 
X-Spam-Status: No, score0.993 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_LOW-0.7, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RCVD_IN_SORBS_SPAM0.5, SPF_PASS-0.001,
	URIBL_BLOCKED0.001, URI_HEX1.313] autolearndisabled
Authentication-Results: spamd1-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id pBAR1WICdYcR for <users@camel.apache.org>;
	Wed, 19 Apr 2017 09:05:24 +0000 (UTC)
Received: from mail-qt0-f182.google.com (mail-qt0-f182.google.com [209.85.216.182])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id 376915FDF5
	for <users@camel.apache.org>; Wed, 19 Apr 2017 09:05:24 +0000 (UTC)
Received: by mail-qt0-f182.google.com with SMTP id c45so13873671qtb.1
        for <users@camel.apache.org>; Wed, 19 Apr 2017 02:05:24 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bhXHUHXrQCHZhFpt4cPsHED1lnH9T82ONTfEefD66LI9U;
        bNW/M5zkevox6HotjoYnYliv4iOvfgZVoj5Y/2sM0Z0y4SudCA6a7JWkClZzERnzwky
         6OT6/i29UltWIw8B/anbeEUbu1LyqvA7LhEYVwtj2GfbWRQuSE4GcEnmW+fVsEeiSyou
         cSOLEu1BfLEI/S08Po335raYctK2S8Qt6ovZsjUL9i4XbmZlV89vTqcwQ4sFzd9r/kHz
         +lS+PM+SXp7G9DuyIe6/IUswzjHjOu6Jez8ZuOcv9PrsmIYHSaHg0zMkPgDEFwFJax8g
         Rb2gm2n2SymufpXsBmNhCPKh5R6wIjda3WGM3f9Irq0M36pY4+jnfY3r/dlosJ/BY0Rq
         tZdA
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bhXHUHXrQCHZhFpt4cPsHED1lnH9T82ONTfEefD66LI9U;
        bVUxP4hK/vvsGwNLE1e1PWFb8FhaDvQvpk+isg/eXKG4TVgzqm/M11W55K42stodlT3
         zHtJ+oW/OfzDZmn+mSUlnkZo5kBNO1z2opBzgx2l3MydY3ipkT+0AMbqlZ1e+49QcwFa
         30MKq5ygVoFqnMoW+LU2lBiNQxAAyFIIqbIzOhC8rGwpkvbdU83A7bqeWWSL8PT+66X8
         8M4zSPSBTl7VAP9Cz8KlPUy+2TLwi583wjwiZIFbV+va2pTJJfeiGdAUMg2rAOeBsg0p
         pPK4NKnlYttYj/MdQLKSiIOs5gM/ZWQnMkWpKM6SGaJ4bN1Fju9dr3ma5XXntwmQt/Tv
         YRxw
X-Gm-Message-State: AN3rC/63qiP1BbTzu2yE73HKavqJIGys169qhUQYcuE8a8KZYLgtuD2/
	oAGZFvu/UD46zvDoxemFkrLa3jISJWXM
X-Received: by 10.200.4.140 with SMTP id s12mr1562807qtg.35.1492592723084;
 Wed, 19 Apr 2017 02:05:23 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.200.50.39 with HTTP; Wed, 19 Apr 2017 02:05:02 -0700 (PDT)
In-Reply-To: <1492591369447-5797895.post@n5.nabble.com>
References: <1492591369447-5797895.post@n5.nabble.com>
From: Claus Ibsen <claus.ibsen@gmail.com>
Date: Wed, 19 Apr 2017 11:05:02 +0200
Message-ID: <CAGB5yNmDgycu91-DSKM6pKx+Wq62JM3-TTZ7JPy2KRb8q49aw@mail.gmail.com>
Subject: Re: How to check after startup if folder exists
To: users@camel.apache.org <users@camel.apache.org>
Content-Type: text/plain; charsetUTF-8

No but you can write some code yourself to do that.

On Wed, Apr 19, 2017 at 10:42 AM, Nico159 <nicolas.gehling@adesso.de> wrote:
> Hi everyone,
>
> Im looking for a way to check, if a folder exists, after the route is
> started.
>
> While startup I usually use auteCreate for the inbound folder, so there is
> no problem if my inbound is not there yet, but if somebody (or something)
> delete this created inbound folder (while route is running), the route will
> check forever a non-existing folder (deadlock).
>
> Ive tried to use auteCreatefalse and startingDirectoryMustExisttrue
> (while not having my input folder), therefore I get an error, but just at
> the start of my route.
>
> Is there any way to check periodically if the input folder is there and
> re-autocreate it if necessary (or throw an error?)
>
> Thx in advance for any kind of help
>
>
>
>
>
> --
> View this message in context: http://camel.465427.n5.nabble.com/How-to-check-after-startup-if-folder-exists-tp5797895.html
> Sent from the Camel - Users mailing list archive at Nabble.com.



-- 
Claus Ibsen
-----------------
http://davsclaus.com @davsclaus
Camel in Action 2: https://www.manning.com/ibsen2

"
"208","1416","2017-04-19 09:08:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11167) Include Camel name in spring boot
 health check","Return-Path: <issues-return-41541-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id C864B18894
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 09:08:44 +0000 (UTC)
Received: (qmail 96075 invoked by uid 500); 19 Apr 2017 09:08:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 95950 invoked by uid 500); 19 Apr 2017 09:08:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 95941 invoked by uid 99); 19 Apr 2017 09:08:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 09:08:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id B6178180A5A
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:08:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id mjnBZ56EDlQw for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 09:08:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 5306161058
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:08:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id D96D5E0641
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:08:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 973BB21B45
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:08:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 09:08:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13065026.1492592863000.315923.1492592921617@Atlassian.JIRA>
In-Reply-To: <JIRA.13065026.1492592863000@Atlassian.JIRA>
References: <JIRA.13065026.1492592863000@Atlassian.JIRA> <JIRA.13065026.1492592863031@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11167) Include Camel name in spring boot
 health check
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Claus Ibsen created CAMEL-11167:
-----------------------------------

             Summary: Include Camel name in spring boot health check
                 Key: CAMEL-11167
                 URL: https://issues.apache.org/jira/browse/CAMEL-11167
             Project: Camel
          Issue Type: Improvement
          Components: camel-spring-boot
            Reporter: Claus Ibsen
            Assignee: Claus Ibsen
             Fix For: 2.19.0


It can help see which Camel is being checked, currently we only see the version.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"209","768","2017-04-19 09:09:49+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1638: Use maven-antrun-plugin to remove data dir instead...","Return-Path: <dev-return-47406-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id BDB91188AF
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 09:09:49 +0000 (UTC)
Received: (qmail 477 invoked by uid 500); 19 Apr 2017 09:09:49 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 437 invoked by uid 500); 19 Apr 2017 09:09:49 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 424 invoked by uid 99); 19 Apr 2017 09:09:49 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 09:09:49 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 26F43DF999; Wed, 19 Apr 2017 09:09:49 +0000 (UTC)
From: igarashitm <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
Message-ID: <git-pr-1638-camel@git.apache.org>
Subject: [GitHub] camel pull request #1638: Use maven-antrun-plugin to remove data dir instead...
Content-Type: text/plain
Date: Wed, 19 Apr 2017 09:09:49 +0000 (UTC)

GitHub user igarashitm opened a pull request:

    https://github.com/apache/camel/pull/1638

    Use maven-antrun-plugin to remove data dir instead of maven-clean-plu���

    ���gin so that mvn clean would remove target dir

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/igarashitm/camel camel-solr-remove-data-dir

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/camel/pull/1638.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1638
    
----
commit 9776e85a0742c98ea966691e39dfd1015d306394
Author: Tomohisa Igarashi <tm.igarashi@gmail.com>
Date:   2017-04-19T09:05:57Z

    Use maven-antrun-plugin to remove data dir instead of maven-clean-plugin so that mvn clean would remove target dir

----


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"210","376","2017-04-19 09:14:37+00:00","zregvart@apache.org","['commits@camel.apache.org']","[1/2] camel git commit: Regenerate component documentation list","Return-Path: <commits-return-55750-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 44A8F18900
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 09:14:38 +0000 (UTC)
Received: (qmail 10399 invoked by uid 500); 19 Apr 2017 09:14:38 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 10303 invoked by uid 500); 19 Apr 2017 09:14:38 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 10291 invoked by uid 99); 19 Apr 2017 09:14:37 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 09:14:37 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 56D9CDF999; Wed, 19 Apr 2017 09:14:37 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 09:14:37 -0000
Message-Id: <452caf51bc644dec9a1330ee14d0a092@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [1/2] camel git commit: Regenerate component documentation list

Repository: camel
Updated Branches:
  refs/heads/master 30308c9f9 -> e1cc3a2cf


Regenerate component documentation list

This updates the component list in the documentation without the removed
components.


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/40c2a759
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/40c2a759
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/40c2a759

Branch: refs/heads/master
Commit: 40c2a759b9ce534a96fe9ef572eec733914702cc
Parents: 30308c9
Author: Zoran Regvart <zregvart@apache.org>
Authored: Wed Apr 19 11:11:17 2017 +0200
Committer: Zoran Regvart <zregvart@apache.org>
Committed: Wed Apr 19 11:11:17 2017 +0200

----------------------------------------------------------------------
 components/readme.adoc         | 17 +----------------
 docs/user-manual/en/SUMMARY.md |  5 -----
 2 files changed, 1 insertion(+), 21 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/40c2a759/components/readme.adoc
----------------------------------------------------------------------
diff --git a/components/readme.adoc b/components/readme.adoc
index a3990e7..09c9bf1 100644
--- a/components/readme.adoc
+++ b/components/readme.adoc
@@ -2,7 +2,7 @@ Components
 ^^^^^^^^^^
 
 // components: START
-Number of Components: 236 in 185 JAR artifacts (14 deprecated)
+Number of Components: 231 in 184 JAR artifacts (14 deprecated)
 
 [width100%,cols4,1,5,optionsheader]
 |
@@ -251,27 +251,12 @@ Number of Components: 236 in 185 JAR artifacts (14 deprecated)
 | link:camel-google-drive/src/main/docs/google-drive-component.adoc[Google Drive] (camel-google-drive) +
 `google-drive:apiName/methodName` | 2.14 | The google-drive component provides access to Google Drive file storage service.
 
-| link:camel-gae/src/main/docs/gauth-component.adoc[Google GAuth] (camel-gae) +
-`gauth:name` |  | The gauth component is used by web applications to implement a Google-specific OAuth consumer.
-
-| link:camel-gae/src/main/docs/ghttp-component.adoc[Google HTTP] (camel-gae) +
-`ghttp:httpUri` |  | The ghttp component provides HTTP connectivity to the GAE.
-
-| link:camel-gae/src/main/docs/glogin-component.adoc[Google Login] (camel-gae) +
-`glogin:hostName` |  | The glogin component is used by Camel applications outside Google App Engine (GAE) for programmatic login to GAE applications.
-
-| link:camel-gae/src/main/docs/gmail-component.adoc[Google mail] (camel-gae) +
-`gmail:sender` |  | The gmail component is used for sending emails to GAE.
-
 | link:camel-google-mail/src/main/docs/google-mail-component.adoc[Google Mail] (camel-google-mail) +
 `google-mail:apiName/methodName` | 2.15 | The google-mail component provides access to Google Mail.
 
 | link:camel-google-pubsub/src/main/docs/google-pubsub-component.adoc[Google Pubsub] (camel-google-pubsub) +
 `google-pubsub:projectId:destinationName` | 2.19 | Messaging client for Google Cloud Platform PubSub Service: https://cloud.google.com/pubsub/
 
-| link:camel-gae/src/main/docs/gtask-component.adoc[Google Task] (camel-gae) +
-`gtask:queueName` |  | The gtask component is used for sending messages to GAE task queue service.
-
 | link:camel-gora/src/main/docs/gora-component.adoc[Gora] (camel-gora) +
 `gora:name` | 2.14 | The gora component allows you to work with NoSQL databases using the Apache Gora framework.
 

http://git-wip-us.apache.org/repos/asf/camel/blob/40c2a759/docs/user-manual/en/SUMMARY.md
----------------------------------------------------------------------
diff --git a/docs/user-manual/en/SUMMARY.md b/docs/user-manual/en/SUMMARY.md
index 62f43ac..25968df 100644
--- a/docs/user-manual/en/SUMMARY.md
+++ b/docs/user-manual/en/SUMMARY.md
@@ -195,13 +195,8 @@
 	* [GitHub](github-component.adoc)
 	* [Google Calendar](google-calendar-component.adoc)
 	* [Google Drive](google-drive-component.adoc)
-	* [Google GAuth](gauth-component.adoc)
-	* [Google HTTP](ghttp-component.adoc)
-	* [Google Login](glogin-component.adoc)
-	* [Google mail](gmail-component.adoc)
 	* [Google Mail](google-mail-component.adoc)
 	* [Google Pubsub](google-pubsub-component.adoc)
-	* [Google Task](gtask-component.adoc)
 	* [Gora](gora-component.adoc)
 	* [Grape](grape-component.adoc)
 	* [gRPC](grpc-component.adoc)


"
"211","377","2017-04-19 09:14:38+00:00","zregvart@apache.org","['commits@camel.apache.org']","[2/2] camel git commit: CAMEL-11165 Add @Generated annotation to code
 g...","Return-Path: <commits-return-55749-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 449FC188FF
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 09:14:38 +0000 (UTC)
Received: (qmail 10367 invoked by uid 500); 19 Apr 2017 09:14:38 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 10292 invoked by uid 500); 19 Apr 2017 09:14:37 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 10282 invoked by uid 99); 19 Apr 2017 09:14:37 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 09:14:37 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 59C53DFB92; Wed, 19 Apr 2017 09:14:37 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: zregvart@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 09:14:38 -0000
Message-Id: <c5e172ece7e04f46bc0fbf0a0941c90d@git.apache.org>
In-Reply-To: <452caf51bc644dec9a1330ee14d0a092@git.apache.org>
References: <452caf51bc644dec9a1330ee14d0a092@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [2/2] camel git commit: CAMEL-11165 Add @Generated annotation to code
 g...

CAMEL-11165 Add @Generated annotation to code g...

...enerated by SpringBootAutoConfigurationMojo

This removes the `date` annotation member on additional components
missed in the first run.


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/e1cc3a2c
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/e1cc3a2c
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/e1cc3a2c

Branch: refs/heads/master
Commit: e1cc3a2cf12ec08e84c3d0f5e9fb08f813980ae1
Parents: 40c2a75
Author: Zoran Regvart <zregvart@apache.org>
Authored: Wed Apr 19 11:13:50 2017 +0200
Committer: Zoran Regvart <zregvart@apache.org>
Committed: Wed Apr 19 11:13:50 2017 +0200

----------------------------------------------------------------------
 .../bonita/springboot/BonitaComponentAutoConfiguration.java      | 4 ++--
 .../pubnub/springboot/PubNubComponentAutoConfiguration.java      | 4 ++--
 .../springboot/RestSwaggerComponentAutoConfiguration.java        | 4 ++--
 .../swagger/springboot/RestSwaggerComponentConfiguration.java    | 2 +-
 4 files changed, 7 insertions(+), 7 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/e1cc3a2c/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java
index deee612..8bfa8d8 100644
--- a/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-bonita-starter/src/main/java/org/apache/camel/component/bonita/springboot/BonitaComponentAutoConfiguration.java
@@ -37,7 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
-@Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:39:00.866Z)
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(BonitaComponentAutoConfiguration.Condition.class)
@@ -55,7 +55,7 @@ public class BonitaComponentAutoConfiguration {
         return component;
     }
 
-    @Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:39:00.940Z)
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/e1cc3a2c/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java
index c649698..671c1ce 100644
--- a/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-pubnub-starter/src/main/java/org/apache/camel/component/pubnub/springboot/PubNubComponentAutoConfiguration.java
@@ -37,7 +37,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
-@Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:39:35.390Z)
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(PubNubComponentAutoConfiguration.Condition.class)
@@ -55,7 +55,7 @@ public class PubNubComponentAutoConfiguration {
         return component;
     }
 
-    @Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:39:35.455Z)
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/e1cc3a2c/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java b/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java
index 694bc3f..56064f2 100644
--- a/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentAutoConfiguration.java
@@ -41,7 +41,7 @@ import org.springframework.core.type.AnnotatedTypeMetadata;
 /**
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
-@Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:40:54.730Z)
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @Configuration
 @ConditionalOnBean(type  org.apache.camel.spring.boot.CamelAutoConfiguration)
 @Conditional(RestSwaggerComponentAutoConfiguration.Condition.class)
@@ -86,7 +86,7 @@ public class RestSwaggerComponentAutoConfiguration {
         return component;
     }
 
-    @Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:40:54.785Z)
+    @Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
     public static class Condition extends SpringBootCondition {
         @Override
         public ConditionOutcome getMatchOutcome(

http://git-wip-us.apache.org/repos/asf/camel/blob/e1cc3a2c/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java
----------------------------------------------------------------------
diff --git a/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java b/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java
index 205fcfd..cf01faa 100644
--- a/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-rest-swagger-starter/src/main/java/org/apache/camel/component/rest/swagger/springboot/RestSwaggerComponentConfiguration.java
@@ -25,7 +25,7 @@ import org.springframework.boot.context.properties.ConfigurationProperties;
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
-@Generated(value  org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo, date  2017-04-19T08:40:54.520Z)
+@Generated(org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo)
 @ConfigurationProperties(prefix  camel.component.rest-swagger)
 public class RestSwaggerComponentConfiguration {
 


"
"212","378","2017-04-19 09:15:57+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-11167: Include Camel name in spring boot
 health check","Return-Path: <commits-return-55751-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 2086A18910
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 09:15:59 +0000 (UTC)
Received: (qmail 12955 invoked by uid 500); 19 Apr 2017 09:15:59 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 12892 invoked by uid 500); 19 Apr 2017 09:15:58 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 12883 invoked by uid 99); 19 Apr 2017 09:15:58 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 09:15:58 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id E1AD7DF999; Wed, 19 Apr 2017 09:15:57 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <48ddebc7cb2244a18482e1c9ea9c4121@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-11167: Include Camel name in spring boot
 health check
Date: Wed, 19 Apr 2017 09:15:57 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master e1cc3a2cf -> e09180940


CAMEL-11167: Include Camel name in spring boot health check


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/e0918094
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/e0918094
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/e0918094

Branch: refs/heads/master
Commit: e09180940d967164f509e85e83f5eab04f24444b
Parents: e1cc3a2
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Wed Apr 19 11:14:46 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Wed Apr 19 11:15:47 2017 +0200

----------------------------------------------------------------------
 .../org/apache/camel/spring/boot/health/CamelHealthIndicator.java   | 1 +
 1 file changed, 1 insertion(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/e0918094/components/camel-spring-boot/src/main/java/org/apache/camel/spring/boot/health/CamelHealthIndicator.java
----------------------------------------------------------------------
diff --git a/components/camel-spring-boot/src/main/java/org/apache/camel/spring/boot/health/CamelHealthIndicator.java b/components/camel-spring-boot/src/main/java/org/apache/camel/spring/boot/health/CamelHealthIndicator.java
index 7a9feb9..67ca02d 100644
--- a/components/camel-spring-boot/src/main/java/org/apache/camel/spring/boot/health/CamelHealthIndicator.java
+++ b/components/camel-spring-boot/src/main/java/org/apache/camel/spring/boot/health/CamelHealthIndicator.java
@@ -37,6 +37,7 @@ public class CamelHealthIndicator extends AbstractHealthIndicator {
         if (camelContext  null) {
             builder.unknown();
         } else {
+            builder.withDetail(name, camelContext.getName());
             builder.withDetail(version, camelContext.getVersion());
             builder.withDetail(contextStatus, camelContext.getStatus().name());
             if (camelContext.getStatus().isStarted()) {


"
"213","1417","2017-04-19 09:16:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Resolved] (CAMEL-11167) Include Camel name in spring boot
 health check","Return-Path: <issues-return-41542-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id C2EF318913
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 09:16:43 +0000 (UTC)
Received: (qmail 13351 invoked by uid 500); 19 Apr 2017 09:16:43 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 13308 invoked by uid 500); 19 Apr 2017 09:16:43 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 13299 invoked by uid 99); 19 Apr 2017 09:16:43 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 09:16:43 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 2ED84C062B
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:16:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id 70K03u1vYCw6 for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 09:16:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 5AB4E5FB64
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:16:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id F2E8EE07E1
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:16:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id B0C6D21B47
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:16:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 09:16:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13065026.1492592863000.316094.1492593401721@Atlassian.JIRA>
In-Reply-To: <JIRA.13065026.1492592863000@Atlassian.JIRA>
References: <JIRA.13065026.1492592863000@Atlassian.JIRA> <JIRA.13065026.1492592863031@jira-lw-us.apache.org>
Subject: [jira] [Resolved] (CAMEL-11167) Include Camel name in spring boot
 health check
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11167?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Claus Ibsen resolved CAMEL-11167.
---------------------------------
    Resolution: Fixed

> Include Camel name in spring boot health check
> ----------------------------------------------
>
>                 Key: CAMEL-11167
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11167
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-spring-boot
>            Reporter: Claus Ibsen
>            Assignee: Claus Ibsen
>             Fix For: 2.19.0
>
>
> It can help see which Camel is being checked, currently we only see the version.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"214","379","2017-04-19 09:17:59+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: Use maven-antrun-plugin to remove data dir instead
 of maven-clean-plugin so that mvn clean would remove target dir","Return-Path: <commits-return-55752-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id B47AE1891C
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 09:17:59 +0000 (UTC)
Received: (qmail 19339 invoked by uid 500); 19 Apr 2017 09:17:59 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 19283 invoked by uid 500); 19 Apr 2017 09:17:59 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 19274 invoked by uid 99); 19 Apr 2017 09:17:59 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 09:17:59 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 6B2CBDF999; Wed, 19 Apr 2017 09:17:59 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <05bf03951083470cb6da59ee9ef4c62e@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Use maven-antrun-plugin to remove data dir instead
 of maven-clean-plugin so that mvn clean would remove target dir
Date: Wed, 19 Apr 2017 09:17:59 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master e09180940 -> 424273fa9


Use maven-antrun-plugin to remove data dir instead of maven-clean-plugin so that mvn clean would remove target dir


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/424273fa
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/424273fa
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/424273fa

Branch: refs/heads/master
Commit: 424273fa986790fece72d8f0b9f58f526ce3b192
Parents: e091809
Author: Tomohisa Igarashi <tm.igarashi@gmail.com>
Authored: Wed Apr 19 18:05:57 2017 +0900
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Wed Apr 19 11:16:58 2017 +0200

----------------------------------------------------------------------
 components/camel-solr/pom.xml | 17 +++++++----------
 1 file changed, 7 insertions(+), 10 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/424273fa/components/camel-solr/pom.xml
----------------------------------------------------------------------
diff --git a/components/camel-solr/pom.xml b/components/camel-solr/pom.xml
index 4541270..448e2f6c 100644
--- a/components/camel-solr/pom.xml
+++ b/components/camel-solr/pom.xml
@@ -153,24 +153,21 @@
       <!-- clean the data directory before installing -->
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-clean-plugin</artifactId>
+        <artifactId>maven-antrun-plugin</artifactId>
         <executions>
           <execution>
             <id>auto-clean</id>
             <phase>install</phase>
             <goals>
-              <goal>clean</goal>
+              <goal>run</goal>
             </goals>
+            <configuration>
+              <target>
+                <delete dir${basedir}/data quiettrue/>
+              </target>
+            </configuration>
           </execution>
         </executions>
-        <configuration>
-          <excludeDefaultDirectories>true</excludeDefaultDirectories>
-          <filesets>
-            <fileset>
-              <directory>${basedir}/data</directory>
-            </fileset>
-          </filesets>
-        </configuration>
       </plugin>
     </plugins>
   </build>


"
"215","769","2017-04-19 09:19:19+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1638: Use maven-antrun-plugin to remove data dir instead...","Return-Path: <dev-return-47407-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 8F45918926
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 09:19:19 +0000 (UTC)
Received: (qmail 23072 invoked by uid 500); 19 Apr 2017 09:19:19 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 23025 invoked by uid 500); 19 Apr 2017 09:19:19 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 23014 invoked by uid 99); 19 Apr 2017 09:19:19 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 09:19:19 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 04CCFDF999; Wed, 19 Apr 2017 09:19:19 +0000 (UTC)
From: igarashitm <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
References: <git-pr-1638-camel@git.apache.org>
In-Reply-To: <git-pr-1638-camel@git.apache.org>
Subject: [GitHub] camel pull request #1638: Use maven-antrun-plugin to remove data dir instead...
Content-Type: text/plain
Message-Id: <20170419091919.04CCFDF999@git1-us-west.apache.org>
Date: Wed, 19 Apr 2017 09:19:19 +0000 (UTC)

Github user igarashitm closed the pull request at:

    https://github.com/apache/camel/pull/1638


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"216","1418","2017-04-19 09:20:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11150) camel-ignite is removed from
 readme on each full build","Return-Path: <issues-return-41543-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 643BE1892F
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 09:20:45 +0000 (UTC)
Received: (qmail 24411 invoked by uid 500); 19 Apr 2017 09:20:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 24334 invoked by uid 500); 19 Apr 2017 09:20:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 24325 invoked by uid 99); 19 Apr 2017 09:20:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 09:20:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id C93E5C062B
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:20:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.201
X-Spam-Level: 
X-Spam-Status: No, score-99.201 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, URIBL_BLOCKED0.001, USER_IN_WHITELIST-100]
	autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id kAp7e8xaRFae for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 09:20:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id DDD075FBBB
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:20:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 5BBB8E0D3A
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:20:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 9F58721B51
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:20:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 09:20:41 +0000 (UTC)
From: Tomohisa Igarashi (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064021.1492157502000.316114.1492593641651@Atlassian.JIRA>
In-Reply-To: <JIRA.13064021.1492157502000@Atlassian.JIRA>
References: <JIRA.13064021.1492157502000@Atlassian.JIRA> <JIRA.13064021.1492157502203@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11150) camel-ignite is removed from
 readme on each full build
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11150?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15974368#comment-15974368 ] 

Tomohisa Igarashi commented on CAMEL-11150:
-------------------------------------------

Fixed camel-solr POM to remove target dir on mvn clean - https://github.com/apache/camel/pull/1638

> camel-ignite is removed from readme on each full build
> ------------------------------------------------------
>
>                 Key: CAMEL-11150
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11150
>             Project: Camel
>          Issue Type: Task
>          Components: documentation
>            Reporter: Tomohisa Igarashi
>            Assignee: Tomohisa Igarashi
>            Priority: Minor
>
> On each full build camel-solr is removed from components/readme.adoc and docs/user-manual/en/SUMMARY.md which shouldnt happen.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"217","380","2017-04-19 09:45:35+00:00","zregvart@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-11164 Add @Generated annotation Salesforc...","N/A"
"218","1419","2017-04-19 09:46:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Resolved] (CAMEL-11164) Add @Generated annotation
 Salesforce generated code","Return-Path: <issues-return-41544-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 61D0418A6A
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 09:46:44 +0000 (UTC)
Received: (qmail 92033 invoked by uid 500); 19 Apr 2017 09:46:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 91998 invoked by uid 500); 19 Apr 2017 09:46:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 91989 invoked by uid 99); 19 Apr 2017 09:46:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 09:46:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id E5417C062B
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:46:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id KOtV64_SP2Jk for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 09:46:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id B09E05FDCF
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:46:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 00202E095D
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:46:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id AC77021B47
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 09:46:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 09:46:41 +0000 (UTC)
From: Zoran Regvart (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13064723.1492525172000.316254.1492595201704@Atlassian.JIRA>
In-Reply-To: <JIRA.13064723.1492525172000@Atlassian.JIRA>
References: <JIRA.13064723.1492525172000@Atlassian.JIRA> <JIRA.13064723.1492525172438@jira-lw-us.apache.org>
Subject: [jira] [Resolved] (CAMEL-11164) Add @Generated annotation
 Salesforce generated code
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11164?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Zoran Regvart resolved CAMEL-11164.
-----------------------------------
       Resolution: Implemented
    Fix Version/s: 2.19.0

Added {{@Generated}} annotation to DTO source code generated by Salesforce Maven plugin.

> Add @Generated annotation Salesforce generated code
> ---------------------------------------------------
>
>                 Key: CAMEL-11164
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11164
>             Project: Camel
>          Issue Type: Improvement
>            Reporter: Zoran Regvart
>            Assignee: Zoran Regvart
>            Priority: Trivial
>             Fix For: 2.19.0
>
>
> The Salesforce Maven plugin generates source code for data transfer objects (DTOs) that can be used to exchange data with the Salesforce API. To help IDEs and code analysis tools they should be annotated with {{@Generated}}.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"219","1420","2017-04-19 10:18:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Assigned] (CAMEL-10798) camel-twitter, camel-ignite - Make
 the uri endpoints separated","Return-Path: <issues-return-41545-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9E44418BBC
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 10:18:43 +0000 (UTC)
Received: (qmail 42851 invoked by uid 500); 19 Apr 2017 10:18:43 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 42808 invoked by uid 500); 19 Apr 2017 10:18:43 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 42799 invoked by uid 99); 19 Apr 2017 10:18:43 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 10:18:43 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 222001A0142
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 10:18:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.202
X-Spam-Level: 
X-Spam-Status: No, score-99.202 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id 7a9wcZHGQRRz for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 10:18:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 3C33E5FB2C
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 10:18:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id CEFA8E06BB
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 10:18:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 87D3221B45
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 10:18:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 10:18:41 +0000 (UTC)
From: Tomohisa Igarashi (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13040956.1486469339000.316436.1492597121554@Atlassian.JIRA>
In-Reply-To: <JIRA.13040956.1486469339000@Atlassian.JIRA>
References: <JIRA.13040956.1486469339000@Atlassian.JIRA> <JIRA.13040956.1486469339920@jira-lw-us.apache.org>
Subject: [jira] [Assigned] (CAMEL-10798) camel-twitter, camel-ignite - Make
 the uri endpoints separated
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-10798?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Tomohisa Igarashi reassigned CAMEL-10798:
-----------------------------------------

    Assignee: Tomohisa Igarashi

> camel-twitter, camel-ignite - Make the uri endpoints separated
> --------------------------------------------------------------
>
>                 Key: CAMEL-10798
>                 URL: https://issues.apache.org/jira/browse/CAMEL-10798
>             Project: Camel
>          Issue Type: Improvement
>            Reporter: Claus Ibsen
>            Assignee: Tomohisa Igarashi
>             Fix For: 3.0.0
>
>
> They currently have the same @UriEndpoint that represents all of their possible endpoint combinations. This usually works fine for Camel components. But some components such as twitter, ignite, hazelcast etc do have to many different endpoints that have very specific options per different endpoint.
> We should split up this in different components so they are separated.
> So we have
> twitter-status
> twitter-search
> twitter-direct
> Or something.
> This will also help tooling, documentation, et all so they are clearly separated and there are no confusion. For example twitter mention do not support the delay option which only twitter search uses etc.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"220","770","2017-04-19 10:33:12+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1639: CAMEL-11166: make camel-package-maven-plugin work ...","Return-Path: <dev-return-47408-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9B03618C1A
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 10:33:12 +0000 (UTC)
Received: (qmail 57280 invoked by uid 500); 19 Apr 2017 10:33:12 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 57215 invoked by uid 500); 19 Apr 2017 10:33:12 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 57204 invoked by uid 99); 19 Apr 2017 10:33:12 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 10:33:12 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 0B4E1DFC31; Wed, 19 Apr 2017 10:33:12 +0000 (UTC)
From: johnpoth <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
Message-ID: <git-pr-1639-camel@git.apache.org>
Subject: [GitHub] camel pull request #1639: CAMEL-11166: make camel-package-maven-plugin work ...
Content-Type: text/plain
Date: Wed, 19 Apr 2017 10:33:12 +0000 (UTC)

GitHub user johnpoth opened a pull request:

    https://github.com/apache/camel/pull/1639

    CAMEL-11166: make camel-package-maven-plugin work on Java 9

    https://issues.apache.org/jira/browse/CAMEL-11166

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/johnpoth/camel CAMEL-11166

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/camel/pull/1639.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1639
    
----
commit 4f415029d7fb58976264ce22654b290053a84949
Author: jpoth <poth.john@gmail.com>
Date:   2017-04-19T10:32:06Z

    CAMEL-11166: make camel-package-maven-plugin work on Java 9

----


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"221","1421","2017-04-19 10:33:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11166) @Generated annotation and java 9
 problem","Return-Path: <issues-return-41546-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id DD9C618C1E
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 10:33:44 +0000 (UTC)
Received: (qmail 57805 invoked by uid 500); 19 Apr 2017 10:33:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 57764 invoked by uid 500); 19 Apr 2017 10:33:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 57755 invoked by uid 99); 19 Apr 2017 10:33:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 10:33:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 4E400C65B4
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 10:33:44 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.201
X-Spam-Level: 
X-Spam-Status: No, score-99.201 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, URIBL_BLOCKED0.001, USER_IN_WHITELIST-100]
	autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id kbeFmDzd-WJt for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 10:33:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 2C87F5F39D
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 10:33:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 4F760E0BDD
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 10:33:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 9197621B48
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 10:33:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 10:33:41 +0000 (UTC)
From: ASF GitHub Bot (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13065011.1492588059000.316492.1492598021594@Atlassian.JIRA>
In-Reply-To: <JIRA.13065011.1492588059000@Atlassian.JIRA>
References: <JIRA.13065011.1492588059000@Atlassian.JIRA> <JIRA.13065011.1492588059705@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11166) @Generated annotation and java 9
 problem
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11166?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15974432#comment-15974432 ] 

ASF GitHub Bot commented on CAMEL-11166:
----------------------------------------

GitHub user johnpoth opened a pull request:

    https://github.com/apache/camel/pull/1639

    CAMEL-11166: make camel-package-maven-plugin work on Java 9

    https://issues.apache.org/jira/browse/CAMEL-11166

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/johnpoth/camel CAMEL-11166

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/camel/pull/1639.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1639
    
----
commit 4f415029d7fb58976264ce22654b290053a84949
Author: jpoth <poth.john@gmail.com>
Date:   2017-04-19T10:32:06Z

    CAMEL-11166: make camel-package-maven-plugin work on Java 9

----


> @Generated annotation and java 9 problem
> ----------------------------------------
>
>                 Key: CAMEL-11166
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11166
>             Project: Camel
>          Issue Type: Task
>            Reporter: Claus Ibsen
>            Assignee: Zoran Regvart
>
> Just noticed this on the JDK9 build
> [ERROR] -> [Help 1]
> org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration (validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration: javax/annotation/Generated
> [~jpoth] do you have time to help look into this?
> It fails when building camel-core due a recent addition of adding `@generated` annotation to the generated source code for spring-boot starters and whatnot.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"222","381","2017-04-19 10:52:10+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: CAMEL-11166: make camel-package-maven-plugin work
 on Java 9","Return-Path: <commits-return-55754-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id B4F3D18CA4
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 10:52:11 +0000 (UTC)
Received: (qmail 301 invoked by uid 500); 19 Apr 2017 10:52:11 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 242 invoked by uid 500); 19 Apr 2017 10:52:10 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 233 invoked by uid 99); 19 Apr 2017 10:52:10 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 10:52:10 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 3C5DDDFC31; Wed, 19 Apr 2017 10:52:10 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <cdfe21ec3baf4e32bcbcaa34c6a0824f@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: CAMEL-11166: make camel-package-maven-plugin work
 on Java 9
Date: Wed, 19 Apr 2017 10:52:10 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master d9f4ff922 -> 4f415029d


CAMEL-11166: make camel-package-maven-plugin work on Java 9


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/4f415029
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/4f415029
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/4f415029

Branch: refs/heads/master
Commit: 4f415029d7fb58976264ce22654b290053a84949
Parents: d9f4ff9
Author: jpoth <poth.john@gmail.com>
Authored: Wed Apr 19 12:32:06 2017 +0200
Committer: jpoth <poth.john@gmail.com>
Committed: Wed Apr 19 12:32:06 2017 +0200

----------------------------------------------------------------------
 parent/pom.xml | 11 +++++++++++
 1 file changed, 11 insertions(+)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/4f415029/parent/pom.xml
----------------------------------------------------------------------
diff --git a/parent/pom.xml b/parent/pom.xml
index 79bd2fa..578d968 100644
--- a/parent/pom.xml
+++ b/parent/pom.xml
@@ -5239,6 +5239,17 @@
               </dependencies>
             </plugin>
             <plugin>
+              <groupId>org.apache.camel</groupId>
+              <artifactId>camel-package-maven-plugin</artifactId>
+              <dependencies>
+                <dependency>
+                  <groupId>javax.xml.ws</groupId>
+                  <artifactId>jaxws-api</artifactId>
+                  <version>2.2.11</version>
+                </dependency>
+              </dependencies>
+            </plugin>
+            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-compiler-plugin</artifactId>
               <version>${maven-compiler-plugin-version}</version>


"
"223","771","2017-04-19 10:52:29+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1639: CAMEL-11166: make camel-package-maven-plugin work ...","Return-Path: <dev-return-47409-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id DDB2C18CA5
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 10:52:29 +0000 (UTC)
Received: (qmail 414 invoked by uid 500); 19 Apr 2017 10:52:29 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 364 invoked by uid 500); 19 Apr 2017 10:52:29 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 353 invoked by uid 99); 19 Apr 2017 10:52:29 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 10:52:29 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 5050CDFC31; Wed, 19 Apr 2017 10:52:29 +0000 (UTC)
From: asfgit <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
References: <git-pr-1639-camel@git.apache.org>
In-Reply-To: <git-pr-1639-camel@git.apache.org>
Subject: [GitHub] camel pull request #1639: CAMEL-11166: make camel-package-maven-plugin work ...
Content-Type: text/plain
Message-Id: <20170419105229.5050CDFC31@git1-us-west.apache.org>
Date: Wed, 19 Apr 2017 10:52:29 +0000 (UTC)

Github user asfgit closed the pull request at:

    https://github.com/apache/camel/pull/1639


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"224","1422","2017-04-19 10:52:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-11166) @Generated annotation and java 9
 problem","Return-Path: <issues-return-41547-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6DA2718CA7
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 10:52:50 +0000 (UTC)
Received: (qmail 947 invoked by uid 500); 19 Apr 2017 10:52:50 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 901 invoked by uid 500); 19 Apr 2017 10:52:50 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 892 invoked by uid 99); 19 Apr 2017 10:52:50 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 10:52:50 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id C2B93189FCC
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 10:52:49 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.201
X-Spam-Level: 
X-Spam-Status: No, score-99.201 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, URIBL_BLOCKED0.001, USER_IN_WHITELIST-100]
	autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id EVpUS_hV6p0e for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 10:52:49 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 62BA95FE1E
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 10:52:48 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 7B51AE095D
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 10:52:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 970F621B46
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 10:52:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 10:52:41 +0000 (UTC)
From: ASF GitHub Bot (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13065011.1492588059000.316528.1492599161616@Atlassian.JIRA>
In-Reply-To: <JIRA.13065011.1492588059000@Atlassian.JIRA>
References: <JIRA.13065011.1492588059000@Atlassian.JIRA> <JIRA.13065011.1492588059705@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-11166) @Generated annotation and java 9
 problem
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-11166?pagecom.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId15974443#comment-15974443 ] 

ASF GitHub Bot commented on CAMEL-11166:
----------------------------------------

Github user asfgit closed the pull request at:

    https://github.com/apache/camel/pull/1639


> @Generated annotation and java 9 problem
> ----------------------------------------
>
>                 Key: CAMEL-11166
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11166
>             Project: Camel
>          Issue Type: Task
>            Reporter: Claus Ibsen
>            Assignee: Zoran Regvart
>
> Just noticed this on the JDK9 build
> [ERROR] -> [Help 1]
> org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration (validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration: javax/annotation/Generated
> [~jpoth] do you have time to help look into this?
> It fails when building camel-core due a recent addition of adding `@generated` annotation to the generated source code for spring-boot starters and whatnot.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"225","1424","2017-04-19 11:00:47+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Resolved] (CAMEL-11166) @Generated annotation and java 9
 problem","Return-Path: <issues-return-41549-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id DFEF218CD0
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 11:00:51 +0000 (UTC)
Received: (qmail 9765 invoked by uid 500); 19 Apr 2017 11:00:51 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 9731 invoked by uid 500); 19 Apr 2017 11:00:51 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 9721 invoked by uid 99); 19 Apr 2017 11:00:51 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 11:00:51 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 71D6A189FCC
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:00:51 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id GjRzkVg3aAVX for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 11:00:50 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 062D4619EC
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:00:50 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 5E069E0D5B
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:00:49 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id ED33E21B5B
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:00:47 +0000 (UTC)
Date: Wed, 19 Apr 2017 11:00:47 +0000 (UTC)
From: Zoran Regvart (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13065011.1492588059000.316552.1492599647969@Atlassian.JIRA>
In-Reply-To: <JIRA.13065011.1492588059000@Atlassian.JIRA>
References: <JIRA.13065011.1492588059000@Atlassian.JIRA> <JIRA.13065011.1492588059705@jira-lw-us.apache.org>
Subject: [jira] [Resolved] (CAMEL-11166) @Generated annotation and java 9
 problem
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11166?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Zoran Regvart resolved CAMEL-11166.
-----------------------------------
    Resolution: Fixed

Great work [~jpoth]!

> @Generated annotation and java 9 problem
> ----------------------------------------
>
>                 Key: CAMEL-11166
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11166
>             Project: Camel
>          Issue Type: Task
>            Reporter: Claus Ibsen
>            Assignee: John Poth
>
> Just noticed this on the JDK9 build
> [ERROR] -> [Help 1]
> org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration (validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration: javax/annotation/Generated
> [~jpoth] do you have time to help look into this?
> It fails when building camel-core due a recent addition of adding `@generated` annotation to the generated source code for spring-boot starters and whatnot.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"226","1423","2017-04-19 11:00:47+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Assigned] (CAMEL-11166) @Generated annotation and java 9
 problem","Return-Path: <issues-return-41548-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id C97E818CCE
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 11:00:50 +0000 (UTC)
Received: (qmail 9592 invoked by uid 500); 19 Apr 2017 11:00:50 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 9553 invoked by uid 500); 19 Apr 2017 11:00:50 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 9543 invoked by uid 99); 19 Apr 2017 11:00:50 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 11:00:50 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 2F2AA1B0606
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:00:50 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id MslmkT7Ft4Sl for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 11:00:49 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 319AE5FBBB
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:00:49 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 8C11DE095D
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:00:48 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 9817C21B47
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:00:47 +0000 (UTC)
Date: Wed, 19 Apr 2017 11:00:47 +0000 (UTC)
From: Zoran Regvart (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13065011.1492588059000.316546.1492599647621@Atlassian.JIRA>
In-Reply-To: <JIRA.13065011.1492588059000@Atlassian.JIRA>
References: <JIRA.13065011.1492588059000@Atlassian.JIRA> <JIRA.13065011.1492588059705@jira-lw-us.apache.org>
Subject: [jira] [Assigned] (CAMEL-11166) @Generated annotation and java 9
 problem
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11166?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Zoran Regvart reassigned CAMEL-11166:
-------------------------------------

    Assignee: John Poth  (was: Zoran Regvart)

> @Generated annotation and java 9 problem
> ----------------------------------------
>
>                 Key: CAMEL-11166
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11166
>             Project: Camel
>          Issue Type: Task
>            Reporter: Claus Ibsen
>            Assignee: John Poth
>
> Just noticed this on the JDK9 build
> [ERROR] -> [Help 1]
> org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration (validate) on project camel-core: Execution validate of goal org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration failed: A required class was missing while executing org.apache.camel:camel-package-maven-plugin:2.19.0-SNAPSHOT:prepare-spring-boot-auto-configuration: javax/annotation/Generated
> [~jpoth] do you have time to help look into this?
> It fails when building camel-core due a recent addition of adding `@generated` annotation to the generated source code for spring-boot starters and whatnot.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"227","382","2017-04-19 11:04:44+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: Polished","N/A"
"228","1425","2017-04-19 11:11:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Updated] (CAMEL-11146) Update description for all data
 formats and languages on big readme file","Return-Path: <issues-return-41550-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0BFDF18D38
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 11:11:44 +0000 (UTC)
Received: (qmail 27835 invoked by uid 500); 19 Apr 2017 11:11:43 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 27793 invoked by uid 500); 19 Apr 2017 11:11:43 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 27783 invoked by uid 99); 19 Apr 2017 11:11:43 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 11:11:43 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id 70690C062B
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:11:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.201
X-Spam-Level: 
X-Spam-Status: No, score-99.201 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, URIBL_BLOCKED0.001, USER_IN_WHITELIST-100]
	autolearndisabled
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id p5D2QbE7fMXA for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 11:11:42 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTP id 73BD45F39D
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:11:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id C4B29E0641
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:11:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 8195A20D59
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:11:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 11:11:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13063766.1492083402000.316625.1492600301528@Atlassian.JIRA>
In-Reply-To: <JIRA.13063766.1492083402000@Atlassian.JIRA>
References: <JIRA.13063766.1492083402000@Atlassian.JIRA> <JIRA.13063766.1492083402210@jira-lw-us.apache.org>
Subject: [jira] [Updated] (CAMEL-11146) Update description for all data
 formats and languages on big readme file
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-11146?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

Claus Ibsen updated CAMEL-11146:
--------------------------------
    Estimated Complexity: Novice  (was: Unknown)

> Update description for all data formats and languages on big readme file
> ------------------------------------------------------------------------
>
>                 Key: CAMEL-11146
>                 URL: https://issues.apache.org/jira/browse/CAMEL-11146
>             Project: Camel
>          Issue Type: Task
>          Components: documentation
>            Reporter: Claus Ibsen
>             Fix For: 2.20.0
>
>
> This page
> https://github.com/apache/camel/tree/master/components
> We should improve description for all those data formats and languages as they are not very informative. They should have a short description like we do for components.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"229","1426","2017-04-19 11:14:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Created] (CAMEL-11168) Add deprecationNote to @Metadata","Return-Path: <issues-return-41551-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id E50DC18D42
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 11:14:45 +0000 (UTC)
Received: (qmail 29761 invoked by uid 500); 19 Apr 2017 11:14:45 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 29719 invoked by uid 500); 19 Apr 2017 11:14:45 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 29710 invoked by uid 99); 19 Apr 2017 11:14:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 11:14:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id 62745C6882
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:14:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -100.002
X-Spam-Level: 
X-Spam-Status: No, score-100.002 tagged_above-999 required6.31
	tests[RP_MATCHES_RCVD-0.001, SPF_PASS-0.001,
	USER_IN_WHITELIST-100] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id pqS317NS4o0C for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 11:14:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 46F005FCAE
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:14:43 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 9D811E0641
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:14:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id B581E20D59
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:14:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 11:14:41 +0000 (UTC)
From: Claus Ibsen (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.13065054.1492600432000.316629.1492600481532@Atlassian.JIRA>
In-Reply-To: <JIRA.13065054.1492600432000@Atlassian.JIRA>
References: <JIRA.13065054.1492600432000@Atlassian.JIRA> <JIRA.13065054.1492600432871@jira-lw-us.apache.org>
Subject: [jira] [Created] (CAMEL-11168) Add deprecationNote to @Metadata
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394

Claus Ibsen created CAMEL-11168:
-----------------------------------

             Summary: Add deprecationNote to @Metadata
                 Key: CAMEL-11168
                 URL: https://issues.apache.org/jira/browse/CAMEL-11168
             Project: Camel
          Issue Type: Improvement
          Components: tooling
            Reporter: Claus Ibsen
             Fix For: 2.20.0


So we can add a note that can refer the user to something else, eg mina -> mina2 etc. Then we can use the tooling to grab that note and add to the readme files etc.



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"230","1427","2017-04-19 11:37:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Assigned] (CAMEL-7519) camel-bindy - CSV unbinding does not
 escape embedded quote character","Return-Path: <issues-return-41552-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id E160B18DD9
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 11:37:48 +0000 (UTC)
Received: (qmail 92883 invoked by uid 500); 19 Apr 2017 11:37:48 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 92847 invoked by uid 500); 19 Apr 2017 11:37:48 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 92838 invoked by uid 99); 19 Apr 2017 11:37:48 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 11:37:48 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 5CF091B0617
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:37:48 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.201
X-Spam-Level: 
X-Spam-Status: No, score-99.201 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, USER_IN_WHITELIST-100, WEIRD_QUOTING0.001]
	autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id 1NDIp-IEEGfT for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 11:37:47 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 7BE7D5FB2C
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:37:47 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id E0AF1E095D
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:37:41 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id 8C69C21B47
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:37:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 11:37:41 +0000 (UTC)
From: onder sezgin (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.12721833.1403061820000.316732.1492601861573@Atlassian.JIRA>
In-Reply-To: <JIRA.12721833.1403061820000@Atlassian.JIRA>
References: <JIRA.12721833.1403061820000@Atlassian.JIRA> <JIRA.12721833.1403061820579@jira-lw-us.apache.org>
Subject: [jira] [Assigned] (CAMEL-7519) camel-bindy - CSV unbinding does not
 escape embedded quote character
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: 7bit
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


     [ https://issues.apache.org/jira/browse/CAMEL-7519?pagecom.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]

onder sezgin reassigned CAMEL-7519:
-----------------------------------

    Assignee: onder sezgin

> camel-bindy - CSV unbinding does not escape embedded quote character
> --------------------------------------------------------------------
>
>                 Key: CAMEL-7519
>                 URL: https://issues.apache.org/jira/browse/CAMEL-7519
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-bindy
>            Reporter: James Birchfield
>            Assignee: onder sezgin
>             Fix For: Future
>
>
> If you have String field that contains the same character (String) as the quote character, and quoting is set to true, the embedded character should be escaped.
> val s:String  \foo\
> Bindy will unmarshal to the CSV stream foo,...,...,...,...
> it should be \foo\,...,...,...,...



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"231","772","2017-04-19 11:38:12+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1640: CAMEL-7519 - new option quotingEscaped added for m...","Return-Path: <dev-return-47410-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 5456E18DDA
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 11:38:13 +0000 (UTC)
Received: (qmail 93115 invoked by uid 500); 19 Apr 2017 11:38:13 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 93068 invoked by uid 500); 19 Apr 2017 11:38:13 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 93056 invoked by uid 99); 19 Apr 2017 11:38:12 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 11:38:12 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id A22ECDFB92; Wed, 19 Apr 2017 11:38:12 +0000 (UTC)
From: onders86 <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
Message-ID: <git-pr-1640-camel@git.apache.org>
Subject: [GitHub] camel pull request #1640: CAMEL-7519 - new option quotingEscaped added for m...
Content-Type: text/plain
Date: Wed, 19 Apr 2017 11:38:12 +0000 (UTC)

GitHub user onders86 opened a pull request:

    https://github.com/apache/camel/pull/1640

    CAMEL-7519 - new option quotingEscaped added for marshalling/unmarsha���

    ���lling with escape char and fix some typo

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/onders86/camel CAMEL-7519

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/camel/pull/1640.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1640
    
----
commit dea74cc06c6aca27102c8e4dfa0c3b5737892756
Author: onders86 <ondersezgin@gmail.com>
Date:   2017-04-19T11:34:05Z

    CAMEL-7519 - new option quotingEscaped added for marshalling/unmarshalling with escape char and fix some typo

----


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"232","1428","2017-04-19 11:38:41+00:00","jira@apache.org","['issues@camel.apache.org']","[jira] [Commented] (CAMEL-7519) camel-bindy - CSV unbinding does
 not escape embedded quote character","Return-Path: <issues-return-41553-apmail-camel-issues-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-issues-archive@minotaur.apache.org
Delivered-To: apmail-camel-issues-archive@minotaur.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 7BE6E18DDE
	for <apmail-camel-issues-archive@minotaur.apache.org>; Wed, 19 Apr 2017 11:38:44 +0000 (UTC)
Received: (qmail 93791 invoked by uid 500); 19 Apr 2017 11:38:44 -0000
Delivered-To: apmail-camel-issues-archive@camel.apache.org
Received: (qmail 93749 invoked by uid 500); 19 Apr 2017 11:38:44 -0000
Mailing-List: contact issues-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:issues-help@camel.apache.org>
List-Unsubscribe: <mailto:issues-unsubscribe@camel.apache.org>
List-Post: <mailto:issues@camel.apache.org>
List-Id: <issues.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list issues@camel.apache.org
Received: (qmail 93740 invoked by uid 99); 19 Apr 2017 11:38:44 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 11:38:44 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id DEDA41B0617
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:38:43 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -99.2
X-Spam-Level: 
X-Spam-Status: No, score-99.2 tagged_above-999 required6.31
	tests[KAM_ASCII_DIVIDERS0.8, RP_MATCHES_RCVD-0.001,
	SPF_PASS-0.001, URIBL_BLOCKED0.001, USER_IN_WHITELIST-100,
	WEIRD_QUOTING0.001] autolearndisabled
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id gjBKDkYfDTre for <issues@camel.apache.org>;
	Wed, 19 Apr 2017 11:38:43 +0000 (UTC)
Received: from mailrelay1-us-west.apache.org (mailrelay1-us-west.apache.org [209.188.14.139])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id D566F5FC62
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:38:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (unknown [207.244.88.139])
	by mailrelay1-us-west.apache.org (ASF Mail Server at mailrelay1-us-west.apache.org) with ESMTP id 4755AE0CBE
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:38:42 +0000 (UTC)
Received: from jira-lw-us.apache.org (localhost [127.0.0.1])
	by jira-lw-us.apache.org (ASF Mail Server at jira-lw-us.apache.org) with ESMTP id A5F8321B49
	for <issues@camel.apache.org>; Wed, 19 Apr 2017 11:38:41 +0000 (UTC)
Date: Wed, 19 Apr 2017 11:38:41 +0000 (UTC)
From: ASF GitHub Bot (JIRA) <jira@apache.org>
To: issues@camel.apache.org
Message-ID: <JIRA.12721833.1403061820000.316738.1492601921678@Atlassian.JIRA>
In-Reply-To: <JIRA.12721833.1403061820000@Atlassian.JIRA>
References: <JIRA.12721833.1403061820000@Atlassian.JIRA> <JIRA.12721833.1403061820579@jira-lw-us.apache.org>
Subject: [jira] [Commented] (CAMEL-7519) camel-bindy - CSV unbinding does
 not escape embedded quote character
MIME-Version: 1.0
Content-Type: text/plain; charsetutf-8
Content-Transfer-Encoding: quoted-printable
X-JIRA-FingerPrint: 30527f35849b9dde25b450d4833f0394


    [ https://issues.apache.org/jira/browse/CAMEL-7519?page3Dcom.atlassian
.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId3D1597
4475#comment-15974475 ]
ASF GitHub Bot commented on CAMEL-7519:
---------------------------------------

GitHub user onders86 opened a pull request:

    https://github.com/apache/camel/pull/1640

    CAMEL-7519 - new option quotingEscaped added for marshalling/unmarsha
E280A6

    E280A6lling with escape char and fix some typo

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/onders86/camel CAMEL-7519

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/camel/pull/1640.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1640
   ----
commit dea74cc06c6aca27102c8e4dfa0c3b5737892756
Author: onders86 <ondersezgin@gmail.com>
Date:   2017-04-19T11:34:05Z

    CAMEL-7519 - new option quotingEscaped added for marshalling/unmarshall
ing with escape char and fix some typo

----


> camel-bindy - CSV unbinding does not escape embedded quote character
> --------------------------------------------------------------------
>
>                 Key: CAMEL-7519
>                 URL: https://issues.apache.org/jira/browse/CAMEL-7519
>             Project: Camel
>          Issue Type: Improvement
>          Components: camel-bindy
>            Reporter: James Birchfield
>            Assignee: onder sezgin
>             Fix For: Future
>
>
> If you have String field that contains the same character (String) as the
 quote character, and quoting is set to true, the embedded character should
 be escaped.
> val s:String 3D \foo\
> Bindy will unmarshal to the CSV stream foo,...,...,...,...
> it should be \foo\,...,...,...,...



--
This message was sent by Atlassian JIRA
(v6.3.15#6346)

"
"233","773","2017-04-19 13:39:20+02:00","claus.ibsen@gmail.com","['dev@camel.apache.org']","Re: Camel 2.19 Roadmap","Return-Path: <dev-return-47411-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 078E818DE5
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 11:39:46 +0000 (UTC)
Received: (qmail 94979 invoked by uid 500); 19 Apr 2017 11:39:45 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 94937 invoked by uid 500); 19 Apr 2017 11:39:45 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 94925 invoked by uid 99); 19 Apr 2017 11:39:45 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 11:39:45 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 26BF3189B4D
	for <dev@camel.apache.org>; Wed, 19 Apr 2017 11:39:45 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -0.82
X-Spam-Level: 
X-Spam-Status: No, score-0.82 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_LOW-0.7, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, SPF_PASS-0.001, URIBL_BLOCKED0.001]
	autolearndisabled
Authentication-Results: spamd3-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id DNvH5u6Gd4so for <dev@camel.apache.org>;
	Wed, 19 Apr 2017 11:39:41 +0000 (UTC)
Received: from mail-qt0-f178.google.com (mail-qt0-f178.google.com [209.85.216.178])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTPS id 830AB5FB2C
	for <dev@camel.apache.org>; Wed, 19 Apr 2017 11:39:41 +0000 (UTC)
Received: by mail-qt0-f178.google.com with SMTP id m36so16361323qtb.0
        for <dev@camel.apache.org>; Wed, 19 Apr 2017 04:39:41 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bhOFizIVHvJvZYqitdeKptzmElYvcv8ejqS/wuLPDVZhU;
        baxZ2sjKBXXo3pg9R9/O0FmDQnaFo9ZS5lkFRVG5dwn277Lhd8qXsEsfl8u3KnI0YRZ
         YRoNqYNBIccPbNqO/GK/FVklWyzm1jIRgO2D6JGBkUzmWNNBadxlaGMPy3FhOXSeiOLo
         oFZSUcwo/Peb+o6WZ8/dm8cWSI5O3NRze1WNuF/0ugIjzpddsOuqyjEcYXpOnnMsXjqW
         YL8QNd209GY2F58uCUFTFRAKJjLU0Ch+2J5R4KVtlVzNGb1oypn3EqNvNMiKbrCAbU8d
         EuVZ/sQ0eni35PvrgFzMNFyfEQ2OwbNKLcokCtlugGfgut0ayBNg6tYmB0qnOgH3NxAW
         d/kg
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bhOFizIVHvJvZYqitdeKptzmElYvcv8ejqS/wuLPDVZhU;
        bHMp4FSQ82nb02kIkq/DQS7BkkbPbDU/HIKpstj4/Ogt5SRqXM/gvZtmxtsbJEY+AVe
         txanMA2P52b4DdWhq+Z2gj5BQutgmI6/66cYm1AjqCSujiuADZOfAzUNLRL7riIxyORM
         FYbcm2BCew7Nng//Q5K9x4+Huci8W8MqEOnaDpvPGtAwg/H0FfJlDhRvqC6yXtzZ/R9g
         a9zL9ofK5UTJo0gXHA5jDzK+9c7zReEw81T7pIfx/ncK48fdI6+IfdDX01mcjCY0OSNC
         qnT/TlOvLEZ5Y/cU/B8eTsPSBAZIg2bUY0Y1DZn/+UCwcqtkiagjq6ShdTzbBxbCrQ78
         Mo+w
X-Gm-Message-State: AN3rC/7zyeZHzJ73PQ7GnyxNnBLLhzSyIbPXUfIxVVOQ0+K7McT/2lNf
	f8i7sYuu4UTISeD+Vicg7yw0o/dLUier
X-Received: by 10.237.53.124 with SMTP id b57mr1898904qte.240.1492601980792;
 Wed, 19 Apr 2017 04:39:40 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.200.50.39 with HTTP; Wed, 19 Apr 2017 04:39:20 -0700 (PDT)
In-Reply-To: <CAGB5yNkkfcc0Qy7Of_+h1BrhFRax93+hsd+7qOAzuF63tbxKw@mail.gmail.com>
References: <CAGB5yNnndh24TLPL-rs4Vb1-foxXmXHdkRa3CKHW_r9kPdNEw@mail.gmail.com>
 <CAGB5yNkt-+7cTfSRW3wrhgJRJw+BPKRmRjL0vsjsprQpntRgw@mail.gmail.com>
 <CADL1oArZDm8_8Gyy-e15NeUQajdota+iUcsRSiiOTV65oi_VLg@mail.gmail.com>
 <CAGB5yN2bgLei+g6uQEMBp9UpmrNyR1CmT-GO7e-Vamrc+4bRg@mail.gmail.com>
 <CADL1oAq3UFMbOZkofhgrqd6B8rhxpr3UUz_dks5+Btm_S2A6zw@mail.gmail.com>
 <CAGB5yNz-4vjO04NDfCCubi8+wgZeRVFJJhQVsfe9f5ZQovhw@mail.gmail.com>
 <054035E8-B6D6-4636-B52D-D85A7B9F9C85@stefanutti.fr> <CAGB5yNdaGpZRFdJ9raeKTPgnt9AYMFxp5r28M7NBg7C+32pBg@mail.gmail.com>
 <CAGB5yNwYjV89vqRtAzS_VjdyQcByUgZBJML3iCrbZLCY4SU7A@mail.gmail.com> <CAGB5yNkkfcc0Qy7Of_+h1BrhFRax93+hsd+7qOAzuF63tbxKw@mail.gmail.com>
From: Claus Ibsen <claus.ibsen@gmail.com>
Date: Wed, 19 Apr 2017 13:39:20 +0200
Message-ID: <CAGB5yNnn9d7JUWHqDfdU8Kcx6LmqLvP14GTNBZ4bxv-gxen7Q@mail.gmail.com>
Subject: Re: Camel 2.19 Roadmap
To: dev <dev@camel.apache.org>
Content-Type: text/plain; charsetUTF-8

Hi

So the @Generated and Java 9 ought to be fixed now.

There is a new version of Spring Boot 1.5.3 on the way. It may be
beneficial to wait for that to be released so we are running on
latest.

On Wed, Apr 19, 2017 at 9:54 AM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
> Hi
>
> Okay so there is some last minute issues with the @Generated
> annotations we need to look into
> https://issues.apache.org/jira/browse/CAMEL-11165
>
> And an unforseen effect on java 9 builds
> https://issues.apache.org/jira/browse/CAMEL-11166
>
> The full test is passing now. And the Spring Boot and Karaf tests has
> also passed but failed recently due some maven download error or some
> other weird error. So lets kick new builds when we get the 2 tickets
> resolved above.
>
>
>
>
> On Tue, Apr 18, 2017 at 9:45 AM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>> Hi
>>
>> Things start to look good. There is a itest that fails with spring
>> boot which we need to look at and get fixed
>> https://issues.apache.org/jira/browse/CAMEL-11154
>>
>> The other tests was all passing recently and they ought to become blue
>> again. But lets keep an eye on them:
>> https://builds.apache.org/view/A-D/view/Camel/
>>
>>
>> On Thu, Apr 13, 2017 at 1:50 PM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>> Hi
>>>
>>> Thanks Antonin that sounds great.
>>>
>>> The JIRA tickets are down to 3
>>> https://issues.apache.org/jira/issues/?jqlproject%20%3D%20CAMEL%20AND%20fixVersion%20%3D%202.19.0%20AND%20resolution%20%3D%20Unresolved
>>>
>>> We have recently fixed up the missing component docs and fixed broken
>>> links from browsing on github.
>>>
>>> We should keep an eye on the CI servers and output from the
>>> camel-catalog report, to see if it reports more missing stuff.
>>> It currently has a false positive on some missing docs for some of the
>>> test components. I will try to fix this later today.
>>>
>>> However thats not all. At all time feel free to have fun and work on
>>> anything you like on Camel. There is still time for small improvements
>>> etc. But bigger stuff we should really defer to the next release.
>>>
>>>
>>> On Wed, Apr 12, 2017 at 3:35 PM, Antonin Stefanutti
>>> <antonin@stefanutti.fr> wrote:
>>>>
>>>>> On 12 Apr 2017, at 15:22, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>>
>>>>> Hi
>>>>>
>>>>> Just a heads up that we plan to cut the RC for Camel 2.19 next week.
>>>>>
>>>>> So we are closing down on the last tickets, bugs, features etc to get
>>>>> the code base in shape.
>>>>>
>>>>> The JIRA has 9 tickets
>>>>> https://issues.apache.org/jira/issues/?jqlproject%20%3D%20CAMEL%20AND%20fixVersion%20%3D%202.19.0%20AND%20resolution%20%3D%20Unresolved
>>>>>
>>>>> But you are of course welcome to work on other tickets etc but just
>>>>> mind any big functionality is likely better to wait for next release.
>>>>>
>>>>> There is however the expected transaction stuff for CDI as a PR in the
>>>>> works, and also a new iot component
>>>>> https://github.com/apache/camel/pulls
>>>>
>>>> The CDI transaction support PR should be merged by end of week.
>>>>
>>>> https://github.com/apache/camel/pull/1390
>>>>
>>>>> We should keep an eye on the CI servers to see how they are and fix
>>>>> any test failures etc. Recently we got them to build and test the OSGi
>>>>> and spring-boot specific tests so we should be able to better keep an
>>>>> eye on this now and in the future.
>>>>> https://builds.apache.org/view/A-D/view/Camel/
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> On Fri, Apr 7, 2017 at 8:45 AM, Gregor Zurowski
>>>>> <gregor@list.zurowski.org> wrote:
>>>>>> Hi Claus,
>>>>>>
>>>>>> Week 16 works for me.  I will send out another email shortly before
>>>>>> starting to build the RC.
>>>>>>
>>>>>> Thanks,
>>>>>> Gregor
>>>>>>
>>>>>>
>>>>>> On Wed, Apr 5, 2017 at 3:08 PM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>>>> Hi Gregor
>>>>>>>
>>>>>>> Yeah its April so we should get the 2.19.0 release out the door.
>>>>>>>
>>>>>>> We have just setup a 2.20.0 version in JIRA and folks should start
>>>>>>> moving their tickets to that version if its something that they cannot
>>>>>>> finish in time. Also we should refrain from doing bigger work at this
>>>>>>> time as we should close down on last tickets, bug fixes, and get the
>>>>>>> CI tests in good order, etc.
>>>>>>>
>>>>>>> I will look at the JIRAs later this week and cleanup a bit so we have
>>>>>>> a better overview of what work is yet to be done.
>>>>>>>
>>>>>>> As April has the easter holidays. I wonder what you time schedule looks like?
>>>>>>>
>>>>>>> Maybe if you have time to help with the release after the holidays?
>>>>>>>
>>>>>>> Week 16 and 17 are the last 2 weeks in April after the holidays.
>>>>>>> If we could maybe cut the RC in week 16 then that would be good.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> On Mon, Apr 3, 2017 at 2:14 PM, Gregor Zurowski
>>>>>>> <gregor@list.zurowski.org> wrote:
>>>>>>>> Hi,
>>>>>>>>
>>>>>>>> Are we getting closer to build a 2.19.0 release?  I would volunteer
>>>>>>>> for creating the release, just wanted to check when would be a good
>>>>>>>> time to do so.
>>>>>>>>
>>>>>>>> Thanks,
>>>>>>>> Gregor
>>>>>>>>
>>>>>>>>
>>>>>>>> On Wed, Mar 15, 2017 at 9:29 AM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>>>>>> Hi
>>>>>>>>>
>>>>>>>>> Just wanted to bring up that we are closing in on a good time for
>>>>>>>>> doing a new release.
>>>>>>>>>
>>>>>>>>> For example in mid April it would be around 6 months since the last
>>>>>>>>> 2.18.0 release.
>>>>>>>>>
>>>>>>>>> Therefore we should start closing down and fixing bugs, and make sure
>>>>>>>>> the CI servers and tests are in good shape.
>>>>>>>>> This morning we have fixed a number of recent test failures and are
>>>>>>>>> down to only 1 test failure now.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Mon, Jan 16, 2017 at 10:28 AM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>>>>>>> Hi
>>>>>>>>>>
>>>>>>>>>> There is a bunch of stuff which we can/should have on the roadmap to
>>>>>>>>>> complete for the Camel 2.19 release.
>>>>>>>>>>
>>>>>>>>>> Here is on top of my head
>>>>>>>>>>
>>>>>>>>>> 1)
>>>>>>>>>> Finish migrating the wiki documentation to adoc files. I think its
>>>>>>>>>> most of the EIP patterns that are missing. There is a basic list of
>>>>>>>>>> EIPs here: https://github.com/apache/camel/blob/master/camel-core/readme-eip.adoc
>>>>>>>>>>
>>>>>>>>>> 2)
>>>>>>>>>> Generate documentation and website. Maybe documentation first and then
>>>>>>>>>> we come up with a modern website later - when we have a new logo as
>>>>>>>>>> well.
>>>>>>>>>>
>>>>>>>>>> 3)
>>>>>>>>>> Mark more stuff to @deprecate so we dont drag them into Camel 3.0.
>>>>>>>>>> This is both components / and other artifacts.
>>>>>>>>>> And as well the camel-core APIs where there is maybe more we can deprecate.
>>>>>>>>>> For example the old stuff that was created prior to the component docs
>>>>>>>>>> we do now with the apt plugin at build time instead of this old code
>>>>>>>>>> with runtime that dont really pan out anyway.
>>>>>>>>>>
>>>>>>>>>> 4)
>>>>>>>>>> Move spring-boot starters into the platforms folder. There is a ticket
>>>>>>>>>> about this.
>>>>>>>>>>
>>>>>>>>>> 5)
>>>>>>>>>> More improvements to spring boot auto configuration. We have a bunch
>>>>>>>>>> of tickets on that.
>>>>>>>>>>
>>>>>>>>>> 6)
>>>>>>>>>> Look at the health check API and see if there is something we can get
>>>>>>>>>> started on.
>>>>>>>>>> Possible some API to integrate with spring boot actuators (when using
>>>>>>>>>> SB) and allow each component to provide their own checks so they can
>>>>>>>>>> be implemented ad-hoc. There is a ticket about this.
>>>>>>>>>>
>>>>>>>>>> 7)
>>>>>>>>>> Possible some more teaks to camel-catalog based on feedback from IDEA
>>>>>>>>>> plugin and the maven validate goal.
>>>>>>>>>>
>>>>>>>>>> 8)
>>>>>>>>>> That CDI JEE transaction PR on github.
>>>>>>>>>> Ideally we would have had a transaction API in camel-core and then one
>>>>>>>>>> impl for camel-spring, and then another for camel-cdi-jee. But that
>>>>>>>>>> may require too much work.
>>>>>>>>>>
>>>>>>>>>> 9)
>>>>>>>>>> Work on the Java 8 DSL such as get more community feedback, and then
>>>>>>>>>> resolve the TODOs with the documentation updates and look into other
>>>>>>>>>> areas where the API can benefit from Java 8 lambdas and whatnot. I
>>>>>>>>>> dont think we have a ticket about this.
>>>>>>>>>>
>>>>>>>>>> 10)
>>>>>>>>>> Karaf users may want to improve/finish up the camel-test-karaf module
>>>>>>>>>> so its more usable and end users can use it to test integration tests
>>>>>>>>>> with Camel and Karaf.
>>>>>>>>>>
>>>>>>>>>> 11)
>>>>>>>>>> Introduce Camel Connectors (more about this later)
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> Anything else?
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> --
>>>>>>>>>> Claus Ibsen
>>>>>>>>>> -----------------
>>>>>>>>>> http://davsclaus.com @davsclaus
>>>>>>>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> --
>>>>>>>>> Claus Ibsen
>>>>>>>>> -----------------
>>>>>>>>> http://davsclaus.com @davsclaus
>>>>>>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> --
>>>>>>> Claus Ibsen
>>>>>>> -----------------
>>>>>>> http://davsclaus.com @davsclaus
>>>>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>>>
>>>>>
>>>>>
>>>>> --
>>>>> Claus Ibsen
>>>>> -----------------
>>>>> http://davsclaus.com @davsclaus
>>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>>
>>>
>>>
>>>
>>> --
>>> Claus Ibsen
>>> -----------------
>>> http://davsclaus.com @davsclaus
>>> Camel in Action 2: https://www.manning.com/ibsen2
>>
>>
>>
>> --
>> Claus Ibsen
>> -----------------
>> http://davsclaus.com @davsclaus
>> Camel in Action 2: https://www.manning.com/ibsen2
>
>
>
> --
> Claus Ibsen
> -----------------
> http://davsclaus.com @davsclaus
> Camel in Action 2: https://www.manning.com/ibsen2



-- 
Claus Ibsen
-----------------
http://davsclaus.com @davsclaus
Camel in Action 2: https://www.manning.com/ibsen2

"
"234","774","2017-04-19 11:51:33+00:00","jenkins@builds.apache.org","['dev@camel.apache.org']","Camel.trunk.notest - Build # 3146 - Failure","Return-Path: <dev-return-47412-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0830818E88
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 11:51:34 +0000 (UTC)
Received: (qmail 29985 invoked by uid 500); 19 Apr 2017 11:51:33 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 29934 invoked by uid 500); 19 Apr 2017 11:51:33 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 29922 invoked by uid 99); 19 Apr 2017 11:51:33 -0000
Received: from crius.apache.org (HELO crius.apache.org) (140.211.11.14)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 11:51:33 +0000
Received: from crius.apache.org (localhost [127.0.0.1])
	by crius.apache.org (ASF Mail Server at crius.apache.org) with ESMTP id 638BA9C0175
	for <dev@camel.apache.org>; Wed, 19 Apr 2017 11:51:33 +0000 (UTC)
Date: Wed, 19 Apr 2017 11:51:33 +0000 (UTC)
From: Apache Jenkins Server <jenkins@builds.apache.org>
To: dev@camel.apache.org
Message-ID: <1579680024.1412.1492602693408.JavaMail.jenkins@crius>
Subject: Camel.trunk.notest - Build # 3146 - Failure
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary----_Part_1411_1299722677.1492602693399
X-Jenkins-Job: Camel.trunk.notest
X-Jenkins-Result: FAILURE

------_Part_1411_1299722677.1492602693399
Content-Type: text/plain; charsetUTF-8
Content-Transfer-Encoding: 7bit

The Apache Jenkins build system has built Camel.trunk.notest (build #3146)

Status: Failure

Check console output at https://builds.apache.org/job/Camel.trunk.notest/3146/ to view the results.
------_Part_1411_1299722677.1492602693399--

"
"235","383","2017-04-19 11:53:09+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[1/2] camel git commit: Upgrade Spring","Return-Path: <commits-return-55756-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 1CDBA18E91
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 11:53:10 +0000 (UTC)
Received: (qmail 33113 invoked by uid 500); 19 Apr 2017 11:53:10 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 33055 invoked by uid 500); 19 Apr 2017 11:53:10 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 33046 invoked by uid 99); 19 Apr 2017 11:53:10 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 11:53:10 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id E0C84DFB92; Wed, 19 Apr 2017 11:53:09 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 11:53:09 -0000
Message-Id: <87f507e3493c4bd384bdb1fd73fdceba@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [1/2] camel git commit: Upgrade Spring

Repository: camel
Updated Branches:
  refs/heads/master 1d1daefe8 -> db2556580


Upgrade Spring


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/f31abac1
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/f31abac1
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/f31abac1

Branch: refs/heads/master
Commit: f31abac1d1203dc02e3a527ecd790db6318ad8ca
Parents: 1d1daef
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Wed Apr 19 13:37:34 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Wed Apr 19 13:37:34 2017 +0200

----------------------------------------------------------------------
 parent/pom.xml | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/f31abac1/parent/pom.xml
----------------------------------------------------------------------
diff --git a/parent/pom.xml b/parent/pom.xml
index 578d968..24069e4 100644
--- a/parent/pom.xml
+++ b/parent/pom.xml
@@ -610,8 +610,8 @@
     <spring40-version>4.0.9.RELEASE</spring40-version>
     <spring41-version>4.1.9.RELEASE</spring41-version>
     <spring42-version>4.2.9.RELEASE</spring42-version>
-    <spring43-version>4.3.7.RELEASE</spring43-version>
-    <spring4-version>4.3.7.RELEASE</spring4-version>
+    <spring43-version>4.3.8.RELEASE</spring43-version>
+    <spring4-version>4.3.8.RELEASE</spring4-version>
     <spring-osgi-version>1.2.1</spring-osgi-version>
     <spring-security-version>4.1.4.RELEASE</spring-security-version>
     <spring-security-bundle-version>4.1.4.RELEASE_1</spring-security-bundle-version>


"
"236","384","2017-04-19 11:53:10+00:00","davsclaus@apache.org","['commits@camel.apache.org']","[2/2] camel git commit: Upgrade Spring Integration","Return-Path: <commits-return-55757-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 2D6EC18E92
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 11:53:10 +0000 (UTC)
Received: (qmail 33208 invoked by uid 500); 19 Apr 2017 11:53:10 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 33156 invoked by uid 500); 19 Apr 2017 11:53:10 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 33056 invoked by uid 99); 19 Apr 2017 11:53:10 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 11:53:10 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id E3CB1E038B; Wed, 19 Apr 2017 11:53:09 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Date: Wed, 19 Apr 2017 11:53:10 -0000
Message-Id: <8963dba1be244014b26b6e36de188007@git.apache.org>
In-Reply-To: <87f507e3493c4bd384bdb1fd73fdceba@git.apache.org>
References: <87f507e3493c4bd384bdb1fd73fdceba@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: [2/2] camel git commit: Upgrade Spring Integration

Upgrade Spring Integration


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/db255658
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/db255658
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/db255658

Branch: refs/heads/master
Commit: db2556580a46fb0cd11b16f6490b962214aa3a62
Parents: f31abac
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Wed Apr 19 13:52:26 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Wed Apr 19 13:52:26 2017 +0200

----------------------------------------------------------------------
 parent/pom.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/db255658/parent/pom.xml
----------------------------------------------------------------------
diff --git a/parent/pom.xml b/parent/pom.xml
index 24069e4..2f9ee7a 100644
--- a/parent/pom.xml
+++ b/parent/pom.xml
@@ -591,7 +591,7 @@
     <spring-castor-bundle-version>1.2.0</spring-castor-bundle-version>
     <spring-data-commons-version>1.11.6.RELEASE</spring-data-commons-version>
     <spring-data-redis-version>1.7.5.RELEASE</spring-data-redis-version>
-    <spring-integration-version>4.3.7.RELEASE</spring-integration-version>
+    <spring-integration-version>4.3.9.RELEASE</spring-integration-version>
     <spring-javaconfig-version>1.0.0-20090215</spring-javaconfig-version>
     <spring-ldap-version>2.2.0.RELEASE</spring-ldap-version>
     <spring-ldap-bundle-version>2.2.0.RELEASE_1</spring-ldap-bundle-version>


"
"237","385","2017-04-19 11:57:57+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: Upgrade CXF","Return-Path: <commits-return-55758-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 8D51718EBA
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 11:57:57 +0000 (UTC)
Received: (qmail 38980 invoked by uid 500); 19 Apr 2017 11:57:57 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 38920 invoked by uid 500); 19 Apr 2017 11:57:57 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 38911 invoked by uid 99); 19 Apr 2017 11:57:57 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 11:57:57 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 4EC19DF999; Wed, 19 Apr 2017 11:57:57 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <da3c1ad4ffe3491dbb246b87ca5280b5@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Upgrade CXF
Date: Wed, 19 Apr 2017 11:57:57 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master db2556580 -> 28fa5cf61


Upgrade CXF


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/28fa5cf6
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/28fa5cf6
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/28fa5cf6

Branch: refs/heads/master
Commit: 28fa5cf61e8ff9f8ed298af00815d952129059b7
Parents: db25565
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Wed Apr 19 13:56:35 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Wed Apr 19 13:56:35 2017 +0200

----------------------------------------------------------------------
 parent/pom.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/28fa5cf6/parent/pom.xml
----------------------------------------------------------------------
diff --git a/parent/pom.xml b/parent/pom.xml
index 2f9ee7a..9b9013b 100644
--- a/parent/pom.xml
+++ b/parent/pom.xml
@@ -156,7 +156,7 @@
     <cobertura-maven-plugin-version>2.7</cobertura-maven-plugin-version>
     <couchbase-client-version>1.4.12</couchbase-client-version>
     <curator-version>2.11.1</curator-version>
-    <cxf-version>3.1.10</cxf-version>
+    <cxf-version>3.1.11</cxf-version>
     <cxf-version-range>[3.0,4.0)</cxf-version-range>
     <cxf-xjc-plugin-version>3.0.5</cxf-xjc-plugin-version>
     <cxf-xjc-utils-version>3.0.5</cxf-xjc-utils-version>


"
"238","775","2017-04-19 12:21:29+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1641: Clean up example applications","Return-Path: <dev-return-47413-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 4898A18FA9
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 12:21:30 +0000 (UTC)
Received: (qmail 8943 invoked by uid 500); 19 Apr 2017 12:21:30 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 8902 invoked by uid 500); 19 Apr 2017 12:21:30 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 8891 invoked by uid 99); 19 Apr 2017 12:21:29 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 12:21:29 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id A37A2DF999; Wed, 19 Apr 2017 12:21:29 +0000 (UTC)
From: ctron <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
Message-ID: <git-pr-1641-camel@git.apache.org>
Subject: [GitHub] camel pull request #1641: Clean up example applications
Content-Type: text/plain
Date: Wed, 19 Apr 2017 12:21:29 +0000 (UTC)

GitHub user ctron opened a pull request:

    https://github.com/apache/camel/pull/1641

    Clean up example applications

    This change cleans the example applications provided to show
    some simple routes with camel-milo.
    
    Signed-off-by: Jens Reimann <jreimann@redhat.com>

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ctron/camel feature/milo_cleanup_samples_1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/camel/pull/1641.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1641
    
----
commit 56f2b24a2d4dbb408b71610bfe90fbfa2e9f7147
Author: Jens Reimann <jreimann@redhat.com>
Date:   2017-04-19T12:14:54Z

    Clean up example applications
    
    This change cleans the example applications provided to show
    some simple routes with camel-milo.
    
    Signed-off-by: Jens Reimann <jreimann@redhat.com>

----


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"239","776","2017-04-19 14:21:57+02:00","lburgazzoli@gmail.com","['dev@camel.apache.org']","Re: Camel 2.19 Roadmap","Return-Path: <dev-return-47414-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 1816118FB6
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 12:22:06 +0000 (UTC)
Received: (qmail 10849 invoked by uid 500); 19 Apr 2017 12:22:05 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 10802 invoked by uid 500); 19 Apr 2017 12:22:05 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 10788 invoked by uid 99); 19 Apr 2017 12:22:05 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 12:22:05 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id D9CAD1A7A4D
	for <dev@camel.apache.org>; Wed, 19 Apr 2017 12:22:04 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -2.396
X-Spam-Level: 
X-Spam-Status: No, score-2.396 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H2-2.796,
	RCVD_IN_SORBS_SPAM0.5, SPF_PASS-0.001, URIBL_BLOCKED0.001]
	autolearndisabled
Authentication-Results: spamd2-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id C2dyjApIFhhl for <dev@camel.apache.org>;
	Wed, 19 Apr 2017 12:22:00 +0000 (UTC)
Received: from mail-io0-f178.google.com (mail-io0-f178.google.com [209.85.223.178])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id C81075F4EE
	for <dev@camel.apache.org>; Wed, 19 Apr 2017 12:21:59 +0000 (UTC)
Received: by mail-io0-f178.google.com with SMTP id a103so20126522ioj.1
        for <dev@camel.apache.org>; Wed, 19 Apr 2017 05:21:59 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bhEFRu4vAiX7vknuQCn0jpX55Z+mcIgcKLV8tMuo2Cl9A;
        bGMtVWmflc6+AqxKbpDq0ixratyWz5kRWrz3csPP7ZiYYHREhXpo217Yq42yh2m9U5v
         MIJ3gAb1wILx+IRq3CBauEDh4iuoTGITlNYzGLt/JShGYpk2+oxzUgbvEGq0OxA/wIsS
         xmDt67XI01ZPiVZ+CAFe9/fnwMNaY88lbaX5g8eCWj02OQK+8bTwpK6UaEPwpUgwzSdt
         bqd6TsLbUTMLHvRZT/jtvix/2ye90W8NXnVf/RHtXcY0LNSKivrZnblgxYx1+iJA9sKJ
         Fqu5NLAN6znCinG/i9GHIjItUkarle+j1LXGyAU0WKAfQ7XqACXF+9UDIV98lmO2hP8v
         eaHw
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bhEFRu4vAiX7vknuQCn0jpX55Z+mcIgcKLV8tMuo2Cl9A;
        bn+YK+GLMxQYL4d+ZFNkmbNBpvDwkpHm+/LCIzNMiA6HueuQrxwkp2oqnPAMYR7FCWc
         CNnjiuGnsf4VhdChPaTw8MmeZ5R7DXckLxKxqojYz9xAxCz7aQcS2izGdbmL5SPHEDIG
         322FZsqtc/DX+agwK+M89Z75hsX6EX2i7ZWOqPrjjiiXfM9M8fnDhL1YGUcQsw98s1W+
         mHPrYHccyCYvJypUCTAC8UtYQa4pnsJe1tYHmmFDIIH2Ymazwt5Rd9fLkeTv9KOqNOk5
         SkK4TivlTtIney3D8F3u4x5mnC1Oy4DknsnqWCu3qNiqiEukEPMQdH5mb2LODro2r8va
         GS1Q
X-Gm-Message-State: AN3rC/6H7Lc5yHy6/4NZ6sOdrTMzu9ZWlLkpo46gm1BJDXTvcAeBHldD
	25mRNTqHvBocwjyjL+98w8QEEhusbBty
X-Received: by 10.107.189.68 with SMTP id n65mr2618139iof.154.1492604518259;
 Wed, 19 Apr 2017 05:21:58 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.79.103.131 with HTTP; Wed, 19 Apr 2017 05:21:57 -0700 (PDT)
In-Reply-To: <CAGB5yNnn9d7JUWHqDfdU8Kcx6LmqLvP14GTNBZ4bxv-gxen7Q@mail.gmail.com>
References: <CAGB5yNnndh24TLPL-rs4Vb1-foxXmXHdkRa3CKHW_r9kPdNEw@mail.gmail.com>
 <CAGB5yNkt-+7cTfSRW3wrhgJRJw+BPKRmRjL0vsjsprQpntRgw@mail.gmail.com>
 <CADL1oArZDm8_8Gyy-e15NeUQajdota+iUcsRSiiOTV65oi_VLg@mail.gmail.com>
 <CAGB5yN2bgLei+g6uQEMBp9UpmrNyR1CmT-GO7e-Vamrc+4bRg@mail.gmail.com>
 <CADL1oAq3UFMbOZkofhgrqd6B8rhxpr3UUz_dks5+Btm_S2A6zw@mail.gmail.com>
 <CAGB5yNz-4vjO04NDfCCubi8+wgZeRVFJJhQVsfe9f5ZQovhw@mail.gmail.com>
 <054035E8-B6D6-4636-B52D-D85A7B9F9C85@stefanutti.fr> <CAGB5yNdaGpZRFdJ9raeKTPgnt9AYMFxp5r28M7NBg7C+32pBg@mail.gmail.com>
 <CAGB5yNwYjV89vqRtAzS_VjdyQcByUgZBJML3iCrbZLCY4SU7A@mail.gmail.com>
 <CAGB5yNkkfcc0Qy7Of_+h1BrhFRax93+hsd+7qOAzuF63tbxKw@mail.gmail.com> <CAGB5yNnn9d7JUWHqDfdU8Kcx6LmqLvP14GTNBZ4bxv-gxen7Q@mail.gmail.com>
From: Luca Burgazzoli <lburgazzoli@gmail.com>
Date: Wed, 19 Apr 2017 14:21:57 +0200
Message-ID: <CAMpNYoYivdY+iaTTOUn4RvYUoOpAGBs+9sdFDJ4FgPALWPzPeQ@mail.gmail.com>
Subject: Re: Camel 2.19 Roadmap
To: dev@camel.apache.org
Content-Type: text/plain; charsetUTF-8

Hi,

I have one little refactoring (rename LoadBalancer in camel cloud
package to avoid confusion with LoadBalancer processor) and a little
doc update that Im trying to make by end of day.



---
Luca Burgazzoli


On Wed, Apr 19, 2017 at 1:39 PM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
> Hi
>
> So the @Generated and Java 9 ought to be fixed now.
>
> There is a new version of Spring Boot 1.5.3 on the way. It may be
> beneficial to wait for that to be released so we are running on
> latest.
>
> On Wed, Apr 19, 2017 at 9:54 AM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>> Hi
>>
>> Okay so there is some last minute issues with the @Generated
>> annotations we need to look into
>> https://issues.apache.org/jira/browse/CAMEL-11165
>>
>> And an unforseen effect on java 9 builds
>> https://issues.apache.org/jira/browse/CAMEL-11166
>>
>> The full test is passing now. And the Spring Boot and Karaf tests has
>> also passed but failed recently due some maven download error or some
>> other weird error. So lets kick new builds when we get the 2 tickets
>> resolved above.
>>
>>
>>
>>
>> On Tue, Apr 18, 2017 at 9:45 AM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>> Hi
>>>
>>> Things start to look good. There is a itest that fails with spring
>>> boot which we need to look at and get fixed
>>> https://issues.apache.org/jira/browse/CAMEL-11154
>>>
>>> The other tests was all passing recently and they ought to become blue
>>> again. But lets keep an eye on them:
>>> https://builds.apache.org/view/A-D/view/Camel/
>>>
>>>
>>> On Thu, Apr 13, 2017 at 1:50 PM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>> Hi
>>>>
>>>> Thanks Antonin that sounds great.
>>>>
>>>> The JIRA tickets are down to 3
>>>> https://issues.apache.org/jira/issues/?jqlproject%20%3D%20CAMEL%20AND%20fixVersion%20%3D%202.19.0%20AND%20resolution%20%3D%20Unresolved
>>>>
>>>> We have recently fixed up the missing component docs and fixed broken
>>>> links from browsing on github.
>>>>
>>>> We should keep an eye on the CI servers and output from the
>>>> camel-catalog report, to see if it reports more missing stuff.
>>>> It currently has a false positive on some missing docs for some of the
>>>> test components. I will try to fix this later today.
>>>>
>>>> However thats not all. At all time feel free to have fun and work on
>>>> anything you like on Camel. There is still time for small improvements
>>>> etc. But bigger stuff we should really defer to the next release.
>>>>
>>>>
>>>> On Wed, Apr 12, 2017 at 3:35 PM, Antonin Stefanutti
>>>> <antonin@stefanutti.fr> wrote:
>>>>>
>>>>>> On 12 Apr 2017, at 15:22, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>>>
>>>>>> Hi
>>>>>>
>>>>>> Just a heads up that we plan to cut the RC for Camel 2.19 next week.
>>>>>>
>>>>>> So we are closing down on the last tickets, bugs, features etc to get
>>>>>> the code base in shape.
>>>>>>
>>>>>> The JIRA has 9 tickets
>>>>>> https://issues.apache.org/jira/issues/?jqlproject%20%3D%20CAMEL%20AND%20fixVersion%20%3D%202.19.0%20AND%20resolution%20%3D%20Unresolved
>>>>>>
>>>>>> But you are of course welcome to work on other tickets etc but just
>>>>>> mind any big functionality is likely better to wait for next release.
>>>>>>
>>>>>> There is however the expected transaction stuff for CDI as a PR in the
>>>>>> works, and also a new iot component
>>>>>> https://github.com/apache/camel/pulls
>>>>>
>>>>> The CDI transaction support PR should be merged by end of week.
>>>>>
>>>>> https://github.com/apache/camel/pull/1390
>>>>>
>>>>>> We should keep an eye on the CI servers to see how they are and fix
>>>>>> any test failures etc. Recently we got them to build and test the OSGi
>>>>>> and spring-boot specific tests so we should be able to better keep an
>>>>>> eye on this now and in the future.
>>>>>> https://builds.apache.org/view/A-D/view/Camel/
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> On Fri, Apr 7, 2017 at 8:45 AM, Gregor Zurowski
>>>>>> <gregor@list.zurowski.org> wrote:
>>>>>>> Hi Claus,
>>>>>>>
>>>>>>> Week 16 works for me.  I will send out another email shortly before
>>>>>>> starting to build the RC.
>>>>>>>
>>>>>>> Thanks,
>>>>>>> Gregor
>>>>>>>
>>>>>>>
>>>>>>> On Wed, Apr 5, 2017 at 3:08 PM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>>>>> Hi Gregor
>>>>>>>>
>>>>>>>> Yeah its April so we should get the 2.19.0 release out the door.
>>>>>>>>
>>>>>>>> We have just setup a 2.20.0 version in JIRA and folks should start
>>>>>>>> moving their tickets to that version if its something that they cannot
>>>>>>>> finish in time. Also we should refrain from doing bigger work at this
>>>>>>>> time as we should close down on last tickets, bug fixes, and get the
>>>>>>>> CI tests in good order, etc.
>>>>>>>>
>>>>>>>> I will look at the JIRAs later this week and cleanup a bit so we have
>>>>>>>> a better overview of what work is yet to be done.
>>>>>>>>
>>>>>>>> As April has the easter holidays. I wonder what you time schedule looks like?
>>>>>>>>
>>>>>>>> Maybe if you have time to help with the release after the holidays?
>>>>>>>>
>>>>>>>> Week 16 and 17 are the last 2 weeks in April after the holidays.
>>>>>>>> If we could maybe cut the RC in week 16 then that would be good.
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> On Mon, Apr 3, 2017 at 2:14 PM, Gregor Zurowski
>>>>>>>> <gregor@list.zurowski.org> wrote:
>>>>>>>>> Hi,
>>>>>>>>>
>>>>>>>>> Are we getting closer to build a 2.19.0 release?  I would volunteer
>>>>>>>>> for creating the release, just wanted to check when would be a good
>>>>>>>>> time to do so.
>>>>>>>>>
>>>>>>>>> Thanks,
>>>>>>>>> Gregor
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Wed, Mar 15, 2017 at 9:29 AM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>>>>>>> Hi
>>>>>>>>>>
>>>>>>>>>> Just wanted to bring up that we are closing in on a good time for
>>>>>>>>>> doing a new release.
>>>>>>>>>>
>>>>>>>>>> For example in mid April it would be around 6 months since the last
>>>>>>>>>> 2.18.0 release.
>>>>>>>>>>
>>>>>>>>>> Therefore we should start closing down and fixing bugs, and make sure
>>>>>>>>>> the CI servers and tests are in good shape.
>>>>>>>>>> This morning we have fixed a number of recent test failures and are
>>>>>>>>>> down to only 1 test failure now.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Mon, Jan 16, 2017 at 10:28 AM, Claus Ibsen <claus.ibsen@gmail.com> wrote:
>>>>>>>>>>> Hi
>>>>>>>>>>>
>>>>>>>>>>> There is a bunch of stuff which we can/should have on the roadmap to
>>>>>>>>>>> complete for the Camel 2.19 release.
>>>>>>>>>>>
>>>>>>>>>>> Here is on top of my head
>>>>>>>>>>>
>>>>>>>>>>> 1)
>>>>>>>>>>> Finish migrating the wiki documentation to adoc files. I think its
>>>>>>>>>>> most of the EIP patterns that are missing. There is a basic list of
>>>>>>>>>>> EIPs here: https://github.com/apache/camel/blob/master/camel-core/readme-eip.adoc
>>>>>>>>>>>
>>>>>>>>>>> 2)
>>>>>>>>>>> Generate documentation and website. Maybe documentation first and then
>>>>>>>>>>> we come up with a modern website later - when we have a new logo as
>>>>>>>>>>> well.
>>>>>>>>>>>
>>>>>>>>>>> 3)
>>>>>>>>>>> Mark more stuff to @deprecate so we dont drag them into Camel 3.0.
>>>>>>>>>>> This is both components / and other artifacts.
>>>>>>>>>>> And as well the camel-core APIs where there is maybe more we can deprecate.
>>>>>>>>>>> For example the old stuff that was created prior to the component docs
>>>>>>>>>>> we do now with the apt plugin at build time instead of this old code
>>>>>>>>>>> with runtime that dont really pan out anyway.
>>>>>>>>>>>
>>>>>>>>>>> 4)
>>>>>>>>>>> Move spring-boot starters into the platforms folder. There is a ticket
>>>>>>>>>>> about this.
>>>>>>>>>>>
>>>>>>>>>>> 5)
>>>>>>>>>>> More improvements to spring boot auto configuration. We have a bunch
>>>>>>>>>>> of tickets on that.
>>>>>>>>>>>
>>>>>>>>>>> 6)
>>>>>>>>>>> Look at the health check API and see if there is something we can get
>>>>>>>>>>> started on.
>>>>>>>>>>> Possible some API to integrate with spring boot actuators (when using
>>>>>>>>>>> SB) and allow each component to provide their own checks so they can
>>>>>>>>>>> be implemented ad-hoc. There is a ticket about this.
>>>>>>>>>>>
>>>>>>>>>>> 7)
>>>>>>>>>>> Possible some more teaks to camel-catalog based on feedback from IDEA
>>>>>>>>>>> plugin and the maven validate goal.
>>>>>>>>>>>
>>>>>>>>>>> 8)
>>>>>>>>>>> That CDI JEE transaction PR on github.
>>>>>>>>>>> Ideally we would have had a transaction API in camel-core and then one
>>>>>>>>>>> impl for camel-spring, and then another for camel-cdi-jee. But that
>>>>>>>>>>> may require too much work.
>>>>>>>>>>>
>>>>>>>>>>> 9)
>>>>>>>>>>> Work on the Java 8 DSL such as get more community feedback, and then
>>>>>>>>>>> resolve the TODOs with the documentation updates and look into other
>>>>>>>>>>> areas where the API can benefit from Java 8 lambdas and whatnot. I
>>>>>>>>>>> dont think we have a ticket about this.
>>>>>>>>>>>
>>>>>>>>>>> 10)
>>>>>>>>>>> Karaf users may want to improve/finish up the camel-test-karaf module
>>>>>>>>>>> so its more usable and end users can use it to test integration tests
>>>>>>>>>>> with Camel and Karaf.
>>>>>>>>>>>
>>>>>>>>>>> 11)
>>>>>>>>>>> Introduce Camel Connectors (more about this later)
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> Anything else?
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> --
>>>>>>>>>>> Claus Ibsen
>>>>>>>>>>> -----------------
>>>>>>>>>>> http://davsclaus.com @davsclaus
>>>>>>>>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> --
>>>>>>>>>> Claus Ibsen
>>>>>>>>>> -----------------
>>>>>>>>>> http://davsclaus.com @davsclaus
>>>>>>>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> --
>>>>>>>> Claus Ibsen
>>>>>>>> -----------------
>>>>>>>> http://davsclaus.com @davsclaus
>>>>>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>>>>
>>>>>>
>>>>>>
>>>>>> --
>>>>>> Claus Ibsen
>>>>>> -----------------
>>>>>> http://davsclaus.com @davsclaus
>>>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>>>
>>>>
>>>>
>>>>
>>>> --
>>>> Claus Ibsen
>>>> -----------------
>>>> http://davsclaus.com @davsclaus
>>>> Camel in Action 2: https://www.manning.com/ibsen2
>>>
>>>
>>>
>>> --
>>> Claus Ibsen
>>> -----------------
>>> http://davsclaus.com @davsclaus
>>> Camel in Action 2: https://www.manning.com/ibsen2
>>
>>
>>
>> --
>> Claus Ibsen
>> -----------------
>> http://davsclaus.com @davsclaus
>> Camel in Action 2: https://www.manning.com/ibsen2
>
>
>
> --
> Claus Ibsen
> -----------------
> http://davsclaus.com @davsclaus
> Camel in Action 2: https://www.manning.com/ibsen2

"
"240","386","2017-04-19 12:26:53+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: Upgrade CXF","Return-Path: <commits-return-55759-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 280B619007
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 12:26:55 +0000 (UTC)
Received: (qmail 24487 invoked by uid 500); 19 Apr 2017 12:26:55 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 24425 invoked by uid 500); 19 Apr 2017 12:26:53 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 24416 invoked by uid 99); 19 Apr 2017 12:26:53 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 12:26:53 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 5CEDFE038B; Wed, 19 Apr 2017 12:26:53 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <9cbb82ef817f42dd959e07ed7e84b41b@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Upgrade CXF
Date: Wed, 19 Apr 2017 12:26:53 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/camel-2.18.x 4f1b6539e -> 2964c72b7


Upgrade CXF


Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/2964c72b
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/2964c72b
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/2964c72b

Branch: refs/heads/camel-2.18.x
Commit: 2964c72b70471c18872fc57c9b908f7d0b611891
Parents: 4f1b653
Author: Claus Ibsen <davsclaus@apache.org>
Authored: Wed Apr 19 14:26:47 2017 +0200
Committer: Claus Ibsen <davsclaus@apache.org>
Committed: Wed Apr 19 14:26:47 2017 +0200

----------------------------------------------------------------------
 parent/pom.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/2964c72b/parent/pom.xml
----------------------------------------------------------------------
diff --git a/parent/pom.xml b/parent/pom.xml
index c3c52d1..5beab1d 100644
--- a/parent/pom.xml
+++ b/parent/pom.xml
@@ -147,7 +147,7 @@
     <consul-client-version>0.12.4</consul-client-version>
     <consul-client-bundle-version>0.12.4_1</consul-client-bundle-version>
     <cobertura-maven-plugin-version>2.7</cobertura-maven-plugin-version>
-    <cxf-version>3.1.10</cxf-version>
+    <cxf-version>3.1.11</cxf-version>
     <cxf-version-range>[3.0,4.0)</cxf-version-range>
     <cxf-xjc-plugin-version>3.0.5</cxf-xjc-plugin-version>
     <cxf-xjc-utils-version>3.0.5</cxf-xjc-utils-version>


"
"241","1876","2017-04-19 05:27:35-07:00","thomas.weinschenk@infoserve.endress.com","['users@camel.apache.org']","Spring Boot > 1.5 fails when camel-swagger-java in place","Return-Path: <users-return-65359-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 250A01901C
	for <apmail-camel-users-archive@www.apache.org>; Wed, 19 Apr 2017 12:27:44 +0000 (UTC)
Received: (qmail 25179 invoked by uid 500); 19 Apr 2017 12:27:43 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 25120 invoked by uid 500); 19 Apr 2017 12:27:43 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 25096 invoked by uid 99); 19 Apr 2017 12:27:42 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 12:27:42 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id B59D51AF949
	for <users@camel.apache.org>; Wed, 19 Apr 2017 12:27:41 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 0.594
X-Spam-Level: 
X-Spam-Status: No, score0.594 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, RCVD_IN_DNSWL_LOW-0.7,
	RCVD_IN_MSPIKE_H3-0.01, RCVD_IN_MSPIKE_WL-0.01, URIBL_BLOCKED0.001,
	URI_HEX1.313] autolearndisabled
Authentication-Results: spamd2-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dmessagingengine.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id HS8w-4Um-P0B for <users@camel.apache.org>;
	Wed, 19 Apr 2017 12:27:37 +0000 (UTC)
Received: from new1-smtp.messagingengine.com (new1-smtp.messagingengine.com [66.111.4.221])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id A1EDA5FDF5
	for <users@camel.apache.org>; Wed, 19 Apr 2017 12:27:37 +0000 (UTC)
Received: from compute6.internal (compute6.nyi.internal [10.202.2.46])
	by mailnew.nyi.internal (Postfix) with ESMTP id F13E6A13
	for <users@camel.apache.org>; Wed, 19 Apr 2017 08:27:36 -0400 (EDT)
Received: from frontend2 ([10.202.2.161])
  by compute6.internal (MEProxy); Wed, 19 Apr 2017 08:27:36 -0400
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed; d
	messagingengine.com; hcontent-transfer-encoding:content-type
	:date:from:message-id:mime-version:subject:to:x-me-sender
	:x-me-sender:x-sasl-enc:x-sasl-enc; sfm1; bhwHzMgFjx/OwfJXUXgL
	dNDyKOM9xt9LKMaW/GAY940Aw; bTPrWd3jSd54mNg6IZeuDiXbELK7gSZtQ7k
	B4iVwbG5UJh28n1zhI6cDAzhy5/ySDDp3s6zV6qgL+seXllceQMXlGfuuZddu/LT
	xiL1ObdLu4o81IL3fd7JcHQfSzeFPj/F7hOpVujfDjYDvRsscr6WtKnjVm67HsZH
	sJrEfPg+k7rbZ2VryDZHhZSqjs8iZH8mOG2YeryB+AE5y/yU2qiGlacETPl9vJmY
	G9Hpyx2L/noSfdwugZDdmDdWMbUuATFq3ldoqFh6dy23XIccz5CF9DZrnUWPBD+z
	gxWqWIlfsux/RuFr1oUrKRh7eThq696Qkuu8kAqW18rDrR+wzEjw
X-ME-Sender: <xms:uFf3WL1hJc1EhRyLzBZWSdnTgrvtLE-O56L70pQW-NPA0AbkiQxBuw>
X-Sasl-enc: DcIOSiZcD2AZquerRFSNZroycWmgM3avVdbo4qVGlkm8 1492604856
Received: from static.162.255.23.22.macminivault.com (unknown [162.255.23.22])
	by mail.messagingengine.com (Postfix) with ESMTPA id 78E28241E3
	for <users@camel.apache.org>; Wed, 19 Apr 2017 08:27:36 -0400 (EDT)
Date: Wed, 19 Apr 2017 05:27:35 -0700 (MST)
From: Thomas Weinschenk <thomas.weinschenk@infoserve.endress.com>
To: users@camel.apache.org
Message-ID: <1492604855885-5797920.post@n5.nabble.com>
Subject: Spring Boot > 1.5 fails when camel-swagger-java in place
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Hi,

I tried to update the spring boot web service example to 1.5.2.RELEASE but
it fails when camel-swagger-java is in place.

...
Caused by: org.springframework.beans.BeanInstantiationException: Failed to
instantiate [javax.validation.Validator]: Factory method jsr303Validator
threw exception; nested exception is java.lang.NoClassDefFoundError: Could
not initialize class
org.hibernate.validator.internal.engine.ConfigurationImpl
	at
org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at
org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 38 more
Caused by: java.lang.NoClassDefFoundError: Could not initialize class
org.hibernate.validator.internal.engine.ConfigurationImpl
	at
org.hibernate.validator.HibernateValidator.createGenericConfiguration(HibernateValidator.java:33)
	at
javax.validation.Validation$GenericBootstrapImpl.configure(Validation.java:276)
	at
org.springframework.boot.validation.MessageInterpolatorFactory.getObject(MessageInterpolatorFactory.java:53)
...

If I exclude the camel-swagger-java dependency it works.

It seems that camel-swagger-java includes some jsr303 validation that causes
the problem.
Spring boot uses the hibernate-validator 5.3.4.Final (JSR 349).
This might cause the failure but I am not an expert on Bean Validation.

Any idea how to solve this issue?

Regards,
Thomas



--
View this message in context: http://camel.465427.n5.nabble.com/Spring-Boot-1-5-fails-when-camel-swagger-java-in-place-tp5797920.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"242","1877","2017-04-19 14:29:00+02:00","claus.ibsen@gmail.com","['users@camel.apache.org']","Re: Spring Boot > 1.5 fails when camel-swagger-java in place","Return-Path: <users-return-65360-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 99FFC1905C
	for <apmail-camel-users-archive@www.apache.org>; Wed, 19 Apr 2017 12:29:28 +0000 (UTC)
Received: (qmail 29098 invoked by uid 500); 19 Apr 2017 12:29:28 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 29045 invoked by uid 500); 19 Apr 2017 12:29:28 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 29026 invoked by uid 99); 19 Apr 2017 12:29:27 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd2-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 12:29:27 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd2-us-west.apache.org (ASF Mail Server at spamd2-us-west.apache.org) with ESMTP id 539021AF94A
	for <users@camel.apache.org>; Wed, 19 Apr 2017 12:29:27 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd2-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 0.993
X-Spam-Level: 
X-Spam-Status: No, score0.993 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_LOW-0.7, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RCVD_IN_SORBS_SPAM0.5, SPF_PASS-0.001,
	URIBL_BLOCKED0.001, URI_HEX1.313] autolearndisabled
Authentication-Results: spamd2-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd2-us-west.apache.org [10.40.0.9]) (amavisd-new, port 10024)
	with ESMTP id Lavba04hSVRu for <users@camel.apache.org>;
	Wed, 19 Apr 2017 12:29:26 +0000 (UTC)
Received: from mail-qt0-f181.google.com (mail-qt0-f181.google.com [209.85.216.181])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTPS id 26BC360DB8
	for <users@camel.apache.org>; Wed, 19 Apr 2017 12:29:26 +0000 (UTC)
Received: by mail-qt0-f181.google.com with SMTP id m36so17345413qtb.0
        for <users@camel.apache.org>; Wed, 19 Apr 2017 05:29:26 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bhbBbbVA3lSfi5nSTJycc1Xtb0QXFtczfdy8TZHskhbSA;
        bAFlPFl8Grtvpjj6WYzct2hhMpGuZ0CCcyW+BhVwz49cnTji76FjDf9BrSFC2CN888X
         /uKAIMVSDbzBWSjFo+JtBrG3KqUAVlUocli9jL63GGYBLUcFOpZ98ktlsCxvIpW3EGo2
         DxhrnR4uBdTXVCXZfM5dqBQ0MqlIMJ03fsXL/lAhxQI99EiwLCMq8rqpLewhzKiG3V31
         qolPDwswy51kAItHgrNWEhFVav2EfYdFstk88z9wR6zNOHnfaKR8USv7u/52T5Rhnyoo
         urXWnnjMxQaG3FsWC+NXFJdbxPQWpXLqEkV5J6qRMMQfaPcUerlbPMw+bKZL5Dl05L8K
         CzbA
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bhbBbbVA3lSfi5nSTJycc1Xtb0QXFtczfdy8TZHskhbSA;
        bl0CoOSIgA1rdkF8MU7c9EtHgTBh7SzsYRi1lefNxwqBh9npZFpMV6jLBoLB+u6kba6
         b12O7FWiamUKF4UZFP98cKAMRu/4ovO9b5ZgLAVTt0T80XEI+thIn5DV9rFHCJ/k+z7/
         JZiiIE/ldjelWvvOR24mfh1SRsgXwq7NcSetA7X3w7OJ3g/bwd4p09hMpHptXoe/vqaa
         OXagx7KIrNfdp1hlE2rzZQ648sCANE+y6EFcan8qxNpeMLtFCyLcx0fVmfcU9gl9db50
         YMhnoIZZOzXy1QxqoL2pDMDjBIcTOfAZdVqTm5zKqK6SJAkAkzpkXGTyPscFIAm+OSY+
         WdYg
X-Gm-Message-State: AN3rC/5LfaOpDTSdf01QG6PVOVwO22mrycqNpN4Lr57N4XdE4cfFx+3S
	BKDs8IGfhzX548pIRgyAW9++JMQe2SUl
X-Received: by 10.200.49.207 with SMTP id i15mr2179150qte.137.1492604960621;
 Wed, 19 Apr 2017 05:29:20 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.200.50.39 with HTTP; Wed, 19 Apr 2017 05:29:00 -0700 (PDT)
In-Reply-To: <1492604855885-5797920.post@n5.nabble.com>
References: <1492604855885-5797920.post@n5.nabble.com>
From: Claus Ibsen <claus.ibsen@gmail.com>
Date: Wed, 19 Apr 2017 14:29:00 +0200
Message-ID: <CAGB5yNmRaOEs3y+oEja9V_OAM3pzPZVz2cV1NB6t-sip1oJdxg@mail.gmail.com>
Subject: Re: Spring Boot > 1.5 fails when camel-swagger-java in place
To: users@camel.apache.org <users@camel.apache.org>
Content-Type: text/plain; charsetUTF-8

What Camel version do you use?

On Wed, Apr 19, 2017 at 2:27 PM, Thomas Weinschenk
<thomas.weinschenk@infoserve.endress.com> wrote:
> Hi,
>
> I tried to update the spring boot web service example to 1.5.2.RELEASE but
> it fails when camel-swagger-java is in place.
>
> ...
> Caused by: org.springframework.beans.BeanInstantiationException: Failed to
> instantiate [javax.validation.Validator]: Factory method jsr303Validator
> threw exception; nested exception is java.lang.NoClassDefFoundError: Could
> not initialize class
> org.hibernate.validator.internal.engine.ConfigurationImpl
>         at
> org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
>         at
> org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
>         ... 38 more
> Caused by: java.lang.NoClassDefFoundError: Could not initialize class
> org.hibernate.validator.internal.engine.ConfigurationImpl
>         at
> org.hibernate.validator.HibernateValidator.createGenericConfiguration(HibernateValidator.java:33)
>         at
> javax.validation.Validation$GenericBootstrapImpl.configure(Validation.java:276)
>         at
> org.springframework.boot.validation.MessageInterpolatorFactory.getObject(MessageInterpolatorFactory.java:53)
> ...
>
> If I exclude the camel-swagger-java dependency it works.
>
> It seems that camel-swagger-java includes some jsr303 validation that causes
> the problem.
> Spring boot uses the hibernate-validator 5.3.4.Final (JSR 349).
> This might cause the failure but I am not an expert on Bean Validation.
>
> Any idea how to solve this issue?
>
> Regards,
> Thomas
>
>
>
> --
> View this message in context: http://camel.465427.n5.nabble.com/Spring-Boot-1-5-fails-when-camel-swagger-java-in-place-tp5797920.html
> Sent from the Camel - Users mailing list archive at Nabble.com.



-- 
Claus Ibsen
-----------------
http://davsclaus.com @davsclaus
Camel in Action 2: https://www.manning.com/ibsen2

"
"243","1879","2017-04-19 05:30:24-07:00","nicolas.gehling@adesso.de","['users@camel.apache.org']","Re: How to check after startup if folder exists","Return-Path: <users-return-65362-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 5605B19280
	for <apmail-camel-users-archive@www.apache.org>; Wed, 19 Apr 2017 13:21:13 +0000 (UTC)
Received: (qmail 37494 invoked by uid 500); 19 Apr 2017 13:21:12 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 37439 invoked by uid 500); 19 Apr 2017 13:21:11 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Delivered-To: moderator for users@camel.apache.org
Received: (qmail 30837 invoked by uid 99); 19 Apr 2017 12:30:29 -0000
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 1.566
X-Spam-Level: *
X-Spam-Status: No, score1.566 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, RCVD_IN_DNSWL_LOW-0.7,
	RCVD_IN_MSPIKE_H3-0.01, RCVD_IN_MSPIKE_WL-0.01, SPF_SOFTFAIL0.972,
	URIBL_BLOCKED0.001, URI_HEX1.313] autolearndisabled
Authentication-Results: spamd3-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dmessagingengine.com
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed; d
	messagingengine.com; hcontent-transfer-encoding:content-type
	:date:from:in-reply-to:message-id:mime-version:references
	:subject:to:x-me-sender:x-me-sender:x-sasl-enc:x-sasl-enc; s
	fm1; bhEMxxxM+3kTv2QuBjnwgi8rw2vScSNlibde71hyKhnyY; bNq6MQlPk
	ZXre1wJpkUN+FiBeEU27x5Wosj2nl65Kz/gB5l8T+R+4Jd85bedGXayE+lr/a1XU
	io0uC7B235BLM3bJPS9cMrFPg2DywzYChgD+jqTdD3i5WfEMXd3MgNFb4/Kx2FUF
	RNHrVs+HIGYg1MxBCmo+Nt4U/0SDLglDiR8NOELM9jUIi7u4qmp13ock1CBoqPd7
	QUa0Okd/eFaFCzmU8HkB5pVq12VNTpq1TFUJhyENU9tAK9ums2JvRxSxfodX4DNL
	yB3iiWv7JGZzBfHnrYzSDWx62hZ+IZaapXB4+15/p4+Wb5LNoQ1nlaChhj/jLEt5
	abvUYFrnjPLcDg
X-ME-Sender: <xms:YVj3WDmaurva6Arev0Yb7Ak-Hm9w-5TxH_mURjGFFTkj7zadq5OCoA>
X-Sasl-enc: QpWA6+0t3yk3rgGBPH9+gMm47lGT2q1bY6reA5aU4P5K 1492605025
Date: Wed, 19 Apr 2017 05:30:24 -0700 (MST)
From: Nico159 <nicolas.gehling@adesso.de>
To: users@camel.apache.org
Message-ID: <1492605024646-5797922.post@n5.nabble.com>
In-Reply-To: <CAGB5yNmDgycu91-DSKM6pKx+Wq62JM3-TTZ7JPy2KRb8q49aw@mail.gmail.com>
References: <1492591369447-5797895.post@n5.nabble.com> <CAGB5yNmDgycu91-DSKM6pKx+Wq62JM3-TTZ7JPy2KRb8q49aw@mail.gmail.com>
Subject: Re: How to check after startup if folder exists
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Thank you for the fast confirmation.

Ill try to use a timer and a bean to solve the problem.



--
View this message in context: http://camel.465427.n5.nabble.com/How-to-check-after-startup-if-folder-exists-tp5797895p5797922.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"244","1880","2017-04-19 05:30:59-07:00","thomas.weinschenk@solutions.endress.com","['users@camel.apache.org']","Re: Spring Boot > 1.5 fails when camel-swagger-java in place","Return-Path: <users-return-65363-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 814A119281
	for <apmail-camel-users-archive@www.apache.org>; Wed, 19 Apr 2017 13:21:15 +0000 (UTC)
Received: (qmail 38557 invoked by uid 500); 19 Apr 2017 13:21:15 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 38515 invoked by uid 500); 19 Apr 2017 13:21:15 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Delivered-To: moderator for users@camel.apache.org
Received: (qmail 32125 invoked by uid 99); 19 Apr 2017 12:31:01 -0000
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 0.594
X-Spam-Level: 
X-Spam-Status: No, score0.594 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, RCVD_IN_DNSWL_LOW-0.7,
	RCVD_IN_MSPIKE_H3-0.01, RCVD_IN_MSPIKE_WL-0.01, URIBL_BLOCKED0.001,
	URI_HEX1.313] autolearndisabled
Authentication-Results: spamd4-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dmessagingengine.com
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed; d
	messagingengine.com; hcontent-transfer-encoding:content-type
	:date:from:in-reply-to:message-id:mime-version:references
	:subject:to:x-me-sender:x-me-sender:x-sasl-enc:x-sasl-enc; s
	fm1; bhW3Wb/IL4pLZ4SfrnFcVhwiDbDThTMynj1e3EFpWkVT8; bXNBTNnwP
	cMwvu/oVc9bvxVwQyqL+AWlmsra2e9XT+6vl0EihpMa4R40+fCyS8a54iR1aabUl
	8PwvUy3Lf3NflotFqc5IcWlG1KdCouMXWQySH2VXO2oZaiMCa/1nNLQmu3qfqGfU
	upxD8xnasQ1Uw1GpdjXo6IQKGUsDXEYaFFbQu/0OfMr8puCxCRYhFsW0p3sejmYK
	66z9HoCqLou0wxGZx7YwYT5fXkTbV7uPcx8si3PoshVGwZHEJbAPaOwXzVuuYtcg
	/TVoR81XfKC2OtW+tBtW3nMpWR4lW/94FD3L82WaAgOB2asAqQJafvBtt5O587l+
	XxKaw4u7cJ1T6g
X-ME-Sender: <xms:g1j3WFFFqdWQx-Tm63wQyz1HTFmY_fjOGX_zoTYdvaia76xlmDm9xg>
X-Sasl-enc: e/GikI3M7HkSao3hsZyRVd8PWCOufGVT5z5ABF9aZzFv 1492605059
Date: Wed, 19 Apr 2017 05:30:59 -0700 (MST)
From: Thomas Weinschenk <thomas.weinschenk@solutions.endress.com>
To: users@camel.apache.org
Message-ID: <1492605059042-5797923.post@n5.nabble.com>
In-Reply-To: <CAGB5yNmRaOEs3y+oEja9V_OAM3pzPZVz2cV1NB6t-sip1oJdxg@mail.gmail.com>
References: <1492604855885-5797920.post@n5.nabble.com> <CAGB5yNmRaOEs3y+oEja9V_OAM3pzPZVz2cV1NB6t-sip1oJdxg@mail.gmail.com>
Subject: Re: Spring Boot > 1.5 fails when camel-swagger-java in place
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

You are right I forgot to mention the version...

2.18.3



--
View this message in context: http://camel.465427.n5.nabble.com/Spring-Boot-1-5-fails-when-camel-swagger-java-in-place-tp5797920p5797923.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"245","387","2017-04-19 12:31:03+00:00","davsclaus@apache.org","['commits@camel.apache.org']","camel git commit: Clean up example applications","Return-Path: <commits-return-55760-apmail-camel-commits-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-commits-archive@www.apache.org
Delivered-To: apmail-camel-commits-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id DAA4119069
	for <apmail-camel-commits-archive@www.apache.org>; Wed, 19 Apr 2017 12:31:03 +0000 (UTC)
Received: (qmail 32231 invoked by uid 500); 19 Apr 2017 12:31:03 -0000
Delivered-To: apmail-camel-commits-archive@camel.apache.org
Received: (qmail 32174 invoked by uid 500); 19 Apr 2017 12:31:03 -0000
Mailing-List: contact commits-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:commits-help@camel.apache.org>
List-Unsubscribe: <mailto:commits-unsubscribe@camel.apache.org>
List-Post: <mailto:commits@camel.apache.org>
List-Id: <commits.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list commits@camel.apache.org
Received: (qmail 32165 invoked by uid 99); 19 Apr 2017 12:31:03 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 12:31:03 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id 85FCBDFBB7; Wed, 19 Apr 2017 12:31:03 +0000 (UTC)
Content-Type: text/plain; charsetus-ascii
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
From: davsclaus@apache.org
To: commits@camel.apache.org
Message-Id: <bb45a03b62f84179bfa0c9459c595698@git.apache.org>
X-Mailer: ASF-Git Admin Mailer
Subject: camel git commit: Clean up example applications
Date: Wed, 19 Apr 2017 12:31:03 +0000 (UTC)

Repository: camel
Updated Branches:
  refs/heads/master 28fa5cf61 -> 56f2b24a2


Clean up example applications

This change cleans the example applications provided to show
some simple routes with camel-milo.

Signed-off-by: Jens Reimann <jreimann@redhat.com>

Project: http://git-wip-us.apache.org/repos/asf/camel/repo
Commit: http://git-wip-us.apache.org/repos/asf/camel/commit/56f2b24a
Tree: http://git-wip-us.apache.org/repos/asf/camel/tree/56f2b24a
Diff: http://git-wip-us.apache.org/repos/asf/camel/diff/56f2b24a

Branch: refs/heads/master
Commit: 56f2b24a2d4dbb408b71610bfe90fbfa2e9f7147
Parents: 28fa5cf
Author: Jens Reimann <jreimann@redhat.com>
Authored: Wed Apr 19 14:14:54 2017 +0200
Committer: Jens Reimann <jreimann@redhat.com>
Committed: Wed Apr 19 14:19:16 2017 +0200

----------------------------------------------------------------------
 .../component/milo/testing/Application.java     | 73 ----------------
 .../milo/testing/Application2Client.java        | 62 -------------
 .../milo/testing/Application2Server.java        | 72 ----------------
 .../component/milo/testing/ExampleClient.java   | 62 +++++++++++++
 .../component/milo/testing/ExampleServer.java   | 91 ++++++++++++++++++++
 5 files changed, 153 insertions(+), 207 deletions(-)
----------------------------------------------------------------------


http://git-wip-us.apache.org/repos/asf/camel/blob/56f2b24a/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/Application.java
----------------------------------------------------------------------
diff --git a/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/Application.java b/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/Application.java
deleted file mode 100644
index a78efbf..0000000
--- a/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/Application.java
+++ /dev/null
@@ -1,73 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.component.milo.testing;
-
-import org.apache.camel.CamelContext;
-import org.apache.camel.builder.RouteBuilder;
-import org.apache.camel.impl.DefaultCamelContext;
-
-public final class Application {
-
-    private Application() {
-    }
-
-    public static void main(final String[] args) throws Exception {
-
-        // camel conext
-
-        final CamelContext context  new DefaultCamelContext();
-
-        // add paho
-
-        // no need to register, gets auto detected
-        // context.addComponent(paho, new PahoComponent());
-
-        // no need to register, gets auto detected
-        // context.addComponent(milo-server, new MiloClientComponent());
-        // context.addComponent(milo-client, new MiloClientComponent());
-
-        // add routes
-
-        context.addRoutes(new RouteBuilder() {
-
-            @Override
-            public void configure() throws Exception {
-                from(paho:javaonedemo/eclipse-greenhouse-9home/sensors/temperature?brokerUrltcp://iot.eclipse.org:1883).log(Temp update: ${body}).convertBodyTo(String.class)
-                    .to(milo-server:MyItem);
-
-                from(milo-server:MyItem).log(MyItem: ${body});
-
-                from(milo-server:MyItem2).log(MyItem2 : ${body}).to(paho:de/dentrassi/camel/milo/test1?brokerUrltcp://iot.eclipse.org:1883);
-
-                from(milo-client:tcp://foo:bar@localhost:12685?nodeIditems-MyItem&namespaceUriurn:camel).log(From OPC UA: ${body})
-                    .to(milo-client:tcp://localhost:12685?nodeIditems-MyItem2&namespaceUriurn:camel);
-
-                from(paho:de/dentrassi/camel/milo/test1?brokerUrltcp://iot.eclipse.org:1883).log(Back from MQTT: ${body});
-            }
-        });
-
-        // start
-
-        context.start();
-
-        // sleep
-
-        while (true) {
-            Thread.sleep(Long.MAX_VALUE);
-        }
-    }
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/56f2b24a/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/Application2Client.java
----------------------------------------------------------------------
diff --git a/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/Application2Client.java b/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/Application2Client.java
deleted file mode 100644
index d613a18..0000000
--- a/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/Application2Client.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.component.milo.testing;
-
-import org.apache.camel.CamelContext;
-import org.apache.camel.builder.RouteBuilder;
-import org.apache.camel.impl.DefaultCamelContext;
-
-public final class Application2Client {
-
-    private Application2Client() {
-    }
-
-    public static void main(final String[] args) throws Exception {
-
-        // camel conext
-
-        final CamelContext context  new DefaultCamelContext();
-
-        // add paho
-
-        // no need to register, gets auto detected
-        // context.addComponent(paho, new PahoComponent());
-
-        // add OPC UA
-
-        // add routes
-
-        context.addRoutes(new RouteBuilder() {
-
-            @Override
-            public void configure() throws Exception {
-                from(milo-client:tcp://foo:bar@localhost:12685?nodeIditems-MyItem&namespaceUriurn:org:apache:camel).log(From OPC UA: ${body})
-                    .to(milo-client:tcp://foo:bar@localhost:12685?nodeIditems-MyItem2&namespaceUriurn:org:apache:camel);
-            }
-        });
-
-        // start
-
-        context.start();
-
-        // sleep
-
-        while (true) {
-            Thread.sleep(Long.MAX_VALUE);
-        }
-    }
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/56f2b24a/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/Application2Server.java
----------------------------------------------------------------------
diff --git a/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/Application2Server.java b/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/Application2Server.java
deleted file mode 100644
index ae85890..0000000
--- a/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/Application2Server.java
+++ /dev/null
@@ -1,72 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the License); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an AS IS BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.camel.component.milo.testing;
-
-import org.apache.camel.CamelContext;
-import org.apache.camel.builder.RouteBuilder;
-import org.apache.camel.component.milo.server.MiloServerComponent;
-import org.apache.camel.impl.DefaultCamelContext;
-
-public final class Application2Server {
-    private Application2Server() {
-    }
-
-    public static void main(final String[] args) throws Exception {
-
-        // camel conext
-
-        final CamelContext context  new DefaultCamelContext();
-
-        // add paho
-
-        // no need to register, gets auto detected
-        // context.addComponent(paho, new PahoComponent());
-        ((MiloServerComponent)context.getComponent(milo-server)).setUserAuthenticationCredentials(foo:bar);
-
-        // add routes
-
-        context.addRoutes(new RouteBuilder() {
-
-            @Override
-            public void configure() throws Exception {
-                /*
-                 * from(
-                 * paho:javaonedemo/eclipse-greenhouse-9home/sensors/temperature?brokerUrltcp://iot.eclipse.org:1883)
-                 * .log(Temp update: ${body}).convertBodyTo(String.class).to(
-                 * milo-server:MyItem);
-                 */
-
-                from(paho:my/foo/bar?brokerUrltcp://iot.eclipse.org:1883).log(Temp update: ${body}).convertBodyTo(String.class).to(milo-server:MyItem);
-
-                from(milo-server:MyItem).log(MyItem: ${body});
-                from(milo-server:MyItem2).log(MyItem2: ${body}).convertBodyTo(String.class).to(paho:de/dentrassi/camel/milo/temperature?brokerUrltcp://iot.eclipse.org:1883);
-
-                from(paho:de/dentrassi/camel/milo/temperature?brokerUrltcp://iot.eclipse.org:1883).log(Back from MQTT: ${body});
-            }
-        });
-
-        // start
-
-        context.start();
-
-        // sleep
-
-        while (true) {
-            Thread.sleep(Long.MAX_VALUE);
-        }
-    }
-}

http://git-wip-us.apache.org/repos/asf/camel/blob/56f2b24a/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/ExampleClient.java
----------------------------------------------------------------------
diff --git a/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/ExampleClient.java b/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/ExampleClient.java
new file mode 100644
index 0000000..38c0a06
--- /dev/null
+++ b/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/ExampleClient.java
@@ -0,0 +1,62 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.component.milo.testing;
+
+import org.apache.camel.CamelContext;
+import org.apache.camel.builder.RouteBuilder;
+import org.apache.camel.component.milo.NodeIds;
+import org.apache.camel.impl.DefaultCamelContext;
+
+/**
+ * An example application focusing on the OPC UA client endpoint
+ */
+public final class ExampleClient {
+
+    private ExampleClient() {
+    }
+
+    public static void main(final String[] args) throws Exception {
+
+        // camel conext
+
+        final CamelContext context  new DefaultCamelContext();
+
+        // add routes
+
+        context.addRoutes(new RouteBuilder() {
+
+            @Override
+            public void configure() throws Exception {
+                // bridge item1 to item2
+                final String item1  NodeIds.nodeValue(urn:org:apache:camel, items-MyItem);
+                final String item2  NodeIds.nodeValue(urn:org:apache:camel, items-MyItem2);
+                from(milo-client:tcp://foo:bar@localhost:12685?node + item1).log(From OPC UA: ${body})
+                    .to(milo-client:tcp://foo:bar@localhost:12685?node + item2);
+            }
+        });
+
+        // start
+
+        context.start();
+
+        // sleep
+
+        while (true) {
+            Thread.sleep(Long.MAX_VALUE);
+        }
+    }
+}

http://git-wip-us.apache.org/repos/asf/camel/blob/56f2b24a/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/ExampleServer.java
----------------------------------------------------------------------
diff --git a/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/ExampleServer.java b/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/ExampleServer.java
new file mode 100644
index 0000000..2f39a91
--- /dev/null
+++ b/components/camel-milo/src/test/java/org/apache/camel/component/milo/testing/ExampleServer.java
@@ -0,0 +1,91 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the License); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.camel.component.milo.testing;
+
+import org.apache.camel.CamelContext;
+import org.apache.camel.builder.RouteBuilder;
+import org.apache.camel.component.milo.server.MiloServerComponent;
+import org.apache.camel.impl.DefaultCamelContext;
+
+/**
+ * This is a simple example application which tests a few ways of mapping data
+ * to an OPC UA server instance.
+ */
+public final class ExampleServer {
+    private ExampleServer() {
+    }
+
+    public static void main(final String[] args) throws Exception {
+
+        // camel conext
+
+        final CamelContext context  new DefaultCamelContext();
+
+        // configure milo
+
+        ((MiloServerComponent)context.getComponent(milo-server))
+            .setUserAuthenticationCredentials(foo:bar);
+
+        // add routes
+
+        context.addRoutes(new RouteBuilder() {
+
+            @Override
+            public void configure() throws Exception {
+                /*
+                 * Take an MQTT topic and forward its content to an OPC UA
+                 * server item. You can e.g. take some MQTT application and an
+                 * OPC UA client, connect with both applications to their
+                 * topics/items. When you write on the MQTT item it will pop up
+                 * on the OPC UA item.
+                 */
+                from(paho:my/foo/bar?brokerUrltcp://iot.eclipse.org:1883).log(Temp update: ${body})
+                    .convertBodyTo(String.class).to(milo-server:MyItem);
+
+                /*
+                 * Creating a simple item which has not data but logs anything
+                 * which gets written to by an OPC UA write call
+                 */
+                from(milo-server:MyItem).log(MyItem: ${body});
+
+                /*
+                 * Creating an item which takes write command and forwards them
+                 * to an MQTT topic
+                 */
+                from(milo-server:MyItem2).log(MyItem2: ${body}).convertBodyTo(String.class)
+                    .to(paho:de/dentrassi/camel/milo/temperature?brokerUrltcp://iot.eclipse.org:1883);
+
+                /*
+                 * Re-read the output from the previous route from MQTT to the
+                 * local logging
+                 */
+                from(paho:de/dentrassi/camel/milo/temperature?brokerUrltcp://iot.eclipse.org:1883)
+                    .log(Back from MQTT: ${body});
+            }
+        });
+
+        // start
+
+        context.start();
+
+        // sleep
+
+        while (true) {
+            Thread.sleep(Long.MAX_VALUE);
+        }
+    }
+}


"
"246","777","2017-04-19 12:31:17+00:00","git@git.apache.org","['dev@camel.apache.org']","[GitHub] camel pull request #1641: Clean up example applications","Return-Path: <dev-return-47415-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 56EC11906A
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 12:31:18 +0000 (UTC)
Received: (qmail 32360 invoked by uid 500); 19 Apr 2017 12:31:18 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 32312 invoked by uid 500); 19 Apr 2017 12:31:18 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 32301 invoked by uid 99); 19 Apr 2017 12:31:17 -0000
Received: from git1-us-west.apache.org (HELO git1-us-west.apache.org) (140.211.11.23)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 12:31:17 +0000
Received: by git1-us-west.apache.org (ASF Mail Server at git1-us-west.apache.org, from userid 33)
	id C3A25DFBB7; Wed, 19 Apr 2017 12:31:17 +0000 (UTC)
From: asfgit <git@git.apache.org>
To: dev@camel.apache.org
Reply-To: dev@camel.apache.org
References: <git-pr-1641-camel@git.apache.org>
In-Reply-To: <git-pr-1641-camel@git.apache.org>
Subject: [GitHub] camel pull request #1641: Clean up example applications
Content-Type: text/plain
Message-Id: <20170419123117.C3A25DFBB7@git1-us-west.apache.org>
Date: Wed, 19 Apr 2017 12:31:17 +0000 (UTC)

Github user asfgit closed the pull request at:

    https://github.com/apache/camel/pull/1641


---
If your project is set up for it, you can reply to this email and have your
reply appear on GitHub as well. If your project does not have this feature
enabled and wishes so, or if the feature is enabled but not working, please
contact infrastructure at infrastructure@apache.org or file a JIRA ticket
with INFRA.
---

"
"247","1878","2017-04-19 14:35:40+02:00","zoran@regvart.com","['users@camel.apache.org']","Re: Spring Boot > 1.5 fails when camel-swagger-java in place","Return-Path: <users-return-65361-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 44E7419085
	for <apmail-camel-users-archive@www.apache.org>; Wed, 19 Apr 2017 12:36:10 +0000 (UTC)
Received: (qmail 43994 invoked by uid 500); 19 Apr 2017 12:36:09 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 43944 invoked by uid 500); 19 Apr 2017 12:36:09 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 43883 invoked by uid 99); 19 Apr 2017 12:36:09 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd4-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 12:36:09 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd4-us-west.apache.org (ASF Mail Server at spamd4-us-west.apache.org) with ESMTP id F3D10C0040
	for <users@camel.apache.org>; Wed, 19 Apr 2017 12:36:08 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -1.582
X-Spam-Level: 
X-Spam-Status: No, score-1.582 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H2-2.796,
	URIBL_BLOCKED0.001, URI_HEX1.313] autolearndisabled
Authentication-Results: spamd4-us-west.apache.org (amavisd-new);
	dkimpass (1024-bit key) header.dregvart.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd4-us-west.apache.org [10.40.0.11]) (amavisd-new, port 10024)
	with ESMTP id 8WxwRBdXyc7A for <users@camel.apache.org>;
	Wed, 19 Apr 2017 12:36:06 +0000 (UTC)
Received: from mail-wr0-f178.google.com (mail-wr0-f178.google.com [209.85.128.178])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id 8B1045FB6A
	for <users@camel.apache.org>; Wed, 19 Apr 2017 12:36:01 +0000 (UTC)
Received: by mail-wr0-f178.google.com with SMTP id z109so14566597wrb.1
        for <users@camel.apache.org>; Wed, 19 Apr 2017 05:36:01 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dregvart.com; sgoogle;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh457u91Qd+oDq4lHgYv5Ptl3YWadaooDdvmobBvsu0z0;
        bZJX9PcbnV1NHP0U/0uJtMiMBClh2lByOJQm6kcVwTlECH4lSLDaJwPI24W9kLuzFHq
         cus3oobNQm3ReMTp+ONgqdZVgxLy0aTHeNiBLyyL5QPc0eZ1R7jv7e4BWTCABxscJt2B
         CneI68ULJZ/QveiXL3QasEC6hAKCbbNvH36uo
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bh457u91Qd+oDq4lHgYv5Ptl3YWadaooDdvmobBvsu0z0;
        bZvff+rxvBj3VF31NCKpWoMXckyKiuf4E6ohwrmZIUa1kEar6acj6dGHu4liKLRJ0V/
         fT+mfwH2aK18zyiVzKNlNdlWitJLUItLlQrairlxW2lH+o0WPwPryq0bAtLwNB15ZaXc
         e6ioMmHb94mkjBgYNxc8qmgvfhkbqJR4spxxKzgPyijMyyb5ZIRlZh2rry2G8ICyq+fK
         S+H6+SFTFSCLV2vnMN3JHoT4tVyNsoMxLwViZ6g+q4y1jw2D+XomrCAHE3HppC9ZAK+n
         vZFYQKk9FBdCh3B01OWOfLkBqH8cYAS2IkwM8MOGi1sBbSklVwv2mrIly3Z3tLkKeBoQ
         ZV0w
X-Gm-Message-State: AN3rC/54uxSojGUvJzxq7pGVEdGB5a5VvD9+sTBuvpCl4KbQ6tZ1gRCx
	bQqk7klCGj/H92NvaiEFGV1lmZJ5HeIVlzg
X-Received: by 10.223.150.35 with SMTP id b32mr2567277wra.78.1492605360833;
 Wed, 19 Apr 2017 05:36:00 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.80.131.101 with HTTP; Wed, 19 Apr 2017 05:35:40 -0700 (PDT)
In-Reply-To: <1492604855885-5797920.post@n5.nabble.com>
References: <1492604855885-5797920.post@n5.nabble.com>
From: Zoran Regvart <zoran@regvart.com>
Date: Wed, 19 Apr 2017 14:35:40 +0200
Message-ID: <CABD_Zr8C3y7Zn_kGomKOJimCpfTjj24HJyPGqR3pZ87MjH1tnA@mail.gmail.com>
Subject: Re: Spring Boot > 1.5 fails when camel-swagger-java in place
To: users@camel.apache.org
Content-Type: text/plain; charsetUTF-8

Hi Thomas,
the exception you quoted is a NoClassDefFoundError can you look in the
logs for the first exception you that might be related to this,
perhaps a ClassNotFoundException preceeding it? If you dont need JSR
303 validations you can turn them off by setting
`javax.persistence.validation.mode` to `none`,


zoran

On Wed, Apr 19, 2017 at 2:27 PM, Thomas Weinschenk
<thomas.weinschenk@infoserve.endress.com> wrote:
> Hi,
>
> I tried to update the spring boot web service example to 1.5.2.RELEASE but
> it fails when camel-swagger-java is in place.
>
> ...
> Caused by: org.springframework.beans.BeanInstantiationException: Failed to
> instantiate [javax.validation.Validator]: Factory method jsr303Validator
> threw exception; nested exception is java.lang.NoClassDefFoundError: Could
> not initialize class
> org.hibernate.validator.internal.engine.ConfigurationImpl
>         at
> org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
>         at
> org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
>         ... 38 more
> Caused by: java.lang.NoClassDefFoundError: Could not initialize class
> org.hibernate.validator.internal.engine.ConfigurationImpl
>         at
> org.hibernate.validator.HibernateValidator.createGenericConfiguration(HibernateValidator.java:33)
>         at
> javax.validation.Validation$GenericBootstrapImpl.configure(Validation.java:276)
>         at
> org.springframework.boot.validation.MessageInterpolatorFactory.getObject(MessageInterpolatorFactory.java:53)
> ...
>
> If I exclude the camel-swagger-java dependency it works.
>
> It seems that camel-swagger-java includes some jsr303 validation that causes
> the problem.
> Spring boot uses the hibernate-validator 5.3.4.Final (JSR 349).
> This might cause the failure but I am not an expert on Bean Validation.
>
> Any idea how to solve this issue?
>
> Regards,
> Thomas
>
>
>
> --
> View this message in context: http://camel.465427.n5.nabble.com/Spring-Boot-1-5-fails-when-camel-swagger-java-in-place-tp5797920.html
> Sent from the Camel - Users mailing list archive at Nabble.com.



-- 
Zoran Regvart

"
"248","1881","2017-04-19 06:08:24-07:00","thomas.weinschenk@solutions.endress.com","['users@camel.apache.org']","Re: Spring Boot > 1.5 fails when camel-swagger-java in place","Return-Path: <users-return-65364-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6D21019282
	for <apmail-camel-users-archive@www.apache.org>; Wed, 19 Apr 2017 13:21:27 +0000 (UTC)
Received: (qmail 39587 invoked by uid 500); 19 Apr 2017 13:21:26 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 39543 invoked by uid 500); 19 Apr 2017 13:21:26 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Delivered-To: moderator for users@camel.apache.org
Received: (qmail 12638 invoked by uid 99); 19 Apr 2017 13:08:32 -0000
X-Virus-Scanned: Debian amavisd-new at spamd4-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 0.594
X-Spam-Level: 
X-Spam-Status: No, score0.594 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, RCVD_IN_DNSWL_LOW-0.7,
	RCVD_IN_MSPIKE_H3-0.01, RCVD_IN_MSPIKE_WL-0.01, URIBL_BLOCKED0.001,
	URI_HEX1.313] autolearndisabled
Authentication-Results: spamd4-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dmessagingengine.com
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed; d
	messagingengine.com; hcontent-transfer-encoding:content-type
	:date:from:in-reply-to:message-id:mime-version:references
	:subject:to:x-me-sender:x-me-sender:x-sasl-enc:x-sasl-enc; s
	fm1; bhJftQ26jk9B19fhGkqb+XjI/swoxUB9sH1kvRfiFa3o4; bGACdTamY
	mHloeDOGf2N5mbRq2OOpiMa+Zf6ryTOXuegpTf0R/bwnHaLNgX+UOKoQREQVi7AJ
	Zb0GQlejFn30RmbpDvnj9HXJLo15pKo+oMNy99meY3GZ53IDFJXd6K8vKhPrUZYW
	7cZPhRciRAvF+UapI2WgQkRcMgS5f8LQqP2dT2UZgs5yvcYq7fpVea4+wsMPdSGc
	fvZCZVLJrQ81N6ZY8sWNcLfJO7fRZbnH0NvMADhJj76f1C3A6mZ0iFuX5xH+4IHI
	TEVBPhLylmWqOY9Ki7XO4J8RFc3V9EKOngDyd66z+a4ACZpYr1M/BW5uE61RYifV
	bEBrsA5RdUatLQ
X-ME-Sender: <xms:SWH3WEp9U3B8eGdSGeJ0OeXv7bsd-I_NnYcZDFQso128htukBWoxYQ>
X-Sasl-enc: 6v927SewmQO3331ja/i/BCaE2FBM/zJwuu89UJcMGHsl 1492607304
Date: Wed, 19 Apr 2017 06:08:24 -0700 (MST)
From: Thomas Weinschenk <thomas.weinschenk@solutions.endress.com>
To: users@camel.apache.org
Message-ID: <1492607304155-5797927.post@n5.nabble.com>
In-Reply-To: <CABD_Zr8C3y7Zn_kGomKOJimCpfTjj24HJyPGqR3pZ87MjH1tnA@mail.gmail.com>
References: <1492604855885-5797920.post@n5.nabble.com> <CABD_Zr8C3y7Zn_kGomKOJimCpfTjj24HJyPGqR3pZ87MjH1tnA@mail.gmail.com>
Subject: Re: Spring Boot > 1.5 fails when camel-swagger-java in place
MIME-Version: 1.0
Content-Type: text/plain; charsetus-ascii
Content-Transfer-Encoding: 7bit

Hi Zoran,

where do I have to put the validation mode setting, property of the pom,
application.yml or as an environment variable? I tried all three but I still
get the same error.

The log ouptut related to the failure is:

Exception encountered during context initialization - cancelling refresh
attempt: org.springframework.beans.factory.UnsatisfiedDependencyException:
Error creating bean with name methodValidationPostProcessor defined in
class path resource
[org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class]:
Unsatisfied dependency expressed through method
methodValidationPostProcessor parameter 0; nested exception is
org.springframework.beans.factory.BeanCreationException: Error creating bean
with name jsr303Validator defined in class path resource
[org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class]:
Bean instantiation via factory method failed; nested exception is
org.springframework.beans.BeanInstantiationException: Failed to instantiate
[javax.validation.Validator]: Factory method jsr303Validator threw
exception; nested exception is java.lang.NoClassDefFoundError: Could not
initialize class org.hibernate.validator.internal.engine.ConfigurationImpl


And to be really verbose...the complete stack trace...

2017-04-19 15:02:49.179  INFO 222576 --- [           main]
ationConfigEmbeddedWebApplicationContext : Refreshing
org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6e083721:
startup date [Wed Apr 19 15:02:49 CEST 2017]; root of context hierarchy
2017-04-19 15:02:51.425  WARN 222576 --- [           main]
ationConfigEmbeddedWebApplicationContext : Exception encountered during
context initialization - cancelling refresh attempt:
org.springframework.beans.factory.UnsatisfiedDependencyException: Error
creating bean with name methodValidationPostProcessor defined in class
path resource
[org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class]:
Unsatisfied dependency expressed through method
methodValidationPostProcessor parameter 0; nested exception is
org.springframework.beans.factory.BeanCreationException: Error creating bean
with name jsr303Validator defined in class path resource
[org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class]:
Bean instantiation via factory method failed; nested exception is
org.springframework.beans.BeanInstantiationException: Failed to instantiate
[javax.validation.Validator]: Factory method jsr303Validator threw
exception; nested exception is java.lang.NoClassDefFoundError: Could not
initialize class org.hibernate.validator.internal.engine.ConfigurationImpl
2017-04-19 15:02:51.441 ERROR 222576 --- [           main]
o.s.b.f.s.DefaultListableBeanFactory     : Destroy method on bean with name
org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor
threw an exception

java.lang.IllegalStateException: ApplicationEventMulticaster not initialized
- call refresh before multicasting events via the context:
org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6e083721:
startup date [Wed Apr 19 15:02:49 CEST 2017]; root of context hierarchy
	at
org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:404)
[spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
~[spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
[spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:555)
[spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at sample.camel.Application.main(Application.java:19) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~[na:1.8.0_112]
	at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~[na:1.8.0_112]
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~[na:1.8.0_112]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_112]
	at
org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run(AbstractRunMojo.java:527)
[spring-boot-maven-plugin-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_112]

2017-04-19 15:02:51.442 ERROR 222576 --- [           main]
o.s.b.f.s.DefaultListableBeanFactory     : Destroy method on bean with name
org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory
threw an exception

java.lang.IllegalStateException: ApplicationEventMulticaster not initialized
- call refresh before multicasting events via the context:
org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6e083721:
startup date [Wed Apr 19 15:02:49 CEST 2017]; root of context hierarchy
	at
org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:404)
[spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
~[spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
[spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:555)
[spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at sample.camel.Application.main(Application.java:19) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~[na:1.8.0_112]
	at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~[na:1.8.0_112]
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~[na:1.8.0_112]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_112]
	at
org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run(AbstractRunMojo.java:527)
[spring-boot-maven-plugin-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_112]

2017-04-19 15:02:51.455 ERROR 222576 --- [           main]
o.s.boot.SpringApplication               : Application startup failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error
creating bean with name methodValidationPostProcessor defined in class
path resource
[org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class]:
Unsatisfied dependency expressed through method
methodValidationPostProcessor parameter 0; nested exception is
org.springframework.beans.factory.BeanCreationException: Error creating bean
with name jsr303Validator defined in class path resource
[org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class]:
Bean instantiation via factory method failed; nested exception is
org.springframework.beans.BeanInstantiationException: Failed to instantiate
[javax.validation.Validator]: Factory method jsr303Validator threw
exception; nested exception is java.lang.NoClassDefFoundError: Could not
initialize class org.hibernate.validator.internal.engine.ConfigurationImpl
	at
org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:223)
~[spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:702)
~[spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:527)
~[spring-context-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
~[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at sample.camel.Application.main(Application.java:19) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~[na:1.8.0_112]
	at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~[na:1.8.0_112]
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~[na:1.8.0_112]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_112]
	at
org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run(AbstractRunMojo.java:527)
[spring-boot-maven-plugin-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_112]
Caused by: org.springframework.beans.factory.BeanCreationException: Error
creating bean with name jsr303Validator defined in class path resource
[org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class]:
Bean instantiation via factory method failed; nested exception is
org.springframework.beans.BeanInstantiationException: Failed to instantiate
[javax.validation.Validator]: Factory method jsr303Validator threw
exception; nested exception is java.lang.NoClassDefFoundError: Could not
initialize class org.hibernate.validator.internal.engine.ConfigurationImpl
	at
org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 25 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to
instantiate [javax.validation.Validator]: Factory method jsr303Validator
threw exception; nested exception is java.lang.NoClassDefFoundError: Could
not initialize class
org.hibernate.validator.internal.engine.ConfigurationImpl
	at
org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	at
org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 38 common frames omitted
Caused by: java.lang.NoClassDefFoundError: Could not initialize class
org.hibernate.validator.internal.engine.ConfigurationImpl
	at
org.hibernate.validator.HibernateValidator.createGenericConfiguration(HibernateValidator.java:33)
~[hibernate-validator-5.3.4.Final.jar:5.3.4.Final]
	at
javax.validation.Validation$GenericBootstrapImpl.configure(Validation.java:276)
~[validation-api-1.1.0.Final.jar:na]
	at
org.springframework.boot.validation.MessageInterpolatorFactory.getObject(MessageInterpolatorFactory.java:53)
~[spring-boot-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at
org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration.jsr303Validator(ValidationAutoConfiguration.java:52)
~[spring-boot-autoconfigure-1.5.2.RELEASE.jar:1.5.2.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~[na:1.8.0_112]
	at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
~[na:1.8.0_112]
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
~[na:1.8.0_112]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_112]
	at
org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
~[spring-beans-4.3.7.RELEASE.jar:4.3.7.RELEASE]
	... 39 common frames omitted

[WARNING] 
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at
org.springframework.boot.maven.AbstractRunMojo$LaunchRunner.run(AbstractRunMojo.java:527)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException:
Error creating bean with name methodValidationPostProcessor defined in
class path resource
[org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class]:
Unsatisfied dependency expressed through method
methodValidationPostProcessor parameter 0; nested exception is
org.springframework.beans.factory.BeanCreationException: Error creating bean
with name jsr303Validator defined in class path resource
[org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class]:
Bean instantiation via factory method failed; nested exception is
org.springframework.beans.BeanInstantiationException: Failed to instantiate
[javax.validation.Validator]: Factory method jsr303Validator threw
exception; nested exception is java.lang.NoClassDefFoundError: Could not
initialize class org.hibernate.validator.internal.engine.ConfigurationImpl
	at
org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at
org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at
org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at
org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at
org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:223)
	at
org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:702)
	at
org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:527)
	at
org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at
org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at
org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at
org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at
org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at
org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at sample.camel.Application.main(Application.java:19)
	... 6 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error
creating bean with name jsr303Validator defined in class path resource
[org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class]:
Bean instantiation via factory method failed; nested exception is
org.springframework.beans.BeanInstantiationException: Failed to instantiate
[javax.validation.Validator]: Factory method jsr303Validator threw
exception; nested exception is java.lang.NoClassDefFoundError: Could not
initialize class org.hibernate.validator.internal.engine.ConfigurationImpl
	at
org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at
org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at
org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at
org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at
org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at
org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at
org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at
org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at
org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 25 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to
instantiate [javax.validation.Validator]: Factory method jsr303Validator
threw exception; nested exception is java.lang.NoClassDefFoundError: Could
not initialize class
org.hibernate.validator.internal.engine.ConfigurationImpl
	at
org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at
org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 38 more
Caused by: java.lang.NoClassDefFoundError: Could not initialize class
org.hibernate.validator.internal.engine.ConfigurationImpl
	at
org.hibernate.validator.HibernateValidator.createGenericConfiguration(HibernateValidator.java:33)
	at
javax.validation.Validation$GenericBootstrapImpl.configure(Validation.java:276)
	at
org.springframework.boot.validation.MessageInterpolatorFactory.getObject(MessageInterpolatorFactory.java:53)
	at
org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration.jsr303Validator(ValidationAutoConfiguration.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at
org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 39 more



--
View this message in context: http://camel.465427.n5.nabble.com/Spring-Boot-1-5-fails-when-camel-swagger-java-in-place-tp5797920p5797927.html
Sent from the Camel - Users mailing list archive at Nabble.com.

"
"249","1882","2017-04-19 15:27:36+02:00","claus.ibsen@gmail.com","['users@camel.apache.org']","Re: Spring Boot > 1.5 fails when camel-swagger-java in place","Return-Path: <users-return-65365-apmail-camel-users-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-users-archive@www.apache.org
Delivered-To: apmail-camel-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 45B1C192F6
	for <apmail-camel-users-archive@www.apache.org>; Wed, 19 Apr 2017 13:28:00 +0000 (UTC)
Received: (qmail 57117 invoked by uid 500); 19 Apr 2017 13:27:59 -0000
Delivered-To: apmail-camel-users-archive@camel.apache.org
Received: (qmail 57063 invoked by uid 500); 19 Apr 2017 13:27:59 -0000
Mailing-List: contact users-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:users-help@camel.apache.org>
List-Unsubscribe: <mailto:users-unsubscribe@camel.apache.org>
List-Post: <mailto:users@camel.apache.org>
List-Id: <users.camel.apache.org>
Reply-To: users@camel.apache.org
Delivered-To: mailing list users@camel.apache.org
Received: (qmail 57050 invoked by uid 99); 19 Apr 2017 13:27:59 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd1-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 13:27:59 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd1-us-west.apache.org (ASF Mail Server at spamd1-us-west.apache.org) with ESMTP id E4CCFC1FC2
	for <users@camel.apache.org>; Wed, 19 Apr 2017 13:27:58 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd1-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: 1.693
X-Spam-Level: *
X-Spam-Status: No, score1.693 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, RCVD_IN_SORBS_SPAM0.5, SPF_PASS-0.001,
	URIBL_BLOCKED0.001, URI_HEX1.313] autolearndisabled
Authentication-Results: spamd1-us-west.apache.org (amavisd-new);
	dkimpass (2048-bit key) header.dgmail.com
Received: from mx1-lw-us.apache.org ([10.40.0.8])
	by localhost (spamd1-us-west.apache.org [10.40.0.7]) (amavisd-new, port 10024)
	with ESMTP id psqySxCIrXNj for <users@camel.apache.org>;
	Wed, 19 Apr 2017 13:27:57 +0000 (UTC)
Received: from mail-qk0-f174.google.com (mail-qk0-f174.google.com [209.85.220.174])
	by mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTPS id 917625FB64
	for <users@camel.apache.org>; Wed, 19 Apr 2017 13:27:57 +0000 (UTC)
Received: by mail-qk0-f174.google.com with SMTP id h67so19735416qke.0
        for <users@camel.apache.org>; Wed, 19 Apr 2017 06:27:57 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dgmail.com; s20161025;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bhii/DBjEbbSd822YP5jmak0ZwSP55aG1uBk+DIDF3m6E;
        buy81uCKz+MejDkZwx1HsYzjzW34KGb0LxMQ6f11L1WLOEnb2zwtGz2QP/qHgjSTSXh
         VO56oxzSUhNkPYmSHmX/NOdfdXNPSt/L3hXuBs8Wk80HOv1rYv0+PlkoXPB8VQsYZ6zP
         YT2p2v2PRFl8MNRmRWEHzxBrdxIQ/vDhI4A5x6GMhekAY7TwvjDiEWMDjdrz9PEQc7U6
         Ed+f9H6XtExNjkydtrEyAmsf3+x9eBq8HSEpmcWtne5qNtyNPzFSsKxAaq2vE6T8Z0x+
         Ij/aqExY4holwSo0TLXBffhFceVs21lIPFW8eQN98sOJB3tCg7vN+PAUDzaLd7QWAi7U
         l+qA
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bhii/DBjEbbSd822YP5jmak0ZwSP55aG1uBk+DIDF3m6E;
        bTXhA6cMXeYIU/inunKMWtrVdY+TnzS8tyYWyKo5lp1aA+TXsXR55cc3TAg5qlqT9H8
         bM6fBZLKyohYLrqlZpBuhkbG9SC9CW23wMJ/bnZ68tQzjQpGskPW4ynXCR9WqnMtsEvP
         mFQMLjNsGaU68EAMPu5YZdKcKmsvtXGIECaiqd0z6eCZetGoAWKjbDXVyA+15vqD/S9Z
         xS3yQy3tyDK9qbCgSjvT/bZMWGTR1cKxUptL24T9ooVaf/cIJtW7LhsA7gGVed3THK+E
         4JM5HSB7/L8vWlno4KFOLv2T2eQBWlH2VaMuGwOeLePmTjUVJGmeAxKd6dzUKHVWAiXu
         s4hA
X-Gm-Message-State: AN3rC/40TkO7Ytm5cMl2lhKLPpUzIdjZqF/CEb0dnIW734VB+So+DdW1
	gGileHi0/9hSwmxHLVSxBj/L1alHRUJiKJg
X-Received: by 10.55.144.6 with SMTP id s6mr2351776qkd.27.1492608477050; Wed,
 19 Apr 2017 06:27:57 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.200.50.39 with HTTP; Wed, 19 Apr 2017 06:27:36 -0700 (PDT)
In-Reply-To: <1492605059042-5797923.post@n5.nabble.com>
References: <1492604855885-5797920.post@n5.nabble.com> <CAGB5yNmRaOEs3y+oEja9V_OAM3pzPZVz2cV1NB6t-sip1oJdxg@mail.gmail.com>
 <1492605059042-5797923.post@n5.nabble.com>
From: Claus Ibsen <claus.ibsen@gmail.com>
Date: Wed, 19 Apr 2017 15:27:36 +0200
Message-ID: <CAGB5yNYijbdMGNv1tL1YhCpoQn4aE9QyahmsEdzcFy02C1r+g@mail.gmail.com>
Subject: Re: Spring Boot > 1.5 fails when camel-swagger-java in place
To: users@camel.apache.org <users@camel.apache.org>
Content-Type: text/plain; charsetUTF-8

There is this ticket related
https://issues.apache.org/jira/browse/CAMEL-10373

the swagger-java-starter do have the hibernate-validate as dependency
https://github.com/apache/camel/blob/master/platforms/spring-boot/components-starter/camel-swagger-java-starter/pom.xml#L49

And so does 2.18.x
https://github.com/apache/camel/blob/camel-2.18.x/components-starter/camel-swagger-java-starter/pom.xml#L48

So do we need some additional dependency besides hibernate-validator?


On Wed, Apr 19, 2017 at 2:30 PM, Thomas Weinschenk
<thomas.weinschenk@solutions.endress.com> wrote:
> You are right I forgot to mention the version...
>
> 2.18.3
>
>
>
> --
> View this message in context: http://camel.465427.n5.nabble.com/Spring-Boot-1-5-fails-when-camel-swagger-java-in-place-tp5797920p5797923.html
> Sent from the Camel - Users mailing list archive at Nabble.com.



-- 
Claus Ibsen
-----------------
http://davsclaus.com @davsclaus
Camel in Action 2: https://www.manning.com/ibsen2

"
"250","778","2017-04-19 15:27:37+02:00","zoran@regvart.com","['dev@camel.apache.org']","Re: FLOSS Weekly podcast","Return-Path: <dev-return-47416-apmail-camel-dev-archivecamel.apache.org@camel.apache.org>
X-Original-To: apmail-camel-dev-archive@www.apache.org
Delivered-To: apmail-camel-dev-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0F02B192F7
	for <apmail-camel-dev-archive@www.apache.org>; Wed, 19 Apr 2017 13:28:07 +0000 (UTC)
Received: (qmail 58223 invoked by uid 500); 19 Apr 2017 13:28:06 -0000
Delivered-To: apmail-camel-dev-archive@camel.apache.org
Received: (qmail 58176 invoked by uid 500); 19 Apr 2017 13:28:06 -0000
Mailing-List: contact dev-help@camel.apache.org; run by ezmlm
Precedence: bulk
List-Help: <mailto:dev-help@camel.apache.org>
List-Unsubscribe: <mailto:dev-unsubscribe@camel.apache.org>
List-Post: <mailto:dev@camel.apache.org>
List-Id: <dev.camel.apache.org>
Reply-To: dev@camel.apache.org
Delivered-To: mailing list dev@camel.apache.org
Received: (qmail 58164 invoked by uid 99); 19 Apr 2017 13:28:06 -0000
Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Apr 2017 13:28:06 +0000
Received: from localhost (localhost [127.0.0.1])
	by spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 152B41813D5
	for <dev@camel.apache.org>; Wed, 19 Apr 2017 13:28:06 +0000 (UTC)
X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org
X-Spam-Flag: NO
X-Spam-Score: -0.119
X-Spam-Level: 
X-Spam-Status: No, score-0.119 tagged_above-999 required6.31
	tests[DKIM_SIGNED0.1, DKIM_VALID-0.1, DKIM_VALID_AU-0.1,
	RCVD_IN_DNSWL_NONE-0.0001, RCVD_IN_MSPIKE_H3-0.01,
	RCVD_IN_MSPIKE_WL-0.01, URIBL_BLOCKED0.001] autolearndisabled
Authentication-Results: spamd3-us-west.apache.org (amavisd-new);
	dkimpass (1024-bit key) header.dregvart.com
Received: from mx1-lw-eu.apache.org ([10.40.0.8])
	by localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)
	with ESMTP id 4Y2fbhvg9XcB for <dev@camel.apache.org>;
	Wed, 19 Apr 2017 13:28:04 +0000 (UTC)
Received: from mail-wm0-f50.google.com (mail-wm0-f50.google.com [74.125.82.50])
	by mx1-lw-eu.apache.org (ASF Mail Server at mx1-lw-eu.apache.org) with ESMTPS id 8A7405FB8F
	for <dev@camel.apache.org>; Wed, 19 Apr 2017 13:28:03 +0000 (UTC)
Received: by mail-wm0-f50.google.com with SMTP id w64so80356724wma.0
        for <dev@camel.apache.org>; Wed, 19 Apr 2017 06:28:03 -0700 (PDT)
DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        dregvart.com; sgoogle;
        hmime-version:in-reply-to:references:from:date:message-id:subject:to;
        bhaIPzHluJ6vu2eJy7R5z0TDlg9hbPmVGyKKBinij5VRo;
        bRUFVrEeZOq38xo/QuCVZXkGxeG55ZIHxUDrhSXlg/mKAwf47JU8ciMDWgz7TJP9sXw
         YdQTW32ECKsPF6/3PRvKA2ikx6QjFsuRgUvNVARJQCnyqpUynPsT+1eYlpT+nXYfWYQb
         Z0hlDesG2tVKJDFGObHjuMQ8cZKaDDvLJdWFI
X-Google-DKIM-Signature: v1; arsa-sha256; crelaxed/relaxed;
        d1e100.net; s20161025;
        hx-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bhaIPzHluJ6vu2eJy7R5z0TDlg9hbPmVGyKKBinij5VRo;
        bTtcY9R9Pe6jgELqDbzGi4Ybqlioq3AziEdjn8Nky78NQhi1WIDHCIZzRvOTIbi518S
         MwZ5zvgp56LSvyQbcQU1lWgmgOZVta7SCWHOeXvuOfz8UHd2yMhQzIjHDSYf2CDcC/G2
         ZhpFxEzWauGGSuh748q0GeFcXuOT5xzsvZkr9+z+D2+8tCidxwLbiwOnjKEQo4deVAZr
         8X6aS+AOjwMqiXTqZC8sLdctloYRsQiGhGdB9aKo+zkp4RPOeR1874wAPzh+l26LVok3
         EJBU0LhyEKepCOuhgbuniCtPL/AZBv9a8EMKsVHhaadqQccR+yrLjmrBCv6Xu+hoNRXn
         0T2g
X-Gm-Message-State: AN3rC/4bNGkw1+bTrFTWMOsInoNN0EcoZRyerhHBuYEMfKGwZhBXnmI6
	BrymqO1MT9XxOxw+nLegPp+92N4QLb2vPg0
X-Received: by 10.28.30.23 with SMTP id e23mr3066229wme.94.1492608477598; Wed,
 19 Apr 2017 06:27:57 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.80.131.101 with HTTP; Wed, 19 Apr 2017 06:27:37 -0700 (PDT)
In-Reply-To: <CABD_Zr9oUi95fs4VNf92_wHT9iQyoGvziR_ryfRVQH1FhLfCA@mail.gmail.com>
References: <CABD_Zr9oUi95fs4VNf92_wHT9iQyoGvziR_ryfRVQH1FhLfCA@mail.gmail.com>
From: Zoran Regvart <zoran@regvart.com>
Date: Wed, 19 Apr 2017 15:27:37 +0200
Message-ID: <CABD_Zr87rhzR0DrckzdqcfnP6aRepJw9YvvACw261h8fu8TLA@mail.gmail.com>
Subject: Re: FLOSS Weekly podcast
To: dev@camel.apache.org
Content-Type: text/plain; charsetUTF-8

Hi Cameleers,
just a quick reminder and an offer to help, if youre interested and
dont have the time to negotiate the taping date let me know I can
contact the show host and arrange something for you.

I think it would be super awesome if we could arrange a slot in the
late June early July to coincide with 10 year anniversary of Camel
1.0.0 release.

As I follow the show quite regularly I can help you with notes for the
typical questions the hosts will inquire about.

(I dont think I should put myself in front of others that have been
with Camel much longer than I, and being non-native English speaker it
would be best if someone else took up the mantle)

thank you, and sorry for all the prodding :)

zoran

On Thu, Apr 13, 2017 at 10:04 AM, Zoran Regvart <zoran@regvart.com> wrote:
> Hi Cameleers,
> Im a big fan of the FLOSS Weekly podcast[1] on TWiT network, it would
> be really cool if Camel would be featured in one of the episodes. It
> airs on Tuesdays at 16:30 UTC and the way you get on the show is to
> contact Randal at merlyn@stonehenge.com, there is a list of upcoming
> guests and slots that need filling at[2]
>
> Anyone up for it?
>
> zoran
>
> [1] https://twit.tv/shows/floss-weekly
> [2] http://bit.ly/flossweeklyguests
> --
> Zoran Regvart



-- 
Zoran Regvart

"
